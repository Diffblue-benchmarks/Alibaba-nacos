package com.alibaba.nacos.common.util;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;

import java.net.URL;

import org.junit.Test;

/**
 * Unit tests for com.alibaba.nacos.common.util.ResourceUtils
 *
 * @author Diffblue JCover
 */

public class ResourceUtilsTest {

    @Test(timeout=10000)
    public void getPath() throws java.net.MalformedURLException, java.io.IOException {
        assertThat(ResourceUtils.getResourceAsFile(new URL("http://www.test.com/")).getPath(), is("/"));
        assertThat(ResourceUtils.getResourceAsFile("Resource ").getPath(), is("/home/thomas_perkins/projects/Alibaba-nacos/common/Resource%20"));
        assertThat(ResourceUtils.getResourceAsFile("classpath:").getPath(), is("/home/thomas_perkins/projects/Alibaba-nacos/common/target/classes"));
        assertThat(ResourceUtils.getResourceAsFile(ClassLoader.getSystemClassLoader(), "").getPath(), is("/home/thomas_perkins/projects/Alibaba-nacos/common/target/classes"));
    }

    @Test(timeout=10000)
    public void getResourceAsPropertiesResourceIsEmptyReturnsEmpty() throws java.io.IOException {
        assertThat(ResourceUtils.getResourceAsProperties("").getProperty("com"), is(""));
    }

    @Test(timeout=10000)
    public void getResourceAsStreamResourceIsEmpty() throws java.io.IOException {
        // pojo java.io.InputStream
    }

    @Test(timeout=10000)
    public void getResourceURLResourceIsFoo() throws java.io.IOException {
        assertThat(ResourceUtils.getResourceURL("foo").toString(), is("file:/home/thomas_perkins/projects/Alibaba-nacos/common/foo"));
    }
}

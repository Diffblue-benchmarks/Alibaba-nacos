package com.alibaba.nacos.common.util;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;

import java.net.URL;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.nacos.common.util.ResourceUtils
 *
 * @author Diffblue Cover
 */

class ResourceUtilsTest {

    @Test
    void getResourceURL() throws java.io.IOException {
        assertThat(ResourceUtils.getResourceURL("classpath:").toString(), is("file:/tmp/jcover-cp-Tb7NwS/"));
        assertThat(ResourceUtils.getResourceURL(null, "").toString(), is("file:/tmp/jcover-cp-Tb7NwS/"));
        assertThat(ResourceUtils.getResourceURL(ClassLoader.getSystemClassLoader(), "").toString(), is("file:/tmp/jcover-cp-Tb7NwS/"));
        assertThat(ResourceUtils.getResourceURL("foo").toString(), is("file:/home/runner/work/product/product/JVD/projects/Alibaba-nacos/common/foo"));
    }

    @Test
    void getResourceAsStreamResourceIsEmpty() throws java.io.IOException {
        // pojo java.io.InputStream ResourceUtils.getResourceAsStream("")
    }

    @Test
    void getResourceAsProperties() throws java.io.IOException {
        assertThat(ResourceUtils.getResourceAsProperties("").isEmpty(), is(true));
        assertThat(ResourceUtils.getResourceAsProperties(null, "").isEmpty(), is(true));
    }

    @Test
    void getResourceAsFile() throws java.io.IOException, java.net.MalformedURLException {
        assertThat(ResourceUtils.getResourceAsFile("/bin/bash").getPath(), is("/bin/bash"));
        assertThat(ResourceUtils.getResourceAsFile(new URL("http://www.test.com/")).getPath(), is("/"));
        assertThat(ResourceUtils.getResourceAsFile(ClassLoader.getSystemClassLoader(), "").getPath().startsWith(System.getProperty("java.io.tmpdir")), is(true));
    }
}

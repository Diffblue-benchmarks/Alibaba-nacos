[
  {
    "class": "com.alibaba.nacos.common.util.HttpMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.common.util.IoUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "tryDecompress",
        "desc": "(Ljava/io/InputStream;)[B"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeStringToFile",
        "desc": "(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "readLines",
        "desc": "(Ljava/io/Reader;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.common.util.Md5Utils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMD5",
        "desc": "([B)Ljava/lang/String;"
      },
      {
        "name": "getMD5",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        15,
        16,
        32,
        102
      ],
      "char": [
        32,
        102
      ],
      "short": [
        15,
        16,
        32,
        102
      ],
      "int": [
        0,
        15,
        16,
        32,
        102
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.common.util.Pair",
    "setters": [
      {
        "name": "setValue",
        "desc": "(Ljava/lang/String;)V",
        "field": "value"
      },
      {
        "name": "setKey",
        "desc": "(Ljava/lang/String;)V",
        "field": "key"
      }
    ],
    "getters": [
      {
        "name": "getValue",
        "desc": "()Ljava/lang/String;",
        "field": "value"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/String;",
        "field": "key"
      }
    ],
    "observers": [
      {
        "name": "getKey",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setKey",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.common.util.ResourceUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getResourceAsReader",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStreamReader;"
      },
      {
        "name": "getResourceAsReader",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Ljava/io/Reader;"
      },
      {
        "name": "getResourceAsProperties",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/util/Properties;"
      },
      {
        "name": "getResourceURL",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/net/URL;"
      },
      {
        "name": "getResourceAsStream",
        "desc": "(Ljava/lang/String;)Ljava/io/InputStream;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getResourceURL",
        "desc": "(Ljava/lang/String;)Ljava/net/URL;"
      },
      {
        "name": "getResourceAsFile",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "getResourceAsProperties",
        "desc": "(Ljava/lang/String;)Ljava/util/Properties;"
      },
      {
        "name": "getResourceAsFile",
        "desc": "(Ljava/net/URL;)Ljava/io/File;"
      },
      {
        "name": "getResourceAsStream",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/InputStream;"
      },
      {
        "name": "getResourceAsFile",
        "desc": "(Ljava/lang/String;)Ljava/io/File;"
      }
    ],
    "dictionary": {
      "str": [
        "classpath:"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.common.util.UuidUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generateUuid",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.common.util.VersionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "${project.version}",
        "nacos-version.txt",
        "version"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.vladium.emma.rt.RT",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "dumpCoverageData",
        "desc": "(Ljava/io/File;ZZ)V"
      },
      {
        "name": "dumpCoverageData",
        "desc": "(Ljava/io/File;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.ActiveTestSuite",
    "setters": [
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V",
        "field": "fActiveTestDeathCount"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "waitUntilFinished",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "runFinished",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)V"
      },
      {
        "name": "runTest",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/TestResult;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "junit.framework.TestSuite"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.ActiveTestSuite$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Thread"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.RepeatedTest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;I)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "junit.extensions.TestDecorator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.TestDecorator",
    "setters": [],
    "getters": [
      {
        "name": "getTest",
        "desc": "()Ljunit/framework/Test;",
        "field": "fTest"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTest",
        "desc": "()Ljunit/framework/Test;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "getTest",
        "desc": "()Ljunit/framework/Test;"
      },
      {
        "name": "basicRun",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "junit.framework.Assert",
      "junit.framework.Test"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.TestSetup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "tearDown",
        "desc": "()V"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "setUp",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "junit.extensions.TestDecorator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.TestSetup$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.Protectable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.Assert",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assertEquals",
        "desc": "(FFF)V"
      },
      {
        "name": "assertNull",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "failNotSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "assertSame",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;ZZ)V"
      },
      {
        "name": "assertEquals",
        "desc": "(BB)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;DDD)V"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "assertSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNotSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertFalse",
        "desc": "(Z)V"
      },
      {
        "name": "assertEquals",
        "desc": "(II)V"
      },
      {
        "name": "fail",
        "desc": "()V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;JJ)V"
      },
      {
        "name": "assertEquals",
        "desc": "(SS)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "assertNull",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "assertTrue",
        "desc": "(Z)V"
      },
      {
        "name": "assertFalse",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;BB)V"
      },
      {
        "name": "assertNotNull",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertNotSame",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "failNotEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNotNull",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertTrue",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assertEquals",
        "desc": "(CC)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;FFF)V"
      },
      {
        "name": "assertEquals",
        "desc": "(DDD)V"
      },
      {
        "name": "assertEquals",
        "desc": "(JJ)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;SS)V"
      },
      {
        "name": "assertEquals",
        "desc": "(ZZ)V"
      },
      {
        "name": "fail",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;CC)V"
      },
      {
        "name": "failSame",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.AssertionFailedError",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.ComparisonCompactor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compact",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.ComparisonFailure",
    "setters": [],
    "getters": [
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;",
        "field": "fExpected"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;",
        "field": "fActual"
      }
    ],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        20
      ],
      "short": [
        20
      ],
      "int": [
        20
      ]
    },
    "parents": [
      "junit.framework.AssertionFailedError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.JUnit4TestAdapter",
    "setters": [],
    "getters": [
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;",
        "field": "fNewTestClass"
      }
    ],
    "observers": [
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTests",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "sort",
        "desc": "(Lorg/junit/runner/manipulation/Sorter;)V"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "getTests",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljunit/framework/JUnit4TestAdapterCache;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.Test",
      "org.junit.runner.manipulation.Filterable",
      "org.junit.runner.manipulation.Sortable",
      "org.junit.runner.Describable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.JUnit4TestAdapterCache",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createTest",
        "desc": "(Lorg/junit/runner/Description;)Ljunit/framework/Test;"
      },
      {
        "name": "asTestList",
        "desc": "(Lorg/junit/runner/Description;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefault",
        "desc": "()Ljunit/framework/JUnit4TestAdapterCache;"
      },
      {
        "name": "getNotifier",
        "desc": "(Ljunit/framework/TestResult;Ljunit/framework/JUnit4TestAdapter;)Lorg/junit/runner/notification/RunNotifier;"
      },
      {
        "name": "asTest",
        "desc": "(Lorg/junit/runner/Description;)Ljunit/framework/Test;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.util.HashMap"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.JUnit4TestAdapterCache$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.JUnit4TestCaseFacade",
    "setters": [],
    "getters": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;",
        "field": "fDescription"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.Test",
      "org.junit.runner.Describable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.Protectable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.Test",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestCase",
    "setters": [
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "fName"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "fName"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "junit.framework.Assert",
      "junit.framework.Test"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestFailure",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "trace",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "exceptionMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFailure",
        "desc": "()Z"
      },
      {
        "name": "thrownException",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;Ljava/lang/Throwable;)V"
      },
      {
        "name": "failedTest",
        "desc": "()Ljunit/framework/Test;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestResult",
    "setters": [
      {
        "name": "startTest",
        "desc": "(Ljunit/framework/Test;)V",
        "field": "fRunTests"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "errors",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "failures",
        "desc": "()Ljava/util/Enumeration;"
      }
    ],
    "testableMethods": [
      {
        "name": "addListener",
        "desc": "(Ljunit/framework/TestListener;)V"
      },
      {
        "name": "removeListener",
        "desc": "(Ljunit/framework/TestListener;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "endTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestCase;)V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V"
      },
      {
        "name": "wasSuccessful",
        "desc": "()Z"
      },
      {
        "name": "failureCount",
        "desc": "()I"
      },
      {
        "name": "shouldStop",
        "desc": "()Z"
      },
      {
        "name": "errors",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "startTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "addError",
        "desc": "(Ljunit/framework/Test;Ljava/lang/Throwable;)V"
      },
      {
        "name": "errorCount",
        "desc": "()I"
      },
      {
        "name": "runProtected",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/Protectable;)V"
      },
      {
        "name": "failures",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "runCount",
        "desc": "()I"
      },
      {
        "name": "stop",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestResult$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.Protectable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestSuite",
    "setters": [
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "fName"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "fName"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "addTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "testCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "warning",
        "desc": "(Ljava/lang/String;)Ljunit/framework/Test;"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "addTestSuite",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "runTest",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/TestResult;)V"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;Ljava/lang/String;)V"
      },
      {
        "name": "getTestConstructor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "tests",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "testAt",
        "desc": "(I)Ljunit/framework/Test;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "createTest",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljunit/framework/Test;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        0,
        10
      ],
      "str": [
        ")",
        "test",
        "warning"
      ]
    },
    "parents": [
      "java.lang.Object",
      "junit.framework.Test"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestSuite$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "junit.framework.TestCase"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.runner.BaseTestRunner",
    "setters": [
      {
        "name": "setLoading",
        "desc": "(Z)V",
        "field": "fLoading"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        2
      ],
      "str": [
        "-c",
        "-nofilterstack",
        "-noloading",
        "filterstack",
        "junit.properties",
        "loading",
        "maxmessage",
        "true",
        "user.home"
      ]
    },
    "parents": [
      "java.lang.Object",
      "junit.framework.TestListener"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.runner.TestRunListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.runner.Version",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "id",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.textui.ResultPrinter",
    "setters": [
      {
        "name": "startTest",
        "desc": "(Ljunit/framework/Test;)V",
        "field": "fColumn"
      }
    ],
    "getters": [
      {
        "name": "getWriter",
        "desc": "()Ljava/io/PrintStream;",
        "field": "fWriter"
      }
    ],
    "observers": [
      {
        "name": "getWriter",
        "desc": "()Ljava/io/PrintStream;"
      }
    ],
    "testableMethods": [
      {
        "name": "printDefects",
        "desc": "(Ljava/util/Enumeration;ILjava/lang/String;)V"
      },
      {
        "name": "printHeader",
        "desc": "(J)V"
      },
      {
        "name": "printFailures",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "printErrors",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "endTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "print",
        "desc": "(Ljunit/framework/TestResult;J)V"
      },
      {
        "name": "printDefect",
        "desc": "(Ljunit/framework/TestFailure;I)V"
      },
      {
        "name": "elapsedTimeAsString",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "printWaitPrompt",
        "desc": "()V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintStream;)V"
      },
      {
        "name": "printFooter",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "printDefectTrace",
        "desc": "(Ljunit/framework/TestFailure;)V"
      },
      {
        "name": "startTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "addError",
        "desc": "(Ljunit/framework/Test;Ljava/lang/Throwable;)V"
      },
      {
        "name": "printDefectHeader",
        "desc": "(Ljunit/framework/TestFailure;I)V"
      },
      {
        "name": "getWriter",
        "desc": "()Ljava/io/PrintStream;"
      }
    ],
    "dictionary": {
      "byte": [
        40
      ],
      "char": [
        40
      ],
      "short": [
        40
      ],
      "int": [
        0,
        1,
        40
      ],
      "str": [
        ":",
        "E",
        "F",
        "FAILURES!!!",
        "OK",
        "error",
        "failure"
      ]
    },
    "parents": [
      "java.lang.Object",
      "junit.framework.TestListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.textui.TestRunner",
    "setters": [
      {
        "name": "setPrinter",
        "desc": "(Ljunit/textui/ResultPrinter;)V",
        "field": "fPrinter"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "runAndWait",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "runSingleMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Z)Ljunit/framework/TestResult;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/Test;)Ljunit/framework/TestResult;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "testEnded",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "pause",
        "desc": "(Z)V"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintStream;)V"
      },
      {
        "name": "doRun",
        "desc": "(Ljunit/framework/Test;Z)Ljunit/framework/TestResult;"
      },
      {
        "name": "testFailed",
        "desc": "(ILjunit/framework/Test;Ljava/lang/Throwable;)V"
      },
      {
        "name": "doRun",
        "desc": "(Ljunit/framework/Test;)Ljunit/framework/TestResult;"
      },
      {
        "name": "testStarted",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "run",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljunit/textui/ResultPrinter;)V"
      },
      {
        "name": "createTestResult",
        "desc": "()Ljunit/framework/TestResult;"
      },
      {
        "name": "setPrinter",
        "desc": "(Ljunit/textui/ResultPrinter;)V"
      },
      {
        "name": "start",
        "desc": "([Ljava/lang/String;)Ljunit/framework/TestResult;"
      },
      {
        "name": "runFailed",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "",
        "-c",
        "-m",
        "-v",
        "-wait"
      ]
    },
    "parents": [
      "junit.runner.BaseTestRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.ByteOrderMark",
    "setters": [],
    "getters": [
      {
        "name": "getCharsetName",
        "desc": "()Ljava/lang/String;",
        "field": "charsetName"
      }
    ],
    "observers": [
      {
        "name": "getBytes",
        "desc": "()[B"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCharsetName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "length",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getBytes",
        "desc": "()[B"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[I)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getCharsetName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "length",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "get",
        "desc": "(I)I"
      }
    ],
    "dictionary": {
      "short": [
        187,
        191,
        254,
        255
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        187,
        191,
        254,
        255
      ],
      "str": [
        "UTF-16BE",
        "UTF-16LE",
        "UTF-32BE",
        "UTF-32LE",
        "UTF-8"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.CopyUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "copy",
        "desc": "([BLjava/io/OutputStream;)V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/Reader;Ljava/io/OutputStream;)V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/InputStream;Ljava/io/Writer;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;)I"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/Reader;Ljava/io/Writer;)I"
      },
      {
        "name": "copy",
        "desc": "(Ljava/lang/String;Ljava/io/Writer;)V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V"
      },
      {
        "name": "copy",
        "desc": "([BLjava/io/Writer;)V"
      },
      {
        "name": "copy",
        "desc": "([BLjava/io/Writer;Ljava/lang/String;)V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/lang/String;Ljava/io/OutputStream;)V"
      }
    ],
    "dictionary": {
      "short": [
        4096
      ],
      "int": [
        -1,
        4096
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.DirectoryWalker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.DirectoryWalker$CancelException",
    "setters": [],
    "getters": [
      {
        "name": "getDepth",
        "desc": "()I",
        "field": "depth"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;",
        "field": "file"
      }
    ],
    "observers": [
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getDepth",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/io/File;I)V"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;I)V"
      },
      {
        "name": "getDepth",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.IOException"
    ],
    "outerClass": "org.apache.commons.io.DirectoryWalker",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.EndianUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "swapDouble",
        "desc": "(D)D"
      },
      {
        "name": "writeSwappedFloat",
        "desc": "(Ljava/io/OutputStream;F)V"
      },
      {
        "name": "writeSwappedLong",
        "desc": "(Ljava/io/OutputStream;J)V"
      },
      {
        "name": "writeSwappedLong",
        "desc": "([BIJ)V"
      },
      {
        "name": "swapShort",
        "desc": "(S)S"
      },
      {
        "name": "writeSwappedInteger",
        "desc": "([BII)V"
      },
      {
        "name": "writeSwappedDouble",
        "desc": "([BID)V"
      },
      {
        "name": "writeSwappedShort",
        "desc": "([BIS)V"
      },
      {
        "name": "readSwappedLong",
        "desc": "([BI)J"
      },
      {
        "name": "readSwappedInteger",
        "desc": "([BI)I"
      },
      {
        "name": "writeSwappedShort",
        "desc": "(Ljava/io/OutputStream;S)V"
      },
      {
        "name": "readSwappedFloat",
        "desc": "(Ljava/io/InputStream;)F"
      },
      {
        "name": "writeSwappedDouble",
        "desc": "(Ljava/io/OutputStream;D)V"
      },
      {
        "name": "readSwappedLong",
        "desc": "(Ljava/io/InputStream;)J"
      },
      {
        "name": "swapInteger",
        "desc": "(I)I"
      },
      {
        "name": "writeSwappedInteger",
        "desc": "(Ljava/io/OutputStream;I)V"
      },
      {
        "name": "readSwappedFloat",
        "desc": "([BI)F"
      },
      {
        "name": "readSwappedInteger",
        "desc": "(Ljava/io/InputStream;)I"
      },
      {
        "name": "readSwappedUnsignedInteger",
        "desc": "(Ljava/io/InputStream;)J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "swapLong",
        "desc": "(J)J"
      },
      {
        "name": "readSwappedUnsignedInteger",
        "desc": "([BI)J"
      },
      {
        "name": "readSwappedDouble",
        "desc": "([BI)D"
      },
      {
        "name": "swapFloat",
        "desc": "(F)F"
      },
      {
        "name": "readSwappedShort",
        "desc": "([BI)S"
      },
      {
        "name": "readSwappedUnsignedShort",
        "desc": "(Ljava/io/InputStream;)I"
      },
      {
        "name": "writeSwappedFloat",
        "desc": "([BIF)V"
      },
      {
        "name": "readSwappedDouble",
        "desc": "(Ljava/io/InputStream;)D"
      },
      {
        "name": "readSwappedUnsignedShort",
        "desc": "([BI)I"
      },
      {
        "name": "readSwappedShort",
        "desc": "(Ljava/io/InputStream;)S"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        24,
        56
      ],
      "char": [
        56
      ],
      "short": [
        8,
        24,
        56,
        255
      ],
      "int": [
        -1,
        0,
        8,
        24,
        56,
        255
      ],
      "long": [
        255
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileCleaner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "track",
        "desc": "(Ljava/io/File;Ljava/lang/Object;)V"
      },
      {
        "name": "track",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "track",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "track",
        "desc": "(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V"
      },
      {
        "name": "exitWhenFinished",
        "desc": "()V"
      },
      {
        "name": "getTrackCount",
        "desc": "()I"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/apache/commons/io/FileCleaningTracker;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileCleaningTracker",
    "setters": [],
    "getters": [
      {
        "name": "getDeleteFailures",
        "desc": "()Ljava/util/List;",
        "field": "deleteFailures"
      }
    ],
    "observers": [
      {
        "name": "getDeleteFailures",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTrackCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "track",
        "desc": "(Ljava/io/File;Ljava/lang/Object;)V"
      },
      {
        "name": "track",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V"
      },
      {
        "name": "getDeleteFailures",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "track",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "track",
        "desc": "(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V"
      },
      {
        "name": "exitWhenFinished",
        "desc": "()V"
      },
      {
        "name": "getTrackCount",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileCleaningTracker$Reaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        1,
        10
      ]
    },
    "parents": [
      "java.lang.Thread"
    ],
    "outerClass": "org.apache.commons.io.FileCleaningTracker",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileCleaningTracker$Tracker",
    "setters": [],
    "getters": [
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;",
        "field": "path"
      }
    ],
    "observers": [
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.ref.PhantomReference"
    ],
    "outerClass": "org.apache.commons.io.FileCleaningTracker",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileDeleteStrategy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "doDelete",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "delete",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "deleteQuietly",
        "desc": "(Ljava/io/File;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "Normal"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "doDelete",
        "desc": "(Ljava/io/File;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "Force"
      ]
    },
    "parents": [
      "org.apache.commons.io.FileDeleteStrategy"
    ],
    "outerClass": "org.apache.commons.io.FileDeleteStrategy",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileExistsException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.IOException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileSystemUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "performCommand",
        "desc": "([Ljava/lang/String;IJ)Ljava/util/List;"
      },
      {
        "name": "freeSpaceKb",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "freeSpaceWindows",
        "desc": "(Ljava/lang/String;J)J"
      },
      {
        "name": "freeSpace",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "freeSpaceOS",
        "desc": "(Ljava/lang/String;IZJ)J"
      },
      {
        "name": "freeSpaceUnix",
        "desc": "(Ljava/lang/String;ZZJ)J"
      },
      {
        "name": "freeSpaceKb",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "freeSpaceKb",
        "desc": "(Ljava/lang/String;J)J"
      },
      {
        "name": "parseDir",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)J"
      },
      {
        "name": "openProcess",
        "desc": "([Ljava/lang/String;)Ljava/lang/Process;"
      },
      {
        "name": "parseBytes",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)J"
      },
      {
        "name": "freeSpaceKb",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "byte": [
        20,
        34,
        44,
        46
      ],
      "char": [
        34,
        44,
        46
      ],
      "short": [
        20,
        34,
        44,
        46
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        20,
        34,
        44,
        46
      ],
      "long": [
        0
      ],
      "str": [
        "'",
        "-",
        ".",
        "/C",
        "/usr/xpg4/bin/df",
        "P",
        "aix",
        "cmd.exe",
        "freebsd",
        "hp-ux",
        "irix",
        "k",
        "linux",
        "mpe/ix",
        "os.name",
        "solaris",
        "sunos",
        "unix",
        "windows"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FileUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;Z)V"
      },
      {
        "name": "checksumCRC32",
        "desc": "(Ljava/io/File;)J"
      },
      {
        "name": "copyFileToDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;)V"
      },
      {
        "name": "copyFile",
        "desc": "(Ljava/io/File;Ljava/io/File;Z)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/io/File;Ljava/lang/CharSequence;)V"
      },
      {
        "name": "writeStringToFile",
        "desc": "(Ljava/io/File;Ljava/lang/String;Z)V"
      },
      {
        "name": "getTempDirectoryPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "moveDirectoryToDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;Z)V"
      },
      {
        "name": "moveToDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;Z)V"
      },
      {
        "name": "sizeOfDirectory",
        "desc": "(Ljava/io/File;)J"
      },
      {
        "name": "waitFor",
        "desc": "(Ljava/io/File;I)Z"
      },
      {
        "name": "toURLs",
        "desc": "([Ljava/io/File;)[Ljava/net/URL;"
      },
      {
        "name": "writeStringToFile",
        "desc": "(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "isFileNewer",
        "desc": "(Ljava/io/File;Ljava/io/File;)Z"
      },
      {
        "name": "openOutputStream",
        "desc": "(Ljava/io/File;)Ljava/io/FileOutputStream;"
      },
      {
        "name": "copyURLToFile",
        "desc": "(Ljava/net/URL;Ljava/io/File;)V"
      },
      {
        "name": "isFileOlder",
        "desc": "(Ljava/io/File;Ljava/util/Date;)Z"
      },
      {
        "name": "touch",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "iterateFiles",
        "desc": "(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Iterator;"
      },
      {
        "name": "listFiles",
        "desc": "(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;"
      },
      {
        "name": "moveDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;)V"
      },
      {
        "name": "moveFile",
        "desc": "(Ljava/io/File;Ljava/io/File;)V"
      },
      {
        "name": "listFilesAndDirs",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;"
      },
      {
        "name": "deleteQuietly",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "directoryContains",
        "desc": "(Ljava/io/File;Ljava/io/File;)Z"
      },
      {
        "name": "writeByteArrayToFile",
        "desc": "(Ljava/io/File;[BZ)V"
      },
      {
        "name": "toFiles",
        "desc": "([Ljava/net/URL;)[Ljava/io/File;"
      },
      {
        "name": "decodeUrl",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "deleteDirectory",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "isFileNewer",
        "desc": "(Ljava/io/File;Ljava/util/Date;)Z"
      },
      {
        "name": "write",
        "desc": "(Ljava/io/File;Ljava/lang/CharSequence;Z)V"
      },
      {
        "name": "convertFileCollectionToFileArray",
        "desc": "(Ljava/util/Collection;)[Ljava/io/File;"
      },
      {
        "name": "byteCountToDisplaySize",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/io/File;Ljava/util/Collection;)V"
      },
      {
        "name": "lineIterator",
        "desc": "(Ljava/io/File;)Lorg/apache/commons/io/LineIterator;"
      },
      {
        "name": "copyDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;)V"
      },
      {
        "name": "moveFileToDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;Z)V"
      },
      {
        "name": "readLines",
        "desc": "(Ljava/io/File;)Ljava/util/List;"
      },
      {
        "name": "copyInputStreamToFile",
        "desc": "(Ljava/io/InputStream;Ljava/io/File;)V"
      },
      {
        "name": "copyDirectoryToDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;)V"
      },
      {
        "name": "lineIterator",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;"
      },
      {
        "name": "getUserDirectoryPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isSymlink",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "getFile",
        "desc": "(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "getUserDirectory",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "iterateFilesAndDirs",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;"
      },
      {
        "name": "forceMkdir",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "getTempDirectory",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "readFileToString",
        "desc": "(Ljava/io/File;)Ljava/lang/String;"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Z)V"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/io/File;Ljava/util/Collection;Z)V"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V"
      },
      {
        "name": "writeStringToFile",
        "desc": "(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "listFiles",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;"
      },
      {
        "name": "checksum",
        "desc": "(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;"
      },
      {
        "name": "toFile",
        "desc": "(Ljava/net/URL;)Ljava/io/File;"
      },
      {
        "name": "copyFile",
        "desc": "(Ljava/io/File;Ljava/io/OutputStream;)J"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;)V"
      },
      {
        "name": "forceDelete",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "isFileOlder",
        "desc": "(Ljava/io/File;J)Z"
      },
      {
        "name": "copyURLToFile",
        "desc": "(Ljava/net/URL;Ljava/io/File;II)V"
      },
      {
        "name": "writeStringToFile",
        "desc": "(Ljava/io/File;Ljava/lang/String;)V"
      },
      {
        "name": "writeByteArrayToFile",
        "desc": "(Ljava/io/File;[B)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "contentEquals",
        "desc": "(Ljava/io/File;Ljava/io/File;)Z"
      },
      {
        "name": "copyDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V"
      },
      {
        "name": "copyDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;)V"
      },
      {
        "name": "copyFile",
        "desc": "(Ljava/io/File;Ljava/io/File;)V"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V"
      },
      {
        "name": "cleanDirectory",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "getFile",
        "desc": "([Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "contentEqualsIgnoreEOL",
        "desc": "(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "readFileToByteArray",
        "desc": "(Ljava/io/File;)[B"
      },
      {
        "name": "iterateFiles",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;"
      },
      {
        "name": "copyFileToDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;Z)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;)V"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;Z)V"
      },
      {
        "name": "isFileNewer",
        "desc": "(Ljava/io/File;J)Z"
      },
      {
        "name": "sizeOf",
        "desc": "(Ljava/io/File;)J"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;)V"
      },
      {
        "name": "forceDeleteOnExit",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "openInputStream",
        "desc": "(Ljava/io/File;)Ljava/io/FileInputStream;"
      },
      {
        "name": "copyDirectory",
        "desc": "(Ljava/io/File;Ljava/io/File;Z)V"
      },
      {
        "name": "readLines",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "openOutputStream",
        "desc": "(Ljava/io/File;Z)Ljava/io/FileOutputStream;"
      },
      {
        "name": "readFileToString",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isFileOlder",
        "desc": "(Ljava/io/File;Ljava/io/File;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        37
      ],
      "char": [
        37
      ],
      "short": [
        10,
        37
      ],
      "int": [
        0,
        1,
        10,
        37
      ],
      "long": [
        0,
        1024,
        1048576,
        31457280,
        1073741824,
        1099511627776,
        1125899906842624,
        1152921504606846976
      ],
      "str": [
        "'",
        ".",
        "UTF-8",
        "]",
        "file"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.FilenameUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "equals",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getPrefix",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getFullPathNoEndSeparator",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isExtension",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Z"
      },
      {
        "name": "normalize",
        "desc": "(Ljava/lang/String;Z)Ljava/lang/String;"
      },
      {
        "name": "getPrefixLength",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "indexOfExtension",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getPathNoEndSeparator",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getExtension",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isExtension",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getBaseName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "removeExtension",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "splitOnTokens",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "normalizeNoEndSeparator",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isSystemWindows",
        "desc": "()Z"
      },
      {
        "name": "normalizeNoEndSeparator",
        "desc": "(Ljava/lang/String;Z)Ljava/lang/String;"
      },
      {
        "name": "indexOfLastSeparator",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "equalsNormalizedOnSystem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "separatorsToUnix",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "directoryContains",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getPath",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "equalsNormalized",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "wildcardMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "separatorsToWindows",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "wildcardMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z"
      },
      {
        "name": "getName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "wildcardMatchOnSystem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "isExtension",
        "desc": "(Ljava/lang/String;Ljava/util/Collection;)Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z"
      },
      {
        "name": "equalsOnSystem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "separatorsToSystem",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "concat",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getFullPath",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "normalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        42,
        46,
        47,
        58,
        63,
        65,
        90,
        92,
        126
      ],
      "char": [
        42,
        46,
        47,
        58,
        63,
        65,
        90,
        92,
        126
      ],
      "short": [
        42,
        46,
        47,
        58,
        63,
        65,
        90,
        92,
        126
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        42,
        46,
        47,
        58,
        63,
        65,
        90,
        92,
        126
      ],
      "str": [
        "",
        "*",
        "?"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.HexDump",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "dump",
        "desc": "([BJLjava/io/OutputStream;I)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        15,
        16,
        32,
        70,
        74,
        127
      ],
      "char": [
        32,
        70,
        74
      ],
      "short": [
        6,
        7,
        8,
        15,
        16,
        32,
        70,
        74,
        127
      ],
      "int": [
        0,
        2,
        4,
        6,
        7,
        8,
        15,
        16,
        32,
        70,
        74,
        127
      ],
      "str": [
        "line.separator"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.IOCase",
    "setters": [],
    "getters": [
      {
        "name": "isCaseSensitive",
        "desc": "()Z",
        "field": "sensitive"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "isCaseSensitive",
        "desc": "()Z"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "isCaseSensitive",
        "desc": "()Z"
      },
      {
        "name": "checkEndsWith",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "checkStartsWith",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "forName",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;"
      },
      {
        "name": "checkEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "checkIndexOf",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)I"
      },
      {
        "name": "checkCompareTo",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "checkRegionMatches",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "Insensitive",
        "Sensitive",
        "System"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.IOExceptionWithCause",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.IOException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.IOUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "closeQuietly",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/io/Reader;)Ljava/lang/String;"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/CharSequence;Ljava/io/Writer;)V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/net/ServerSocket;)V"
      },
      {
        "name": "readLines",
        "desc": "(Ljava/io/Reader;)Ljava/util/List;"
      },
      {
        "name": "write",
        "desc": "([CLjava/io/OutputStream;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/StringBuffer;Ljava/io/OutputStream;)V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/Reader;Ljava/io/Writer;)I"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/nio/channels/Selector;)V"
      },
      {
        "name": "read",
        "desc": "(Ljava/io/InputStream;[BII)I"
      },
      {
        "name": "toByteArray",
        "desc": "(Ljava/lang/String;)[B"
      },
      {
        "name": "toString",
        "desc": "(Ljava/net/URI;)Ljava/lang/String;"
      },
      {
        "name": "toInputStream",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/StringBuffer;Ljava/io/Writer;)V"
      },
      {
        "name": "contentEquals",
        "desc": "(Ljava/io/Reader;Ljava/io/Reader;)Z"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "write",
        "desc": "([BLjava/io/Writer;Ljava/lang/String;)V"
      },
      {
        "name": "readFully",
        "desc": "(Ljava/io/InputStream;[BII)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/io/InputStream;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/net/URL;)Ljava/lang/String;"
      },
      {
        "name": "write",
        "desc": "([BLjava/io/Writer;)V"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/io/Closeable;)V"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/io/Writer;)V"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V"
      },
      {
        "name": "copyLarge",
        "desc": "(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J"
      },
      {
        "name": "toCharArray",
        "desc": "(Ljava/io/InputStream;)[C"
      },
      {
        "name": "toByteArray",
        "desc": "(Ljava/io/Reader;)[B"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "skipFully",
        "desc": "(Ljava/io/InputStream;J)V"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/net/Socket;)V"
      },
      {
        "name": "readLines",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "copyLarge",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J"
      },
      {
        "name": "toByteArray",
        "desc": "(Ljava/io/InputStream;I)[B"
      },
      {
        "name": "toBufferedInputStream",
        "desc": "(Ljava/io/InputStream;)Ljava/io/InputStream;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "skipFully",
        "desc": "(Ljava/io/Reader;J)V"
      },
      {
        "name": "toByteArray",
        "desc": "(Ljava/io/InputStream;)[B"
      },
      {
        "name": "toBufferedReader",
        "desc": "(Ljava/io/Reader;)Ljava/io/BufferedReader;"
      },
      {
        "name": "toCharArray",
        "desc": "(Ljava/io/Reader;)[C"
      },
      {
        "name": "readLines",
        "desc": "(Ljava/io/InputStream;)Ljava/util/List;"
      },
      {
        "name": "copyLarge",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;)J"
      },
      {
        "name": "write",
        "desc": "([BLjava/io/OutputStream;)V"
      },
      {
        "name": "toInputStream",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/io/InputStream;"
      },
      {
        "name": "write",
        "desc": "([CLjava/io/Writer;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "copyLarge",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J"
      },
      {
        "name": "write",
        "desc": "([CLjava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/CharSequence;Ljava/io/OutputStream;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;Ljava/io/OutputStream;)V"
      },
      {
        "name": "readFully",
        "desc": "(Ljava/io/Reader;[C)V"
      },
      {
        "name": "copyLarge",
        "desc": "(Ljava/io/Reader;Ljava/io/Writer;)J"
      },
      {
        "name": "copyLarge",
        "desc": "(Ljava/io/Reader;Ljava/io/Writer;JJ)J"
      },
      {
        "name": "toString",
        "desc": "([B)Ljava/lang/String;"
      },
      {
        "name": "toByteArray",
        "desc": "(Ljava/io/Reader;Ljava/lang/String;)[B"
      },
      {
        "name": "copyLarge",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;JJ)J"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/Reader;Ljava/io/OutputStream;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;Ljava/io/Writer;)V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/InputStream;Ljava/io/Writer;)V"
      },
      {
        "name": "toByteArray",
        "desc": "(Ljava/io/InputStream;J)[B"
      },
      {
        "name": "toCharArray",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;)[C"
      },
      {
        "name": "contentEquals",
        "desc": "(Ljava/io/InputStream;Ljava/io/InputStream;)Z"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "read",
        "desc": "(Ljava/io/Reader;[CII)I"
      },
      {
        "name": "writeLines",
        "desc": "(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/io/Reader;)V"
      },
      {
        "name": "lineIterator",
        "desc": "(Ljava/io/Reader;)Lorg/apache/commons/io/LineIterator;"
      },
      {
        "name": "lineIterator",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;"
      },
      {
        "name": "read",
        "desc": "(Ljava/io/InputStream;[B)I"
      },
      {
        "name": "toString",
        "desc": "([BLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "readFully",
        "desc": "(Ljava/io/InputStream;[B)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;)I"
      },
      {
        "name": "contentEqualsIgnoreEOL",
        "desc": "(Ljava/io/Reader;Ljava/io/Reader;)Z"
      },
      {
        "name": "copy",
        "desc": "(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V"
      },
      {
        "name": "skip",
        "desc": "(Ljava/io/InputStream;J)J"
      },
      {
        "name": "toInputStream",
        "desc": "(Ljava/lang/String;)Ljava/io/InputStream;"
      },
      {
        "name": "skip",
        "desc": "(Ljava/io/Reader;J)J"
      },
      {
        "name": "toInputStream",
        "desc": "(Ljava/lang/CharSequence;)Ljava/io/InputStream;"
      },
      {
        "name": "read",
        "desc": "(Ljava/io/Reader;[C)I"
      },
      {
        "name": "readFully",
        "desc": "(Ljava/io/Reader;[CII)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "copyLarge",
        "desc": "(Ljava/io/Reader;Ljava/io/Writer;[C)J"
      }
    ],
    "dictionary": {
      "short": [
        2048,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        4,
        2048,
        4096
      ],
      "long": [
        0,
        2147483647
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.LineIterator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "next",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "isValidLine",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;)V"
      },
      {
        "name": "nextLine",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "closeQuietly",
        "desc": "(Lorg/apache/commons/io/LineIterator;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.TaggedIOException",
    "setters": [],
    "getters": [
      {
        "name": "getTag",
        "desc": "()Ljava/io/Serializable;",
        "field": "tag"
      }
    ],
    "observers": [
      {
        "name": "getTag",
        "desc": "()Ljava/io/Serializable;"
      },
      {
        "name": "getCause",
        "desc": "()Ljava/io/IOException;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/IOException;Ljava/io/Serializable;)V"
      },
      {
        "name": "getTag",
        "desc": "()Ljava/io/Serializable;"
      },
      {
        "name": "getCause",
        "desc": "()Ljava/io/IOException;"
      },
      {
        "name": "throwCauseIfTaggedWith",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Object;)V"
      },
      {
        "name": "isTaggedWith",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.IOExceptionWithCause"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.ThreadMonitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "start",
        "desc": "(Ljava/lang/Thread;J)Ljava/lang/Thread;"
      },
      {
        "name": "start",
        "desc": "(J)Ljava/lang/Thread;"
      },
      {
        "name": "stop",
        "desc": "(Ljava/lang/Thread;)V"
      },
      {
        "name": "run",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.AbstractFileComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.CompositeFileComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/util/Comparator;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Iterable;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.DefaultFileComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.DirectoryFileComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.ExtensionFileComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/io/IOCase;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.LastModifiedFileComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.NameFileComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/io/IOCase;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.PathFileComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/io/IOCase;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.ReverseComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Comparator;)V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.comparator.SizeFileComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/io/File;Ljava/io/File;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.io.comparator.AbstractFileComparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.AbstractFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.io.filefilter.IOFileFilter"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.AgeFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Date;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(JZ)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Date;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "<=",
        ">"
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.AndFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFileFilters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V"
      },
      {
        "name": "removeFileFilter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "addFileFilter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)V"
      },
      {
        "name": "setFileFilters",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getFileFilters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "org.apache.commons.io.filefilter.ConditionalFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.CanReadFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.CanWriteFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.ConditionalFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.DelegateFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/FileFilter;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/FilenameFilter;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.DirectoryFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.EmptyFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.FalseFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.io.filefilter.IOFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.FileFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.FileFilterUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "filter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;"
      },
      {
        "name": "ageFileFilter",
        "desc": "(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "nameFileFilter",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "sizeFileFilter",
        "desc": "(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "filterList",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;"
      },
      {
        "name": "nameFileFilter",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "prefixFileFilter",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "andFileFilter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "sizeRangeFileFilter",
        "desc": "(JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "suffixFileFilter",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "and",
        "desc": "([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "or",
        "desc": "([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "ageFileFilter",
        "desc": "(Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "trueFileFilter",
        "desc": "()Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "ageFileFilter",
        "desc": "(Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "filterSet",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;"
      },
      {
        "name": "filterSet",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;"
      },
      {
        "name": "makeDirectoryOnly",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "magicNumberFileFilter",
        "desc": "([B)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "magicNumberFileFilter",
        "desc": "([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "directoryFileFilter",
        "desc": "()Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "prefixFileFilter",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toList",
        "desc": "([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;"
      },
      {
        "name": "ageFileFilter",
        "desc": "(Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "makeCVSAware",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "magicNumberFileFilter",
        "desc": "(Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "asFileFilter",
        "desc": "(Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "notFileFilter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "sizeFileFilter",
        "desc": "(J)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "orFileFilter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "asFileFilter",
        "desc": "(Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "fileFileFilter",
        "desc": "()Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "magicNumberFileFilter",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "falseFileFilter",
        "desc": "()Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "ageFileFilter",
        "desc": "(Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "makeSVNAware",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "filterList",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;"
      },
      {
        "name": "ageFileFilter",
        "desc": "(J)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "makeFileOnly",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;"
      },
      {
        "name": "suffixFileFilter",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        1
      ],
      "str": [
        ".svn"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.HiddenFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.IOFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.FileFilter",
      "java.io.FilenameFilter"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.MagicNumberFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;J)V"
      },
      {
        "name": "<init>",
        "desc": "([BJ)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ],
      "str": [
        "(",
        "r"
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.NameFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.NotFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.OrFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFileFilters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V"
      },
      {
        "name": "removeFileFilter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "addFileFilter",
        "desc": "(Lorg/apache/commons/io/filefilter/IOFileFilter;)V"
      },
      {
        "name": "setFileFilters",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getFileFilters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "org.apache.commons.io.filefilter.ConditionalFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.PrefixFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.RegexFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/regex/Pattern;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.SizeFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(JZ)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0
      ],
      "str": [
        "<",
        ">="
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.SuffixFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.TrueFileFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.io.filefilter.IOFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.WildcardFileFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.filefilter.WildcardFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "accept",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.AutoCloseInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "afterRead",
        "desc": "(I)V"
      },
      {
        "name": "finalize",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.apache.commons.io.input.ProxyInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.BOMInputStream",
    "setters": [
      {
        "name": "mark",
        "desc": "(I)V",
        "field": "markFbIndex"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getBOM",
        "desc": "()Lorg/apache/commons/io/ByteOrderMark;"
      },
      {
        "name": "hasBOM",
        "desc": "()Z"
      },
      {
        "name": "getBOMCharsetName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V"
      },
      {
        "name": "mark",
        "desc": "(I)V"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "read",
        "desc": "([BII)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "read",
        "desc": "([B)I"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Z)V"
      },
      {
        "name": "hasBOM",
        "desc": "(Lorg/apache/commons/io/ByteOrderMark;)Z"
      },
      {
        "name": "getBOM",
        "desc": "()Lorg/apache/commons/io/ByteOrderMark;"
      },
      {
        "name": "hasBOM",
        "desc": "()Z"
      },
      {
        "name": "getBOMCharsetName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;[Lorg/apache/commons/io/ByteOrderMark;)V"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.io.input.ProxyInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.BoundedInputStream",
    "setters": [
      {
        "name": "mark",
        "desc": "(I)V",
        "field": "mark"
      },
      {
        "name": "read",
        "desc": "([BII)I",
        "field": "pos"
      },
      {
        "name": "setPropagateClose",
        "desc": "(Z)V",
        "field": "propagateClose"
      },
      {
        "name": "skip",
        "desc": "(J)J",
        "field": "pos"
      }
    ],
    "getters": [
      {
        "name": "isPropagateClose",
        "desc": "()Z",
        "field": "propagateClose"
      }
    ],
    "observers": [
      {
        "name": "available",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isPropagateClose",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "mark",
        "desc": "(I)V"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "read",
        "desc": "([BII)I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "read",
        "desc": "([B)I"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "isPropagateClose",
        "desc": "()Z"
      },
      {
        "name": "available",
        "desc": "()I"
      },
      {
        "name": "markSupported",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;J)V"
      },
      {
        "name": "setPropagateClose",
        "desc": "(Z)V"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        1
      ],
      "long": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.io.InputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.BrokenInputStream",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "available",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/IOException;)V"
      },
      {
        "name": "available",
        "desc": "()I"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.InputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.CharSequenceInputStream",
    "setters": [
      {
        "name": "mark",
        "desc": "(I)V",
        "field": "mark"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V"
      },
      {
        "name": "mark",
        "desc": "(I)V"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "read",
        "desc": "([BII)I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)V"
      },
      {
        "name": "read",
        "desc": "([B)I"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "available",
        "desc": "()I"
      },
      {
        "name": "markSupported",
        "desc": "()Z"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "short": [
        2048
      ],
      "int": [
        -1,
        0,
        1,
        2048
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.io.InputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.CharSequenceReader",
    "setters": [
      {
        "name": "mark",
        "desc": "(I)V",
        "field": "mark"
      },
      {
        "name": "skip",
        "desc": "(J)J",
        "field": "idx"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "read",
        "desc": "([CII)I"
      },
      {
        "name": "mark",
        "desc": "(I)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/CharSequence;)V"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "markSupported",
        "desc": "()Z"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "long": [
        0
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.io.Reader",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.ClassLoaderObjectInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resolveClass",
        "desc": "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;Ljava/io/InputStream;)V"
      },
      {
        "name": "resolveProxyClass",
        "desc": "([Ljava/lang/String;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.CloseShieldInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.input.ProxyInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.ClosedInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.InputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.CountingInputStream",
    "setters": [
      {
        "name": "skip",
        "desc": "(J)J",
        "field": "count"
      }
    ],
    "getters": [
      {
        "name": "getByteCount",
        "desc": "()J",
        "field": "count"
      }
    ],
    "observers": [
      {
        "name": "getByteCount",
        "desc": "()J"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "resetByteCount",
        "desc": "()J"
      },
      {
        "name": "getByteCount",
        "desc": "()J"
      },
      {
        "name": "resetCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "afterRead",
        "desc": "(I)V"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ],
      "long": [
        0,
        2147483647
      ]
    },
    "parents": [
      "org.apache.commons.io.input.ProxyInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.DemuxInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "bindStream",
        "desc": "(Ljava/io/InputStream;)Ljava/io/InputStream;"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "close",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.InputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.NullInputStream",
    "setters": [
      {
        "name": "mark",
        "desc": "(I)V",
        "field": "mark"
      },
      {
        "name": "read",
        "desc": "([BII)I",
        "field": "position"
      },
      {
        "name": "skip",
        "desc": "(J)J",
        "field": "position"
      }
    ],
    "getters": [
      {
        "name": "getPosition",
        "desc": "()J",
        "field": "position"
      },
      {
        "name": "getSize",
        "desc": "()J",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "available",
        "desc": "()I"
      },
      {
        "name": "getPosition",
        "desc": "()J"
      },
      {
        "name": "getSize",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "mark",
        "desc": "(I)V"
      },
      {
        "name": "getPosition",
        "desc": "()J"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "read",
        "desc": "([BII)I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "processByte",
        "desc": "()I"
      },
      {
        "name": "read",
        "desc": "([B)I"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      },
      {
        "name": "available",
        "desc": "()I"
      },
      {
        "name": "getSize",
        "desc": "()J"
      },
      {
        "name": "markSupported",
        "desc": "()Z"
      },
      {
        "name": "processBytes",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "(JZZ)V"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        -1,
        0,
        1,
        2147483647
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.io.InputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.NullReader",
    "setters": [
      {
        "name": "read",
        "desc": "([CII)I",
        "field": "position"
      },
      {
        "name": "mark",
        "desc": "(I)V",
        "field": "mark"
      },
      {
        "name": "skip",
        "desc": "(J)J",
        "field": "position"
      }
    ],
    "getters": [
      {
        "name": "getPosition",
        "desc": "()J",
        "field": "position"
      },
      {
        "name": "getSize",
        "desc": "()J",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "getPosition",
        "desc": "()J"
      },
      {
        "name": "getSize",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "mark",
        "desc": "(I)V"
      },
      {
        "name": "getPosition",
        "desc": "()J"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "processChar",
        "desc": "()I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "read",
        "desc": "([C)I"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      },
      {
        "name": "read",
        "desc": "([CII)I"
      },
      {
        "name": "processChars",
        "desc": "([CII)V"
      },
      {
        "name": "getSize",
        "desc": "()J"
      },
      {
        "name": "markSupported",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(JZZ)V"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        -1,
        0,
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.io.Reader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.ProxyInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.io.FilterInputStream"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.ProxyReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.io.FilterReader"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.ReaderInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;Ljava/lang/String;I)V"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "read",
        "desc": "([BII)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "read",
        "desc": "([B)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;)V"
      }
    ],
    "dictionary": {
      "short": [
        128,
        1024
      ],
      "int": [
        -1,
        0,
        1,
        128,
        1024
      ]
    },
    "parents": [
      "java.io.InputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.ReversedLinesFileReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;ILjava/lang/String;)V"
      },
      {
        "name": "readLine",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      }
    ],
    "dictionary": {
      "short": [
        4096
      ],
      "int": [
        0,
        1,
        2,
        4096
      ],
      "long": [
        0,
        1
      ],
      "float": [
        1.0
      ],
      "str": [
        "",
        "Shift_JIS",
        "UTF-16",
        "UTF-16BE",
        "UTF-16LE",
        "UTF-8",
        "r"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Closeable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.ReversedLinesFileReader$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.io.input.ReversedLinesFileReader",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.ReversedLinesFileReader$FilePart",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "long": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.io.input.ReversedLinesFileReader",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.SwappedDataInputStream",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "readLine",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "readUTF",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "readUnsignedShort",
        "desc": "()I"
      },
      {
        "name": "readChar",
        "desc": "()C"
      },
      {
        "name": "readInt",
        "desc": "()I"
      },
      {
        "name": "readShort",
        "desc": "()S"
      },
      {
        "name": "readBoolean",
        "desc": "()Z"
      },
      {
        "name": "readDouble",
        "desc": "()D"
      },
      {
        "name": "readLong",
        "desc": "()J"
      },
      {
        "name": "readFloat",
        "desc": "()F"
      }
    ],
    "testableMethods": [
      {
        "name": "readLine",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "readUTF",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "readFully",
        "desc": "([B)V"
      },
      {
        "name": "readChar",
        "desc": "()C"
      },
      {
        "name": "readByte",
        "desc": "()B"
      },
      {
        "name": "readShort",
        "desc": "()S"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readLong",
        "desc": "()J"
      },
      {
        "name": "readFloat",
        "desc": "()F"
      },
      {
        "name": "readUnsignedShort",
        "desc": "()I"
      },
      {
        "name": "readInt",
        "desc": "()I"
      },
      {
        "name": "skipBytes",
        "desc": "(I)I"
      },
      {
        "name": "readBoolean",
        "desc": "()Z"
      },
      {
        "name": "readDouble",
        "desc": "()D"
      },
      {
        "name": "readFully",
        "desc": "([BII)V"
      },
      {
        "name": "readUnsignedByte",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "org.apache.commons.io.input.ProxyInputStream",
      "java.io.DataInput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.TaggedInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "throwIfCauseOf",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "handleIOException",
        "desc": "(Ljava/io/IOException;)V"
      },
      {
        "name": "isCauseOf",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.input.ProxyInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.Tailer",
    "setters": [],
    "getters": [
      {
        "name": "getDelay",
        "desc": "()J",
        "field": "delay"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;",
        "field": "file"
      }
    ],
    "observers": [
      {
        "name": "getDelay",
        "desc": "()J"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;)Lorg/apache/commons/io/input/Tailer;"
      },
      {
        "name": "create",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)Lorg/apache/commons/io/input/Tailer;"
      },
      {
        "name": "getDelay",
        "desc": "()J"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;)V"
      },
      {
        "name": "create",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;J)Lorg/apache/commons/io/input/Tailer;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;J)V"
      },
      {
        "name": "run",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)V"
      },
      {
        "name": "stop",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        10,
        13
      ],
      "long": [
        0,
        1000
      ],
      "str": [
        "r"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.TailerListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.TailerListenerAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "fileNotFound",
        "desc": "()V"
      },
      {
        "name": "handle",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "init",
        "desc": "(Lorg/apache/commons/io/input/Tailer;)V"
      },
      {
        "name": "handle",
        "desc": "(Ljava/lang/Exception;)V"
      },
      {
        "name": "fileRotated",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.io.input.TailerListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.TeeInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "read",
        "desc": "([BII)I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "read",
        "desc": "([B)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "org.apache.commons.io.input.ProxyInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.XmlStreamReader",
    "setters": [],
    "getters": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "encoding"
      },
      {
        "name": "getDefaultEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "defaultEncoding"
      }
    ],
    "observers": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDefaultEncoding",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "calculateRawEncoding",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "calculateHttpEncoding",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;ZLjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;Z)V"
      },
      {
        "name": "getDefaultEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "isAppXml",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "read",
        "desc": "([CII)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/net/URLConnection;Ljava/lang/String;)V"
      },
      {
        "name": "getContentTypeEncoding",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getContentTypeMime",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/net/URL;)V"
      },
      {
        "name": "isTextXml",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        62,
        63,
        109,
        120
      ],
      "char": [
        62,
        63,
        109,
        120
      ],
      "short": [
        8,
        62,
        63,
        109,
        120,
        148,
        167,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        8,
        62,
        63,
        109,
        120,
        148,
        167,
        4096
      ],
      "str": [
        "+xml",
        ";",
        "<\\?xml.*encoding[\\s]*=[\\s]*((?:\".[^\"]*\")|(?:'.[^']*'))",
        "CP1047",
        "UTF-16",
        "UTF-16BE",
        "UTF-16LE",
        "UTF-8",
        "application/",
        "application/xml",
        "application/xml-dtd",
        "application/xml-external-parsed-entity",
        "text/",
        "text/html",
        "text/xml",
        "text/xml-external-parsed-entity"
      ]
    },
    "parents": [
      "java.io.Reader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.input.XmlStreamReaderException",
    "setters": [],
    "getters": [
      {
        "name": "getXmlEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "xmlEncoding"
      },
      {
        "name": "getBomEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "bomEncoding"
      },
      {
        "name": "getXmlGuessEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "xmlGuessEncoding"
      },
      {
        "name": "getContentTypeMime",
        "desc": "()Ljava/lang/String;",
        "field": "contentTypeMime"
      },
      {
        "name": "getContentTypeEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "contentTypeEncoding"
      }
    ],
    "observers": [
      {
        "name": "getXmlEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBomEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getXmlGuessEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentTypeMime",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentTypeEncoding",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getXmlEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getBomEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getXmlGuessEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentTypeMime",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentTypeEncoding",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.IOException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.monitor.FileAlterationListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.monitor.FileAlterationListenerAdaptor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "onFileDelete",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "onStart",
        "desc": "(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V"
      },
      {
        "name": "onStop",
        "desc": "(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V"
      },
      {
        "name": "onDirectoryChange",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "onFileChange",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "onDirectoryDelete",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "onFileCreate",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "onDirectoryCreate",
        "desc": "(Ljava/io/File;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.io.monitor.FileAlterationListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.monitor.FileAlterationMonitor",
    "setters": [
      {
        "name": "stop",
        "desc": "(J)V",
        "field": "running"
      },
      {
        "name": "setThreadFactory",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)V",
        "field": "threadFactory"
      }
    ],
    "getters": [
      {
        "name": "getInterval",
        "desc": "()J",
        "field": "interval"
      },
      {
        "name": "getObservers",
        "desc": "()Ljava/lang/Iterable;",
        "field": "observers"
      }
    ],
    "observers": [
      {
        "name": "getObservers",
        "desc": "()Ljava/lang/Iterable;"
      },
      {
        "name": "getInterval",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "stop",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V"
      },
      {
        "name": "getObservers",
        "desc": "()Ljava/lang/Iterable;"
      },
      {
        "name": "getInterval",
        "desc": "()J"
      },
      {
        "name": "setThreadFactory",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addObserver",
        "desc": "(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V"
      },
      {
        "name": "removeObserver",
        "desc": "(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V"
      },
      {
        "name": "start",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      },
      {
        "name": "run",
        "desc": "()V"
      },
      {
        "name": "stop",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        10000
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.monitor.FileAlterationObserver",
    "setters": [],
    "getters": [
      {
        "name": "getListeners",
        "desc": "()Ljava/lang/Iterable;",
        "field": "listeners"
      },
      {
        "name": "getFileFilter",
        "desc": "()Ljava/io/FileFilter;",
        "field": "fileFilter"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getListeners",
        "desc": "()Ljava/lang/Iterable;"
      },
      {
        "name": "getDirectory",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getFileFilter",
        "desc": "()Ljava/io/FileFilter;"
      }
    ],
    "testableMethods": [
      {
        "name": "addListener",
        "desc": "(Lorg/apache/commons/io/monitor/FileAlterationListener;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "removeListener",
        "desc": "(Lorg/apache/commons/io/monitor/FileAlterationListener;)V"
      },
      {
        "name": "initialize",
        "desc": "()V"
      },
      {
        "name": "checkAndNotify",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "getFileFilter",
        "desc": "()Ljava/io/FileFilter;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "getListeners",
        "desc": "()Ljava/lang/Iterable;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/io/FileFilter;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getDirectory",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "destroy",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/io/FileFilter;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.monitor.FileEntry",
    "setters": [
      {
        "name": "setLength",
        "desc": "(J)V",
        "field": "length"
      },
      {
        "name": "setChildren",
        "desc": "([Lorg/apache/commons/io/monitor/FileEntry;)V",
        "field": "children"
      },
      {
        "name": "refresh",
        "desc": "(Ljava/io/File;)Z",
        "field": "name"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "name"
      },
      {
        "name": "setExists",
        "desc": "(Z)V",
        "field": "exists"
      },
      {
        "name": "setDirectory",
        "desc": "(Z)V",
        "field": "directory"
      },
      {
        "name": "setLastModified",
        "desc": "(J)V",
        "field": "lastModified"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getParent",
        "desc": "()Lorg/apache/commons/io/monitor/FileEntry;",
        "field": "parent"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;",
        "field": "file"
      },
      {
        "name": "getLength",
        "desc": "()J",
        "field": "length"
      },
      {
        "name": "isDirectory",
        "desc": "()Z",
        "field": "directory"
      },
      {
        "name": "getLastModified",
        "desc": "()J",
        "field": "lastModified"
      },
      {
        "name": "isExists",
        "desc": "()Z",
        "field": "exists"
      }
    ],
    "observers": [
      {
        "name": "getLevel",
        "desc": "()I"
      },
      {
        "name": "getChildren",
        "desc": "()[Lorg/apache/commons/io/monitor/FileEntry;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParent",
        "desc": "()Lorg/apache/commons/io/monitor/FileEntry;"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getLength",
        "desc": "()J"
      },
      {
        "name": "isDirectory",
        "desc": "()Z"
      },
      {
        "name": "getLastModified",
        "desc": "()J"
      },
      {
        "name": "isExists",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V"
      },
      {
        "name": "setLength",
        "desc": "(J)V"
      },
      {
        "name": "getChildren",
        "desc": "()[Lorg/apache/commons/io/monitor/FileEntry;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "refresh",
        "desc": "(Ljava/io/File;)Z"
      },
      {
        "name": "newChildInstance",
        "desc": "(Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getLength",
        "desc": "()J"
      },
      {
        "name": "setExists",
        "desc": "(Z)V"
      },
      {
        "name": "getLastModified",
        "desc": "()J"
      },
      {
        "name": "setDirectory",
        "desc": "(Z)V"
      },
      {
        "name": "setLastModified",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "getLevel",
        "desc": "()I"
      },
      {
        "name": "setChildren",
        "desc": "([Lorg/apache/commons/io/monitor/FileEntry;)V"
      },
      {
        "name": "getParent",
        "desc": "()Lorg/apache/commons/io/monitor/FileEntry;"
      },
      {
        "name": "isDirectory",
        "desc": "()Z"
      },
      {
        "name": "isExists",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.BrokenOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/IOException;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.OutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.ByteArrayOutputStream",
    "setters": [
      {
        "name": "write",
        "desc": "(Ljava/io/InputStream;)I",
        "field": "count"
      },
      {
        "name": "write",
        "desc": "([BII)V",
        "field": "count"
      },
      {
        "name": "write",
        "desc": "(I)V",
        "field": "count"
      }
    ],
    "getters": [
      {
        "name": "size",
        "desc": "()I",
        "field": "count"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "writeTo",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "write",
        "desc": "([BII)V"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "toBufferedInputStream",
        "desc": "(Ljava/io/InputStream;)Ljava/io/InputStream;"
      },
      {
        "name": "write",
        "desc": "(Ljava/io/InputStream;)I"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        -1,
        0,
        1,
        1024
      ]
    },
    "parents": [
      "java.io.OutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.CloseShieldOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.output.ProxyOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.ClosedOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "str": [
        "write("
      ]
    },
    "parents": [
      "java.io.OutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.CountingOutputStream",
    "setters": [],
    "getters": [
      {
        "name": "getByteCount",
        "desc": "()J",
        "field": "count"
      }
    ],
    "observers": [
      {
        "name": "getByteCount",
        "desc": "()J"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "resetByteCount",
        "desc": "()J"
      },
      {
        "name": "getByteCount",
        "desc": "()J"
      },
      {
        "name": "beforeWrite",
        "desc": "(I)V"
      },
      {
        "name": "resetCount",
        "desc": "()I"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "long": [
        0,
        2147483647
      ]
    },
    "parents": [
      "org.apache.commons.io.output.ProxyOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.DeferredFileOutputStream",
    "setters": [],
    "getters": [
      {
        "name": "getStream",
        "desc": "()Ljava/io/OutputStream;",
        "field": "currentOutputStream"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;",
        "field": "outputFile"
      }
    ],
    "observers": [
      {
        "name": "isInMemory",
        "desc": "()Z"
      },
      {
        "name": "getData",
        "desc": "()[B"
      },
      {
        "name": "getStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILjava/io/File;)V"
      },
      {
        "name": "isInMemory",
        "desc": "()Z"
      },
      {
        "name": "getData",
        "desc": "()[B"
      },
      {
        "name": "getStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "thresholdReached",
        "desc": "()V"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V"
      },
      {
        "name": "writeTo",
        "desc": "(Ljava/io/OutputStream;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.io.output.ThresholdingOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.DemuxOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "bindStream",
        "desc": "(Ljava/io/OutputStream;)Ljava/io/OutputStream;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.OutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.FileWriterWithEncoding",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V"
      },
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/lang/String;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/nio/charset/Charset;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/nio/charset/Charset;Z)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/lang/String;Z)V"
      },
      {
        "name": "write",
        "desc": "([C)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.io.Writer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.LockableFileWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/lang/String;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;ZLjava/lang/String;)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Z)V"
      },
      {
        "name": "write",
        "desc": "([C)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;ZLjava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ".lck",
        "java.io.tmpdir"
      ]
    },
    "parents": [
      "java.io.Writer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.NullOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "([B)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.OutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.NullWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "append",
        "desc": "(C)Ljava/io/Writer;"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;II)Ljava/io/Writer;"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "([C)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;)Ljava/io/Writer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.Writer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.ProxyOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "handleIOException",
        "desc": "(Ljava/io/IOException;)V"
      },
      {
        "name": "afterWrite",
        "desc": "(I)V"
      },
      {
        "name": "write",
        "desc": "([B)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "beforeWrite",
        "desc": "(I)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.FilterOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.ProxyWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "afterWrite",
        "desc": "(I)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "beforeWrite",
        "desc": "(I)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;)Ljava/io/Writer;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;)V"
      },
      {
        "name": "append",
        "desc": "(C)Ljava/io/Writer;"
      },
      {
        "name": "handleIOException",
        "desc": "(Ljava/io/IOException;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;II)Ljava/io/Writer;"
      },
      {
        "name": "write",
        "desc": "([C)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.FilterWriter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.StringBuilderWriter",
    "setters": [],
    "getters": [
      {
        "name": "getBuilder",
        "desc": "()Ljava/lang/StringBuilder;",
        "field": "builder"
      }
    ],
    "observers": [
      {
        "name": "getBuilder",
        "desc": "()Ljava/lang/StringBuilder;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/StringBuilder;)V"
      },
      {
        "name": "getBuilder",
        "desc": "()Ljava/lang/StringBuilder;"
      },
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(C)Ljava/io/Writer;"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;II)Ljava/io/Writer;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;)Ljava/io/Writer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.Writer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.TaggedOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "handleIOException",
        "desc": "(Ljava/io/IOException;)V"
      },
      {
        "name": "isCauseOf",
        "desc": "(Ljava/lang/Exception;)Z"
      },
      {
        "name": "throwIfCauseOf",
        "desc": "(Ljava/lang/Exception;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.output.ProxyOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.TeeOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;Ljava/io/OutputStream;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "([B)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.io.output.ProxyOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.ThresholdingOutputStream",
    "setters": [
      {
        "name": "write",
        "desc": "([B)V",
        "field": "written"
      },
      {
        "name": "write",
        "desc": "([BII)V",
        "field": "written"
      },
      {
        "name": "write",
        "desc": "(I)V",
        "field": "written"
      }
    ],
    "getters": [
      {
        "name": "getThreshold",
        "desc": "()I",
        "field": "threshold"
      },
      {
        "name": "getByteCount",
        "desc": "()J",
        "field": "written"
      }
    ],
    "observers": [
      {
        "name": "getByteCount",
        "desc": "()J"
      },
      {
        "name": "getThreshold",
        "desc": "()I"
      },
      {
        "name": "isThresholdExceeded",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0,
        1
      ]
    },
    "parents": [
      "java.io.OutputStream"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.WriterOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "write",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;Ljava/lang/String;IZ)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;Ljava/lang/String;)V"
      },
      {
        "name": "write",
        "desc": "([B)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V"
      }
    ],
    "dictionary": {
      "short": [
        128,
        1024
      ],
      "int": [
        0,
        1,
        128,
        1024
      ],
      "str": [
        "?"
      ]
    },
    "parents": [
      "java.io.OutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.io.output.XmlStreamWriter",
    "setters": [],
    "getters": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "encoding"
      },
      {
        "name": "getDefaultEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "defaultEncoding"
      }
    ],
    "observers": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDefaultEncoding",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;Ljava/lang/String;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "getDefaultEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      }
    ],
    "dictionary": {
      "short": [
        4096
      ],
      "int": [
        0,
        1,
        5,
        4096
      ],
      "str": [
        "<?xml",
        "?>",
        "UTF-8"
      ]
    },
    "parents": [
      "java.io.Writer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.AnnotationUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "(Ljava/lang/annotation/Annotation;)I"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/annotation/Annotation;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z"
      },
      {
        "name": "isValidAnnotationMemberType",
        "desc": "(Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        127
      ],
      "short": [
        127
      ],
      "int": [
        0,
        1,
        127
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.AnnotationUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "",
        "[",
        "]"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ArrayUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isSorted",
        "desc": "([J)Z"
      },
      {
        "name": "contains",
        "desc": "([CC)Z"
      },
      {
        "name": "indexOf",
        "desc": "([DDID)I"
      },
      {
        "name": "toArray",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "reverse",
        "desc": "([FII)V"
      },
      {
        "name": "removeElement",
        "desc": "([SS)[S"
      },
      {
        "name": "addAll",
        "desc": "([C[C)[C"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Long;)[Ljava/lang/Long;"
      },
      {
        "name": "contains",
        "desc": "([SS)Z"
      },
      {
        "name": "subarray",
        "desc": "([DII)[D"
      },
      {
        "name": "add",
        "desc": "([CIC)[C"
      },
      {
        "name": "lastIndexOf",
        "desc": "([JJ)I"
      },
      {
        "name": "removeElements",
        "desc": "([C[C)[C"
      },
      {
        "name": "isSorted",
        "desc": "([Z)Z"
      },
      {
        "name": "indexOf",
        "desc": "([DD)I"
      },
      {
        "name": "isEmpty",
        "desc": "([Ljava/lang/Object;)Z"
      },
      {
        "name": "isSameType",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([ZZ)I"
      },
      {
        "name": "clone",
        "desc": "([J)[J"
      },
      {
        "name": "subarray",
        "desc": "([FII)[F"
      },
      {
        "name": "contains",
        "desc": "([BB)Z"
      },
      {
        "name": "toObject",
        "desc": "([I)[Ljava/lang/Integer;"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Byte;)[Ljava/lang/Byte;"
      },
      {
        "name": "isNotEmpty",
        "desc": "([F)Z"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Boolean;Z)[Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([BBI)I"
      },
      {
        "name": "reverse",
        "desc": "([JII)V"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Long;J)[J"
      },
      {
        "name": "nullToEmpty",
        "desc": "([F)[F"
      },
      {
        "name": "remove",
        "desc": "([Ljava/lang/Object;I)[Ljava/lang/Object;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Byte;B)[B"
      },
      {
        "name": "isSorted",
        "desc": "([B)Z"
      },
      {
        "name": "reverse",
        "desc": "([BII)V"
      },
      {
        "name": "indexOf",
        "desc": "([FFI)I"
      },
      {
        "name": "isEmpty",
        "desc": "([I)Z"
      },
      {
        "name": "add",
        "desc": "([JJ)[J"
      },
      {
        "name": "isSorted",
        "desc": "([I)Z"
      },
      {
        "name": "subarray",
        "desc": "([ZII)[Z"
      },
      {
        "name": "add",
        "desc": "([III)[I"
      },
      {
        "name": "toObject",
        "desc": "([J)[Ljava/lang/Long;"
      },
      {
        "name": "removeElements",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "removeElement",
        "desc": "([II)[I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Short;)[Ljava/lang/Short;"
      },
      {
        "name": "subarray",
        "desc": "([BII)[B"
      },
      {
        "name": "isSameLength",
        "desc": "([J[J)Z"
      },
      {
        "name": "indexOf",
        "desc": "([FF)I"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Byte;)[B"
      },
      {
        "name": "reverse",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "removeElement",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "indexOf",
        "desc": "([ZZI)I"
      },
      {
        "name": "clone",
        "desc": "([D)[D"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Boolean;)[Z"
      },
      {
        "name": "isSorted",
        "desc": "([Ljava/lang/Comparable;)Z"
      },
      {
        "name": "removeElement",
        "desc": "([JJ)[J"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Long;)[J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "([ZIZ)[Z"
      },
      {
        "name": "contains",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "add",
        "desc": "([FIF)[F"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Short;)[S"
      },
      {
        "name": "removeAll",
        "desc": "([I[I)[I"
      },
      {
        "name": "clone",
        "desc": "([I)[I"
      },
      {
        "name": "reverse",
        "desc": "([B)V"
      },
      {
        "name": "indexOf",
        "desc": "([SSI)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Float;)[Ljava/lang/Float;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Double;)[D"
      },
      {
        "name": "remove",
        "desc": "([JI)[J"
      },
      {
        "name": "lastIndexOf",
        "desc": "([FF)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "([ZZI)I"
      },
      {
        "name": "removeAll",
        "desc": "([D[I)[D"
      },
      {
        "name": "removeAll",
        "desc": "(Ljava/lang/Object;[I)Ljava/lang/Object;"
      },
      {
        "name": "add",
        "desc": "([SIS)[S"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Character;C)[C"
      },
      {
        "name": "isSameLength",
        "desc": "([S[S)Z"
      },
      {
        "name": "remove",
        "desc": "([SI)[S"
      },
      {
        "name": "indexOf",
        "desc": "([DDD)I"
      },
      {
        "name": "clone",
        "desc": "([F)[F"
      },
      {
        "name": "reverse",
        "desc": "([Z)V"
      },
      {
        "name": "removeElements",
        "desc": "([S[S)[S"
      },
      {
        "name": "indexOf",
        "desc": "([II)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([J)[J"
      },
      {
        "name": "removeAll",
        "desc": "(Ljava/lang/Object;Ljava/util/BitSet;)Ljava/lang/Object;"
      },
      {
        "name": "addAll",
        "desc": "([B[B)[B"
      },
      {
        "name": "clone",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "lastIndexOf",
        "desc": "([DDD)I"
      },
      {
        "name": "addAll",
        "desc": "([S[S)[S"
      },
      {
        "name": "reverse",
        "desc": "([J)V"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Z)[Z"
      },
      {
        "name": "toObject",
        "desc": "([D)[Ljava/lang/Double;"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "remove",
        "desc": "([DI)[D"
      },
      {
        "name": "lastIndexOf",
        "desc": "([SSI)I"
      },
      {
        "name": "indexOf",
        "desc": "([JJ)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([I)[I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "reverse",
        "desc": "([Ljava/lang/Object;II)V"
      },
      {
        "name": "contains",
        "desc": "([DDD)Z"
      },
      {
        "name": "clone",
        "desc": "([Z)[Z"
      },
      {
        "name": "indexOf",
        "desc": "([ZZ)I"
      },
      {
        "name": "add",
        "desc": "([SS)[S"
      },
      {
        "name": "toObject",
        "desc": "([C)[Ljava/lang/Character;"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Double;D)[D"
      },
      {
        "name": "isSameLength",
        "desc": "([B[B)Z"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Float;F)[F"
      },
      {
        "name": "lastIndexOf",
        "desc": "([II)I"
      },
      {
        "name": "isNotEmpty",
        "desc": "([I)Z"
      },
      {
        "name": "subarray",
        "desc": "([SII)[S"
      },
      {
        "name": "nullToEmpty",
        "desc": "([D)[D"
      },
      {
        "name": "isEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "reverse",
        "desc": "([I)V"
      },
      {
        "name": "isEmpty",
        "desc": "([F)Z"
      },
      {
        "name": "remove",
        "desc": "([II)[I"
      },
      {
        "name": "addAll",
        "desc": "([J[J)[J"
      },
      {
        "name": "add",
        "desc": "([JIJ)[J"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Double;)[Ljava/lang/Double;"
      },
      {
        "name": "reverse",
        "desc": "([D)V"
      },
      {
        "name": "reverse",
        "desc": "([ZII)V"
      },
      {
        "name": "lastIndexOf",
        "desc": "([BB)I"
      },
      {
        "name": "add",
        "desc": "([FF)[F"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "toObject",
        "desc": "([B)[Ljava/lang/Byte;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isSameLength",
        "desc": "([Z[Z)Z"
      },
      {
        "name": "removeAll",
        "desc": "([J[I)[J"
      },
      {
        "name": "nullToEmpty",
        "desc": "([C)[C"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Short;S)[S"
      },
      {
        "name": "clone",
        "desc": "([B)[B"
      },
      {
        "name": "removeElements",
        "desc": "([J[J)[J"
      },
      {
        "name": "nullToEmpty",
        "desc": "([S)[S"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Integer;)[I"
      },
      {
        "name": "reverse",
        "desc": "([DII)V"
      },
      {
        "name": "subarray",
        "desc": "([CII)[C"
      },
      {
        "name": "contains",
        "desc": "([ZZ)Z"
      },
      {
        "name": "isSameLength",
        "desc": "([F[F)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([CC)I"
      },
      {
        "name": "contains",
        "desc": "([JJ)Z"
      },
      {
        "name": "isNotEmpty",
        "desc": "([J)Z"
      },
      {
        "name": "hashCode",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "([SS)I"
      },
      {
        "name": "toObject",
        "desc": "([S)[Ljava/lang/Short;"
      },
      {
        "name": "removeElements",
        "desc": "([B[B)[B"
      },
      {
        "name": "isSorted",
        "desc": "([F)Z"
      },
      {
        "name": "reverse",
        "desc": "([SII)V"
      },
      {
        "name": "isNotEmpty",
        "desc": "([Z)Z"
      },
      {
        "name": "contains",
        "desc": "([II)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([DDID)I"
      },
      {
        "name": "clone",
        "desc": "([S)[S"
      },
      {
        "name": "reverse",
        "desc": "([C)V"
      },
      {
        "name": "add",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "removeElement",
        "desc": "([ZZ)[Z"
      },
      {
        "name": "addAll",
        "desc": "([D[D)[D"
      },
      {
        "name": "lastIndexOf",
        "desc": "([DD)I"
      },
      {
        "name": "remove",
        "desc": "([ZI)[Z"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Boolean;)[Ljava/lang/Boolean;"
      },
      {
        "name": "isNotEmpty",
        "desc": "([B)Z"
      },
      {
        "name": "isSameLength",
        "desc": "([C[C)Z"
      },
      {
        "name": "removeElements",
        "desc": "([D[D)[D"
      },
      {
        "name": "remove",
        "desc": "([CI)[C"
      },
      {
        "name": "add",
        "desc": "([BIB)[B"
      },
      {
        "name": "isNotEmpty",
        "desc": "([Ljava/lang/Object;)Z"
      },
      {
        "name": "indexOf",
        "desc": "([JJI)I"
      },
      {
        "name": "isNotEmpty",
        "desc": "([S)Z"
      },
      {
        "name": "removeAll",
        "desc": "([Ljava/lang/Object;[I)[Ljava/lang/Object;"
      },
      {
        "name": "removeAll",
        "desc": "([C[I)[C"
      },
      {
        "name": "indexOf",
        "desc": "([III)I"
      },
      {
        "name": "reverse",
        "desc": "([S)V"
      },
      {
        "name": "add",
        "desc": "([ZZ)[Z"
      },
      {
        "name": "removeAll",
        "desc": "([F[I)[F"
      },
      {
        "name": "isEmpty",
        "desc": "([D)Z"
      },
      {
        "name": "add",
        "desc": "([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "indexOf",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;I)I"
      },
      {
        "name": "isSameLength",
        "desc": "([I[I)Z"
      },
      {
        "name": "add",
        "desc": "([CC)[C"
      },
      {
        "name": "reverse",
        "desc": "([F)V"
      },
      {
        "name": "isEmpty",
        "desc": "([C)Z"
      },
      {
        "name": "isSameLength",
        "desc": "([D[D)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([DDI)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Integer;)[Ljava/lang/Integer;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Integer;I)[I"
      },
      {
        "name": "add",
        "desc": "([II)[I"
      },
      {
        "name": "isNotEmpty",
        "desc": "([C)Z"
      },
      {
        "name": "toObject",
        "desc": "([F)[Ljava/lang/Float;"
      },
      {
        "name": "contains",
        "desc": "([FF)Z"
      },
      {
        "name": "subarray",
        "desc": "([III)[I"
      },
      {
        "name": "lastIndexOf",
        "desc": "([JJI)I"
      },
      {
        "name": "addAll",
        "desc": "([Z[Z)[Z"
      },
      {
        "name": "reverse",
        "desc": "([III)V"
      },
      {
        "name": "remove",
        "desc": "([FI)[F"
      },
      {
        "name": "removeAll",
        "desc": "([S[I)[S"
      },
      {
        "name": "reverse",
        "desc": "([CII)V"
      },
      {
        "name": "getLength",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "toObject",
        "desc": "([Z)[Ljava/lang/Boolean;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Float;)[F"
      },
      {
        "name": "addAll",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "lastIndexOf",
        "desc": "([III)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([B)[B"
      },
      {
        "name": "isEmpty",
        "desc": "([S)Z"
      },
      {
        "name": "clone",
        "desc": "([C)[C"
      },
      {
        "name": "removeElement",
        "desc": "([FF)[F"
      },
      {
        "name": "isSorted",
        "desc": "([D)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;I)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Character;)[Ljava/lang/Character;"
      },
      {
        "name": "isEmpty",
        "desc": "([B)Z"
      },
      {
        "name": "add",
        "desc": "([DID)[D"
      },
      {
        "name": "removeAll",
        "desc": "([Z[I)[Z"
      },
      {
        "name": "addAll",
        "desc": "([I[I)[I"
      },
      {
        "name": "isSorted",
        "desc": "([S)Z"
      },
      {
        "name": "removeAll",
        "desc": "([B[I)[B"
      },
      {
        "name": "indexOf",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "add",
        "desc": "([DD)[D"
      },
      {
        "name": "removeElements",
        "desc": "([Z[Z)[Z"
      },
      {
        "name": "isNotEmpty",
        "desc": "([D)Z"
      },
      {
        "name": "removeElements",
        "desc": "([I[I)[I"
      },
      {
        "name": "indexOf",
        "desc": "([DDI)I"
      },
      {
        "name": "indexOf",
        "desc": "([BB)I"
      },
      {
        "name": "subarray",
        "desc": "([Ljava/lang/Object;II)[Ljava/lang/Object;"
      },
      {
        "name": "lastIndexOf",
        "desc": "([CCI)I"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Character;)[C"
      },
      {
        "name": "removeElement",
        "desc": "([DD)[D"
      },
      {
        "name": "isSameLength",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([FFI)I"
      },
      {
        "name": "contains",
        "desc": "([DD)Z"
      },
      {
        "name": "isSorted",
        "desc": "([Ljava/lang/Object;Ljava/util/Comparator;)Z"
      },
      {
        "name": "indexOf",
        "desc": "([CCI)I"
      },
      {
        "name": "remove",
        "desc": "([BI)[B"
      },
      {
        "name": "addAll",
        "desc": "([F[F)[F"
      },
      {
        "name": "add",
        "desc": "([BB)[B"
      },
      {
        "name": "isEmpty",
        "desc": "([Z)Z"
      },
      {
        "name": "removeElement",
        "desc": "([CC)[C"
      },
      {
        "name": "indexOf",
        "desc": "([CC)I"
      },
      {
        "name": "removeElements",
        "desc": "([F[F)[F"
      },
      {
        "name": "indexOf",
        "desc": "([SS)I"
      },
      {
        "name": "subarray",
        "desc": "([JII)[J"
      },
      {
        "name": "toMap",
        "desc": "([Ljava/lang/Object;)Ljava/util/Map;"
      },
      {
        "name": "lastIndexOf",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "indexOf",
        "desc": "([BBI)I"
      },
      {
        "name": "isSorted",
        "desc": "([C)Z"
      },
      {
        "name": "removeElement",
        "desc": "([BB)[B"
      },
      {
        "name": "isEmpty",
        "desc": "([J)Z"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        2
      ],
      "double": [
        1.5
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ArrayUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.BitField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getShortValue",
        "desc": "(S)S"
      },
      {
        "name": "isSet",
        "desc": "(I)Z"
      },
      {
        "name": "setShortValue",
        "desc": "(SS)S"
      },
      {
        "name": "setByteBoolean",
        "desc": "(BZ)B"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "setShortBoolean",
        "desc": "(SZ)S"
      },
      {
        "name": "set",
        "desc": "(I)I"
      },
      {
        "name": "isAllSet",
        "desc": "(I)Z"
      },
      {
        "name": "setBoolean",
        "desc": "(IZ)I"
      },
      {
        "name": "clearShort",
        "desc": "(S)S"
      },
      {
        "name": "clearByte",
        "desc": "(B)B"
      },
      {
        "name": "clear",
        "desc": "(I)I"
      },
      {
        "name": "setShort",
        "desc": "(S)S"
      },
      {
        "name": "setByte",
        "desc": "(B)B"
      },
      {
        "name": "getValue",
        "desc": "(I)I"
      },
      {
        "name": "getShortRawValue",
        "desc": "(S)S"
      },
      {
        "name": "setValue",
        "desc": "(II)I"
      },
      {
        "name": "getRawValue",
        "desc": "(I)I"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.BooleanUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "toInteger",
        "desc": "(Ljava/lang/Boolean;III)I"
      },
      {
        "name": "toBoolean",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "isTrue",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "toBooleanDefaultIfNull",
        "desc": "(Ljava/lang/Boolean;Z)Z"
      },
      {
        "name": "toIntegerObject",
        "desc": "(Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;"
      },
      {
        "name": "xor",
        "desc": "([Z)Z"
      },
      {
        "name": "toInteger",
        "desc": "(Z)I"
      },
      {
        "name": "toStringTrueFalse",
        "desc": "(Z)Ljava/lang/String;"
      },
      {
        "name": "negate",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/Boolean;"
      },
      {
        "name": "toBoolean",
        "desc": "(III)Z"
      },
      {
        "name": "toStringOnOff",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/String;"
      },
      {
        "name": "isNotTrue",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "toInteger",
        "desc": "(ZII)I"
      },
      {
        "name": "toBoolean",
        "desc": "(I)Z"
      },
      {
        "name": "toBooleanObject",
        "desc": "(I)Ljava/lang/Boolean;"
      },
      {
        "name": "and",
        "desc": "([Ljava/lang/Boolean;)Ljava/lang/Boolean;"
      },
      {
        "name": "toBooleanObject",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "isNotFalse",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "toBooleanObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "toString",
        "desc": "(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "xor",
        "desc": "([Ljava/lang/Boolean;)Ljava/lang/Boolean;"
      },
      {
        "name": "toBooleanObject",
        "desc": "(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Boolean;"
      },
      {
        "name": "or",
        "desc": "([Ljava/lang/Boolean;)Ljava/lang/Boolean;"
      },
      {
        "name": "toIntegerObject",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/Integer;"
      },
      {
        "name": "toStringYesNo",
        "desc": "(Z)Ljava/lang/String;"
      },
      {
        "name": "isFalse",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toStringYesNo",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/String;"
      },
      {
        "name": "toBooleanObject",
        "desc": "(Ljava/lang/Integer;)Ljava/lang/Boolean;"
      },
      {
        "name": "toBoolean",
        "desc": "(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Z"
      },
      {
        "name": "and",
        "desc": "([Z)Z"
      },
      {
        "name": "toIntegerObject",
        "desc": "(Z)Ljava/lang/Integer;"
      },
      {
        "name": "toBoolean",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "toBooleanObject",
        "desc": "(IIII)Ljava/lang/Boolean;"
      },
      {
        "name": "toIntegerObject",
        "desc": "(ZLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "toBoolean",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "or",
        "desc": "([Z)Z"
      },
      {
        "name": "toStringTrueFalse",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/String;"
      },
      {
        "name": "compare",
        "desc": "(ZZ)I"
      },
      {
        "name": "toStringOnOff",
        "desc": "(Z)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        65,
        69,
        70,
        76,
        78,
        79,
        82,
        83,
        84,
        85,
        89,
        97,
        101,
        102,
        108,
        110,
        111,
        114,
        115,
        116,
        117,
        121
      ],
      "char": [
        65,
        69,
        70,
        76,
        78,
        79,
        82,
        83,
        84,
        85,
        89,
        97,
        101,
        102,
        108,
        110,
        111,
        114,
        115,
        116,
        117,
        121
      ],
      "short": [
        65,
        69,
        70,
        76,
        78,
        79,
        82,
        83,
        84,
        85,
        89,
        97,
        101,
        102,
        108,
        110,
        111,
        114,
        115,
        116,
        117,
        121
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        65,
        69,
        70,
        76,
        78,
        79,
        82,
        83,
        84,
        85,
        89,
        97,
        101,
        102,
        108,
        110,
        111,
        114,
        115,
        116,
        117,
        121
      ],
      "str": [
        "true"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharEncoding",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isSupported",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharRange",
    "setters": [],
    "getters": [
      {
        "name": "getEnd",
        "desc": "()C",
        "field": "end"
      },
      {
        "name": "getStart",
        "desc": "()C",
        "field": "start"
      },
      {
        "name": "isNegated",
        "desc": "()Z",
        "field": "negated"
      }
    ],
    "observers": [
      {
        "name": "getEnd",
        "desc": "()C"
      },
      {
        "name": "getStart",
        "desc": "()C"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "isNegated",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isNotIn",
        "desc": "(CC)Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "getEnd",
        "desc": "()C"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "isIn",
        "desc": "(CC)Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getStart",
        "desc": "()C"
      },
      {
        "name": "contains",
        "desc": "(Lorg/apache/commons/lang3/CharRange;)Z"
      },
      {
        "name": "contains",
        "desc": "(C)Z"
      },
      {
        "name": "isNot",
        "desc": "(C)Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "is",
        "desc": "(C)Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "isNegated",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        7
      ],
      "short": [
        7
      ],
      "int": [
        0,
        1,
        4,
        7,
        65535
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable",
      "java.io.Serializable"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharRange$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.CharRange",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharRange$CharacterIterator",
    "setters": [],
    "getters": [
      {
        "name": "hasNext",
        "desc": "()Z",
        "field": "hasNext"
      }
    ],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        65535
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "org.apache.commons.lang3.CharRange",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharSequenceUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;II)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;II)I"
      },
      {
        "name": "regionMatches",
        "desc": "(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toCharArray",
        "desc": "(Ljava/lang/CharSequence;)[C"
      },
      {
        "name": "subSequence",
        "desc": "(Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharSet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCharRanges",
        "desc": "()[Lorg/apache/commons/lang3/CharRange;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getInstance",
        "desc": "([Ljava/lang/String;)Lorg/apache/commons/lang3/CharSet;"
      },
      {
        "name": "getCharRanges",
        "desc": "()[Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "contains",
        "desc": "(C)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        45,
        94
      ],
      "char": [
        45,
        94
      ],
      "short": [
        45,
        94
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        45,
        94
      ],
      "str": [
        "0-9",
        "A-Z",
        "a-z",
        "a-zA-Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharSetUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "squeeze",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "containsAny",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Z"
      },
      {
        "name": "keep",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "delete",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "count",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)I"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isAsciiControl",
        "desc": "(C)Z"
      },
      {
        "name": "toCharacterObject",
        "desc": "(C)Ljava/lang/Character;"
      },
      {
        "name": "toIntValue",
        "desc": "(Ljava/lang/Character;I)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isAsciiNumeric",
        "desc": "(C)Z"
      },
      {
        "name": "isAsciiAlpha",
        "desc": "(C)Z"
      },
      {
        "name": "isAsciiAlphanumeric",
        "desc": "(C)Z"
      },
      {
        "name": "toChar",
        "desc": "(Ljava/lang/Character;C)C"
      },
      {
        "name": "isAsciiAlphaLower",
        "desc": "(C)Z"
      },
      {
        "name": "toCharacterObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Character;"
      },
      {
        "name": "toChar",
        "desc": "(Ljava/lang/String;)C"
      },
      {
        "name": "unicodeEscaped",
        "desc": "(C)Ljava/lang/String;"
      },
      {
        "name": "isAsciiPrintable",
        "desc": "(C)Z"
      },
      {
        "name": "isAscii",
        "desc": "(C)Z"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Character;)Ljava/lang/String;"
      },
      {
        "name": "toIntValue",
        "desc": "(C)I"
      },
      {
        "name": "isAsciiAlphaUpper",
        "desc": "(C)Z"
      },
      {
        "name": "toIntValue",
        "desc": "(Ljava/lang/Character;)I"
      },
      {
        "name": "toChar",
        "desc": "(Ljava/lang/Character;)C"
      },
      {
        "name": "unicodeEscaped",
        "desc": "(Ljava/lang/Character;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(C)Ljava/lang/String;"
      },
      {
        "name": "compare",
        "desc": "(CC)I"
      },
      {
        "name": "toChar",
        "desc": "(Ljava/lang/String;C)C"
      },
      {
        "name": "toIntValue",
        "desc": "(CI)I"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        16,
        32,
        48,
        57,
        65,
        90,
        97,
        122,
        127
      ],
      "char": [
        32,
        48,
        57,
        65,
        90,
        97,
        122
      ],
      "short": [
        6,
        16,
        32,
        48,
        57,
        65,
        90,
        97,
        122,
        127,
        128
      ],
      "int": [
        0,
        1,
        6,
        16,
        32,
        48,
        57,
        65,
        90,
        97,
        122,
        127,
        128
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassPathUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "toFullyQualifiedPath",
        "desc": "(Ljava/lang/Package;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "toFullyQualifiedPath",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "toFullyQualifiedName",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toFullyQualifiedName",
        "desc": "(Ljava/lang/Package;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "resourceName"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getPackageCanonicalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "convertClassesToClassNames",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "toClass",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Class;"
      },
      {
        "name": "hierarchy",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Iterable;"
      },
      {
        "name": "convertClassNamesToClasses",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "getAllInterfaces",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getPackageCanonicalName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;Z)Ljava/lang/Class;"
      },
      {
        "name": "getShortClassName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isAssignable",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Z"
      },
      {
        "name": "wrapperToPrimitive",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "primitivesToWrappers",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "isPrimitiveOrWrapper",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "isAssignable",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Class;Z)Z"
      },
      {
        "name": "hierarchy",
        "desc": "(Ljava/lang/Class;Lorg/apache/commons/lang3/ClassUtils$Interfaces;)Ljava/lang/Iterable;"
      },
      {
        "name": "getShortClassName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "wrappersToPrimitives",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "isAssignable",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Z)Z"
      },
      {
        "name": "getPublicMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAbbreviatedName",
        "desc": "(Ljava/lang/Class;I)Ljava/lang/String;"
      },
      {
        "name": "getAbbreviatedName",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "getSimpleName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getPackageCanonicalName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getShortCanonicalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getShortCanonicalName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/String;Z)Ljava/lang/Class;"
      },
      {
        "name": "getShortCanonicalName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "getSimpleName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getShortClassName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "primitiveToWrapper",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "getAllSuperclasses",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "isPrimitiveWrapper",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "isInnerClass",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "isAssignable",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        36,
        46,
        59,
        76,
        91
      ],
      "char": [
        36,
        46,
        59,
        76,
        91
      ],
      "short": [
        36,
        46,
        59,
        76,
        91
      ],
      "int": [
        -1,
        0,
        1,
        36,
        46,
        59,
        76,
        91
      ],
      "str": [
        "",
        ";",
        "L",
        "V",
        "[",
        "[]",
        "void"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$1$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$2",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$2$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$Interfaces",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "EXCLUDE",
        "INCLUDE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.ClassUtils",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.Conversion",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "intToHexDigitMsb0",
        "desc": "(I)C"
      },
      {
        "name": "binaryToLong",
        "desc": "([ZIJII)J"
      },
      {
        "name": "binaryBeMsb0ToHexDigit",
        "desc": "([ZI)C"
      },
      {
        "name": "intToByteArray",
        "desc": "(II[BII)[B"
      },
      {
        "name": "shortToByteArray",
        "desc": "(SI[BII)[B"
      },
      {
        "name": "longToHex",
        "desc": "(JILjava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "byteArrayToUuid",
        "desc": "([BI)Ljava/util/UUID;"
      },
      {
        "name": "byteToHex",
        "desc": "(BILjava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "hexDigitMsb0ToBinary",
        "desc": "(C)[Z"
      },
      {
        "name": "intToHex",
        "desc": "(IILjava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "hexDigitToInt",
        "desc": "(C)I"
      },
      {
        "name": "binaryToHexDigitMsb0_4bits",
        "desc": "([Z)C"
      },
      {
        "name": "hexDigitToBinary",
        "desc": "(C)[Z"
      },
      {
        "name": "longToByteArray",
        "desc": "(JI[BII)[B"
      },
      {
        "name": "hexToShort",
        "desc": "(Ljava/lang/String;ISII)S"
      },
      {
        "name": "hexToLong",
        "desc": "(Ljava/lang/String;IJII)J"
      },
      {
        "name": "hexDigitMsb0ToInt",
        "desc": "(C)I"
      },
      {
        "name": "shortArrayToLong",
        "desc": "([SIJII)J"
      },
      {
        "name": "shortArrayToInt",
        "desc": "([SIIII)I"
      },
      {
        "name": "intArrayToLong",
        "desc": "([IIJII)J"
      },
      {
        "name": "byteArrayToShort",
        "desc": "([BISII)S"
      },
      {
        "name": "intToHexDigit",
        "desc": "(I)C"
      },
      {
        "name": "byteArrayToInt",
        "desc": "([BIIII)I"
      },
      {
        "name": "binaryToHexDigit",
        "desc": "([ZI)C"
      },
      {
        "name": "intToBinary",
        "desc": "(II[ZII)[Z"
      },
      {
        "name": "intToShortArray",
        "desc": "(II[SII)[S"
      },
      {
        "name": "shortToHex",
        "desc": "(SILjava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "longToBinary",
        "desc": "(JI[ZII)[Z"
      },
      {
        "name": "uuidToByteArray",
        "desc": "(Ljava/util/UUID;[BII)[B"
      },
      {
        "name": "binaryToInt",
        "desc": "([ZIIII)I"
      },
      {
        "name": "longToIntArray",
        "desc": "(JI[III)[I"
      },
      {
        "name": "byteToBinary",
        "desc": "(BI[ZII)[Z"
      },
      {
        "name": "binaryToByte",
        "desc": "([ZIBII)B"
      },
      {
        "name": "hexToInt",
        "desc": "(Ljava/lang/String;IIII)I"
      },
      {
        "name": "binaryToHexDigit",
        "desc": "([Z)C"
      },
      {
        "name": "binaryBeMsb0ToHexDigit",
        "desc": "([Z)C"
      },
      {
        "name": "hexToByte",
        "desc": "(Ljava/lang/String;IBII)B"
      },
      {
        "name": "shortToBinary",
        "desc": "(SI[ZII)[Z"
      },
      {
        "name": "binaryToShort",
        "desc": "([ZISII)S"
      },
      {
        "name": "byteArrayToLong",
        "desc": "([BIJII)J"
      },
      {
        "name": "binaryToHexDigitMsb0_4bits",
        "desc": "([ZI)C"
      },
      {
        "name": "longToShortArray",
        "desc": "(JI[SII)[S"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        15,
        16,
        32,
        64,
        102
      ],
      "char": [
        32,
        64,
        102
      ],
      "short": [
        8,
        15,
        16,
        32,
        64,
        102
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        8,
        15,
        16,
        32,
        64,
        102
      ],
      "long": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.EnumUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generateBitVectors",
        "desc": "(Ljava/lang/Class;Ljava/lang/Iterable;)[J"
      },
      {
        "name": "processBitVector",
        "desc": "(Ljava/lang/Class;J)Ljava/util/EnumSet;"
      },
      {
        "name": "generateBitVectors",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Enum;)[J"
      },
      {
        "name": "processBitVectors",
        "desc": "(Ljava/lang/Class;[J)Ljava/util/EnumSet;"
      },
      {
        "name": "generateBitVector",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Enum;)J"
      },
      {
        "name": "isValidEnum",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Z"
      },
      {
        "name": "getEnumList",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getEnum",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;"
      },
      {
        "name": "generateBitVector",
        "desc": "(Ljava/lang/Class;Ljava/lang/Iterable;)J"
      },
      {
        "name": "getEnumMap",
        "desc": "(Ljava/lang/Class;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "byte": [
        64
      ],
      "char": [
        64
      ],
      "short": [
        64
      ],
      "int": [
        0,
        1,
        64
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.JavaVersion",
    "setters": [],
    "getters": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "get",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/JavaVersion;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getJavaVersion",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/JavaVersion;"
      },
      {
        "name": "atLeast",
        "desc": "(Lorg/apache/commons/lang3/JavaVersion;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10
      ],
      "short": [
        6,
        7,
        8,
        9,
        10
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "float": [
        0.0,
        0.9,
        1.1,
        1.2,
        1.3,
        1.4,
        1.5,
        1.6,
        1.7,
        1.8,
        1.9
      ],
      "double": [
        2.0
      ],
      "str": [
        "0.9",
        "1.1",
        "1.2",
        "1.3",
        "1.4",
        "1.5",
        "1.6",
        "1.7",
        "1.8",
        "1.9",
        "2.0",
        "JAVA_0_9",
        "JAVA_1_1",
        "JAVA_1_2",
        "JAVA_1_3",
        "JAVA_1_4",
        "JAVA_1_5",
        "JAVA_1_6",
        "JAVA_1_7",
        "JAVA_1_8",
        "JAVA_1_9",
        "JAVA_RECENT",
        "\\."
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.LocaleUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "toLocale",
        "desc": "(Ljava/lang/String;)Ljava/util/Locale;"
      },
      {
        "name": "availableLocaleList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "languagesByCountry",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "localeLookupList",
        "desc": "(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;"
      },
      {
        "name": "isAvailableLocale",
        "desc": "(Ljava/util/Locale;)Z"
      },
      {
        "name": "localeLookupList",
        "desc": "(Ljava/util/Locale;)Ljava/util/List;"
      },
      {
        "name": "availableLocaleSet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "countriesByLanguage",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "byte": [
        95
      ],
      "char": [
        95
      ],
      "short": [
        95
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        95
      ],
      "str": [
        "",
        "#"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.LocaleUtils$SyncAvoid",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.LocaleUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.NotImplementedException",
    "setters": [],
    "getters": [
      {
        "name": "getCode",
        "desc": "()Ljava/lang/String;",
        "field": "code"
      }
    ],
    "observers": [
      {
        "name": "getCode",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "getCode",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.UnsupportedOperationException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ObjectUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "min",
        "desc": "([Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "identityToString",
        "desc": "(Ljava/lang/StringBuilder;Ljava/lang/Object;)V"
      },
      {
        "name": "CONST",
        "desc": "(Z)Z"
      },
      {
        "name": "CONST_SHORT",
        "desc": "(I)S"
      },
      {
        "name": "firstNonNull",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Comparable;Ljava/lang/Comparable;)I"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "cloneIfPossible",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "CONST",
        "desc": "(D)D"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "identityToString",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;Ljava/lang/Object;)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "CONST",
        "desc": "(B)B"
      },
      {
        "name": "CONST",
        "desc": "(C)C"
      },
      {
        "name": "CONST",
        "desc": "(I)I"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I"
      },
      {
        "name": "CONST",
        "desc": "(F)F"
      },
      {
        "name": "median",
        "desc": "(Ljava/util/Comparator;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "identityToString",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/Object;)V"
      },
      {
        "name": "CONST",
        "desc": "(J)J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "identityToString",
        "desc": "(Ljava/lang/Appendable;Ljava/lang/Object;)V"
      },
      {
        "name": "median",
        "desc": "([Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "defaultIfNull",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "hashCodeMulti",
        "desc": "([Ljava/lang/Object;)I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "CONST_BYTE",
        "desc": "(I)B"
      },
      {
        "name": "notEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "identityToString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "max",
        "desc": "([Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "CONST",
        "desc": "(S)S"
      },
      {
        "name": "mode",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "CONST",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        64,
        127
      ],
      "char": [
        64
      ],
      "short": [
        -32768,
        -128,
        64,
        127,
        32767
      ],
      "int": [
        -32768,
        -128,
        0,
        1,
        64,
        127,
        32767
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ObjectUtils$Null",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "outerClass": "org.apache.commons.lang3.ObjectUtils",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.RandomStringUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "random",
        "desc": "(IIIZZ[C)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(IIIZZ[CLjava/util/Random;)Ljava/lang/String;"
      },
      {
        "name": "randomAscii",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "randomNumeric",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(ILjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "random",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "randomAlphanumeric",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "randomAlphabetic",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(IZZ)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(IIIZZ)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        32,
        55296,
        56191,
        56192,
        56319,
        56320,
        57343
      ],
      "str": [
        "",
        ")"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.RandomUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "nextFloat",
        "desc": "(FF)F"
      },
      {
        "name": "nextInt",
        "desc": "(II)I"
      },
      {
        "name": "nextBytes",
        "desc": "(I)[B"
      },
      {
        "name": "nextLong",
        "desc": "(JJ)J"
      },
      {
        "name": "nextDouble",
        "desc": "(DD)D"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ],
      "float": [
        0.0
      ],
      "double": [
        1.0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.Range",
    "setters": [],
    "getters": [
      {
        "name": "getMinimum",
        "desc": "()Ljava/lang/Object;",
        "field": "minimum"
      },
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;",
        "field": "comparator"
      },
      {
        "name": "getMaximum",
        "desc": "()Ljava/lang/Object;",
        "field": "maximum"
      }
    ],
    "observers": [
      {
        "name": "getMinimum",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMaximum",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isNaturalOrdering",
        "desc": "()Z"
      },
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMinimum",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "elementCompareTo",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "containsRange",
        "desc": "(Lorg/apache/commons/lang3/Range;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "isBeforeRange",
        "desc": "(Lorg/apache/commons/lang3/Range;)Z"
      },
      {
        "name": "isOverlappedBy",
        "desc": "(Lorg/apache/commons/lang3/Range;)Z"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "isStartedBy",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "between",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getMaximum",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isNaturalOrdering",
        "desc": "()Z"
      },
      {
        "name": "isAfterRange",
        "desc": "(Lorg/apache/commons/lang3/Range;)Z"
      },
      {
        "name": "isBefore",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isAfter",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "intersectionWith",
        "desc": "(Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "between",
        "desc": "(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "isEndedBy",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        -1,
        0,
        1,
        32
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.Range$ComparableComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "INSTANCE"
      ]
    },
    "parents": [
      "java.lang.Enum",
      "java.util.Comparator"
    ],
    "outerClass": "org.apache.commons.lang3.Range",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.SerializationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.SerializationUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "deserialize",
        "desc": "([B)Ljava/lang/Object;"
      },
      {
        "name": "deserialize",
        "desc": "(Ljava/io/InputStream;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "roundtrip",
        "desc": "(Ljava/io/Serializable;)Ljava/io/Serializable;"
      },
      {
        "name": "serialize",
        "desc": "(Ljava/io/Serializable;)[B"
      },
      {
        "name": "clone",
        "desc": "(Ljava/io/Serializable;)Ljava/io/Serializable;"
      },
      {
        "name": "serialize",
        "desc": "(Ljava/io/Serializable;Ljava/io/OutputStream;)V"
      }
    ],
    "dictionary": {
      "short": [
        512
      ],
      "int": [
        512
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resolveClass",
        "desc": "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V"
      }
    ],
    "dictionary": {
      "str": [
        "void"
      ]
    },
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "outerClass": "org.apache.commons.lang3.SerializationUtils",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.StringEscapeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "unescapeXml",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeXml",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeJson",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "escapeXml10",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeXml11",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeEcmaScript",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeCsv",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeJson",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeEcmaScript",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeHtml4",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeCsv",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeHtml3",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeHtml4",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeJava",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeJava",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeHtml3",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        32,
        127
      ],
      "char": [
        32
      ],
      "short": [
        6,
        7,
        8,
        32,
        127,
        134,
        159
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        32,
        127,
        134,
        159
      ],
      "str": [
        "",
        "/",
        "\\",
        "\\/",
        "\\\\",
        "￿"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.StringEscapeUtils$CsvEscaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        13,
        34
      ],
      "char": [
        34
      ],
      "short": [
        10,
        13,
        34
      ],
      "int": [
        2,
        3,
        4,
        10,
        13,
        34
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "outerClass": "org.apache.commons.lang3.StringEscapeUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        13,
        34
      ],
      "char": [
        34
      ],
      "short": [
        10,
        13,
        34
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        10,
        13,
        34
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "outerClass": "org.apache.commons.lang3.StringEscapeUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.StringUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "substring",
        "desc": "(Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "mid",
        "desc": "(Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "splitPreserveAllTokens",
        "desc": "(Ljava/lang/String;C)[Ljava/lang/String;"
      },
      {
        "name": "lowerCase",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "right",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "splitByWholeSeparatorPreserveAllTokens",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "substringAfterLast",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "splitPreserveAllTokens",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "reverse",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "startsWithIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "substringsBetween",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "containsNone",
        "desc": "(Ljava/lang/CharSequence;[C)Z"
      },
      {
        "name": "leftPad",
        "desc": "(Ljava/lang/String;IC)Ljava/lang/String;"
      },
      {
        "name": "isAsciiPrintable",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "abbreviateMiddle",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "strip",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "containsOnly",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)Z"
      },
      {
        "name": "lastIndexOfAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)I"
      },
      {
        "name": "isNoneEmpty",
        "desc": "([Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "stripAccents",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "containsAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "capitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "prependIfMissingIgnoreCase",
        "desc": "(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([CC)Ljava/lang/String;"
      },
      {
        "name": "splitByWholeSeparator",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;"
      },
      {
        "name": "stripAll",
        "desc": "([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "swapCase",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isWhitespace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "containsOnly",
        "desc": "(Ljava/lang/CharSequence;[C)Z"
      },
      {
        "name": "replaceChars",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "indexOfAnyBut",
        "desc": "(Ljava/lang/CharSequence;[C)I"
      },
      {
        "name": "endsWithAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "stripToNull",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([BC)Ljava/lang/String;"
      },
      {
        "name": "isAlphanumericSpace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "removeStart",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "containsNone",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)Z"
      },
      {
        "name": "leftPad",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "upperCase",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([BCII)Ljava/lang/String;"
      },
      {
        "name": "indexOfAnyBut",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "isAnyEmpty",
        "desc": "([Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "containsAny",
        "desc": "(Ljava/lang/CharSequence;[C)Z"
      },
      {
        "name": "join",
        "desc": "([SCII)Ljava/lang/String;"
      },
      {
        "name": "indexOfIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "indexOfAny",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)I"
      },
      {
        "name": "lastOrdinalIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "toEncodedString",
        "desc": "([BLjava/nio/charset/Charset;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([DC)Ljava/lang/String;"
      },
      {
        "name": "reverseDelimited",
        "desc": "(Ljava/lang/String;C)Ljava/lang/String;"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;II)I"
      },
      {
        "name": "upperCase",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "substringBeforeLast",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isNumericSpace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "deleteWhitespace",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "stripEnd",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "chomp",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "repeat",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "rightPad",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "abbreviate",
        "desc": "(Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "isAnyBlank",
        "desc": "([Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "containsWhitespace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "splitByCharacterTypeCamelCase",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([DCII)Ljava/lang/String;"
      },
      {
        "name": "replacePattern",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/String;C)Ljava/lang/String;"
      },
      {
        "name": "indexOfDifference",
        "desc": "([Ljava/lang/CharSequence;)I"
      },
      {
        "name": "substringBetween",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "center",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "lastIndexOfIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "countMatches",
        "desc": "(Ljava/lang/CharSequence;C)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "trim",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "replaceEach",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "defaultString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "strip",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "equalsIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "removePattern",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "lowerCase",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getJaroWinklerDistance",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)D"
      },
      {
        "name": "trimToNull",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "stripToEmpty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;II)I"
      },
      {
        "name": "replaceOnce",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "leftPad",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "abbreviate",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "substringBefore",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "trimToEmpty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([FCII)Ljava/lang/String;"
      },
      {
        "name": "appendIfMissingIgnoreCase",
        "desc": "(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "isNumeric",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/CharSequence;I)Z"
      },
      {
        "name": "isEmpty",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "isNotEmpty",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/String;C)Ljava/lang/String;"
      },
      {
        "name": "defaultIfBlank",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
      },
      {
        "name": "isBlank",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([FC)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "(Ljava/util/Iterator;C)Ljava/lang/String;"
      },
      {
        "name": "isAlpha",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;C)Ljava/lang/String;"
      },
      {
        "name": "rightPad",
        "desc": "(Ljava/lang/String;IC)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;C)[Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "defaultIfEmpty",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
      },
      {
        "name": "join",
        "desc": "(Ljava/util/Iterator;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isNotBlank",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "ordinalIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "replaceChars",
        "desc": "(Ljava/lang/String;CC)Ljava/lang/String;"
      },
      {
        "name": "lastIndexOfIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "join",
        "desc": "([ICII)Ljava/lang/String;"
      },
      {
        "name": "uncapitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "center",
        "desc": "(Ljava/lang/String;IC)Ljava/lang/String;"
      },
      {
        "name": "containsIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "isAllUpperCase",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([JCII)Ljava/lang/String;"
      },
      {
        "name": "removeEnd",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "splitByWholeSeparatorPreserveAllTokens",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;"
      },
      {
        "name": "getLevenshteinDistance",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "countMatches",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "stripAll",
        "desc": "([Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "center",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "getFuzzyDistance",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/util/Locale;)I"
      },
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "removeStartIgnoreCase",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isAllLowerCase",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([IC)Ljava/lang/String;"
      },
      {
        "name": "overlay",
        "desc": "(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "getCommonPrefix",
        "desc": "([Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "chomp",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "left",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "substringBetween",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "length",
        "desc": "(Ljava/lang/CharSequence;)I"
      },
      {
        "name": "rightPad",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "removeEndIgnoreCase",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "containsAny",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "prependIfMissing",
        "desc": "(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "substringAfter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "normalizeSpace",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;CII)Ljava/lang/String;"
      },
      {
        "name": "indexOfAny",
        "desc": "(Ljava/lang/CharSequence;[C)I"
      },
      {
        "name": "join",
        "desc": "([CCII)Ljava/lang/String;"
      },
      {
        "name": "repeat",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "getLevenshteinDistance",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "difference",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "stripStart",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "([BLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isAlphanumeric",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "appendIfMissing",
        "desc": "(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "splitByWholeSeparator",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "replaceEachRepeatedly",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "indexOfIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "splitPreserveAllTokens",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([SC)Ljava/lang/String;"
      },
      {
        "name": "splitPreserveAllTokens",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "chop",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "(Ljava/lang/Iterable;C)Ljava/lang/String;"
      },
      {
        "name": "isNoneBlank",
        "desc": "([Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "indexOfAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)I"
      },
      {
        "name": "join",
        "desc": "([JC)Ljava/lang/String;"
      },
      {
        "name": "defaultString",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "indexOfDifference",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "splitByCharacterType",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "startsWithAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "isAlphaSpace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "repeat",
        "desc": "(CI)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "endsWithIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "substring",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        10,
        13,
        16,
        32,
        64
      ],
      "char": [
        32,
        64
      ],
      "short": [
        7,
        10,
        13,
        16,
        32,
        64,
        160,
        256,
        8192
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        10,
        13,
        16,
        32,
        64,
        160,
        256,
        8192,
        2147483647
      ],
      "double": [
        1.0
      ],
      "str": [
        "",
        "..."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.SystemUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getUserHome",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isJavaAwtHeadless",
        "desc": "()Z"
      },
      {
        "name": "isOSNameMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isOSMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getUserDir",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isOSVersionMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getJavaIoTmpDir",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isJavaVersionMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getJavaHome",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isJavaVersionAtLeast",
        "desc": "(Lorg/apache/commons/lang3/JavaVersion;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "1.1",
        "1.2",
        "1.3",
        "1.4",
        "1.5",
        "1.6",
        "1.7",
        "1.8",
        "1.9",
        "10.0",
        "10.1",
        "10.10",
        "10.2",
        "10.3",
        "10.4",
        "10.5",
        "10.6",
        "10.7",
        "10.8",
        "10.9",
        "AIX",
        "FreeBSD",
        "HP-UX",
        "Irix",
        "LINUX",
        "Linux",
        "Mac",
        "NetBSD",
        "OS/2",
        "OS/400",
        "OpenBSD",
        "Solaris",
        "SunOS",
        "Windows",
        "java.home",
        "java.io.tmpdir",
        "user.dir",
        "user.home",
        "user.timezone"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.Validate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validIndex",
        "desc": "([Ljava/lang/Object;I)[Ljava/lang/Object;"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V"
      },
      {
        "name": "isTrue",
        "desc": "(ZLjava/lang/String;J)V"
      },
      {
        "name": "notBlank",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;"
      },
      {
        "name": "validState",
        "desc": "(Z)V"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(JJJ)V"
      },
      {
        "name": "notEmpty",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;"
      },
      {
        "name": "isInstanceOf",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "validIndex",
        "desc": "(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(DDDLjava/lang/String;)V"
      },
      {
        "name": "notNull",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "validState",
        "desc": "(ZLjava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(JJJ)V"
      },
      {
        "name": "matchesPattern",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)V"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "noNullElements",
        "desc": "(Ljava/lang/Iterable;)Ljava/lang/Iterable;"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(DDDLjava/lang/String;)V"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(DDD)V"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/util/Map;)Ljava/util/Map;"
      },
      {
        "name": "validIndex",
        "desc": "(Ljava/util/Collection;I)Ljava/util/Collection;"
      },
      {
        "name": "noNullElements",
        "desc": "(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(JJJLjava/lang/String;)V"
      },
      {
        "name": "notNull",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "validIndex",
        "desc": "(Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;"
      },
      {
        "name": "notBlank",
        "desc": "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
      },
      {
        "name": "isInstanceOf",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "noNullElements",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "noNullElements",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "matchesPattern",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(JJJLjava/lang/String;)V"
      },
      {
        "name": "notEmpty",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "validIndex",
        "desc": "(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;"
      },
      {
        "name": "isTrue",
        "desc": "(ZLjava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(DDD)V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/util/Collection;)Ljava/util/Collection;"
      },
      {
        "name": "validIndex",
        "desc": "([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "isTrue",
        "desc": "(ZLjava/lang/String;D)V"
      },
      {
        "name": "isTrue",
        "desc": "(Z)V"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.CompareToBuilder",
    "setters": [
      {
        "name": "append",
        "desc": "(SS)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(FF)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([Z[Z)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([I[I)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([D[D)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([F[F)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([S[S)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "appendSuper",
        "desc": "(I)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([B[B)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([J[J)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([C[C)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(DD)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      }
    ],
    "getters": [
      {
        "name": "toComparison",
        "desc": "()I",
        "field": "comparison"
      }
    ],
    "observers": [
      {
        "name": "toComparison",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)I"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([I[I)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([D[D)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "toComparison",
        "desc": "()I"
      },
      {
        "name": "append",
        "desc": "([S[S)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "appendSuper",
        "desc": "(I)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)I"
      },
      {
        "name": "append",
        "desc": "(DD)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Z)I"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(FF)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([Z[Z)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "append",
        "desc": "([F[F)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([B[B)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([J[J)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)I"
      },
      {
        "name": "append",
        "desc": "([C[C)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        -1,
        0,
        1,
        36
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.Diff",
    "setters": [],
    "getters": [
      {
        "name": "getFieldName",
        "desc": "()Ljava/lang/String;",
        "field": "fieldName"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.tuple.Pair"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "append",
        "desc": "(Ljava/lang/String;DD)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;ZZ)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[C[C)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;FF)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Z[Z)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;II)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;CC)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[J[J)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;SS)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[S[S)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[B[B)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[I[I)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[F[F)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;BB)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "build",
        "desc": "()Lorg/apache/commons/lang3/builder/DiffResult;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;JJ)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[D[D)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Boolean;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$10",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Float;"
      },
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Float;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$11",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Integer;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$12",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Integer;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Integer;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$13",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Long;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Long;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$14",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Long;"
      },
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Long;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$15",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Short;"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Short;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$16",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Short;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Short;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$17",
    "setters": [],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "val$lhs"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "val$rhs"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$18",
    "setters": [],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Object;",
        "field": "val$lhs"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Object;",
        "field": "val$rhs"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$2",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Boolean;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Boolean;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$3",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Byte;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Byte;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$4",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Byte;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Byte;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$5",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Character;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Character;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$6",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Character;"
      },
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Character;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$7",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Double;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Double;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$8",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Double;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Double;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$9",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Float;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Float;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffResult",
    "setters": [],
    "getters": [
      {
        "name": "getToStringStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;",
        "field": "style"
      }
    ],
    "observers": [
      {
        "name": "getDiffs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getNumberOfDiffs",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "getToStringStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      }
    ],
    "testableMethods": [
      {
        "name": "getDiffs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getNumberOfDiffs",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "toString",
        "desc": "(Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "getToStringStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.Diffable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.EqualsBuilder",
    "setters": [
      {
        "name": "append",
        "desc": "(CC)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "appendSuper",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      }
    ],
    "getters": [
      {
        "name": "isEquals",
        "desc": "()Z",
        "field": "isEquals"
      }
    ],
    "observers": [
      {
        "name": "isEquals",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getRegisterPair",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Pair;"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([S[S)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([D[D)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "build",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "append",
        "desc": "(FF)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "unregister",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "append",
        "desc": "([C[C)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)Z"
      },
      {
        "name": "setEquals",
        "desc": "(Z)V"
      },
      {
        "name": "append",
        "desc": "([B[B)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "register",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "append",
        "desc": "([F[F)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)Z"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "isRegistered",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Z)Z"
      },
      {
        "name": "isEquals",
        "desc": "()Z"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([J[J)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([I[I)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([Z[Z)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "appendSuper",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)Z"
      },
      {
        "name": "getRegistry",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "append",
        "desc": "(DD)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        -1,
        0,
        1,
        36
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.HashCodeBuilder",
    "setters": [
      {
        "name": "append",
        "desc": "(B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "appendSuper",
        "desc": "(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([D)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      }
    ],
    "getters": [
      {
        "name": "toHashCode",
        "desc": "()I",
        "field": "iTotal"
      }
    ],
    "observers": [
      {
        "name": "toHashCode",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "appendSuper",
        "desc": "(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "unregister",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(IILjava/lang/Object;)I"
      },
      {
        "name": "append",
        "desc": "(S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "(J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "isRegistered",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "append",
        "desc": "(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(Ljava/lang/Object;Ljava/util/Collection;)I"
      },
      {
        "name": "append",
        "desc": "([D)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "append",
        "desc": "([Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(Ljava/lang/Object;[Ljava/lang/String;)I"
      },
      {
        "name": "toHashCode",
        "desc": "()I"
      },
      {
        "name": "append",
        "desc": "(B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "append",
        "desc": "([J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "(D)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "register",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(IILjava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)I"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(IILjava/lang/Object;Z)I"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(Ljava/lang/Object;Z)I"
      },
      {
        "name": "append",
        "desc": "(F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "getRegistry",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        17,
        32,
        36,
        37
      ],
      "char": [
        32,
        36,
        37
      ],
      "short": [
        17,
        32,
        36,
        37
      ],
      "int": [
        -1,
        0,
        1,
        2,
        17,
        32,
        36,
        37
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.IDKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle",
    "setters": [
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "spaces"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[B)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[S)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[C)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[J)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[Z)V"
      },
      {
        "name": "reflectionAppendArrayDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[I)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[F)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[D)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ],
      "str": [
        "]",
        "}"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.RecursiveToStringStyle"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.RecursiveToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/util/Collection;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ReflectionToStringBuilder",
    "setters": [
      {
        "name": "setUpToClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "upToClass"
      },
      {
        "name": "setAppendTransients",
        "desc": "(Z)V",
        "field": "appendTransients"
      },
      {
        "name": "setAppendStatics",
        "desc": "(Z)V",
        "field": "appendStatics"
      },
      {
        "name": "setExcludeFieldNames",
        "desc": "([Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
        "field": "excludeFieldNames"
      }
    ],
    "getters": [
      {
        "name": "getUpToClass",
        "desc": "()Ljava/lang/Class;",
        "field": "upToClass"
      },
      {
        "name": "isAppendStatics",
        "desc": "()Z",
        "field": "appendStatics"
      },
      {
        "name": "isAppendTransients",
        "desc": "()Z",
        "field": "appendTransients"
      }
    ],
    "observers": [
      {
        "name": "getUpToClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAppendTransients",
        "desc": "()Z"
      },
      {
        "name": "isAppendStatics",
        "desc": "()Z"
      },
      {
        "name": "getExcludeFieldNames",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZ)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V"
      },
      {
        "name": "toNoNullStringArray",
        "desc": "(Ljava/util/Collection;)[Ljava/lang/String;"
      },
      {
        "name": "toNoNullStringArray",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "getUpToClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V"
      },
      {
        "name": "isAppendStatics",
        "desc": "()Z"
      },
      {
        "name": "setUpToClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/lang/reflect/Field;)Z"
      },
      {
        "name": "getExcludeFieldNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "(Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "setExcludeFieldNames",
        "desc": "([Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;"
      },
      {
        "name": "appendFieldsIn",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "isAppendTransients",
        "desc": "()Z"
      },
      {
        "name": "setAppendTransients",
        "desc": "(Z)V"
      },
      {
        "name": "toStringExclude",
        "desc": "(Ljava/lang/Object;Ljava/util/Collection;)Ljava/lang/String;"
      },
      {
        "name": "toStringExclude",
        "desc": "(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "setAppendStatics",
        "desc": "(Z)V"
      },
      {
        "name": "reflectionAppendArray",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        -1,
        0,
        36
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.StandardToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSizeStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseClassName",
        "desc": "()Z"
      },
      {
        "name": "isFieldSeparatorAtStart",
        "desc": "()Z"
      },
      {
        "name": "getSummaryObjectEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isArrayContentDetail",
        "desc": "()Z"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldNameValueSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArraySeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSizeEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFieldSeparatorAtEnd",
        "desc": "()Z"
      },
      {
        "name": "getContentEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseShortClassName",
        "desc": "()Z"
      },
      {
        "name": "isUseFieldNames",
        "desc": "()Z"
      },
      {
        "name": "getSummaryObjectStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayStart",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseIdentityHashCode",
        "desc": "()Z"
      },
      {
        "name": "isDefaultFullDetail",
        "desc": "()Z"
      },
      {
        "name": "getContentStart",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getSizeStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setSizeStartText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isFieldSeparatorAtStart",
        "desc": "()Z"
      },
      {
        "name": "setSizeEndText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setDefaultFullDetail",
        "desc": "(Z)V"
      },
      {
        "name": "setFieldSeparatorAtStart",
        "desc": "(Z)V"
      },
      {
        "name": "setContentEnd",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setFieldSeparatorAtEnd",
        "desc": "(Z)V"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setNullText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFieldNameValueSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setUseIdentityHashCode",
        "desc": "(Z)V"
      },
      {
        "name": "getSizeEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseShortClassName",
        "desc": "()Z"
      },
      {
        "name": "setUseClassName",
        "desc": "(Z)V"
      },
      {
        "name": "setFieldSeparator",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isDefaultFullDetail",
        "desc": "()Z"
      },
      {
        "name": "setSummaryObjectStartText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isUseClassName",
        "desc": "()Z"
      },
      {
        "name": "setArrayEnd",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setFieldNameValueSeparator",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSummaryObjectEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setUseFieldNames",
        "desc": "(Z)V"
      },
      {
        "name": "isArrayContentDetail",
        "desc": "()Z"
      },
      {
        "name": "setArraySeparator",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setUseShortClassName",
        "desc": "(Z)V"
      },
      {
        "name": "setArrayStart",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setArrayContentDetail",
        "desc": "(Z)V"
      },
      {
        "name": "getArraySeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFieldSeparatorAtEnd",
        "desc": "()Z"
      },
      {
        "name": "setSummaryObjectEndText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isUseFieldNames",
        "desc": "()Z"
      },
      {
        "name": "setContentStart",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSummaryObjectStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayStart",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseIdentityHashCode",
        "desc": "()Z"
      },
      {
        "name": "getContentStart",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringBuilder",
    "setters": [],
    "getters": [
      {
        "name": "getStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;",
        "field": "style"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;",
        "field": "object"
      },
      {
        "name": "getStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;",
        "field": "buffer"
      }
    ],
    "observers": [
      {
        "name": "getStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;"
      }
    ],
    "testableMethods": [
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([I)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[IZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "appendToString",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "reflectionToString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(I)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "appendAsObjectToString",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(J)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([J)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "reflectionToString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "([Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[S)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([D)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(F)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;J)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;S)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "reflectionToString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZLjava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[J)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "append",
        "desc": "(D)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([F)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "getStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[CZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;C)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[D)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[JZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[C)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([S)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;D)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[B)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(S)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[F)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "getStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([B)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;F)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "appendSuper",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(B)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "getDefaultStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[ZZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[I)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "setDefaultStyle",
        "desc": "(Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[FZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;I)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "build",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "reflectionToString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;B)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[BZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[SZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[DZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      }
    ],
    "dictionary": {
      "short": [
        512
      ],
      "int": [
        512
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle",
    "setters": [],
    "getters": [
      {
        "name": "getSizeStartText",
        "desc": "()Ljava/lang/String;",
        "field": "sizeStartText"
      },
      {
        "name": "isUseClassName",
        "desc": "()Z",
        "field": "useClassName"
      },
      {
        "name": "isFieldSeparatorAtStart",
        "desc": "()Z",
        "field": "fieldSeparatorAtStart"
      },
      {
        "name": "getSummaryObjectEndText",
        "desc": "()Ljava/lang/String;",
        "field": "summaryObjectEndText"
      },
      {
        "name": "isArrayContentDetail",
        "desc": "()Z",
        "field": "arrayContentDetail"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;",
        "field": "nullText"
      },
      {
        "name": "getFieldNameValueSeparator",
        "desc": "()Ljava/lang/String;",
        "field": "fieldNameValueSeparator"
      },
      {
        "name": "getArrayEnd",
        "desc": "()Ljava/lang/String;",
        "field": "arrayEnd"
      },
      {
        "name": "getArraySeparator",
        "desc": "()Ljava/lang/String;",
        "field": "arraySeparator"
      },
      {
        "name": "getSizeEndText",
        "desc": "()Ljava/lang/String;",
        "field": "sizeEndText"
      },
      {
        "name": "isFieldSeparatorAtEnd",
        "desc": "()Z",
        "field": "fieldSeparatorAtEnd"
      },
      {
        "name": "getContentEnd",
        "desc": "()Ljava/lang/String;",
        "field": "contentEnd"
      },
      {
        "name": "getFieldSeparator",
        "desc": "()Ljava/lang/String;",
        "field": "fieldSeparator"
      },
      {
        "name": "isUseShortClassName",
        "desc": "()Z",
        "field": "useShortClassName"
      },
      {
        "name": "isUseFieldNames",
        "desc": "()Z",
        "field": "useFieldNames"
      },
      {
        "name": "getSummaryObjectStartText",
        "desc": "()Ljava/lang/String;",
        "field": "summaryObjectStartText"
      },
      {
        "name": "getArrayStart",
        "desc": "()Ljava/lang/String;",
        "field": "arrayStart"
      },
      {
        "name": "isUseIdentityHashCode",
        "desc": "()Z",
        "field": "useIdentityHashCode"
      },
      {
        "name": "isDefaultFullDetail",
        "desc": "()Z",
        "field": "defaultFullDetail"
      },
      {
        "name": "getContentStart",
        "desc": "()Ljava/lang/String;",
        "field": "contentStart"
      }
    ],
    "observers": [
      {
        "name": "getSizeStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseClassName",
        "desc": "()Z"
      },
      {
        "name": "isFieldSeparatorAtStart",
        "desc": "()Z"
      },
      {
        "name": "getSummaryObjectEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isArrayContentDetail",
        "desc": "()Z"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldNameValueSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArraySeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSizeEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFieldSeparatorAtEnd",
        "desc": "()Z"
      },
      {
        "name": "getContentEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseShortClassName",
        "desc": "()Z"
      },
      {
        "name": "isUseFieldNames",
        "desc": "()Z"
      },
      {
        "name": "getSummaryObjectStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayStart",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseIdentityHashCode",
        "desc": "()Z"
      },
      {
        "name": "isDefaultFullDetail",
        "desc": "()Z"
      },
      {
        "name": "getContentStart",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        ",",
        "<",
        "<null>",
        "<size=",
        "=",
        ">",
        "[",
        "]",
        "{",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "\"",
        "\"<size=",
        ">\""
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "[",
        "]"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.AtomicInitializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.AtomicSafeInitializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BackgroundInitializer",
    "setters": [
      {
        "name": "setExternalExecutor",
        "desc": "(Ljava/util/concurrent/ExecutorService;)V",
        "field": "externalExecutor"
      }
    ],
    "getters": [
      {
        "name": "getExternalExecutor",
        "desc": "()Ljava/util/concurrent/ExecutorService;",
        "field": "externalExecutor"
      },
      {
        "name": "getActiveExecutor",
        "desc": "()Ljava/util/concurrent/ExecutorService;",
        "field": "executor"
      }
    ],
    "observers": [
      {
        "name": "getFuture",
        "desc": "()Ljava/util/concurrent/Future;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getTaskCount",
        "desc": "()I"
      },
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "getExternalExecutor",
        "desc": "()Ljava/util/concurrent/ExecutorService;"
      },
      {
        "name": "getActiveExecutor",
        "desc": "()Ljava/util/concurrent/ExecutorService;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.BackgroundInitializer",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
    "setters": [],
    "getters": [
      {
        "name": "getDaemonFlag",
        "desc": "()Ljava/lang/Boolean;",
        "field": "daemonFlag"
      },
      {
        "name": "getWrappedFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;",
        "field": "wrappedFactory"
      },
      {
        "name": "getUncaughtExceptionHandler",
        "desc": "()Ljava/lang/Thread$UncaughtExceptionHandler;",
        "field": "uncaughtExceptionHandler"
      },
      {
        "name": "getNamingPattern",
        "desc": "()Ljava/lang/String;",
        "field": "namingPattern"
      },
      {
        "name": "getPriority",
        "desc": "()Ljava/lang/Integer;",
        "field": "priority"
      }
    ],
    "observers": [
      {
        "name": "getDaemonFlag",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "getWrappedFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;"
      },
      {
        "name": "getNamingPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPriority",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getUncaughtExceptionHandler",
        "desc": "()Ljava/lang/Thread$UncaughtExceptionHandler;"
      },
      {
        "name": "getThreadCount",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getDaemonFlag",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "getWrappedFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;"
      },
      {
        "name": "getNamingPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "newThread",
        "desc": "(Ljava/lang/Runnable;)Ljava/lang/Thread;"
      },
      {
        "name": "getPriority",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getUncaughtExceptionHandler",
        "desc": "()Ljava/lang/Thread$UncaughtExceptionHandler;"
      },
      {
        "name": "getThreadCount",
        "desc": "()J"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.ThreadFactory"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BasicThreadFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder",
    "setters": [
      {
        "name": "wrappedFactory",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "wrappedFactory"
      },
      {
        "name": "uncaughtExceptionHandler",
        "desc": "(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "exceptionHandler"
      },
      {
        "name": "priority",
        "desc": "(I)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "priority"
      },
      {
        "name": "namingPattern",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "namingPattern"
      },
      {
        "name": "daemon",
        "desc": "(Z)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "daemonFlag"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "wrappedFactory",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      },
      {
        "name": "uncaughtExceptionHandler",
        "desc": "(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      },
      {
        "name": "build",
        "desc": "()Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;"
      },
      {
        "name": "priority",
        "desc": "(I)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "namingPattern",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      },
      {
        "name": "daemon",
        "desc": "(Z)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "initialize",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/Callable;Ljava/util/concurrent/ExecutorService;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/Callable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.concurrent.BackgroundInitializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentInitializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "handleCauseUnchecked",
        "desc": "(Ljava/util/concurrent/ExecutionException;)V"
      },
      {
        "name": "initialize",
        "desc": "(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;"
      },
      {
        "name": "initializeUnchecked",
        "desc": "(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;"
      },
      {
        "name": "createIfAbsentUnchecked",
        "desc": "(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;"
      },
      {
        "name": "extractCauseUnchecked",
        "desc": "(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;"
      },
      {
        "name": "handleCause",
        "desc": "(Ljava/util/concurrent/ExecutionException;)V"
      },
      {
        "name": "createIfAbsent",
        "desc": "(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;"
      },
      {
        "name": "putIfAbsent",
        "desc": "(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "extractCause",
        "desc": "(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;"
      },
      {
        "name": "checkedException",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/Throwable;"
      },
      {
        "name": "constantFuture",
        "desc": "(Ljava/lang/Object;)Ljava/util/concurrent/Future;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture",
    "setters": [],
    "getters": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      },
      {
        "name": "get",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "cancel",
        "desc": "(Z)Z"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      },
      {
        "name": "get",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Future"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.ConcurrentUtils",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConstantInitializer",
    "setters": [],
    "getters": [
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;",
        "field": "object"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.LazyInitializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTaskCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getTaskCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addInitializer",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/ExecutorService;)V"
      },
      {
        "name": "initialize",
        "desc": "()Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.concurrent.BackgroundInitializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isSuccessful",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "initializerNames",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isSuccessful",
        "desc": "()Z"
      },
      {
        "name": "isException",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getResultObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getException",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;"
      },
      {
        "name": "getInitializer",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.TimedSemaphore",
    "setters": [
      {
        "name": "setLimit",
        "desc": "(I)V",
        "field": "limit"
      }
    ],
    "getters": [
      {
        "name": "getUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;",
        "field": "unit"
      },
      {
        "name": "getLastAcquiresPerPeriod",
        "desc": "()I",
        "field": "lastCallsPerPeriod"
      },
      {
        "name": "getExecutorService",
        "desc": "()Ljava/util/concurrent/ScheduledExecutorService;",
        "field": "executorService"
      },
      {
        "name": "getLimit",
        "desc": "()I",
        "field": "limit"
      },
      {
        "name": "getPeriod",
        "desc": "()J",
        "field": "period"
      },
      {
        "name": "getAcquireCount",
        "desc": "()I",
        "field": "acquireCount"
      },
      {
        "name": "isShutdown",
        "desc": "()Z",
        "field": "shutdown"
      }
    ],
    "observers": [
      {
        "name": "getAvailablePermits",
        "desc": "()I"
      },
      {
        "name": "getUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "getLastAcquiresPerPeriod",
        "desc": "()I"
      },
      {
        "name": "getExecutorService",
        "desc": "()Ljava/util/concurrent/ScheduledExecutorService;"
      },
      {
        "name": "getLimit",
        "desc": "()I"
      },
      {
        "name": "getPeriod",
        "desc": "()J"
      },
      {
        "name": "getAcquireCount",
        "desc": "()I"
      },
      {
        "name": "isShutdown",
        "desc": "()Z"
      },
      {
        "name": "getAverageCallsPerPeriod",
        "desc": "()D"
      }
    ],
    "testableMethods": [
      {
        "name": "endOfPeriod",
        "desc": "()V"
      },
      {
        "name": "getLastAcquiresPerPeriod",
        "desc": "()I"
      },
      {
        "name": "getPeriod",
        "desc": "()J"
      },
      {
        "name": "getAcquireCount",
        "desc": "()I"
      },
      {
        "name": "isShutdown",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;I)V"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/util/concurrent/TimeUnit;I)V"
      },
      {
        "name": "acquire",
        "desc": "()V"
      },
      {
        "name": "getAvailablePermits",
        "desc": "()I"
      },
      {
        "name": "setLimit",
        "desc": "(I)V"
      },
      {
        "name": "getUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "startTimer",
        "desc": "()Ljava/util/concurrent/ScheduledFuture;"
      },
      {
        "name": "getExecutorService",
        "desc": "()Ljava/util/concurrent/ScheduledExecutorService;"
      },
      {
        "name": "getLimit",
        "desc": "()I"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "getAverageCallsPerPeriod",
        "desc": "()D"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0,
        1,
        9223372036854775807
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.TimedSemaphore$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.event.EventListenerSupport",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getListeners",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getListenerCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "removeListener",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "fire",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getListeners",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;)Lorg/apache/commons/lang3/event/EventListenerSupport;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "createInvocationHandler",
        "desc": "()Ljava/lang/reflect/InvocationHandler;"
      },
      {
        "name": "addListener",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getListenerCount",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/event/EventListenerSupport;)V"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.InvocationHandler"
    ],
    "outerClass": "org.apache.commons.lang3.event.EventListenerSupport",
    "access": 4,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.event.EventUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "bindEventsToMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/String;)V"
      },
      {
        "name": "addEventListener",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.InvocationHandler"
    ],
    "outerClass": "org.apache.commons.lang3.event.EventUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.CloneFailedException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.ContextedException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getRawMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/commons/lang3/exception/ExceptionContext;)V"
      },
      {
        "name": "getContextValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "getFormattedExceptionMessage",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "setContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedException;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFirstContextValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getRawMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "addContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedException;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception",
      "org.apache.commons.lang3.exception.ExceptionContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.ContextedRuntimeException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getRawMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/commons/lang3/exception/ExceptionContext;)V"
      },
      {
        "name": "getContextValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "getFormattedExceptionMessage",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFirstContextValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getRawMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "setContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedRuntimeException;"
      },
      {
        "name": "addContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedRuntimeException;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException",
      "org.apache.commons.lang3.exception.ExceptionContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.DefaultExceptionContext",
    "setters": [],
    "getters": [
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;",
        "field": "contextValues"
      }
    ],
    "observers": [
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "setContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/DefaultExceptionContext;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getFirstContextValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getContextValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "addContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/DefaultExceptionContext;"
      },
      {
        "name": "getFormattedExceptionMessage",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        256
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.exception.ExceptionContext",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.ExceptionContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.ExceptionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getRootCause",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/Throwable;"
      },
      {
        "name": "printRootCauseStackTrace",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "printRootCauseStackTrace",
        "desc": "(Ljava/lang/Throwable;Ljava/io/PrintWriter;)V"
      },
      {
        "name": "indexOfType",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Class;I)I"
      },
      {
        "name": "getCause",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/Throwable;"
      },
      {
        "name": "getThrowableCount",
        "desc": "(Ljava/lang/Throwable;)I"
      },
      {
        "name": "indexOfThrowable",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Class;I)I"
      },
      {
        "name": "getStackTrace",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "printRootCauseStackTrace",
        "desc": "(Ljava/lang/Throwable;Ljava/io/PrintStream;)V"
      },
      {
        "name": "getStackFrameList",
        "desc": "(Ljava/lang/Throwable;)Ljava/util/List;"
      },
      {
        "name": "removeCommonFrames",
        "desc": "(Ljava/util/List;Ljava/util/List;)V"
      },
      {
        "name": "getMessage",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/String;"
      },
      {
        "name": "getDefaultCauseMethodNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getStackFrames",
        "desc": "(Ljava/lang/Throwable;)[Ljava/lang/String;"
      },
      {
        "name": "indexOfType",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Class;)I"
      },
      {
        "name": "getRootCauseStackTrace",
        "desc": "(Ljava/lang/Throwable;)[Ljava/lang/String;"
      },
      {
        "name": "getThrowables",
        "desc": "(Ljava/lang/Throwable;)[Ljava/lang/Throwable;"
      },
      {
        "name": "indexOfThrowable",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Class;)I"
      },
      {
        "name": "getStackFrames",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "getCause",
        "desc": "(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;"
      },
      {
        "name": "getRootCauseMessage",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/String;"
      },
      {
        "name": "getThrowableList",
        "desc": "(Ljava/lang/Throwable;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        11
      ],
      "short": [
        10,
        11
      ],
      "int": [
        -1,
        0,
        1,
        2,
        10,
        11
      ],
      "str": [
        "at",
        "getLinkedCause",
        "getThrowable"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.math.Fraction",
    "setters": [],
    "getters": [
      {
        "name": "getDenominator",
        "desc": "()I",
        "field": "denominator"
      },
      {
        "name": "getNumerator",
        "desc": "()I",
        "field": "numerator"
      }
    ],
    "observers": [
      {
        "name": "negate",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDenominator",
        "desc": "()I"
      },
      {
        "name": "getProperWhole",
        "desc": "()I"
      },
      {
        "name": "invert",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "abs",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getNumerator",
        "desc": "()I"
      },
      {
        "name": "getProperNumerator",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "subtract",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getFraction",
        "desc": "(D)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "divideBy",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "pow",
        "desc": "(I)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "multiplyBy",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getFraction",
        "desc": "(III)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getFraction",
        "desc": "(II)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "invert",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "abs",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getNumerator",
        "desc": "()I"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "getProperNumerator",
        "desc": "()I"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)I"
      },
      {
        "name": "reduce",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toProperString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDenominator",
        "desc": "()I"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "add",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "negate",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getFraction",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getProperWhole",
        "desc": "()I"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "getReducedFraction",
        "desc": "(II)Lorg/apache/commons/lang3/math/Fraction;"
      }
    ],
    "dictionary": {
      "byte": [
        25,
        31,
        32,
        37,
        46,
        47
      ],
      "char": [
        32,
        37,
        46,
        47
      ],
      "short": [
        25,
        31,
        32,
        37,
        46,
        47,
        629,
        10000
      ],
      "int": [
        -2147483648,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        25,
        31,
        32,
        37,
        46,
        47,
        629,
        10000
      ],
      "long": [
        -2147483648,
        2147483647
      ],
      "double": [
        1.0,
        2.147483647E9
      ],
      "str": [
        "-1",
        "0",
        "1"
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.math.IEEE754rUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "max",
        "desc": "(FF)F"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "max",
        "desc": "(DD)D"
      },
      {
        "name": "max",
        "desc": "(DDD)D"
      },
      {
        "name": "max",
        "desc": "(FFF)F"
      },
      {
        "name": "min",
        "desc": "([D)D"
      },
      {
        "name": "min",
        "desc": "([F)F"
      },
      {
        "name": "min",
        "desc": "(FF)F"
      },
      {
        "name": "min",
        "desc": "(DD)D"
      },
      {
        "name": "min",
        "desc": "(DDD)D"
      },
      {
        "name": "max",
        "desc": "([D)D"
      },
      {
        "name": "min",
        "desc": "(FFF)F"
      },
      {
        "name": "max",
        "desc": "([F)F"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.math.NumberUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "toByte",
        "desc": "(Ljava/lang/String;)B"
      },
      {
        "name": "max",
        "desc": "([I)I"
      },
      {
        "name": "toShort",
        "desc": "(Ljava/lang/String;S)S"
      },
      {
        "name": "min",
        "desc": "([B)B"
      },
      {
        "name": "max",
        "desc": "(FFF)F"
      },
      {
        "name": "min",
        "desc": "([D)D"
      },
      {
        "name": "toLong",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "min",
        "desc": "([F)F"
      },
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "createLong",
        "desc": "(Ljava/lang/String;)Ljava/lang/Long;"
      },
      {
        "name": "isNumber",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "createBigInteger",
        "desc": "(Ljava/lang/String;)Ljava/math/BigInteger;"
      },
      {
        "name": "createInteger",
        "desc": "(Ljava/lang/String;)Ljava/lang/Integer;"
      },
      {
        "name": "max",
        "desc": "(SSS)S"
      },
      {
        "name": "toShort",
        "desc": "(Ljava/lang/String;)S"
      },
      {
        "name": "min",
        "desc": "(SSS)S"
      },
      {
        "name": "isDigits",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "max",
        "desc": "(JJJ)J"
      },
      {
        "name": "toDouble",
        "desc": "(Ljava/lang/String;)D"
      },
      {
        "name": "min",
        "desc": "(III)I"
      },
      {
        "name": "compare",
        "desc": "(JJ)I"
      },
      {
        "name": "min",
        "desc": "([J)J"
      },
      {
        "name": "max",
        "desc": "([S)S"
      },
      {
        "name": "compare",
        "desc": "(BB)I"
      },
      {
        "name": "min",
        "desc": "(FFF)F"
      },
      {
        "name": "toInt",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toByte",
        "desc": "(Ljava/lang/String;B)B"
      },
      {
        "name": "createNumber",
        "desc": "(Ljava/lang/String;)Ljava/lang/Number;"
      },
      {
        "name": "max",
        "desc": "([J)J"
      },
      {
        "name": "max",
        "desc": "(III)I"
      },
      {
        "name": "max",
        "desc": "(BBB)B"
      },
      {
        "name": "createFloat",
        "desc": "(Ljava/lang/String;)Ljava/lang/Float;"
      },
      {
        "name": "toFloat",
        "desc": "(Ljava/lang/String;F)F"
      },
      {
        "name": "createBigDecimal",
        "desc": "(Ljava/lang/String;)Ljava/math/BigDecimal;"
      },
      {
        "name": "max",
        "desc": "([B)B"
      },
      {
        "name": "min",
        "desc": "(DDD)D"
      },
      {
        "name": "max",
        "desc": "([D)D"
      },
      {
        "name": "toDouble",
        "desc": "(Ljava/lang/String;D)D"
      },
      {
        "name": "createDouble",
        "desc": "(Ljava/lang/String;)Ljava/lang/Double;"
      },
      {
        "name": "max",
        "desc": "([F)F"
      },
      {
        "name": "compare",
        "desc": "(SS)I"
      },
      {
        "name": "toLong",
        "desc": "(Ljava/lang/String;J)J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toFloat",
        "desc": "(Ljava/lang/String;)F"
      },
      {
        "name": "max",
        "desc": "(DDD)D"
      },
      {
        "name": "min",
        "desc": "([S)S"
      },
      {
        "name": "toInt",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "isParsable",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "min",
        "desc": "([I)I"
      },
      {
        "name": "min",
        "desc": "(BBB)B"
      },
      {
        "name": "min",
        "desc": "(JJJ)J"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        16,
        43,
        45,
        46,
        48,
        55,
        57,
        65,
        68,
        69,
        70,
        76,
        88,
        97,
        100,
        101,
        102,
        108,
        120
      ],
      "char": [
        43,
        45,
        46,
        48,
        55,
        57,
        65,
        68,
        69,
        70,
        76,
        88,
        97,
        100,
        101,
        102,
        108,
        120
      ],
      "short": [
        7,
        8,
        16,
        43,
        45,
        46,
        48,
        55,
        57,
        65,
        68,
        69,
        70,
        76,
        88,
        97,
        100,
        101,
        102,
        108,
        120
      ],
      "int": [
        -1,
        0,
        1,
        2,
        7,
        8,
        16,
        43,
        45,
        46,
        48,
        55,
        57,
        65,
        68,
        69,
        70,
        76,
        88,
        97,
        100,
        101,
        102,
        108,
        120
      ],
      "float": [
        -1.0,
        0.0,
        1.0
      ],
      "double": [
        1.0
      ],
      "str": [
        "",
        "#",
        "-",
        "--",
        ".",
        "0",
        "0X",
        "0x"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.Mutable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableBoolean",
    "setters": [
      {
        "name": "setValue",
        "desc": "(Z)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Boolean;)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "isTrue",
        "desc": "()Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFalse",
        "desc": "()Z"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Boolean;"
      }
    ],
    "testableMethods": [
      {
        "name": "toBoolean",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "setTrue",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Boolean;)V"
      },
      {
        "name": "isTrue",
        "desc": "()Z"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableBoolean;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFalse",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "booleanValue",
        "desc": "()Z"
      },
      {
        "name": "setFalse",
        "desc": "()V"
      },
      {
        "name": "setValue",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Boolean;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.mutable.Mutable",
      "java.io.Serializable",
      "java.lang.Comparable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableByte",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(B)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(B)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(B)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Byte;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Byte;"
      },
      {
        "name": "<init>",
        "desc": "(B)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "add",
        "desc": "(B)V"
      },
      {
        "name": "byteValue",
        "desc": "()B"
      },
      {
        "name": "toByte",
        "desc": "()Ljava/lang/Byte;"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableByte;)I"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "subtract",
        "desc": "(B)V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setValue",
        "desc": "(B)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableDouble",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(D)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(D)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(D)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInfinite",
        "desc": "()Z"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Double;"
      },
      {
        "name": "isNaN",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInfinite",
        "desc": "()Z"
      },
      {
        "name": "toDouble",
        "desc": "()Ljava/lang/Double;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableDouble;)I"
      },
      {
        "name": "add",
        "desc": "(D)V"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(D)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isNaN",
        "desc": "()Z"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "subtract",
        "desc": "(D)V"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Double;"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "setValue",
        "desc": "(D)V"
      }
    ],
    "dictionary": {
      "double": [
        2.0
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableFloat",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(F)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(F)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(F)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInfinite",
        "desc": "()Z"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Float;"
      },
      {
        "name": "isNaN",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInfinite",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "toFloat",
        "desc": "()Ljava/lang/Float;"
      },
      {
        "name": "add",
        "desc": "(F)V"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(F)V"
      },
      {
        "name": "isNaN",
        "desc": "()Z"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Float;"
      },
      {
        "name": "setValue",
        "desc": "(F)V"
      },
      {
        "name": "subtract",
        "desc": "(F)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableFloat;)I"
      }
    ],
    "dictionary": {
      "float": [
        1.0
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableInt",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(I)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(I)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(I)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Integer;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "toInteger",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setValue",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "add",
        "desc": "(I)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "subtract",
        "desc": "(I)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableInt;)I"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableLong",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(J)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(J)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(J)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Long;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setValue",
        "desc": "(J)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableLong;)I"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Long;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "toLong",
        "desc": "()Ljava/lang/Long;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "add",
        "desc": "(J)V"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "subtract",
        "desc": "(J)V"
      }
    ],
    "dictionary": {
      "long": [
        1
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableObject",
    "setters": [
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V",
        "field": "value"
      }
    ],
    "getters": [
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.mutable.Mutable",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableShort",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(S)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(S)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(S)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Short;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "subtract",
        "desc": "(S)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "setValue",
        "desc": "(S)V"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableShort;)I"
      },
      {
        "name": "<init>",
        "desc": "(S)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Short;"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "add",
        "desc": "(S)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "shortValue",
        "desc": "()S"
      },
      {
        "name": "toShort",
        "desc": "()Ljava/lang/Short;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.ConstructorUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "invokeExactConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getMatchingAccessibleConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getAccessibleConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getAccessibleConstructor",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "invokeConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "invokeConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.FieldUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "readDeclaredStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;"
      },
      {
        "name": "writeDeclaredStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getDeclaredField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;"
      },
      {
        "name": "getAllFields",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Field;"
      },
      {
        "name": "readField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)Ljava/lang/Object;"
      },
      {
        "name": "readStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;"
      },
      {
        "name": "writeStaticField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)V"
      },
      {
        "name": "writeField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getAllFieldsList",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "readField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "writeStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "writeField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Z)V"
      },
      {
        "name": "writeDeclaredField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "writeStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Z)V"
      },
      {
        "name": "writeStaticField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;)V"
      },
      {
        "name": "writeDeclaredStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Z)V"
      },
      {
        "name": "writeField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;Z)V"
      },
      {
        "name": "readDeclaredField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "readStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "writeDeclaredField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Z)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "readField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "readDeclaredField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;"
      },
      {
        "name": "writeField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "readStaticField",
        "desc": "(Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "readDeclaredStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;"
      },
      {
        "name": "getDeclaredField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/reflect/Field;"
      },
      {
        "name": "readField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;"
      },
      {
        "name": "readStaticField",
        "desc": "(Ljava/lang/reflect/Field;Z)Ljava/lang/Object;"
      },
      {
        "name": "removeFinalModifier",
        "desc": "(Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "getFieldsWithAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/reflect/Field;"
      },
      {
        "name": "removeFinalModifier",
        "desc": "(Ljava/lang/reflect/Field;Z)V"
      },
      {
        "name": "getFieldsListWithAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/reflect/Field;"
      }
    ],
    "dictionary": {
      "byte": [
        -17
      ],
      "short": [
        -17
      ],
      "int": [
        -17,
        0,
        1
      ],
      "str": [
        "modifiers"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.InheritanceUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "distance",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.MemberUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6,
        7
      ],
      "short": [
        6,
        7
      ],
      "int": [
        -1,
        0,
        1,
        5,
        6,
        7
      ],
      "float": [
        0.0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.MethodUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "invokeStaticMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getMethodsListWithAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getAccessibleMethod",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "invokeMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getMethodsWithAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "invokeExactMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "invokeStaticMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactStaticMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getMatchingAccessibleMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getAccessibleMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "invokeMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactStaticMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "invokeMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getOverrideHierarchy",
        "desc": "(Ljava/lang/reflect/Method;Lorg/apache/commons/lang3/ClassUtils$Interfaces;)Ljava/util/Set;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeLiteral",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "value"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "toString"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.reflect.Typed"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getImplicitLowerBounds",
        "desc": "(Ljava/lang/reflect/WildcardType;)[Ljava/lang/reflect/Type;"
      },
      {
        "name": "typesSatisfyVariables",
        "desc": "(Ljava/util/Map;)Z"
      },
      {
        "name": "parameterizeWithOwner",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/reflect/ParameterizedType;"
      },
      {
        "name": "getRawType",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Ljava/lang/Class;"
      },
      {
        "name": "isAssignable",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "parameterize",
        "desc": "(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/Typed;"
      },
      {
        "name": "parameterizeWithOwner",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;"
      },
      {
        "name": "unrollVariables",
        "desc": "(Ljava/util/Map;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "normalizeUpperBounds",
        "desc": "([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;"
      },
      {
        "name": "parameterize",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/reflect/ParameterizedType;"
      },
      {
        "name": "toLongString",
        "desc": "(Ljava/lang/reflect/TypeVariable;)Ljava/lang/String;"
      },
      {
        "name": "containsTypeVariables",
        "desc": "(Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "isInstance",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getTypeArguments",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/util/Map;"
      },
      {
        "name": "wildcardType",
        "desc": "()Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;"
      },
      {
        "name": "getImplicitUpperBounds",
        "desc": "(Ljava/lang/reflect/WildcardType;)[Ljava/lang/reflect/Type;"
      },
      {
        "name": "isArrayType",
        "desc": "(Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "getImplicitBounds",
        "desc": "(Ljava/lang/reflect/TypeVariable;)[Ljava/lang/reflect/Type;"
      },
      {
        "name": "genericArrayType",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/Class;)Lorg/apache/commons/lang3/reflect/Typed;"
      },
      {
        "name": "getArrayComponentType",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/String;"
      },
      {
        "name": "determineTypeArguments",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/ParameterizedType;)Ljava/util/Map;"
      },
      {
        "name": "getTypeArguments",
        "desc": "(Ljava/lang/reflect/ParameterizedType;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$1",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "val$type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.reflect.Typed"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl",
    "setters": [],
    "getters": [
      {
        "name": "getGenericComponentType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "componentType"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getGenericComponentType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.GenericArrayType"
    ],
    "outerClass": "org.apache.commons.lang3.reflect.TypeUtils",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl",
    "setters": [],
    "getters": [
      {
        "name": "getOwnerType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "useOwner"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "raw"
      }
    ],
    "observers": [
      {
        "name": "getOwnerType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getActualTypeArguments",
        "desc": "()[Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.ParameterizedType"
    ],
    "outerClass": "org.apache.commons.lang3.reflect.TypeUtils",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder",
    "setters": [
      {
        "name": "withLowerBounds",
        "desc": "([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;",
        "field": "lowerBounds"
      },
      {
        "name": "withUpperBounds",
        "desc": "([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;",
        "field": "upperBounds"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Ljava/lang/reflect/WildcardType;"
      },
      {
        "name": "withLowerBounds",
        "desc": "([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;"
      },
      {
        "name": "withUpperBounds",
        "desc": "([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "outerClass": "org.apache.commons.lang3.reflect.TypeUtils",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLowerBounds",
        "desc": "()[Ljava/lang/reflect/Type;"
      },
      {
        "name": "getUpperBounds",
        "desc": "()[Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.WildcardType"
    ],
    "outerClass": "org.apache.commons.lang3.reflect.TypeUtils",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.Typed",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.CompositeFormat",
    "setters": [],
    "getters": [
      {
        "name": "getParser",
        "desc": "()Ljava/text/Format;",
        "field": "parser"
      },
      {
        "name": "getFormatter",
        "desc": "()Ljava/text/Format;",
        "field": "formatter"
      }
    ],
    "observers": [
      {
        "name": "getParser",
        "desc": "()Ljava/text/Format;"
      },
      {
        "name": "getFormatter",
        "desc": "()Ljava/text/Format;"
      }
    ],
    "testableMethods": [
      {
        "name": "reformat",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getParser",
        "desc": "()Ljava/text/Format;"
      },
      {
        "name": "getFormatter",
        "desc": "()Ljava/text/Format;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/text/Format;Ljava/text/Format;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.text.Format"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.ExtendedMessageFormat",
    "setters": [
      {
        "name": "applyPattern",
        "desc": "(Ljava/lang/String;)V",
        "field": "toPattern"
      }
    ],
    "getters": [
      {
        "name": "toPattern",
        "desc": "()Ljava/lang/String;",
        "field": "toPattern"
      }
    ],
    "observers": [
      {
        "name": "toPattern",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Map;)V"
      },
      {
        "name": "setFormat",
        "desc": "(ILjava/text/Format;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;)V"
      },
      {
        "name": "toPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setFormatByArgumentIndex",
        "desc": "(ILjava/text/Format;)V"
      },
      {
        "name": "setFormats",
        "desc": "([Ljava/text/Format;)V"
      },
      {
        "name": "setFormatsByArgumentIndex",
        "desc": "([Ljava/text/Format;)V"
      },
      {
        "name": "applyPattern",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        39,
        44,
        125
      ],
      "char": [
        39,
        44,
        125
      ],
      "short": [
        39,
        44,
        125
      ],
      "int": [
        0,
        1,
        2,
        39,
        44,
        123,
        125
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.text.MessageFormat"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.FormatFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.FormattableUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;Ljava/util/Formatter;IIIC)Ljava/util/Formatter;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;Ljava/util/Formatter;III)Ljava/util/Formatter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/util/Formattable;)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;Ljava/util/Formatter;IIILjava/lang/CharSequence;)Ljava/util/Formatter;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrBuilder",
    "setters": [
      {
        "name": "ensureCapacity",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "buffer"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(I[C)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "([CII)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "setNullText",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "nullText"
      },
      {
        "name": "append",
        "desc": "(Ljava/nio/CharBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "appendPadding",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "appendFixedWidthPadRight",
        "desc": "(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/nio/CharBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(IZ)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "setNewLineText",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "newLine"
      },
      {
        "name": "insert",
        "desc": "(ILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(I[CII)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "readFrom",
        "desc": "(Ljava/lang/Readable;)I",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "setLength",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "appendFixedWidthPadLeft",
        "desc": "(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      }
    ],
    "getters": [
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;",
        "field": "nullText"
      },
      {
        "name": "getNewLineText",
        "desc": "()Ljava/lang/String;",
        "field": "newLine"
      },
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "toCharArray",
        "desc": "()[C"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toStringBuilder",
        "desc": "()Ljava/lang/StringBuilder;"
      },
      {
        "name": "getNewLineText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;"
      },
      {
        "name": "length",
        "desc": "()I"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toStringBuilder",
        "desc": "()Ljava/lang/StringBuilder;"
      },
      {
        "name": "appendln",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/StringBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendWithSeparators",
        "desc": "(Ljava/util/Iterator;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "contains",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Z"
      },
      {
        "name": "appendAll",
        "desc": "(Ljava/util/Iterator;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceAll",
        "desc": "(CC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "setNullText",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/nio/CharBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "([CII)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(ILjava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "getNewLineText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toCharArray",
        "desc": "(II)[C"
      },
      {
        "name": "append",
        "desc": "(J)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "insert",
        "desc": "(II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "substring",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "deleteCharAt",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendNull",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)I"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendNewLine",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "getChars",
        "desc": "(II[CI)V"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;I)I"
      },
      {
        "name": "append",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "substring",
        "desc": "(II)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "([CII)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(ID)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replace",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;III)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceFirst",
        "desc": "(CC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendTo",
        "desc": "(Ljava/lang/Appendable;)V"
      },
      {
        "name": "appendln",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceFirst",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(J)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendAll",
        "desc": "(Ljava/lang/Iterable;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteAll",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceAll",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendWithSeparators",
        "desc": "(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/StringBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "toCharArray",
        "desc": "()[C"
      },
      {
        "name": "appendln",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clear",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(D)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "getChars",
        "desc": "([C)[C"
      },
      {
        "name": "appendFixedWidthPadRight",
        "desc": "(IIC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "equals",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Z"
      },
      {
        "name": "build",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "readFrom",
        "desc": "(Ljava/lang/Readable;)I"
      },
      {
        "name": "replaceFirst",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteAll",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "subSequence",
        "desc": "(II)Ljava/lang/CharSequence;"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "asTokenizer",
        "desc": "()Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "appendFixedWidthPadLeft",
        "desc": "(IIC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(CC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "equalsIgnoreCase",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "appendln",
        "desc": "(F)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;I)I"
      },
      {
        "name": "insert",
        "desc": "(IJ)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceAll",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteFirst",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "asReader",
        "desc": "()Ljava/io/Reader;"
      },
      {
        "name": "validateRange",
        "desc": "(II)I"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/StringBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "reverse",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "setCharAt",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(D)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(Ljava/lang/String;I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "leftString",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "midString",
        "desc": "(II)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendFixedWidthPadRight",
        "desc": "(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(IZ)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteFirst",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replace",
        "desc": "(IILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(ILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteFirst",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/StringBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "rightString",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "appendSeparator",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "delete",
        "desc": "(II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/String;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "length",
        "desc": "()I"
      },
      {
        "name": "contains",
        "desc": "(C)Z"
      },
      {
        "name": "setLength",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "appendFixedWidthPadLeft",
        "desc": "(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(IF)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "ensureCapacity",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(I[C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "toStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "charAt",
        "desc": "(I)C"
      },
      {
        "name": "append",
        "desc": "(F)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "(C)I"
      },
      {
        "name": "minimizeCapacity",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendPadding",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "asWriter",
        "desc": "()Ljava/io/Writer;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/nio/CharBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "indexOf",
        "desc": "(CI)I"
      },
      {
        "name": "appendAll",
        "desc": "([Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)I"
      },
      {
        "name": "setNewLineText",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(CI)I"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "trim",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(CI)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "append",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(I[CII)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteAll",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "validateIndex",
        "desc": "(I)V"
      },
      {
        "name": "indexOf",
        "desc": "(C)I"
      },
      {
        "name": "appendWithSeparators",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        32,
        101
      ],
      "char": [
        32,
        101
      ],
      "short": [
        32,
        101
      ],
      "int": [
        -1,
        0,
        1,
        2,
        4,
        5,
        32,
        101
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.CharSequence",
      "java.lang.Appendable",
      "java.io.Serializable",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrBuilder$StrBuilderReader",
    "setters": [
      {
        "name": "read",
        "desc": "([CII)I",
        "field": "pos"
      },
      {
        "name": "mark",
        "desc": "(I)V",
        "field": "mark"
      },
      {
        "name": "skip",
        "desc": "(J)J",
        "field": "pos"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "ready",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)V"
      },
      {
        "name": "read",
        "desc": "([CII)I"
      },
      {
        "name": "ready",
        "desc": "()Z"
      },
      {
        "name": "mark",
        "desc": "(I)V"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "markSupported",
        "desc": "()Z"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.io.Reader"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrBuilder",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getContent",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)V"
      },
      {
        "name": "getContent",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "tokenize",
        "desc": "([CII)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrTokenizer"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrBuilder",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)V"
      },
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "([C)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.Writer"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrBuilder",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrLookup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrLookup$MapStrLookup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "lookup",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrLookup"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrLookup",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        9,
        32,
        34,
        39,
        44
      ],
      "char": [
        32,
        34,
        39,
        44
      ],
      "short": [
        9,
        32,
        34,
        39,
        44
      ],
      "int": [
        0,
        1,
        9,
        32,
        34,
        39,
        44
      ],
      "str": [
        "'\""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$CharMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(C)V"
      },
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$CharSetMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      },
      {
        "name": "<init>",
        "desc": "([C)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$NoMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$StringMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$TrimMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        32
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrSubstitutor",
    "setters": [
      {
        "name": "setEscapeChar",
        "desc": "(C)V",
        "field": "escapeChar"
      },
      {
        "name": "setEnableSubstitutionInVariables",
        "desc": "(Z)V",
        "field": "enableSubstitutionInVariables"
      },
      {
        "name": "setVariableSuffixMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;",
        "field": "suffixMatcher"
      },
      {
        "name": "setValueDelimiterMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;",
        "field": "valueDelimiterMatcher"
      },
      {
        "name": "setVariableResolver",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;)V",
        "field": "variableResolver"
      },
      {
        "name": "setVariablePrefixMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;",
        "field": "prefixMatcher"
      }
    ],
    "getters": [
      {
        "name": "getVariableSuffixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "suffixMatcher"
      },
      {
        "name": "getVariableResolver",
        "desc": "()Lorg/apache/commons/lang3/text/StrLookup;",
        "field": "variableResolver"
      },
      {
        "name": "getVariablePrefixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "prefixMatcher"
      },
      {
        "name": "isEnableSubstitutionInVariables",
        "desc": "()Z",
        "field": "enableSubstitutionInVariables"
      },
      {
        "name": "getValueDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "valueDelimiterMatcher"
      },
      {
        "name": "getEscapeChar",
        "desc": "()C",
        "field": "escapeChar"
      }
    ],
    "observers": [
      {
        "name": "getVariableSuffixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getVariableResolver",
        "desc": "()Lorg/apache/commons/lang3/text/StrLookup;"
      },
      {
        "name": "getVariablePrefixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "isEnableSubstitutionInVariables",
        "desc": "()Z"
      },
      {
        "name": "getValueDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getEscapeChar",
        "desc": "()C"
      }
    ],
    "testableMethods": [
      {
        "name": "replaceSystemProperties",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "replaceIn",
        "desc": "(Ljava/lang/StringBuffer;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;C)V"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "setValueDelimiter",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "replaceIn",
        "desc": "(Ljava/lang/StringBuilder;II)Z"
      },
      {
        "name": "isEnableSubstitutionInVariables",
        "desc": "()Z"
      },
      {
        "name": "getEscapeChar",
        "desc": "()C"
      },
      {
        "name": "setVariablePrefixMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "replaceIn",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Z"
      },
      {
        "name": "getVariablePrefixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getVariableSuffixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "replaceIn",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Z"
      },
      {
        "name": "getVariableResolver",
        "desc": "()Lorg/apache/commons/lang3/text/StrLookup;"
      },
      {
        "name": "getValueDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "setEnableSubstitutionInVariables",
        "desc": "(Z)V"
      },
      {
        "name": "setVariablePrefix",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "setVariableSuffix",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/CharSequence;II)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "resolveVariable",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrBuilder;II)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/StringBuffer;II)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/String;"
      },
      {
        "name": "setEscapeChar",
        "desc": "(C)V"
      },
      {
        "name": "setValueDelimiter",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "setVariableSuffix",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;C)V"
      },
      {
        "name": "replace",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Ljava/lang/String;"
      },
      {
        "name": "replaceIn",
        "desc": "(Ljava/lang/StringBuffer;II)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;CLorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "setVariablePrefix",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;Ljava/lang/String;Ljava/lang/String;C)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;)V"
      },
      {
        "name": "setVariableSuffixMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "replace",
        "desc": "([C)Ljava/lang/String;"
      },
      {
        "name": "replaceIn",
        "desc": "(Ljava/lang/StringBuilder;)Z"
      },
      {
        "name": "replace",
        "desc": "([CII)Ljava/lang/String;"
      },
      {
        "name": "substitute",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Z"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/StringBuffer;)Ljava/lang/String;"
      },
      {
        "name": "setValueDelimiterMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "setVariableResolver",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36,
        256
      ],
      "int": [
        0,
        1,
        36,
        256
      ],
      "str": [
        "->",
        ":-",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrTokenizer",
    "setters": [
      {
        "name": "reset",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "chars"
      },
      {
        "name": "setIgnoreEmptyTokens",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "ignoreEmptyTokens"
      },
      {
        "name": "setDelimiterMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "delimMatcher"
      },
      {
        "name": "setQuoteMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "quoteMatcher"
      },
      {
        "name": "setIgnoredMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "ignoredMatcher"
      },
      {
        "name": "setTrimmerMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "trimmerMatcher"
      },
      {
        "name": "setEmptyTokenAsNull",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "emptyAsNull"
      },
      {
        "name": "reset",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "chars"
      }
    ],
    "getters": [
      {
        "name": "isIgnoreEmptyTokens",
        "desc": "()Z",
        "field": "ignoreEmptyTokens"
      },
      {
        "name": "getIgnoredMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "ignoredMatcher"
      },
      {
        "name": "getTrimmerMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "trimmerMatcher"
      },
      {
        "name": "getDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "delimMatcher"
      },
      {
        "name": "getQuoteMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "quoteMatcher"
      },
      {
        "name": "isEmptyTokenAsNull",
        "desc": "()Z",
        "field": "emptyAsNull"
      }
    ],
    "observers": [
      {
        "name": "isIgnoreEmptyTokens",
        "desc": "()Z"
      },
      {
        "name": "getTokenList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getContent",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getIgnoredMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getTrimmerMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getTokenArray",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getQuoteMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "isEmptyTokenAsNull",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "setDelimiterChar",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "cloneReset",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "([C)V"
      },
      {
        "name": "hasPrevious",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getTokenArray",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "reset",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setIgnoreEmptyTokens",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "([CC)V"
      },
      {
        "name": "<init>",
        "desc": "([CLorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "tokenize",
        "desc": "([CII)Ljava/util/List;"
      },
      {
        "name": "setDelimiterMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "getIgnoredMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getTrimmerMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "previousIndex",
        "desc": "()I"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getCSVInstance",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "clone",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "previous",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getQuoteMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "setTrimmerMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "getTokenList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "nextIndex",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "([CCC)V"
      },
      {
        "name": "getDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "setQuoteMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "setIgnoredMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "getTSVInstance",
        "desc": "()Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "getTSVInstance",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "reset",
        "desc": "()Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "getTSVInstance",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "nextToken",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "getCSVInstance",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setDelimiterString",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;C)V"
      },
      {
        "name": "setQuoteChar",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "<init>",
        "desc": "([CLorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "setIgnoredChar",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "setEmptyTokenAsNull",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "isIgnoreEmptyTokens",
        "desc": "()Z"
      },
      {
        "name": "getContent",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;CC)V"
      },
      {
        "name": "reset",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "next",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([CLjava/lang/String;)V"
      },
      {
        "name": "previousToken",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEmptyTokenAsNull",
        "desc": "()Z"
      },
      {
        "name": "getCSVInstance",
        "desc": "()Lorg/apache/commons/lang3/text/StrTokenizer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.ListIterator",
      "java.lang.Cloneable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.WordUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "capitalizeFully",
        "desc": "(Ljava/lang/String;[C)Ljava/lang/String;"
      },
      {
        "name": "initials",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "uncapitalize",
        "desc": "(Ljava/lang/String;[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "capitalize",
        "desc": "(Ljava/lang/String;[C)Ljava/lang/String;"
      },
      {
        "name": "capitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "capitalizeFully",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "uncapitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "swapCase",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;"
      },
      {
        "name": "initials",
        "desc": "(Ljava/lang/String;[C)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        0,
        1,
        2,
        32
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.AggregateTranslator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      },
      {
        "name": "<init>",
        "desc": "([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        14,
        15,
        16,
        69,
        70
      ],
      "char": [
        69,
        70
      ],
      "short": [
        14,
        15,
        16,
        69,
        70
      ],
      "int": [
        0,
        1,
        2,
        14,
        15,
        16,
        69,
        70
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.CodePointTranslator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.EntityArrays",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "BASIC_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "APOS_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "ISO8859_1_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "ISO8859_1_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "HTML40_EXTENDED_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "JAVA_CTRL_CHARS_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "HTML40_EXTENDED_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "invert",
        "desc": "([[Ljava/lang/String;)[[Ljava/lang/String;"
      },
      {
        "name": "APOS_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "JAVA_CTRL_CHARS_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "BASIC_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "\\r"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "below",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;"
      },
      {
        "name": "outsideOf",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;"
      },
      {
        "name": "<init>",
        "desc": "(IIZ)V"
      },
      {
        "name": "toUtf16Escape",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "above",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;"
      },
      {
        "name": "between",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.UnicodeEscaper"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.LookupTranslator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([[Ljava/lang/CharSequence;)V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.NumericEntityEscaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "between",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;"
      },
      {
        "name": "above",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(ILjava/io/Writer;)Z"
      },
      {
        "name": "below",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;"
      },
      {
        "name": "outsideOf",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2147483647
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CodePointTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Lorg/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION;)V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      },
      {
        "name": "isSet",
        "desc": "(Lorg/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        35,
        38,
        48,
        57,
        59,
        65,
        70,
        88,
        97,
        102,
        120
      ],
      "char": [
        35,
        38,
        48,
        57,
        59,
        65,
        70,
        88,
        97,
        102,
        120
      ],
      "short": [
        35,
        38,
        48,
        57,
        59,
        65,
        70,
        88,
        97,
        102,
        120
      ],
      "int": [
        0,
        1,
        2,
        35,
        38,
        48,
        57,
        59,
        65,
        70,
        88,
        97,
        102,
        120,
        65535
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "errorIfNoSemiColon",
        "semiColonOptional",
        "semiColonRequired"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.OctalUnescaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "byte": [
        48,
        51,
        55,
        92
      ],
      "char": [
        48,
        51,
        55,
        92
      ],
      "short": [
        48,
        51,
        55,
        92
      ],
      "int": [
        1,
        2,
        48,
        51,
        55,
        92
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.UnicodeEscaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "below",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;"
      },
      {
        "name": "between",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;"
      },
      {
        "name": "above",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;"
      },
      {
        "name": "<init>",
        "desc": "(IIZ)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "outsideOf",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;"
      },
      {
        "name": "toUtf16Escape",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "translate",
        "desc": "(ILjava/io/Writer;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        65535,
        2147483647
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CodePointTranslator"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.UnicodeUnescaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "byte": [
        43,
        92,
        117
      ],
      "char": [
        43,
        92,
        117
      ],
      "short": [
        43,
        92,
        117
      ],
      "int": [
        1,
        4,
        43,
        92,
        117
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(ILjava/io/Writer;)Z"
      }
    ],
    "dictionary": {
      "int": [
        55296,
        57343
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CodePointTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateFormatUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "formatUTC",
        "desc": "(JLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "formatUTC",
        "desc": "(JLjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "formatUTC",
        "desc": "(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "formatUTC",
        "desc": "(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "HH:mm:ssZZ"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateParser",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DatePrinter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMonths",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "getFragmentInDays",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "parseDate",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "addDays",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncatedEquals",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;I)Z"
      },
      {
        "name": "getFragmentInMinutes",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "getFragmentInHours",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "getFragmentInHours",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "parseDateStrictly",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "parseDate",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "round",
        "desc": "(Ljava/util/Calendar;I)Ljava/util/Calendar;"
      },
      {
        "name": "getFragmentInMilliseconds",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "toCalendar",
        "desc": "(Ljava/util/Date;)Ljava/util/Calendar;"
      },
      {
        "name": "setSeconds",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncate",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "iterator",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Iterator;"
      },
      {
        "name": "addSeconds",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "addYears",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "setHours",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "parseDateStrictly",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "iterator",
        "desc": "(Ljava/util/Date;I)Ljava/util/Iterator;"
      },
      {
        "name": "getFragmentInMinutes",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "isSameInstant",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;)Z"
      },
      {
        "name": "setMinutes",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "round",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Date;"
      },
      {
        "name": "addMinutes",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "addHours",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncatedCompareTo",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;I)I"
      },
      {
        "name": "getFragmentInSeconds",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "round",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncate",
        "desc": "(Ljava/util/Calendar;I)Ljava/util/Calendar;"
      },
      {
        "name": "addWeeks",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "isSameDay",
        "desc": "(Ljava/util/Date;Ljava/util/Date;)Z"
      },
      {
        "name": "truncatedCompareTo",
        "desc": "(Ljava/util/Date;Ljava/util/Date;I)I"
      },
      {
        "name": "setYears",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "addMilliseconds",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "isSameDay",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;)Z"
      },
      {
        "name": "truncatedEquals",
        "desc": "(Ljava/util/Date;Ljava/util/Date;I)Z"
      },
      {
        "name": "ceiling",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Date;"
      },
      {
        "name": "getFragmentInMilliseconds",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "setMonths",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "getFragmentInDays",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isSameLocalTime",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;)Z"
      },
      {
        "name": "ceiling",
        "desc": "(Ljava/util/Calendar;I)Ljava/util/Calendar;"
      },
      {
        "name": "setDays",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "ceiling",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "setMilliseconds",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncate",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Date;"
      },
      {
        "name": "isSameInstant",
        "desc": "(Ljava/util/Date;Ljava/util/Date;)Z"
      },
      {
        "name": "getFragmentInSeconds",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "iterator",
        "desc": "(Ljava/util/Calendar;I)Ljava/util/Iterator;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        30
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        30,
        500,
        1001
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        30,
        500,
        1001,
        280000000
      ],
      "long": [
        0,
        1000
      ],
      "str": [
        "",
        "ZZ"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateUtils$DateIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;)V"
      },
      {
        "name": "next",
        "desc": "()Ljava/util/Calendar;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        5
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "org.apache.commons.lang3.time.DateUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateUtils$ModifyType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "CEILING",
        "ROUND",
        "TRUNCATE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.time.DateUtils",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DurationFormatUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "formatDuration",
        "desc": "(JLjava/lang/String;Z)Ljava/lang/String;"
      },
      {
        "name": "formatPeriodISO",
        "desc": "(JJ)Ljava/lang/String;"
      },
      {
        "name": "formatDurationHMS",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "formatPeriod",
        "desc": "(JJLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "formatDurationISO",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "format",
        "desc": "([Lorg/apache/commons/lang3/time/DurationFormatUtils$Token;JJJJJJJZ)Ljava/lang/String;"
      },
      {
        "name": "formatDuration",
        "desc": "(JLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "formatPeriod",
        "desc": "(JJLjava/lang/String;ZLjava/util/TimeZone;)Ljava/lang/String;"
      },
      {
        "name": "formatDurationWords",
        "desc": "(JZZ)Ljava/lang/String;"
      },
      {
        "name": "lexx",
        "desc": "(Ljava/lang/String;)[Lorg/apache/commons/lang3/time/DurationFormatUtils$Token;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        29,
        39
      ],
      "char": [
        39
      ],
      "short": [
        6,
        29,
        39
      ],
      "int": [
        0,
        1,
        2,
        5,
        6,
        29,
        39,
        72,
        77,
        83,
        100,
        109,
        115,
        121
      ],
      "long": [
        60000,
        3600000,
        86400000
      ],
      "str": [
        "",
        "S",
        "s"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DurationFormatUtils$Token",
    "setters": [],
    "getters": [
      {
        "name": "getCount",
        "desc": "()I",
        "field": "count"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "containsTokenWithValue",
        "desc": "([Lorg/apache/commons/lang3/time/DurationFormatUtils$Token;Ljava/lang/Object;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;I)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.DurationFormatUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateFormat",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;Ljava/util/Date;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "applyRules",
        "desc": "(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateTimeInstance",
        "desc": "(IILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateTimeInstance",
        "desc": "(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getTimeInstance",
        "desc": "(I)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;)Ljava/lang/String;"
      },
      {
        "name": "getDateInstance",
        "desc": "(I)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getDateInstance",
        "desc": "(ILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getTimeInstance",
        "desc": "(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "format",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "getTimeInstance",
        "desc": "(ILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateTimeInstance",
        "desc": "(IILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateInstance",
        "desc": "(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateTimeInstance",
        "desc": "(II)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;)Ljava/lang/String;"
      },
      {
        "name": "getDateInstance",
        "desc": "(ILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getTimeInstance",
        "desc": "(ILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.text.Format",
      "org.apache.commons.lang3.time.DateParser",
      "org.apache.commons.lang3.time.DatePrinter"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateFormat$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.FormatCache"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser",
    "setters": [],
    "getters": [
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;",
        "field": "timeZone"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;",
        "field": "locale"
      },
      {
        "name": "getParsePattern",
        "desc": "()Ljava/util/regex/Pattern;",
        "field": "parsePattern"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;",
        "field": "pattern"
      }
    ],
    "observers": [
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldWidth",
        "desc": "()I"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getParsePattern",
        "desc": "()Ljava/util/regex/Pattern;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isNextNumber",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;Ljava/util/Date;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getFieldWidth",
        "desc": "()I"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"
      },
      {
        "name": "getParsePattern",
        "desc": "()Ljava/util/regex/Pattern;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isNextNumber",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        69,
        100
      ],
      "char": [
        69,
        100
      ],
      "short": [
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        69,
        100
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        39,
        69,
        92,
        100
      ],
      "str": [
        "'",
        "(Z|(?:[+-]\\d{2}(?::?\\d{2})?))",
        "JP",
        "ZZ",
        "ja"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.DateParser",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        1,
        100
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        24
      ],
      "short": [
        24
      ],
      "int": [
        24
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        12
      ],
      "short": [
        12
      ],
      "int": [
        12
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        41
      ],
      "char": [
        41
      ],
      "short": [
        41
      ],
      "int": [
        1,
        41
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        39
      ],
      "char": [
        39
      ],
      "short": [
        39
      ],
      "int": [
        0,
        1,
        39
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "(Z|(?:[+-]\\d{2}(?::)\\d{2}))",
        "(Z|(?:[+-]\\d{2}))",
        "(Z|(?:[+-]\\d{2}\\d{2}))",
        "UTC",
        "Z"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isNumber",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$Strategy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isNumber",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        41,
        43,
        45
      ],
      "char": [
        41,
        43,
        45
      ],
      "short": [
        41,
        43,
        45
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        41,
        43,
        45
      ],
      "str": [
        "GMT"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter",
    "setters": [],
    "getters": [
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I",
        "field": "mMaxLengthEstimate"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;",
        "field": "mTimeZone"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;",
        "field": "mLocale"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;",
        "field": "mPattern"
      }
    ],
    "observers": [
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "applyRules",
        "desc": "(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getTimeZoneDisplay",
        "desc": "(Ljava/util/TimeZone;ZILjava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "format",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "parsePattern",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "parseToken",
        "desc": "(Ljava/lang/String;[I)Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "selectNumberRule",
        "desc": "(II)Lorg/apache/commons/lang3/time/FastDatePrinter$NumberRule;"
      },
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;)Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        9,
        10,
        11,
        39,
        48,
        65,
        90,
        97,
        122
      ],
      "char": [
        39,
        48,
        65,
        90,
        97,
        122
      ],
      "short": [
        7,
        9,
        10,
        11,
        39,
        48,
        65,
        90,
        97,
        122
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        7,
        9,
        10,
        11,
        39,
        48,
        65,
        90,
        97,
        122
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.DatePrinter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6,
        15,
        16
      ],
      "short": [
        6,
        15,
        16
      ],
      "int": [
        3,
        5,
        6,
        15,
        16
      ],
      "str": [
        "Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$NumberRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        0,
        3,
        10
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$Rule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$StringLiteral",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TextField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -2147483648,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        0,
        1,
        16
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        0,
        1,
        16
      ],
      "str": [
        "UTC",
        "Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        10
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        11
      ],
      "short": [
        11
      ],
      "int": [
        11
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        100
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        1,
        100
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        1,
        2,
        10
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10,
        100
      ],
      "char": [
        100
      ],
      "short": [
        10,
        100
      ],
      "int": [
        10,
        100
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FormatCache",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInstance",
        "desc": "()Ljava/text/Format;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        7
      ],
      "short": [
        7
      ],
      "int": [
        1,
        2,
        7
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FormatCache$MultipartKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.FormatCache",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSplitNanoTime",
        "desc": "()J"
      },
      {
        "name": "getNanoTime",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTime",
        "desc": "()J"
      },
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "getSplitTime",
        "desc": "()J"
      },
      {
        "name": "getStartTime",
        "desc": "()J"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "suspend",
        "desc": "()V"
      },
      {
        "name": "resume",
        "desc": "()V"
      },
      {
        "name": "getSplitNanoTime",
        "desc": "()J"
      },
      {
        "name": "getNanoTime",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "unsplit",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "split",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "getStartTime",
        "desc": "()J"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      },
      {
        "name": "getTime",
        "desc": "()J"
      },
      {
        "name": "toSplitString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "getSplitTime",
        "desc": "()J"
      },
      {
        "name": "start",
        "desc": "()V"
      },
      {
        "name": "stop",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.StopWatch",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$SplitState",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "SPLIT",
        "UNSPLIT"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.time.StopWatch",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "RUNNING",
        "STOPPED",
        "SUSPENDED",
        "UNSTARTED"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.time.StopWatch",
    "access": 17418,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.StopWatch$State"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State$2",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.StopWatch$State"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State$3",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.StopWatch$State"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State$4",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.StopWatch$State"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.ImmutablePair",
    "setters": [],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "left"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "right"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/ImmutablePair;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.tuple.Pair"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.ImmutableTriple",
    "setters": [],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "left"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "right"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;",
        "field": "middle"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/ImmutableTriple;"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.tuple.Triple"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.MutablePair",
    "setters": [
      {
        "name": "setLeft",
        "desc": "(Ljava/lang/Object;)V",
        "field": "left"
      },
      {
        "name": "setRight",
        "desc": "(Ljava/lang/Object;)V",
        "field": "right"
      }
    ],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "left"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "right"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setLeft",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "setRight",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/MutablePair;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.tuple.Pair"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.MutableTriple",
    "setters": [
      {
        "name": "setLeft",
        "desc": "(Ljava/lang/Object;)V",
        "field": "left"
      },
      {
        "name": "setMiddle",
        "desc": "(Ljava/lang/Object;)V",
        "field": "middle"
      },
      {
        "name": "setRight",
        "desc": "(Ljava/lang/Object;)V",
        "field": "right"
      }
    ],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "left"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "right"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;",
        "field": "middle"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/MutableTriple;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setLeft",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "setRight",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "setMiddle",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.tuple.Triple"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.Pair",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Map$Entry",
      "java.lang.Comparable",
      "java.io.Serializable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.Triple",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable",
      "java.io.Serializable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.BaseDescription",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        34
      ],
      "char": [
        34
      ],
      "short": [
        34
      ],
      "int": [
        0,
        9,
        10,
        13,
        34
      ],
      "str": [
        "F>",
        "L>",
        "[",
        "]",
        "null",
        "s>"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.hamcrest.Description"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.BaseMatcher",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.Matcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.hamcrest.Condition",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition$Matched",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.Condition"
    ],
    "outerClass": "org.hamcrest.Condition",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition$NotMatched",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.Condition"
    ],
    "outerClass": "org.hamcrest.Condition",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition$Step",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.hamcrest.Condition",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.CoreMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "notNullValue",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "describedAs",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;[Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "(Ljava/lang/Iterable;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "hasItems",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "containsString",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "sameInstance",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "instanceOf",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "nullValue",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItem",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "not",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isA",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anything",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "is",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "either",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableEitherMatcher;"
      },
      {
        "name": "anything",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "any",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "everyItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "equalTo",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Ljava/lang/Iterable;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "notNullValue",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "nullValue",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "not",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "theInstance",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "both",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableBothMatcher;"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.CustomMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.CustomTypeSafeMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Description",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Description$NullDescription",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "appendValueList",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lorg/hamcrest/Description;"
      },
      {
        "name": "appendDescriptionOf",
        "desc": "(Lorg/hamcrest/SelfDescribing;)Lorg/hamcrest/Description;"
      },
      {
        "name": "appendValueList",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Lorg/hamcrest/Description;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "appendValue",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Description;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "appendList",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Lorg/hamcrest/Description;"
      },
      {
        "name": "appendText",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Description;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.Description"
    ],
    "outerClass": "org.hamcrest.Description",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.DiagnosingMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Factory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.FeatureMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "featureValueOf"
      ]
    },
    "parents": [
      "org.hamcrest.TypeSafeDiagnosingMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Matcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.SelfDescribing"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.MatcherAssert",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.SelfDescribing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.StringDescription",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "asString",
        "desc": "(Lorg/hamcrest/SelfDescribing;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "append",
        "desc": "(C)V"
      },
      {
        "name": "toString",
        "desc": "(Lorg/hamcrest/SelfDescribing;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Appendable;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseDescription"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.TypeSafeDiagnosingMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        2
      ],
      "str": [
        "matchesSafely"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.TypeSafeMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "matchesSafely"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.AllOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "allOf",
        "desc": "(Ljava/lang/Iterable;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Iterable;)V"
      },
      {
        "name": "allOf",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        2,
        3,
        4,
        5,
        6
      ],
      "str": [
        "(",
        ")"
      ]
    },
    "parents": [
      "org.hamcrest.DiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.AnyOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "anyOf",
        "desc": "(Ljava/lang/Iterable;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Iterable;)V"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "or"
      ]
    },
    "parents": [
      "org.hamcrest.core.ShortcutCombination"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.CombinableMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "and",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher;"
      },
      {
        "name": "or",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "both",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableBothMatcher;"
      },
      {
        "name": "either",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableEitherMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeDiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "and",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.hamcrest.core.CombinableMatcher",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "or",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.hamcrest.core.CombinableMatcher",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.DescribedAs",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "describedAs",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;[Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "describeMismatch",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;[Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "%([0-9]+)"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.Every",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Iterable;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "everyItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeDiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.Is",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "describeMismatch",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)V"
      },
      {
        "name": "isA",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "is",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsAnything",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "anything",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "anything",
        "desc": "()Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "str": [
        "ANYTHING"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsCollectionContaining",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Iterable;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "hasItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItem",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.hamcrest.TypeSafeDiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsEqual",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "equalTo",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsInstanceOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "instanceOf",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "any",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.hamcrest.DiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsNot",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "not",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "not",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsNull",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "notNullValue",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "nullValue",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "notNullValue",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "nullValue",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "str": [
        "null"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsSame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "theInstance",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "sameInstance",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.ShortcutCombination",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "(",
        ")"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1056,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.StringContains",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "evalSubstringOf",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "containsString",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.core.SubstringMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.StringEndsWith",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "evalSubstringOf",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.core.SubstringMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.StringStartsWith",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "evalSubstringOf",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.core.SubstringMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.SubstringMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "\""
      ]
    },
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.internal.ArrayIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "next",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "remove",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.internal.ReflectiveTypeFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "canObtainExpectedTypeFrom",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "expectedTypeFrom",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/Class;"
      },
      {
        "name": "findExpectedType",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.internal.SelfDescribingValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.SelfDescribing"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.internal.SelfDescribingValueIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "next",
        "desc": "()Lorg/hamcrest/SelfDescribing;"
      }
    ],
    "testableMethods": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Iterator;)V"
      },
      {
        "name": "next",
        "desc": "()Lorg/hamcrest/SelfDescribing;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.IAgent",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.RT",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getAgent",
        "desc": "()Lorg/jacoco/agent/rt/IAgent;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.Agent",
    "setters": [],
    "getters": [
      {
        "name": "getData",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;",
        "field": "data"
      }
    ],
    "observers": [
      {
        "name": "getData",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "startup",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/IExceptionLogger;)V"
      },
      {
        "name": "dump",
        "desc": "(Z)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;)Lorg/jacoco/agent/rt/internal_43f5073/Agent;"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/Agent;"
      },
      {
        "name": "getData",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;"
      },
      {
        "name": "createAgentOutput",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/output/IAgentOutput;"
      },
      {
        "name": "setSessionId",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getExecutionData",
        "desc": "(Z)[B"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "unknownhost"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.IAgent"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.Agent$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Thread"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.Agent$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        4
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.Agent",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.ClassFileDumper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "dump",
        "desc": "(Ljava/lang/String;[B)V"
      }
    ],
    "dictionary": {
      "byte": [
        47
      ],
      "char": [
        47
      ],
      "short": [
        47
      ],
      "int": [
        -1,
        0,
        1,
        47
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.ConfigLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "load",
        "desc": "(Ljava/lang/String;Ljava/util/Properties;)Ljava/util/Properties;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "\\$\\{([^\\}]+)\\}",
        "jacoco-agent."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.CoverageTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRuntime;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/IExceptionLogger;)V"
      },
      {
        "name": "transform",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B"
      },
      {
        "name": "filter",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/security/ProtectionDomain;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        0,
        46
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.instrument.ClassFileTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.IExceptionLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.IExceptionLogger$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.IExceptionLogger"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.JmxRegistration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/IAgent;)V"
      },
      {
        "name": "call",
        "desc": "()Ljava/lang/Void;"
      }
    ],
    "dictionary": {
      "str": [
        "org.jacoco:type=Runtime"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.Offline",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getProbes",
        "desc": "(JLjava/lang/String;I)[Z"
      }
    ],
    "dictionary": {
      "str": [
        "/jacoco-agent.properties"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.PreMain",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "premain",
        "desc": "(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V"
      }
    ],
    "dictionary": {
      "str": [
        "$JaCoCo"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.AnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.AnnotationWriter",
    "setters": [
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "numElementValuePairs"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "numElementValuePairs"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "numElementValuePairs"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "numElementValuePairs"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "computeAnnotationsSize",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "putParameterAnnotations",
        "desc": "(I[Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;ILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ZLorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;)V"
      },
      {
        "name": "computeParameterAnnotationsSize",
        "desc": "(Ljava/lang/String;[Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;I)I"
      },
      {
        "name": "create",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "putAnnotations",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "create",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;"
      },
      {
        "name": "computeAnnotationsSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;)I"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "putAnnotations",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      }
    ],
    "dictionary": {
      "byte": [
        90,
        91
      ],
      "char": [
        90,
        91
      ],
      "short": [
        90,
        91
      ],
      "int": [
        -1,
        0,
        1,
        2,
        90,
        91,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.AnnotationVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Attribute",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "getLabels",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassWriter;[BIII)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "computeAttributesSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;)I"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;IILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "getLabels",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      },
      {
        "name": "computeAttributesSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;[BIII)I"
      },
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;[BIIILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "computeAttributesSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;II)I"
      },
      {
        "name": "read",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;II[CI[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;"
      }
    ],
    "dictionary": {
      "byte": [
        49
      ],
      "char": [
        49
      ],
      "short": [
        49,
        4096
      ],
      "int": [
        -1,
        0,
        49,
        4096,
        131072
      ],
      "str": [
        "Deprecated",
        "Synthetic"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Attribute$Set",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toArray",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;"
      }
    ],
    "testableMethods": [
      {
        "name": "addAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toArray",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        1,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.asm.Attribute",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ByteVector",
    "setters": [
      {
        "name": "putInt",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putLong",
        "desc": "(J)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByte",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "encodeUtf8",
        "desc": "(Ljava/lang/String;II)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "putInt",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "put11",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "put122",
        "desc": "(III)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putLong",
        "desc": "(J)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "put112",
        "desc": "(III)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "put12",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putByte",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        64,
        127
      ],
      "char": [
        64
      ],
      "short": [
        8,
        64,
        127,
        2047
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        64,
        127,
        2047,
        65535
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ClassReader",
    "setters": [],
    "getters": [
      {
        "name": "getMaxStringLength",
        "desc": "()I",
        "field": "maxStringLength"
      }
    ],
    "observers": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMaxStringLength",
        "desc": "()I"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getFirstAttributeOffset",
        "desc": "()I"
      },
      {
        "name": "getItemCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readConst",
        "desc": "(I[C)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "getItemCount",
        "desc": "()I"
      },
      {
        "name": "readUTF8",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "readInt",
        "desc": "(I)I"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "([BIZ)V"
      },
      {
        "name": "getMaxStringLength",
        "desc": "()I"
      },
      {
        "name": "readLong",
        "desc": "(I)J"
      },
      {
        "name": "getItem",
        "desc": "(I)I"
      },
      {
        "name": "readLabel",
        "desc": "(I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "readClass",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;I)V"
      },
      {
        "name": "readUnsignedShort",
        "desc": "(I)I"
      },
      {
        "name": "readModule",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "readUtf",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "readPackage",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "getFirstAttributeOffset",
        "desc": "()I"
      },
      {
        "name": "readByte",
        "desc": "(I)I"
      },
      {
        "name": "readShort",
        "desc": "(I)S"
      }
    ],
    "dictionary": {
      "byte": [
        -2,
        6,
        8,
        11,
        24,
        33,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91
      ],
      "char": [
        33,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91
      ],
      "short": [
        -2,
        6,
        8,
        11,
        24,
        33,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91,
        128,
        132,
        167,
        168,
        182,
        185,
        187,
        192,
        218,
        224,
        247,
        248,
        251,
        255,
        256,
        4096
      ],
      "int": [
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        11,
        21,
        22,
        23,
        24,
        25,
        33,
        54,
        55,
        56,
        57,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91,
        101,
        128,
        132,
        167,
        168,
        169,
        182,
        185,
        187,
        192,
        218,
        224,
        247,
        248,
        251,
        255,
        256,
        4096,
        131072
      ],
      "str": [
        "<init>",
        "AnnotationDefault",
        "BootstrapMethods",
        "Code",
        "ConstantValue",
        "Deprecated",
        "EnclosingMethod",
        "Exceptions",
        "InnerClasses",
        "LineNumberTable",
        "LocalVariableTable",
        "LocalVariableTypeTable",
        "MethodParameters",
        "Module",
        "ModuleMainClass",
        "ModulePackages",
        "NestHost",
        "NestMembers",
        "RuntimeInvisibleAnnotations",
        "RuntimeInvisibleParameterAnnotations",
        "RuntimeInvisibleTypeAnnotations",
        "RuntimeVisibleAnnotations",
        "RuntimeVisibleParameterAnnotations",
        "RuntimeVisibleTypeAnnotations",
        "Signature",
        "SourceDebugExtension",
        "SourceFile",
        "StackMap",
        "StackMapTable",
        "Synthetic"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ClassTooLargeException",
    "setters": [],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I",
        "field": "constantPoolCount"
      }
    ],
    "observers": [
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.IndexOutOfBoundsException"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ClassWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      },
      {
        "name": "visitNestMember",
        "desc": "(Ljava/lang/String;)V",
        "field": "numberOfNestMemberClasses"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "enclosingClassIndex"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "debugExtension"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;",
        "field": "lastMethod"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/FieldVisitor;",
        "field": "lastField"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "version"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
        "field": "numberOfInnerClasses"
      },
      {
        "name": "visitModule",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/ModuleVisitor;",
        "field": "moduleWriter"
      },
      {
        "name": "visitNestHost",
        "desc": "(Ljava/lang/String;)V",
        "field": "nestHostClassIndex"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "newInvokeDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)I"
      },
      {
        "name": "visitNestMember",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "newField",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newNameType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "newHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;"
      },
      {
        "name": "newPackage",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "newConstantDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)I"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/FieldVisitor;"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "newMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "newHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newModule",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "newMethodType",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "newClass",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "newConst",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "visitModule",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/ModuleVisitor;"
      },
      {
        "name": "visitNestHost",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;I)V"
      },
      {
        "name": "getCommonSuperClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        49,
        51
      ],
      "char": [
        49,
        51
      ],
      "short": [
        9,
        49,
        51,
        4096
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        9,
        49,
        51,
        4096,
        65535,
        131072,
        458752,
        2147483647
      ],
      "str": [
        "EnclosingMethod",
        "InnerClasses",
        "Signature",
        "SourceDebugExtension",
        "Synthetic"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ConstantDynamic",
    "setters": [],
    "getters": [
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;",
        "field": "bootstrapMethod"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;",
        "field": "bootstrapMethodArguments"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      }
    ],
    "observers": [
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethodArgumentCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getBootstrapMethodArgument",
        "desc": "(I)Ljava/lang/Object;"
      },
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getBootstrapMethodArgumentCount",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        68,
        74
      ],
      "char": [
        68,
        74
      ],
      "short": [
        68,
        74
      ],
      "int": [
        0,
        1,
        68,
        74
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Context",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.CurrentFrame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "execute",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.Frame"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Edge",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Edge;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.FieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.FieldWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "computeFieldInfoSize",
        "desc": "()I"
      },
      {
        "name": "collectAttributePrototypes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute$Set;)V"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "putFieldInfo",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        49
      ],
      "char": [
        49
      ],
      "short": [
        8,
        49,
        4096
      ],
      "int": [
        0,
        1,
        8,
        49,
        4096,
        131072,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.FieldVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Frame",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInputStackSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getAbstractTypeFromApiFormat",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Ljava/lang/Object;)I"
      },
      {
        "name": "execute",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;)V"
      },
      {
        "name": "setInputFrameFromDescriptor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILjava/lang/String;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "merge",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Lorg/jacoco/agent/rt/internal_43f5073/asm/Frame;I)Z"
      },
      {
        "name": "copyFrom",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Frame;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodWriter;)V"
      },
      {
        "name": "getAbstractTypeFromInternalName",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Ljava/lang/String;)I"
      },
      {
        "name": "setInputFrameFromApiFormat",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;I[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "getInputStackSize",
        "desc": "()I"
      },
      {
        "name": "putAbstractType",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        10,
        26,
        40,
        60,
        68,
        74,
        91
      ],
      "char": [
        40,
        60,
        68,
        74,
        91
      ],
      "short": [
        8,
        10,
        26,
        40,
        60,
        68,
        74,
        91,
        183,
        184
      ],
      "int": [
        -67108864,
        -4194304,
        0,
        1,
        2,
        8,
        10,
        26,
        40,
        60,
        68,
        74,
        91,
        183,
        184,
        262144,
        1048575,
        1048576,
        4194304,
        4194305,
        4194307,
        4194308,
        4194309,
        4194310,
        8388608,
        12582912,
        16777216,
        20971520,
        62914560,
        67108863,
        71303172
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Handle",
    "setters": [],
    "getters": [
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      },
      {
        "name": "isInterface",
        "desc": "()Z",
        "field": "isInterface"
      },
      {
        "name": "getTag",
        "desc": "()I",
        "field": "tag"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;",
        "field": "owner"
      }
    ],
    "observers": [
      {
        "name": "getTag",
        "desc": "()I"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getTag",
        "desc": "()I"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        9
      ],
      "short": [
        9
      ],
      "int": [
        0,
        1,
        9
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Handler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "removeRange",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;ILjava/lang/String;)V"
      },
      {
        "name": "getExceptionTableLength",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;)I"
      },
      {
        "name": "getExceptionTableSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;)I"
      },
      {
        "name": "putExceptionTable",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Label",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCanonicalInstance",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      }
    ],
    "testableMethods": [
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;IZ)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addSubroutineRetSuccessors",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "getCanonicalInstance",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "markSubroutine",
        "desc": "(S)V"
      },
      {
        "name": "resolve",
        "desc": "([BI)Z"
      },
      {
        "name": "addLineNumber",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        16,
        64
      ],
      "char": [
        64
      ],
      "short": [
        -32768,
        6,
        16,
        64,
        198,
        255,
        32767
      ],
      "int": [
        -268435456,
        -32768,
        -1,
        0,
        1,
        2,
        4,
        6,
        16,
        64,
        198,
        255,
        32767,
        268435455,
        268435456
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.MethodTooLargeException",
    "setters": [],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;",
        "field": "methodName"
      },
      {
        "name": "getCodeSize",
        "desc": "()I",
        "field": "codeSize"
      }
    ],
    "observers": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCodeSize",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCodeSize",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "."
      ]
    },
    "parents": [
      "java.lang.IndexOutOfBoundsException"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        11
      ],
      "short": [
        -257,
        11,
        185,
        256
      ],
      "int": [
        -257,
        0,
        1,
        11,
        185,
        256,
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.MethodWriter",
    "setters": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "previousFrameOffset"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V",
        "field": "parametersCount"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V",
        "field": "invisibleAnnotableParameterCount"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V",
        "field": "localVariableTableLength"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V",
        "field": "lastHandler"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "hasAsmInstructions"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleParameterAnnotations"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lineNumberTableLength"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "lastBytecodeOffset"
      }
    ],
    "getters": [
      {
        "name": "hasAsmInstructions",
        "desc": "()Z",
        "field": "hasAsmInstructions"
      }
    ],
    "observers": [
      {
        "name": "hasAsmInstructions",
        "desc": "()Z"
      },
      {
        "name": "hasFrames",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setMethodAttributesSource",
        "desc": "(II)V"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "collectAttributePrototypes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute$Set;)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "hasAsmInstructions",
        "desc": "()Z"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "putMethodInfo",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "computeMethodInfoSize",
        "desc": "()I"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAbstractType",
        "desc": "(II)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "hasFrames",
        "desc": "()Z"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "canCopyMethodAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;ZZIII)Z"
      },
      {
        "name": "visitFrameStart",
        "desc": "(III)I"
      },
      {
        "name": "visitFrameEnd",
        "desc": "()V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        -2,
        6,
        8,
        10,
        16,
        17,
        20,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127
      ],
      "char": [
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74
      ],
      "short": [
        -32768,
        -128,
        -2,
        6,
        8,
        10,
        16,
        17,
        20,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127,
        132,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        198,
        200,
        201,
        202,
        220,
        247,
        248,
        255,
        256,
        4096
      ],
      "int": [
        -32768,
        -128,
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        16,
        17,
        20,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127,
        132,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        198,
        200,
        201,
        202,
        220,
        247,
        248,
        251,
        252,
        255,
        256,
        4096,
        65535,
        131072,
        262144,
        458752,
        2147483647
      ],
      "str": [
        "<init>",
        "RuntimeInvisibleParameterAnnotations",
        "RuntimeVisibleParameterAnnotations"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ModuleVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ModuleWriter",
    "setters": [
      {
        "name": "visitExport",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V",
        "field": "exportsCount"
      },
      {
        "name": "visitMainClass",
        "desc": "(Ljava/lang/String;)V",
        "field": "mainClassIndex"
      },
      {
        "name": "visitRequire",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)V",
        "field": "requiresCount"
      },
      {
        "name": "visitOpen",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V",
        "field": "opensCount"
      },
      {
        "name": "visitPackage",
        "desc": "(Ljava/lang/String;)V",
        "field": "packageCount"
      },
      {
        "name": "visitUse",
        "desc": "(Ljava/lang/String;)V",
        "field": "usesCount"
      },
      {
        "name": "visitProvide",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "providesCount"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getAttributeCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "computeAttributesSize",
        "desc": "()I"
      },
      {
        "name": "visitExport",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V"
      },
      {
        "name": "visitMainClass",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "visitRequire",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)V"
      },
      {
        "name": "visitOpen",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "visitPackage",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitUse",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;III)V"
      },
      {
        "name": "visitProvide",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ModuleVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Opcodes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        5,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Symbol",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.SymbolTable",
    "setters": [],
    "getters": [
      {
        "name": "getMajorVersion",
        "desc": "()I",
        "field": "majorVersion"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I",
        "field": "constantPoolCount"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getSource",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;",
        "field": "sourceClassReader"
      }
    ],
    "observers": [
      {
        "name": "getMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSource",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;"
      },
      {
        "name": "getConstantPoolLength",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "putConstantPool",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "getSource",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;"
      },
      {
        "name": "addConstantPackage",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addType",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getConstantPoolLength",
        "desc": "()I"
      },
      {
        "name": "addConstantInteger",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassWriter;)V"
      },
      {
        "name": "addConstantMethodHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantMethodref",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "setMajorVersionAndClassName",
        "desc": "(ILjava/lang/String;)I"
      },
      {
        "name": "addConstantMethodType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantFloat",
        "desc": "(F)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantUtf8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "addConstantFieldref",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstant",
        "desc": "(Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addBootstrapMethod",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;)V"
      },
      {
        "name": "putBootstrapMethods",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "addConstantString",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantLong",
        "desc": "(J)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantNameAndType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "addConstantDouble",
        "desc": "(D)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantClass",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "getMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addUninitializedType",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "addConstantModule",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "getType",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantInvokeDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addMergedType",
        "desc": "(II)I"
      },
      {
        "name": "computeBootstrapMethodsSize",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        10,
        11,
        12,
        15,
        16,
        64
      ],
      "char": [
        64
      ],
      "short": [
        6,
        10,
        11,
        12,
        15,
        16,
        64,
        128,
        129,
        130,
        256
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10,
        11,
        12,
        15,
        16,
        64,
        128,
        129,
        130,
        256,
        2147483647
      ],
      "long": [
        0
      ],
      "str": [
        "BootstrapMethods"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.SymbolTable$Entry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.Symbol"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.asm.SymbolTable",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Type",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMethodDescriptor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getReturnTypeOffset",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getMethodType",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/reflect/Constructor;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getConstructorDescriptor",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/lang/String;"
      },
      {
        "name": "getMethodType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getObjectType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/reflect/Method;)[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getOpcode",
        "desc": "(I)I"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/String;)[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getInternalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getMethodDescriptor",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/Class;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "char": [
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91,
        172
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        40,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91,
        172
      ],
      "str": [
        "VZCBSIFJD",
        "double",
        "long"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.TypePath",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLength",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([BI)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "put",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "fromString",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;"
      },
      {
        "name": "getLength",
        "desc": "()I"
      },
      {
        "name": "getStep",
        "desc": "(I)I"
      },
      {
        "name": "getStepArgument",
        "desc": "(I)I"
      }
    ],
    "dictionary": {
      "byte": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "char": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "short": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "int": [
        0,
        1,
        2,
        3,
        42,
        46,
        48,
        57,
        59,
        91
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.TypeReference",
    "setters": [],
    "getters": [
      {
        "name": "getValue",
        "desc": "()I",
        "field": "targetTypeAndInfo"
      }
    ],
    "observers": [
      {
        "name": "getTypeParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getExceptionIndex",
        "desc": "()I"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getFormalParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()I"
      },
      {
        "name": "getTypeArgumentIndex",
        "desc": "()I"
      },
      {
        "name": "getTryCatchBlockIndex",
        "desc": "()I"
      },
      {
        "name": "getTypeParameterBoundIndex",
        "desc": "()I"
      },
      {
        "name": "getSuperTypeIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "newTypeParameterBoundReference",
        "desc": "(III)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getExceptionIndex",
        "desc": "()I"
      },
      {
        "name": "newTypeParameterReference",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getFormalParameterIndex",
        "desc": "()I"
      },
      {
        "name": "newTryCatchReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "newExceptionReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getTryCatchBlockIndex",
        "desc": "()I"
      },
      {
        "name": "putTarget",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "newFormalParameterReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getTypeParameterBoundIndex",
        "desc": "()I"
      },
      {
        "name": "newTypeArgumentReference",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getTypeParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()I"
      },
      {
        "name": "getTypeArgumentIndex",
        "desc": "()I"
      },
      {
        "name": "newSuperTypeReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "newTypeReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getSuperTypeIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        24
      ],
      "short": [
        8,
        16,
        24
      ],
      "int": [
        8,
        16,
        24,
        65535,
        268435456,
        369098752,
        385875968,
        1107296256
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.commons.AnalyzerAdapter",
    "setters": [
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "maxLocals"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "labels"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "locals"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "locals"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "locals"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "labels"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V",
        "field": "maxLocals"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "labels"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V",
        "field": "labels"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "maxLocals"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "locals"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "labels"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "locals"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        9,
        10,
        11,
        22,
        24,
        40,
        55,
        57,
        68,
        74
      ],
      "char": [
        40,
        55,
        57,
        68,
        74
      ],
      "short": [
        8,
        9,
        10,
        11,
        22,
        24,
        40,
        55,
        57,
        68,
        74,
        132,
        167,
        168,
        169,
        170,
        171,
        172,
        177,
        183,
        184,
        187,
        191,
        197,
        256
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        8,
        9,
        10,
        11,
        22,
        24,
        40,
        55,
        57,
        68,
        74,
        132,
        167,
        168,
        169,
        170,
        171,
        172,
        177,
        183,
        184,
        187,
        191,
        197,
        256,
        327680,
        458752
      ],
      "str": [
        "<init>",
        "[J",
        "java/lang/Class",
        "java/lang/String",
        "java/lang/invoke/MethodHandle",
        "java/lang/invoke/MethodType"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.commons.JSRInlinerAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        11,
        12
      ],
      "short": [
        7,
        8,
        11,
        12,
        167,
        168,
        169
      ],
      "int": [
        0,
        1,
        7,
        8,
        11,
        12,
        167,
        168,
        169,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.MethodNode",
      "org.jacoco.agent.rt.internal_43f5073.asm.Opcodes"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.commons.JSRInlinerAdapter$Instantiation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        8
      ]
    },
    "parents": [
      "java.util.AbstractMap"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.asm.commons.JSRInlinerAdapter",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode",
    "setters": [],
    "getters": [
      {
        "name": "getNext",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;",
        "field": "nextInsn"
      },
      {
        "name": "getOpcode",
        "desc": "()I",
        "field": "opcode"
      },
      {
        "name": "getPrevious",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;",
        "field": "previousInsn"
      }
    ],
    "observers": [
      {
        "name": "getNext",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "getOpcode",
        "desc": "()I"
      },
      {
        "name": "getPrevious",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.AnnotationNode",
    "setters": [
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "values"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "values"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "values"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "values"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "check",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.FieldInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.FrameNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.IincInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        132
      ],
      "int": [
        132
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InsnList",
    "setters": [
      {
        "name": "remove",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "add",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "set",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "lastInsn"
      },
      {
        "name": "add",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)I",
        "field": "cache"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V",
        "field": "size"
      }
    ],
    "getters": [
      {
        "name": "getFirst",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;",
        "field": "firstInsn"
      },
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;",
        "field": "lastInsn"
      }
    ],
    "observers": [
      {
        "name": "getLast",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "getFirst",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "remove",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "removeAll",
        "desc": "(Z)V"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "getFirst",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "iterator",
        "desc": "(I)Ljava/util/ListIterator;"
      },
      {
        "name": "toArray",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "add",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V"
      },
      {
        "name": "set",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "add",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)I"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "resetLabels",
        "desc": "()V"
      },
      {
        "name": "get",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "contains",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)Z"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InsnList$InsnListIterator",
    "setters": [
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)V",
        "field": "nextInsn"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)V",
        "field": "previousInsn"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "hasPrevious",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.ListIterator"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InsnList",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.IntInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InvokeDynamicInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        186
      ],
      "int": [
        186
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.JumpInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LabelNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "getLabel",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "getLabel",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "resetLabel",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LdcInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "byte": [
        18
      ],
      "short": [
        18
      ],
      "int": [
        18
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LineNumberNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LocalVariableAnnotationNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[ILjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[ILjava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.TypeAnnotationNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LocalVariableNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LookupSwitchInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        171
      ],
      "int": [
        0,
        171
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.MethodInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        185
      ],
      "int": [
        0,
        1,
        185
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.MethodNode",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "invisibleAnnotations"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V",
        "field": "attrs"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V",
        "field": "parameters"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V",
        "field": "invisibleAnnotableParameterCount"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "invisibleLocalVariableAnnotations"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "invisibleParameterAnnotations"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "invisibleTypeAnnotations"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V",
        "field": "localVariables"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V",
        "field": "tryCatchBlocks"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V",
        "field": "visited"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "check",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "getLabelNode",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        11
      ],
      "short": [
        -257,
        8,
        11,
        185,
        256,
        1024
      ],
      "int": [
        -257,
        -1,
        0,
        1,
        5,
        8,
        11,
        185,
        256,
        1024,
        262144,
        327680,
        458752,
        16776960
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.MethodNode$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.ArrayList"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.MultiANewArrayInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        197
      ],
      "int": [
        197
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.ParameterNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.TableSwitchInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        170
      ],
      "int": [
        0,
        170
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.TryCatchBlockNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;Ljava/lang/String;)V"
      },
      {
        "name": "updateIndex",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.TypeAnnotationNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AnnotationNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.TypeInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.UnsupportedClassVersionException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.Util",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "asArrayList",
        "desc": "([F)Ljava/util/List;"
      },
      {
        "name": "add",
        "desc": "(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([I)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([J)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([Z)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([D)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "(I[Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "(I)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([C)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([B)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([S)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.VarInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.JaCoCo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "RUNTIMEPACKAGE"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.analysis.ICounter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.analysis.ICounter$CounterValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "COVEREDCOUNT",
        "COVEREDRATIO",
        "MISSEDCOUNT",
        "MISSEDRATIO",
        "TOTALCOUNT"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.analysis.ICounter",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionData",
    "setters": [],
    "getters": [
      {
        "name": "getId",
        "desc": "()J",
        "field": "id"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getProbes",
        "desc": "()[Z",
        "field": "probes"
      }
    ],
    "observers": [
      {
        "name": "getId",
        "desc": "()J"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getProbes",
        "desc": "()[Z"
      },
      {
        "name": "hasHits",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "merge",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      },
      {
        "name": "merge",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;Z)V"
      },
      {
        "name": "assertCompatibility",
        "desc": "(JLjava/lang/String;I)V"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/lang/String;I)V"
      },
      {
        "name": "getId",
        "desc": "()J"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getProbes",
        "desc": "()[Z"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/lang/String;[Z)V"
      },
      {
        "name": "hasHits",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataReader",
    "setters": [
      {
        "name": "setSessionInfoVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ISessionInfoVisitor;)V",
        "field": "sessionInfoVisitor"
      },
      {
        "name": "setExecutionDataVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/IExecutionDataVisitor;)V",
        "field": "executionDataVisitor"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "read",
        "desc": "()Z"
      },
      {
        "name": "setExecutionDataVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/IExecutionDataVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readBlock",
        "desc": "(B)Z"
      },
      {
        "name": "setSessionInfoVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ISessionInfoVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        16,
        17,
        49344
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataStore",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getContents",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [
      {
        "name": "contains",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "visitClassExecution",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      },
      {
        "name": "getContents",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "get",
        "desc": "(J)Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Long;Ljava/lang/String;I)Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/IExecutionDataVisitor;)V"
      },
      {
        "name": "subtract",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      },
      {
        "name": "subtract",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionDataStore;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "put",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.data.IExecutionDataVisitor"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitClassExecution",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "getFileHeader",
        "desc": "()[B"
      },
      {
        "name": "visitSessionInfo",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/SessionInfo;)V"
      }
    ],
    "dictionary": {
      "short": [
        4103
      ],
      "int": [
        4103
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.data.ISessionInfoVisitor",
      "org.jacoco.agent.rt.internal_43f5073.core.data.IExecutionDataVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.IExecutionDataVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ISessionInfoVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.IncompatibleExecDataVersionException",
    "setters": [],
    "getters": [
      {
        "name": "getActualVersion",
        "desc": "()I",
        "field": "actualVersion"
      }
    ],
    "observers": [
      {
        "name": "getExpectedVersion",
        "desc": "()I"
      },
      {
        "name": "getActualVersion",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getExpectedVersion",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getActualVersion",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.io.IOException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.SessionInfo",
    "setters": [],
    "getters": [
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;",
        "field": "id"
      },
      {
        "name": "getStartTimeStamp",
        "desc": "()J",
        "field": "start"
      },
      {
        "name": "getDumpTimeStamp",
        "desc": "()J",
        "field": "dump"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStartTimeStamp",
        "desc": "()J"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDumpTimeStamp",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStartTimeStamp",
        "desc": "()J"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JJ)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/SessionInfo;)I"
      },
      {
        "name": "getDumpTimeStamp",
        "desc": "()J"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.instr.Instrumenter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "instrument",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "instrument",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;)[B"
      },
      {
        "name": "instrumentAll",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/lang/String;)I"
      },
      {
        "name": "instrument",
        "desc": "([BLjava/lang/String;)[B"
      },
      {
        "name": "setRemoveSignatures",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        -889275714,
        -889270259,
        -1,
        0,
        1,
        1024,
        529203200,
        1347093252
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.instr.Instrumenter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassWriter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.ContentTypeDetector",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()I",
        "field": "type"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;",
        "field": "in"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        45
      ],
      "char": [
        45
      ],
      "short": [
        8,
        45
      ],
      "int": [
        -889275714,
        -889270259,
        -65536,
        8,
        45,
        65535,
        529203200,
        1347093252
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.InputStreams",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "readFully",
        "desc": "(Ljava/io/InputStream;)[B"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        -1,
        1024
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.Pack200Streams",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "unpack",
        "desc": "(Ljava/io/InputStream;)Ljava/io/InputStream;"
      },
      {
        "name": "pack",
        "desc": "([BLjava/io/OutputStream;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.Pack200Streams$NoCloseInput",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.FilterInputStream"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.internal.Pack200Streams",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl",
    "setters": [],
    "getters": [
      {
        "name": "getMissedCount",
        "desc": "()I",
        "field": "missed"
      },
      {
        "name": "getCoveredCount",
        "desc": "()I",
        "field": "covered"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTotalCount",
        "desc": "()I"
      },
      {
        "name": "getMissedCount",
        "desc": "()I"
      },
      {
        "name": "getCoveredCount",
        "desc": "()I"
      },
      {
        "name": "getCoveredRatio",
        "desc": "()D"
      },
      {
        "name": "getMissedRatio",
        "desc": "()D"
      },
      {
        "name": "getStatus",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        30
      ],
      "short": [
        30
      ],
      "int": [
        0,
        1,
        30
      ],
      "str": [
        "Counter["
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.analysis.ICounter"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        5
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl$Fix",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl$Var",
    "setters": [
      {
        "name": "increment",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/CounterImpl;",
        "field": "missed"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.Instruction",
    "setters": [
      {
        "name": "addBranch",
        "desc": "(ZI)V",
        "field": "branches"
      },
      {
        "name": "addBranch",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;I)V",
        "field": "branches"
      }
    ],
    "getters": [
      {
        "name": "getLine",
        "desc": "()I",
        "field": "line"
      }
    ],
    "observers": [
      {
        "name": "getBranchCounter",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/analysis/ICounter;"
      },
      {
        "name": "getInstructionCounter",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/analysis/ICounter;"
      },
      {
        "name": "getLine",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "addBranch",
        "desc": "(ZI)V"
      },
      {
        "name": "getBranchCounter",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/analysis/ICounter;"
      },
      {
        "name": "getInstructionCounter",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/analysis/ICounter;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "replaceBranches",
        "desc": "(Ljava/util/Collection;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;"
      },
      {
        "name": "addBranch",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;I)V"
      },
      {
        "name": "getLine",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.data.CRC64",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "classId",
        "desc": "([B)J"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        53
      ],
      "char": [
        53
      ],
      "short": [
        6,
        7,
        8,
        53,
        256
      ],
      "int": [
        0,
        6,
        7,
        8,
        53,
        256
      ],
      "long": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.data.CompactDataInput",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "readVarInt",
        "desc": "()I"
      },
      {
        "name": "readBooleanArray",
        "desc": "()[Z"
      }
    ],
    "testableMethods": [
      {
        "name": "readVarInt",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readBooleanArray",
        "desc": "()[Z"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8,
        128
      ],
      "int": [
        0,
        1,
        8,
        128
      ]
    },
    "parents": [
      "java.io.DataInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.data.CompactDataOutput",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "writeVarInt",
        "desc": "(I)V"
      },
      {
        "name": "writeBooleanArray",
        "desc": "([Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        7,
        8
      ],
      "short": [
        -128,
        7,
        8
      ],
      "int": [
        -128,
        0,
        7,
        8
      ]
    },
    "parents": [
      "java.io.DataOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesAdapter",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "name"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "nextId",
        "desc": "()I"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/ClassProbesVisitor;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.IProbeIdGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesAdapter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodProbesVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesAdapter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodSanitizer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.FrameSnapshot",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/commons/AnalyzerAdapter;I)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IFrame;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.IFrame"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.IFrame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.IProbeIdGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.LabelFlowAnalyzer",
    "setters": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "successor"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "successor"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "successor"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lineStart"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "successor"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "successor"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "successor"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "successor"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V",
        "field": "successor"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "successor"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "successor"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "successor"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "markLabels",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/MethodNode;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      }
    ],
    "dictionary": {
      "short": [
        167,
        168
      ],
      "int": [
        0,
        1,
        167,
        168,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.LabelInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setMethodInvocationLine",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setIntermediateLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setSuccessor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setInstruction",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;)V"
      },
      {
        "name": "isMultiTarget",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "needsProbe",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "isMethodInvocationLine",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "getProbeId",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)I"
      },
      {
        "name": "getIntermediateLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "resetDone",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "isDone",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "getInstruction",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;"
      },
      {
        "name": "resetDone",
        "desc": "([Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "isSuccessor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "setDone",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setProbeId",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodProbesAdapter",
    "setters": [
      {
        "name": "setAnalyzer",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/commons/AnalyzerAdapter;)V",
        "field": "analyzer"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setAnalyzer",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/commons/AnalyzerAdapter;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/MethodProbesVisitor;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IProbeIdGenerator;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        153,
        154,
        155,
        156,
        157,
        158,
        167,
        198,
        199,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodProbesVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodSanitizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      }
    ],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.commons.JSRInlinerAdapter"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ClassFieldProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JZLorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      }
    ],
    "dictionary": {
      "byte": [
        89
      ],
      "char": [
        89
      ],
      "short": [
        89,
        4234
      ],
      "int": [
        0,
        89,
        4234
      ],
      "str": [
        "$jacocoData",
        "[Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ClassInstrumenter",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "className"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/instr/IProbeArrayStrategy;Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;)V"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/FieldVisitor;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/MethodProbesVisitor;"
      },
      {
        "name": "visitTotalProbeCount",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.CondyProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;ZJLorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        3,
        6
      ],
      "str": [
        "$jacocoData",
        "$jacocoInit",
        "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/Class;)[Z",
        "Ljava/lang/Object;"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.DuplicateFrameEliminator",
    "setters": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "instruction"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "instruction"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "instruction"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "instruction"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "instruction"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "instruction"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "instruction"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "instruction"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "instruction"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V",
        "field": "instruction"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "instruction"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "instruction"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "instruction"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "instruction"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeInserter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1536,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.InstrSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getMajorVersion",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;)I"
      },
      {
        "name": "assertNotInstrumented",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "needsFrames",
        "desc": "(I)Z"
      },
      {
        "name": "getMajorVersion",
        "desc": "([B)I"
      },
      {
        "name": "setMajorVersion",
        "desc": "(I[B)V"
      },
      {
        "name": "classReaderFor",
        "desc": "([B)Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;"
      },
      {
        "name": "push",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;I)V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        7,
        16,
        50,
        57,
        58,
        127
      ],
      "char": [
        50,
        57,
        58
      ],
      "short": [
        -32768,
        -128,
        7,
        16,
        50,
        57,
        58,
        127,
        32767
      ],
      "int": [
        -32768,
        -128,
        -1,
        0,
        1,
        3,
        5,
        7,
        16,
        50,
        57,
        58,
        127,
        32767,
        65535
      ],
      "str": [
        "$jacocoData",
        "$jacocoInit"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.InterfaceFieldProbeArrayStrategy",
    "setters": [
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I",
        "field": "seenClinit"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JILorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      }
    ],
    "dictionary": {
      "byte": [
        58,
        89
      ],
      "char": [
        58,
        89
      ],
      "short": [
        58,
        89,
        4121
      ],
      "int": [
        0,
        1,
        58,
        89,
        4121
      ],
      "str": [
        "$jacocoData",
        "[Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.LocalProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JILorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.MethodInstrumenter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitInsnWithProbe",
        "desc": "(II)V"
      },
      {
        "name": "visitTableSwitchInsnWithProbes",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IFrame;)V"
      },
      {
        "name": "visitLookupSwitchInsnWithProbes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IFrame;)V"
      },
      {
        "name": "visitJumpInsnWithProbe",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;ILorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IFrame;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/instr/IProbeInserter;)V"
      },
      {
        "name": "visitProbe",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "short": [
        167,
        198,
        199
      ],
      "int": [
        -1,
        0,
        167,
        198,
        199
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodProbesVisitor"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.NoneProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ProbeArrayStrategyFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFor",
        "desc": "(JLorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/instr/IProbeArrayStrategy;"
      }
    ],
    "dictionary": {
      "byte": [
        52,
        55
      ],
      "char": [
        52,
        55
      ],
      "short": [
        52,
        55
      ],
      "int": [
        0,
        1,
        52,
        55,
        33280
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ProbeCounter",
    "setters": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/MethodProbesVisitor;",
        "field": "methods"
      },
      {
        "name": "visitTotalProbeCount",
        "desc": "(I)V",
        "field": "count"
      }
    ],
    "getters": [
      {
        "name": "hasMethods",
        "desc": "()Z",
        "field": "methods"
      },
      {
        "name": "getCount",
        "desc": "()I",
        "field": "count"
      }
    ],
    "observers": [
      {
        "name": "hasMethods",
        "desc": "()Z"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasMethods",
        "desc": "()Z"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/MethodProbesVisitor;"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "visitTotalProbeCount",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1,
        1024
      ],
      "str": [
        "<clinit>"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesVisitor"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ProbeInserter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "insertProbe",
        "desc": "(I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/instr/IProbeArrayStrategy;)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        84
      ],
      "char": [
        84
      ],
      "short": [
        8,
        84
      ],
      "int": [
        -1,
        0,
        1,
        8,
        84,
        458752
      ],
      "str": [
        "<clinit>"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeInserter"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.SignatureRemover",
    "setters": [
      {
        "name": "setActive",
        "desc": "(Z)V",
        "field": "active"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "filterEntry",
        "desc": "(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/OutputStream;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "removeEntry",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "setActive",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "-Digest",
        "META-INF/MANIFEST.MF",
        "META-INF/[^/]*\\.SF|META-INF/[^/]*\\.DSA|META-INF/[^/]*\\.RSA|META-INF/SIG-[^/]*"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.AbstractRuntime",
    "setters": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V",
        "field": "data"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRuntime"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.AgentOptions",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getExcludes",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDestfile",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAppend",
        "desc": "()Z"
      },
      {
        "name": "getIncludes",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAddress",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPort",
        "desc": "()I"
      },
      {
        "name": "getExclClassloader",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInclNoLocationClasses",
        "desc": "()Z"
      },
      {
        "name": "getOutput",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions$OutputMode;"
      },
      {
        "name": "getClassDumpDir",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInclBootstrapClasses",
        "desc": "()Z"
      },
      {
        "name": "getDumpOnExit",
        "desc": "()Z"
      },
      {
        "name": "getJmx",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getDestfile",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "prependVMArguments",
        "desc": "(Ljava/lang/String;Ljava/io/File;)Ljava/lang/String;"
      },
      {
        "name": "setIncludes",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getAddress",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setAddress",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setExclClassloader",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getExclClassloader",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setDumpOnExit",
        "desc": "(Z)V"
      },
      {
        "name": "setExcludes",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setInclNoLocationClasses",
        "desc": "(Z)V"
      },
      {
        "name": "setPort",
        "desc": "(I)V"
      },
      {
        "name": "setJmx",
        "desc": "(Z)V"
      },
      {
        "name": "getInclNoLocationClasses",
        "desc": "()Z"
      },
      {
        "name": "getClassDumpDir",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setSessionId",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getInclBootstrapClasses",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Properties;)V"
      },
      {
        "name": "getDumpOnExit",
        "desc": "()Z"
      },
      {
        "name": "getVMArgument",
        "desc": "(Ljava/io/File;)Ljava/lang/String;"
      },
      {
        "name": "setOutput",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions$OutputMode;)V"
      },
      {
        "name": "getExcludes",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setAppend",
        "desc": "(Z)V"
      },
      {
        "name": "setClassDumpDir",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAppend",
        "desc": "()Z"
      },
      {
        "name": "getIncludes",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPort",
        "desc": "()I"
      },
      {
        "name": "setDestfile",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setInclBootstrapClasses",
        "desc": "(Z)V"
      },
      {
        "name": "getOutput",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions$OutputMode;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setOutput",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getJmx",
        "desc": "()Z"
      },
      {
        "name": "getQuotedVMArgument",
        "desc": "(Ljava/io/File;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        12,
        13,
        61
      ],
      "char": [
        61
      ],
      "short": [
        12,
        13,
        61
      ],
      "int": [
        -1,
        0,
        1,
        12,
        13,
        61
      ],
      "str": [
        "address",
        "append",
        "classdumpdir",
        "destfile",
        "dumponexit",
        "exclclassloader",
        "excludes",
        "inclbootstrapclasses",
        "inclnolocationclasses",
        "includes",
        "jmx",
        "output",
        "port",
        "sessionid"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.AgentOptions$OutputMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "file",
        "none",
        "tcpclient",
        "tcpserver"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.runtime.AgentOptions",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.CommandLineSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "quote",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "quote",
        "desc": "(Ljava/util/List;)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "byte": [
        32,
        34,
        92
      ],
      "char": [
        32,
        34,
        92
      ],
      "short": [
        32,
        34,
        92
      ],
      "int": [
        -1,
        0,
        1,
        32,
        34,
        92
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.IExecutionDataAccessorGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRemoteCommandVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRuntime",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.IExecutionDataAccessorGenerator"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.InjectedClassRuntime",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "generateDataAccessor",
        "desc": "(JLjava/lang/String;ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        0,
        46,
        47
      ],
      "str": [
        "data"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.AbstractRuntime"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.InjectedClassRuntime$Lookup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "lookup"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.runtime.InjectedClassRuntime",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.ModifiedSystemClassRuntime",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFor",
        "desc": "(Ljava/lang/instrument/Instrumentation;Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRuntime;"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "instrument",
        "desc": "([BLjava/lang/String;)[B"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "generateDataAccessor",
        "desc": "(JLjava/lang/String;ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)I"
      },
      {
        "name": "createFor",
        "desc": "(Ljava/lang/instrument/Instrumentation;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRuntime;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47,
        4233
      ],
      "int": [
        0,
        1,
        46,
        47,
        4233,
        458752
      ],
      "str": [
        "Ljava/lang/Object;"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.AbstractRuntime"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.ModifiedSystemClassRuntime$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.instrument.ClassFileTransformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.ModifiedSystemClassRuntime$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.RemoteControlReader",
    "setters": [
      {
        "name": "setRemoteCommandVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRemoteCommandVisitor;)V",
        "field": "remoteCommandVisitor"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readBlock",
        "desc": "(B)Z"
      },
      {
        "name": "setRemoteCommandVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRemoteCommandVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        32,
        64
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataReader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.RemoteControlWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "sendCmdOk",
        "desc": "()V"
      },
      {
        "name": "visitDumpCommand",
        "desc": "(ZZ)V"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        32
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataWriter",
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRemoteCommandVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.RuntimeData",
    "setters": [
      {
        "name": "setSessionId",
        "desc": "(Ljava/lang/String;)V",
        "field": "sessionId"
      }
    ],
    "getters": [
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;",
        "field": "sessionId"
      }
    ],
    "observers": [
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateAccessCall",
        "desc": "(JLjava/lang/String;ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setSessionId",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "getExecutionData",
        "desc": "(Ljava/lang/Long;Ljava/lang/String;I)Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;"
      },
      {
        "name": "generateArgumentArray",
        "desc": "(JLjava/lang/String;ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "collect",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/IExecutionDataVisitor;Lorg/jacoco/agent/rt/internal_43f5073/core/data/ISessionInfoVisitor;Z)V"
      },
      {
        "name": "getProbes",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        83
      ],
      "char": [
        83
      ],
      "short": [
        83,
        192
      ],
      "int": [
        0,
        83,
        192
      ],
      "str": [
        "<none>",
        "[Z"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.WildcardMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matches",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2,
        42,
        63
      ],
      "str": [
        "\\:"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.FileOutput",
    "setters": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V",
        "field": "data"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.NoneOutput",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpClientOutput",
    "setters": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V",
        "field": "connection"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/IExceptionLogger;)V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      },
      {
        "name": "createSocket",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;)Ljava/net/Socket;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpClientOutput$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpConnection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/net/Socket;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "visitDumpCommand",
        "desc": "(ZZ)V"
      },
      {
        "name": "init",
        "desc": "()V"
      },
      {
        "name": "run",
        "desc": "()V"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRemoteCommandVisitor"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpServerOutput",
    "setters": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V",
        "field": "serverSocket"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getInetAddress",
        "desc": "(Ljava/lang/String;)Ljava/net/InetAddress;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/IExceptionLogger;)V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "createServerSocket",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;)Ljava/net/ServerSocket;"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "*"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpServerOutput$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.After",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.AfterClass",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Assert",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assertEquals",
        "desc": "(FFF)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([D[DD)V"
      },
      {
        "name": "assertNull",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([I[I)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([S[S)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertSame",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[Z[Z)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/String;JJ)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;DDD)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "assertSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[D[DD)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "fail",
        "desc": "()V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([B[B)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;JJ)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/String;FFF)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([Z[Z)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(FFF)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[S[S)V"
      },
      {
        "name": "assertNotNull",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNotNull",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertTrue",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[F[FF)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[B[B)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/String;DDD)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(DDD)V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[J[J)V"
      },
      {
        "name": "assertEquals",
        "desc": "(DD)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([J[J)V"
      },
      {
        "name": "assertNotSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertFalse",
        "desc": "(Z)V"
      },
      {
        "name": "assertNull",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "assertTrue",
        "desc": "(Z)V"
      },
      {
        "name": "assertFalse",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([C[C)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[C[C)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;DD)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertNotSame",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([F[FF)V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;FFF)V"
      },
      {
        "name": "assertEquals",
        "desc": "(DDD)V"
      },
      {
        "name": "assertEquals",
        "desc": "(JJ)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(JJ)V"
      },
      {
        "name": "fail",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[I[I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Assume",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assumeTrue",
        "desc": "(Z)V"
      },
      {
        "name": "assumeNoException",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "assumeThat",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assumeThat",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assumeFalse",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assumeTrue",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assumeNotNull",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "assumeNoException",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "assumeFalse",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.AssumptionViolatedException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.internal.AssumptionViolatedException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Before",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.BeforeClass",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ClassRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ComparisonFailure",
    "setters": [],
    "getters": [
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;",
        "field": "fExpected"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;",
        "field": "fActual"
      }
    ],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        20
      ],
      "short": [
        20
      ],
      "int": [
        20
      ]
    },
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ComparisonFailure$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.ComparisonFailure",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ComparisonFailure$ComparisonCompactor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.ComparisonFailure",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.ComparisonFailure$ComparisonCompactor",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.FixMethodOrder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Ignore",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Rule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Test",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Test$None",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Throwable"
    ],
    "outerClass": "org.junit.Test",
    "access": 9,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.ParallelComputer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getSuite",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;[Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "getRunner",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "<init>",
        "desc": "(ZZ)V"
      },
      {
        "name": "classes",
        "desc": "()Lorg/junit/runner/Computer;"
      },
      {
        "name": "methods",
        "desc": "()Lorg/junit/runner/Computer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runner.Computer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.ParallelComputer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        9223372036854775807
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.runners.model.RunnerScheduler"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Categories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/junit/runners/model/RunnerBuilder;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.Suite"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Categories$CategoryFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "include",
        "desc": "(Z[Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "include",
        "desc": "(Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "categoryFilter",
        "desc": "(ZLjava/util/Set;ZLjava/util/Set;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "describe",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "exclude",
        "desc": "([Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "<init>",
        "desc": "(ZLjava/util/Set;ZLjava/util/Set;)V"
      },
      {
        "name": "exclude",
        "desc": "(Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "exclude",
        "desc": "(Z[Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "include",
        "desc": "([Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "shouldRun",
        "desc": "(Lorg/junit/runner/Description;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runner.manipulation.Filter"
    ],
    "outerClass": "org.junit.experimental.categories.Categories",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Categories$ExcludeCategory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.experimental.categories.Categories",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Categories$IncludeCategory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.experimental.categories.Categories",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Category",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.CategoryFilterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.runner.FilterFactory"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.CategoryValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validateAnnotatedMethod",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2,
        3
      ]
    },
    "parents": [
      "org.junit.validator.AnnotationValidator"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.ExcludeCategories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFilter",
        "desc": "(Ljava/util/List;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.categories.CategoryFilterFactory"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.ExcludeCategories$ExcludesAny",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.experimental.categories.Categories$CategoryFilter"
    ],
    "outerClass": "org.junit.experimental.categories.ExcludeCategories",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.IncludeCategories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFilter",
        "desc": "(Ljava/util/List;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.categories.CategoryFilterFactory"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.IncludeCategories$IncludesAny",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.experimental.categories.Categories$CategoryFilter"
    ],
    "outerClass": "org.junit.experimental.categories.IncludeCategories",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.CouldNotReadCoreException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxCore",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "storedLocally",
        "desc": "(Ljava/io/File;)Lorg/junit/experimental/max/MaxCore;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Request;Lorg/junit/runner/JUnitCore;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Request;)Lorg/junit/runner/Result;"
      },
      {
        "name": "sortedLeavesForTest",
        "desc": "(Lorg/junit/runner/Request;)Ljava/util/List;"
      },
      {
        "name": "sortRequest",
        "desc": "(Lorg/junit/runner/Request;)Lorg/junit/runner/Request;"
      },
      {
        "name": "forFolder",
        "desc": "(Ljava/lang/String;)Lorg/junit/experimental/max/MaxCore;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "]",
        "warning(junit.framework.TestSuite$1)"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxCore$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Request"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxCore$1$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.Suite"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxHistory",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "listener",
        "desc": "()Lorg/junit/runner/notification/RunListener;"
      }
    ],
    "testableMethods": [
      {
        "name": "forFolder",
        "desc": "(Ljava/io/File;)Lorg/junit/experimental/max/MaxHistory;"
      },
      {
        "name": "getTestDuration",
        "desc": "(Lorg/junit/runner/Description;)Ljava/lang/Long;"
      },
      {
        "name": "putTestDuration",
        "desc": "(Lorg/junit/runner/Description;J)V"
      },
      {
        "name": "putTestFailureTimestamp",
        "desc": "(Lorg/junit/runner/Description;J)V"
      },
      {
        "name": "isNewTest",
        "desc": "(Lorg/junit/runner/Description;)Z"
      },
      {
        "name": "getFailureTimestamp",
        "desc": "(Lorg/junit/runner/Description;)Ljava/lang/Long;"
      },
      {
        "name": "listener",
        "desc": "()Lorg/junit/runner/notification/RunListener;"
      },
      {
        "name": "testComparator",
        "desc": "()Ljava/util/Comparator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxHistory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.experimental.max.MaxHistory",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxHistory$RememberingListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "org.junit.experimental.max.MaxHistory",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxHistory$TestComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.junit.experimental.max.MaxHistory",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.FailureList",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "result",
        "desc": "()Lorg/junit/runner/Result;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.PrintableResult",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "failureCount",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "testResult",
        "desc": "(Lorg/junit/runner/Request;)Lorg/junit/experimental/results/PrintableResult;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "testResult",
        "desc": "(Ljava/lang/Class;)Lorg/junit/experimental/results/PrintableResult;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.ResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasSingleFailureContaining",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isSuccessful",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasFailureContaining",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "failureCountIs",
        "desc": "(I)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.ResultMatchers$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.ResultMatchers$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.ResultMatchers$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.runners.Enclosed",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/junit/runners/model/RunnerBuilder;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.junit.runners.Suite"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.DataPoint",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.DataPoints",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.FromDataPoints",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.ParameterSignature",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "signatures",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/util/ArrayList;"
      },
      {
        "name": "hasAnnotation",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "signatures",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/util/List;"
      },
      {
        "name": "canAcceptType",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "canPotentiallyAcceptType",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "findDeepAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "canAcceptValue",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getAnnotations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.ParameterSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.ParametersSuppliedBy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.PotentialAssignment",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.PotentialAssignment$1",
    "setters": [],
    "getters": [
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "val$value"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.theories.PotentialAssignment"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "outerClass": "org.junit.experimental.theories.PotentialAssignment",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "validateTestMethods",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "computeTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "methodBlock",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "collectInitializationErrors",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "validateConstructor",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories$TheoryAnchor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Lorg/junit/runners/model/TestClass;)V"
      },
      {
        "name": "runWithIncompleteAssignment",
        "desc": "(Lorg/junit/experimental/theories/internal/Assignments;)V"
      },
      {
        "name": "handleDataPointSuccess",
        "desc": "()V"
      },
      {
        "name": "runWithCompleteAssignment",
        "desc": "(Lorg/junit/experimental/theories/internal/Assignments;)V"
      },
      {
        "name": "reportParameterizedError",
        "desc": "(Ljava/lang/Throwable;[Ljava/lang/Object;)V"
      },
      {
        "name": "handleAssumptionViolation",
        "desc": "(Lorg/junit/internal/AssumptionViolatedException;)V"
      },
      {
        "name": "runWithAssignment",
        "desc": "(Lorg/junit/experimental/theories/internal/Assignments;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "org.junit.experimental.theories.Theories",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories$TheoryAnchor$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories$TheoryAnchor$1$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories$TheoryAnchor$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.AllMembersSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/TestClass;)V"
      },
      {
        "name": "getValueSources",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List;"
      },
      {
        "name": "getDataPointsMethods",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getSingleDataPointFields",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getSingleDataPointMethods",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getDataPointsFields",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "[",
        "]"
      ]
    },
    "parents": [
      "org.junit.experimental.theories.ParameterSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.AllMembersSupplier$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.experimental.theories.internal.AllMembersSupplier",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.experimental.theories.PotentialAssignment"
    ],
    "outerClass": "org.junit.experimental.theories.internal.AllMembersSupplier",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.Assignments",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConstructorArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getMethodArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isComplete",
        "desc": "()Z"
      },
      {
        "name": "getAllArguments",
        "desc": "()[Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "allUnassigned",
        "desc": "(Ljava/lang/reflect/Method;Lorg/junit/runners/model/TestClass;)Lorg/junit/experimental/theories/internal/Assignments;"
      },
      {
        "name": "getConstructorArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getActualValues",
        "desc": "(II)[Ljava/lang/Object;"
      },
      {
        "name": "getMethodArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isComplete",
        "desc": "()Z"
      },
      {
        "name": "getArgumentStrings",
        "desc": "(Z)[Ljava/lang/Object;"
      },
      {
        "name": "nextUnassigned",
        "desc": "()Lorg/junit/experimental/theories/ParameterSignature;"
      },
      {
        "name": "assignNext",
        "desc": "(Lorg/junit/experimental/theories/PotentialAssignment;)Lorg/junit/experimental/theories/internal/Assignments;"
      },
      {
        "name": "potentialsForNextUnassigned",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAllArguments",
        "desc": "()[Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.BooleanSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getValueSources",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.theories.ParameterSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.EnumSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getValueSources",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.junit.experimental.theories.ParameterSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.ParameterizedAssertionError",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "join",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.SpecificDataPointsSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/TestClass;)V"
      },
      {
        "name": "getDataPointsMethods",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getSingleDataPointFields",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getSingleDataPointMethods",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getDataPointsFields",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.theories.internal.AllMembersSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.suppliers.TestedOn",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.suppliers.TestedOnSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getValueSources",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "ints"
      ]
    },
    "parents": [
      "org.junit.experimental.theories.ParameterSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.ArrayComparisonFailure",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/AssertionError;I)V"
      },
      {
        "name": "addDimension",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.AssumptionViolatedException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;ZLjava/lang/Object;Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.RuntimeException",
      "org.hamcrest.SelfDescribing"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.Classes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.ComparisonCriteria",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.ExactComparisonCriteria",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertElementsEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.internal.ComparisonCriteria"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.InexactComparisonCriteria",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assertElementsEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(D)V"
      },
      {
        "name": "<init>",
        "desc": "(F)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.internal.ComparisonCriteria"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.JUnitSystem",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.MethodSorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getDeclaredMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.MethodSorter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.MethodSorter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.RealSystem",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "out",
        "desc": "()Ljava/io/PrintStream;"
      }
    ],
    "testableMethods": [
      {
        "name": "out",
        "desc": "()Ljava/io/PrintStream;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "exit",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.JUnitSystem"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.TextListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/internal/JUnitSystem;)V"
      },
      {
        "name": "testFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "printHeader",
        "desc": "(J)V"
      },
      {
        "name": "testRunFinished",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "printFailures",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "printFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;Ljava/lang/String;)V"
      },
      {
        "name": "printFooter",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "testIgnored",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "elapsedTimeAsString",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintStream;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        69,
        73
      ],
      "char": [
        46,
        69,
        73
      ],
      "short": [
        46,
        69,
        73
      ],
      "int": [
        1,
        46,
        69,
        73
      ],
      "str": [
        "FAILURES!!!",
        "OK"
      ]
    },
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.Throwables",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "rethrowAsException",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/Exception;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.AllDefaultPossibilitiesBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "junit4Builder",
        "desc": "()Lorg/junit/internal/builders/JUnit4Builder;"
      },
      {
        "name": "ignoredBuilder",
        "desc": "()Lorg/junit/internal/builders/IgnoredBuilder;"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "suiteMethodBuilder",
        "desc": "()Lorg/junit/runners/model/RunnerBuilder;"
      },
      {
        "name": "junit3Builder",
        "desc": "()Lorg/junit/internal/builders/JUnit3Builder;"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "annotatedBuilder",
        "desc": "()Lorg/junit/internal/builders/AnnotatedBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.AnnotatedBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;)V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "buildRunner",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.IgnoredBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.IgnoredClassRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.JUnit3Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "isPre4Test",
        "desc": "(Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.JUnit4Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.NullBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.SuiteMethodBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasSuiteMethod",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.matchers.StacktracePrintingMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "isException",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isThrowable",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "describeMismatchSafely",
        "desc": "(Ljava/lang/Throwable;Lorg/hamcrest/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.matchers.ThrowableCauseMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "hasCause",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "describeMismatchSafely",
        "desc": "(Ljava/lang/Throwable;Lorg/hamcrest/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.matchers.ThrowableMessageMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "describeMismatchSafely",
        "desc": "(Ljava/lang/Throwable;Lorg/hamcrest/Description;)V"
      },
      {
        "name": "hasMessage",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.matchers.TypeSafeMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "matchesSafely"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.requests.ClassRequest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.runner.Request"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.requests.FilterRequest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Request;Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.runner.Request"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.requests.SortingRequest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Request;Ljava/util/Comparator;)V"
      },
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Request"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.ClassRoadie",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "runProtected",
        "desc": "()V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;Lorg/junit/internal/runners/TestClass;Lorg/junit/runner/Description;Ljava/lang/Runnable;)V"
      },
      {
        "name": "runUnprotected",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.ErrorReportingRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.FailedBefore",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.InitializationError",
    "setters": [],
    "getters": [
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;",
        "field": "fErrors"
      }
    ],
    "observers": [
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit38ClassRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "sort",
        "desc": "(Lorg/junit/runner/manipulation/Sorter;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "createAdaptingListener",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)Ljunit/framework/TestListener;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable",
      "org.junit.runner.manipulation.Sortable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit38ClassRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.JUnit38ClassRunner",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.TestListener"
    ],
    "outerClass": "org.junit.internal.runners.JUnit38ClassRunner",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit4ClassRunner",
    "setters": [],
    "getters": [
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/internal/runners/TestClass;",
        "field": "testClass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/internal/runners/TestClass;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "runMethods",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "testName",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "invokeTestMethod",
        "desc": "(Ljava/lang/reflect/Method;Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/internal/runners/TestClass;"
      },
      {
        "name": "createTest",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "classAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "methodDescription",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/junit/runner/Description;"
      },
      {
        "name": "sort",
        "desc": "(Lorg/junit/runner/manipulation/Sorter;)V"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "validate",
        "desc": "()V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "testAnnotations",
        "desc": "(Ljava/lang/reflect/Method;)[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "wrapMethod",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/junit/internal/runners/TestMethod;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable",
      "org.junit.runner.manipulation.Sortable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit4ClassRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit4ClassRunner$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodRoadie",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "runBeforesThenTestThenAfters",
        "desc": "(Ljava/lang/Runnable;)V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "runTestMethod",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/junit/internal/runners/TestMethod;Lorg/junit/runner/notification/RunNotifier;Lorg/junit/runner/Description;)V"
      },
      {
        "name": "run",
        "desc": "()V"
      },
      {
        "name": "runTest",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "long": [
        0
      ],
      "str": [
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodRoadie$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodRoadie$1$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodRoadie$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validateNoArgConstructor",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/internal/runners/TestClass;)V"
      },
      {
        "name": "validateInstanceMethods",
        "desc": "()V"
      },
      {
        "name": "validateStaticMethods",
        "desc": "()V"
      },
      {
        "name": "validateMethodsForDefaultRunner",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "assertValid",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.SuiteMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "testFromSuiteMethod",
        "desc": "(Ljava/lang/Class;)Ljunit/framework/Test;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "suite"
      ]
    },
    "parents": [
      "org.junit.internal.runners.JUnit38ClassRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.TestClass",
    "setters": [],
    "getters": [
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;",
        "field": "klass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAfters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getBefores",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getAfters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getBefores",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.TestMethod",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getExpectedException",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAfters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "getBefores",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isIgnored",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getExpectedException",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "expectsException",
        "desc": "()Z"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getAfters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "isUnexpected",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "getBefores",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isIgnored",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;Lorg/junit/internal/runners/TestClass;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.model.EachTestNotifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "fireTestStarted",
        "desc": "()V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "addFailedAssumption",
        "desc": "(Lorg/junit/internal/AssumptionViolatedException;)V"
      },
      {
        "name": "fireTestIgnored",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;Lorg/junit/runner/Description;)V"
      },
      {
        "name": "fireTestFinished",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.model.MultipleFailureException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.MultipleFailureException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.model.ReflectiveCallable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validate",
        "desc": "(Lorg/junit/runners/model/TestClass;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/internal/runners/rules/RuleMemberValidator$Builder;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.ValidationError",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/FrameworkMember;Ljava/lang/Class;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.ExpectException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Class;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        ">"
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.Fail",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.FailOnTimeout",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "builder",
        "desc": "()Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;J)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        5
      ],
      "long": [
        0
      ],
      "str": [
        "FailOnTimeoutGroup"
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.FailOnTimeout$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.statements.FailOnTimeout",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.FailOnTimeout$Builder",
    "setters": [
      {
        "name": "withTimeout",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;",
        "field": "timeout"
      },
      {
        "name": "withLookingForStuckThread",
        "desc": "(Z)Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;",
        "field": "lookForStuckThread"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "withTimeout",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;"
      },
      {
        "name": "withLookingForStuckThread",
        "desc": "(Z)Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;"
      },
      {
        "name": "build",
        "desc": "(Lorg/junit/runners/model/Statement;)Lorg/junit/internal/runners/statements/FailOnTimeout;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.statements.FailOnTimeout",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.FailOnTimeout$CallableStatement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "org.junit.internal.runners.statements.FailOnTimeout",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.InvokeMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.RunAfters",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "evaluate",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/util/List;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.RunBefores",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "evaluate",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/util/List;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.matchers.JUnitMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasItem",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isException",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "everyItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isThrowable",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "containsString",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "both",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableBothMatcher;"
      },
      {
        "name": "either",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableEitherMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.DisableOnDebug",
    "setters": [],
    "getters": [
      {
        "name": "isDebugging",
        "desc": "()Z",
        "field": "debugging"
      }
    ],
    "observers": [
      {
        "name": "isDebugging",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isDebugging",
        "desc": "()Z"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/rules/TestRule;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/rules/TestRule;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "-Xdebug",
        "-agentlib:jdwp"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ErrorCollector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "checkThat",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "checkSucceeds",
        "desc": "(Ljava/util/concurrent/Callable;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "checkThat",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "addError",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "verify",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.junit.rules.Verifier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ErrorCollector$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExpectedException",
    "setters": [
      {
        "name": "reportMissingExceptionWithMessage",
        "desc": "(Ljava/lang/String;)Lorg/junit/rules/ExpectedException;",
        "field": "missingExceptionMessage"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "none",
        "desc": "()Lorg/junit/rules/ExpectedException;"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "expectMessage",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "expectCause",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "handleAssumptionViolatedExceptions",
        "desc": "()Lorg/junit/rules/ExpectedException;"
      },
      {
        "name": "reportMissingExceptionWithMessage",
        "desc": "(Ljava/lang/String;)Lorg/junit/rules/ExpectedException;"
      },
      {
        "name": "expect",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "expectMessage",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "expect",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "handleAssertionErrors",
        "desc": "()Lorg/junit/rules/ExpectedException;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExpectedException$ExpectedExceptionStatement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "org.junit.rules.ExpectedException",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExpectedExceptionMatcherBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "expectsThrowable",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExternalResource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExternalResource$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.MethodRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.RuleChain",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "emptyRuleChain",
        "desc": "()Lorg/junit/rules/RuleChain;"
      },
      {
        "name": "around",
        "desc": "(Lorg/junit/rules/TestRule;)Lorg/junit/rules/RuleChain;"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "outerRule",
        "desc": "(Lorg/junit/rules/TestRule;)Lorg/junit/rules/RuleChain;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.RunRules",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Iterable;Lorg/junit/runner/Description;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Stopwatch",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Stopwatch$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.rules.Stopwatch",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Stopwatch$Clock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "nanoTime",
        "desc": "()J"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.rules.Stopwatch",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Stopwatch$InternalWatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.rules.TestWatcher"
    ],
    "outerClass": "org.junit.rules.Stopwatch",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TemporaryFolder",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRoot",
        "desc": "()Ljava/io/File;"
      }
    ],
    "testableMethods": [
      {
        "name": "after",
        "desc": "()V"
      },
      {
        "name": "delete",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()V"
      },
      {
        "name": "newFile",
        "desc": "(Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newFolder",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "newFolder",
        "desc": "([Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "before",
        "desc": "()V"
      },
      {
        "name": "newFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "newFolder",
        "desc": "(Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "getRoot",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "junit"
      ]
    },
    "parents": [
      "org.junit.rules.ExternalResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestName",
    "setters": [],
    "getters": [
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "starting",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.rules.TestWatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestWatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestWatcher$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestWatchman",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "starting",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)V"
      },
      {
        "name": "succeeded",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)V"
      },
      {
        "name": "finished",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "failed",
        "desc": "(Ljava/lang/Throwable;Lorg/junit/runners/model/FrameworkMethod;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.MethodRule"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestWatchman$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Timeout",
    "setters": [],
    "getters": [
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z",
        "field": "lookForStuckThread"
      }
    ],
    "observers": [
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/rules/Timeout$Builder;)V"
      },
      {
        "name": "millis",
        "desc": "(J)Lorg/junit/rules/Timeout;"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "builder",
        "desc": "()Lorg/junit/rules/Timeout$Builder;"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/util/concurrent/TimeUnit;)V"
      },
      {
        "name": "getTimeout",
        "desc": "(Ljava/util/concurrent/TimeUnit;)J"
      },
      {
        "name": "seconds",
        "desc": "(J)Lorg/junit/rules/Timeout;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "createFailOnTimeoutStatement",
        "desc": "(Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Timeout$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Timeout$Builder",
    "setters": [
      {
        "name": "withTimeout",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Lorg/junit/rules/Timeout$Builder;",
        "field": "timeout"
      },
      {
        "name": "withLookingForStuckThread",
        "desc": "(Z)Lorg/junit/rules/Timeout$Builder;",
        "field": "lookForStuckThread"
      }
    ],
    "getters": [
      {
        "name": "getTimeout",
        "desc": "()J",
        "field": "timeout"
      },
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;",
        "field": "timeUnit"
      },
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z",
        "field": "lookForStuckThread"
      }
    ],
    "observers": [
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "withLookingForStuckThread",
        "desc": "(Z)Lorg/junit/rules/Timeout$Builder;"
      },
      {
        "name": "withTimeout",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Lorg/junit/rules/Timeout$Builder;"
      },
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "build",
        "desc": "()Lorg/junit/rules/Timeout;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.rules.Timeout",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Verifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Verifier$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Computer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getSuite",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;[Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "getRunner",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "serial",
        "desc": "()Lorg/junit/runner/Computer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Computer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Describable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Description",
    "setters": [],
    "getters": [
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;",
        "field": "fDisplayName"
      }
    ],
    "observers": [
      {
        "name": "isSuite",
        "desc": "()Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isTest",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/ArrayList;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "getAnnotations",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [
      {
        "name": "isSuite",
        "desc": "()Z"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "createSuiteDescription",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Description;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isTest",
        "desc": "()Z"
      },
      {
        "name": "testCount",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "createTestDescription",
        "desc": "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "addChild",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "createSuiteDescription",
        "desc": "(Ljava/lang/String;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;"
      },
      {
        "name": "createSuiteDescription",
        "desc": "(Ljava/lang/String;Ljava/io/Serializable;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "createTestDescription",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/io/Serializable;)Lorg/junit/runner/Description;"
      },
      {
        "name": "createTestDescription",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Lorg/junit/runner/Description;"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/ArrayList;"
      },
      {
        "name": "createTestDescription",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;"
      },
      {
        "name": "childlessCopy",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getAnnotations",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "([\\s\\S]*)\\((.*)\\)"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.FilterFactories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFilter",
        "desc": "(Ljava/lang/Class;Lorg/junit/runner/FilterFactoryParams;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "createFilterFromFilterSpec",
        "desc": "(Lorg/junit/runner/Request;Ljava/lang/String;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createFilterFactory",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/FilterFactory;"
      },
      {
        "name": "createFilter",
        "desc": "(Ljava/lang/String;Lorg/junit/runner/FilterFactoryParams;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "createFilterFactory",
        "desc": "(Ljava/lang/String;)Lorg/junit/runner/FilterFactory;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "="
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.FilterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.FilterFactory$FilterNotCreatedException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Exception;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "outerClass": "org.junit.runner.FilterFactory",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.FilterFactoryParams",
    "setters": [],
    "getters": [
      {
        "name": "getArgs",
        "desc": "()Ljava/lang/String;",
        "field": "args"
      },
      {
        "name": "getTopLevelDescription",
        "desc": "()Lorg/junit/runner/Description;",
        "field": "topLevelDescription"
      }
    ],
    "observers": [
      {
        "name": "getArgs",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTopLevelDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "getArgs",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTopLevelDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Description;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.JUnitCommandLineParseResult",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClasses",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getFilterSpecs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "parseOptions",
        "desc": "([Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "getClasses",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "parseParameters",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "getFilterSpecs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "parse",
        "desc": "([Ljava/lang/String;)Lorg/junit/runner/JUnitCommandLineParseResult;"
      },
      {
        "name": "createRequest",
        "desc": "(Lorg/junit/runner/Computer;)Lorg/junit/runner/Request;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "--",
        "--filter",
        "--filter=",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.JUnitCommandLineParseResult$CommandLineParserError",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "outerClass": "org.junit.runner.JUnitCommandLineParseResult",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.JUnitCore",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "runClasses",
        "desc": "(Lorg/junit/runner/Computer;[Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "removeListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "run",
        "desc": "([Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "addListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runClasses",
        "desc": "([Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "runMain",
        "desc": "(Lorg/junit/internal/JUnitSystem;[Ljava/lang/String;)Lorg/junit/runner/Result;"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "defaultComputer",
        "desc": "()Lorg/junit/runner/Computer;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Computer;[Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Request;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/Test;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Runner;)Lorg/junit/runner/Result;"
      },
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Request",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Request$1",
    "setters": [],
    "getters": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;",
        "field": "val$runner"
      }
    ],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Request"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Result",
    "setters": [],
    "getters": [
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;",
        "field": "failures"
      }
    ],
    "observers": [
      {
        "name": "getIgnoreCount",
        "desc": "()I"
      },
      {
        "name": "getRunTime",
        "desc": "()J"
      },
      {
        "name": "getRunCount",
        "desc": "()I"
      },
      {
        "name": "getFailureCount",
        "desc": "()I"
      },
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "wasSuccessful",
        "desc": "()Z"
      },
      {
        "name": "getIgnoreCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getRunTime",
        "desc": "()J"
      },
      {
        "name": "getRunCount",
        "desc": "()I"
      },
      {
        "name": "getFailureCount",
        "desc": "()I"
      },
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "createListener",
        "desc": "()Lorg/junit/runner/notification/RunListener;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Result$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.runner.Result",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Result$Listener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "org.junit.runner.Result",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Result$SerializedForm",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        0
      ],
      "str": [
        "fCount",
        "fFailures",
        "fIgnoreCount",
        "fRunTime",
        "fStartTime"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "outerClass": "org.junit.runner.Result",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.RunWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Runner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runner.Describable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.manipulation.Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.manipulation.Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filter$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.manipulation.Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filterable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.NoTestsRemainException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Sortable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Sorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Comparator;)V"
      },
      {
        "name": "compare",
        "desc": "(Lorg/junit/runner/Description;Lorg/junit/runner/Description;)I"
      },
      {
        "name": "apply",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Sorter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.Failure",
    "setters": [],
    "getters": [
      {
        "name": "getException",
        "desc": "()Ljava/lang/Throwable;",
        "field": "fThrownException"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;",
        "field": "fDescription"
      }
    ],
    "observers": [
      {
        "name": "getTestHeader",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTrace",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getException",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Description;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getTestHeader",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTrace",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getException",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "testRunStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "testFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "testAssumptionFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "testRunFinished",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "testIgnored",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "testFinished",
        "desc": "(Lorg/junit/runner/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunListener$ThreadSafe",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runner.notification.RunListener",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "fireTestIgnored",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "pleaseStop",
        "desc": "()V"
      },
      {
        "name": "removeListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "addListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "fireTestStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "fireTestRunFinished",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "fireTestRunStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "addFirstListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "fireTestAssumptionFailed",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "wrapIfNotThreadSafe",
        "desc": "(Lorg/junit/runner/notification/RunListener;)Lorg/junit/runner/notification/RunListener;"
      },
      {
        "name": "fireTestFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "fireTestFinished",
        "desc": "(Lorg/junit/runner/Description;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$6",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$7",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$SafeNotifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.runner.notification.RunNotifier",
    "access": 1026,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.StoppedByUserException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.SynchronizedRunListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "testRunStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "testFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/notification/RunListener;Ljava/lang/Object;)V"
      },
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "testAssumptionFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "testRunFinished",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "testIgnored",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "testFinished",
        "desc": "(Lorg/junit/runner/Description;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.AllTests",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.SuiteMethod"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.BlockJUnit4ClassRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "validateOnlyOneConstructor",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "validateZeroArgConstructor",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "validateTestMethods",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "withBefores",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "withAfters",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "runChild",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "methodBlock",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "validateFields",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "validateNoNonStaticInnerClass",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "createTest",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "testName",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Ljava/lang/String;"
      },
      {
        "name": "rules",
        "desc": "(Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "isIgnored",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Z"
      },
      {
        "name": "computeTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "validateInstanceMethods",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "possiblyExpectingExceptions",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "collectInitializationErrors",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "describeChild",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Lorg/junit/runner/Description;"
      },
      {
        "name": "methodInvoker",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "withPotentialTimeout",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "validateConstructor",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getTestRules",
        "desc": "(Ljava/lang/Object;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "org.junit.runners.ParentRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.BlockJUnit4ClassRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.model.ReflectiveCallable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.JUnit4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.MethodSorters",
    "setters": [],
    "getters": [
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;",
        "field": "comparator"
      }
    ],
    "observers": [
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;"
      }
    ],
    "testableMethods": [
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "DEFAULT",
        "JVM",
        "NAME_ASCENDING"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Parameterized",
    "setters": [],
    "getters": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;",
        "field": "runners"
      }
    ],
    "observers": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "org.junit.runners.Suite"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Parameterized$Parameter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runners.Parameterized",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Parameterized$Parameters",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runners.Parameterized",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Parameterized$UseParametersRunnerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runners.Parameterized",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner",
    "setters": [
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V",
        "field": "filteredChildren"
      },
      {
        "name": "sort",
        "desc": "(Lorg/junit/runner/manipulation/Sorter;)V",
        "field": "filteredChildren"
      },
      {
        "name": "setScheduler",
        "desc": "(Lorg/junit/runners/model/RunnerScheduler;)V",
        "field": "scheduler"
      }
    ],
    "getters": [
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;",
        "field": "testClass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;"
      },
      {
        "name": "getRunnerAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable",
      "org.junit.runner.manipulation.Sortable"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runners.model.RunnerScheduler"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Suite",
    "setters": [],
    "getters": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;",
        "field": "runners"
      }
    ],
    "observers": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;Ljava/lang/Class;[Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/junit/runners/model/RunnerBuilder;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;[Ljava/lang/Class;)V"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "runChild",
        "desc": "(Lorg/junit/runner/Runner;Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "emptySuite",
        "desc": "()Lorg/junit/runner/Runner;"
      },
      {
        "name": "describeChild",
        "desc": "(Lorg/junit/runner/Runner;)Lorg/junit/runner/Description;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.ParentRunner"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Suite$SuiteClasses",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runners.Suite",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.Annotatable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.FrameworkField",
    "setters": [],
    "getters": [
      {
        "name": "getField",
        "desc": "()Ljava/lang/reflect/Field;",
        "field": "field"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getField",
        "desc": "()Ljava/lang/reflect/Field;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getField",
        "desc": "()Ljava/lang/reflect/Field;"
      },
      {
        "name": "isShadowedBy",
        "desc": "(Lorg/junit/runners/model/FrameworkField;)Z"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.FrameworkMember"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.FrameworkMember",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isPublic",
        "desc": "()Z"
      },
      {
        "name": "isStatic",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runners.model.Annotatable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.FrameworkMethod",
    "setters": [],
    "getters": [
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "method"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "validatePublicVoidNoArg",
        "desc": "(ZLjava/util/List;)V"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "invokeExplosively",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "validatePublicVoid",
        "desc": "(ZLjava/util/List;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "producesType",
        "desc": "(Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "validateNoTypeParametersOnArgs",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isShadowedBy",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Z"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "should"
      ]
    },
    "parents": [
      "org.junit.runners.model.FrameworkMember"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.FrameworkMethod$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.model.ReflectiveCallable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.InitializationError",
    "setters": [],
    "getters": [
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;",
        "field": "fErrors"
      }
    ],
    "observers": [
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.MultipleFailureException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "assertEmpty",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.NoGenericTypeParametersValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "validate",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.RunnerBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.RunnerScheduler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.Statement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestClass",
    "setters": [],
    "getters": [
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;",
        "field": "clazz"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOnlyConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getAnnotatedFields",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isANonStaticInnerClass",
        "desc": "()Z"
      },
      {
        "name": "isPublic",
        "desc": "()Z"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getAnnotatedFields",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOnlyConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getAnnotatedFieldValues",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isANonStaticInnerClass",
        "desc": "()Z"
      },
      {
        "name": "isPublic",
        "desc": "()Z"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "scanAnnotatedMembers",
        "desc": "(Ljava/util/Map;Ljava/util/Map;)V"
      },
      {
        "name": "getAnnotatedFields",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAnnotatedMethodValues",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "addToAnnotationLists",
        "desc": "(Lorg/junit/runners/model/FrameworkMember;Ljava/util/Map;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.runners.model.Annotatable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestClass$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.runners.model.TestClass",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestClass$FieldComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.junit.runners.model.TestClass",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestClass$MethodComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.junit.runners.model.TestClass",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestTimedOutException",
    "setters": [],
    "getters": [
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;",
        "field": "timeUnit"
      },
      {
        "name": "getTimeout",
        "desc": "()J",
        "field": "timeout"
      }
    ],
    "observers": [
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/util/concurrent/TimeUnit;)V"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters",
    "setters": [],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRunnerAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/parameterized/TestWithParameters;)V"
      },
      {
        "name": "classBlock",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "getRunnerAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "validateFields",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "validateConstructor",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "createTest",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "testName",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        ").",
        ".",
        "@Parameter("
      ]
    },
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParametersFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createRunnerForTestWithParameters",
        "desc": "(Lorg/junit/runners/parameterized/TestWithParameters;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runners.parameterized.ParametersRunnerFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.parameterized.ParametersRunnerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.parameterized.TestWithParameters",
    "setters": [],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;",
        "field": "parameters"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;",
        "field": "testClass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/junit/runners/model/TestClass;Ljava/util/List;)V"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationValidatorFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createAnnotationValidator",
        "desc": "(Lorg/junit/validator/ValidateWith;)Lorg/junit/validator/AnnotationValidator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateTestClass",
        "desc": "(Lorg/junit/runners/model/TestClass;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.validator.TestClassValidator"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$AnnotatableValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$ClassValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.validator.AnnotationsValidator$AnnotatableValidator"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$FieldValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.validator.AnnotationsValidator$AnnotatableValidator"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$MethodValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.validator.AnnotationsValidator$AnnotatableValidator"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.PublicClassValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateTestClass",
        "desc": "(Lorg/junit/runners/model/TestClass;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.validator.TestClassValidator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.TestClassValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.ValidateWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.AdditionalAnswers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnsLastArg",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "returnsSecondArg",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "returnsFirstArg",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "delegatesTo",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "returnsArgAt",
        "desc": "(I)Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "returnsElementsOf",
        "desc": "(Ljava/util/Collection;)Lorg/mockito/stubbing/Answer;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.AdditionalMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "lt",
        "desc": "(F)F"
      },
      {
        "name": "gt",
        "desc": "(I)I"
      },
      {
        "name": "lt",
        "desc": "(D)D"
      },
      {
        "name": "aryEq",
        "desc": "([J)[J"
      },
      {
        "name": "aryEq",
        "desc": "([F)[F"
      },
      {
        "name": "lt",
        "desc": "(J)J"
      },
      {
        "name": "and",
        "desc": "(ZZ)Z"
      },
      {
        "name": "aryEq",
        "desc": "([B)[B"
      },
      {
        "name": "or",
        "desc": "(BB)B"
      },
      {
        "name": "and",
        "desc": "(CC)C"
      },
      {
        "name": "leq",
        "desc": "(I)I"
      },
      {
        "name": "or",
        "desc": "(II)I"
      },
      {
        "name": "geq",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "lt",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "find",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "and",
        "desc": "(SS)S"
      },
      {
        "name": "not",
        "desc": "(Z)Z"
      },
      {
        "name": "leq",
        "desc": "(S)S"
      },
      {
        "name": "lt",
        "desc": "(B)B"
      },
      {
        "name": "aryEq",
        "desc": "([Z)[Z"
      },
      {
        "name": "aryEq",
        "desc": "([S)[S"
      },
      {
        "name": "not",
        "desc": "(C)C"
      },
      {
        "name": "and",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "or",
        "desc": "(ZZ)Z"
      },
      {
        "name": "aryEq",
        "desc": "([C)[C"
      },
      {
        "name": "not",
        "desc": "(I)I"
      },
      {
        "name": "geq",
        "desc": "(I)I"
      },
      {
        "name": "and",
        "desc": "(DD)D"
      },
      {
        "name": "eq",
        "desc": "(DD)D"
      },
      {
        "name": "aryEq",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "leq",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "or",
        "desc": "(FF)F"
      },
      {
        "name": "leq",
        "desc": "(B)B"
      },
      {
        "name": "gt",
        "desc": "(S)S"
      },
      {
        "name": "or",
        "desc": "(JJ)J"
      },
      {
        "name": "geq",
        "desc": "(S)S"
      },
      {
        "name": "leq",
        "desc": "(F)F"
      },
      {
        "name": "gt",
        "desc": "(J)J"
      },
      {
        "name": "not",
        "desc": "(S)S"
      },
      {
        "name": "leq",
        "desc": "(D)D"
      },
      {
        "name": "aryEq",
        "desc": "([D)[D"
      },
      {
        "name": "not",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "leq",
        "desc": "(J)J"
      },
      {
        "name": "or",
        "desc": "(SS)S"
      },
      {
        "name": "lt",
        "desc": "(I)I"
      },
      {
        "name": "and",
        "desc": "(II)I"
      },
      {
        "name": "gt",
        "desc": "(B)B"
      },
      {
        "name": "or",
        "desc": "(CC)C"
      },
      {
        "name": "gt",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "gt",
        "desc": "(F)F"
      },
      {
        "name": "gt",
        "desc": "(D)D"
      },
      {
        "name": "cmpEq",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "geq",
        "desc": "(B)B"
      },
      {
        "name": "not",
        "desc": "(D)D"
      },
      {
        "name": "aryEq",
        "desc": "([I)[I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "geq",
        "desc": "(D)D"
      },
      {
        "name": "not",
        "desc": "(B)B"
      },
      {
        "name": "geq",
        "desc": "(F)F"
      },
      {
        "name": "and",
        "desc": "(BB)B"
      },
      {
        "name": "eq",
        "desc": "(FF)F"
      },
      {
        "name": "and",
        "desc": "(FF)F"
      },
      {
        "name": "not",
        "desc": "(F)F"
      },
      {
        "name": "geq",
        "desc": "(J)J"
      },
      {
        "name": "or",
        "desc": "(DD)D"
      },
      {
        "name": "and",
        "desc": "(JJ)J"
      },
      {
        "name": "not",
        "desc": "(J)J"
      },
      {
        "name": "lt",
        "desc": "(S)S"
      },
      {
        "name": "or",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Answers",
    "setters": [],
    "getters": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;",
        "field": "implementation"
      }
    ],
    "observers": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      }
    ],
    "testableMethods": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "CALLS_REAL_METHODS",
        "RETURNS_DEEP_STUBS",
        "RETURNS_DEFAULTS",
        "RETURNS_MOCKS",
        "RETURNS_SMART_NULLS"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.ArgumentCaptor",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "capture",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "forClass",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/ArgumentCaptor;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.ArgumentMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "willCallRealMethod",
        "desc": "()Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "then",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$Then;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "willDoNothing",
        "desc": "()Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willThrow",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "given",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDStubber;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.Mockito"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$BDDMyOngoingStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$BDDOngoingStubbingImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "willThrow",
        "desc": "([Ljava/lang/Class;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "will",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willCallRealMethod",
        "desc": "()Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willReturn",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willThrow",
        "desc": "([Ljava/lang/Throwable;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/stubbing/OngoingStubbing;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.BDDMockito$BDDMyOngoingStubbing"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$BDDStubber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$BDDStubberImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "given",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "willCallRealMethod",
        "desc": "()Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willNothing",
        "desc": "()Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/stubbing/Stubber;)V"
      },
      {
        "name": "willThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willThrow",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDStubber;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.BDDMockito$BDDStubber"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$Then",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$ThenImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "should",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "should",
        "desc": "(Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.BDDMockito$Then"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Captor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.InOrder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Incubating",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.InjectMocks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Matchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "anyString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "longThat",
        "desc": "(Lorg/hamcrest/Matcher;)J"
      },
      {
        "name": "any",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "argThat",
        "desc": "(Lorg/hamcrest/Matcher;)Ljava/lang/Object;"
      },
      {
        "name": "eq",
        "desc": "(Z)Z"
      },
      {
        "name": "isNull",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "anyInt",
        "desc": "()I"
      },
      {
        "name": "anyChar",
        "desc": "()C"
      },
      {
        "name": "anyByte",
        "desc": "()B"
      },
      {
        "name": "eq",
        "desc": "(I)I"
      },
      {
        "name": "anyList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "intThat",
        "desc": "(Lorg/hamcrest/Matcher;)I"
      },
      {
        "name": "anyVararg",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "booleanThat",
        "desc": "(Lorg/hamcrest/Matcher;)Z"
      },
      {
        "name": "anyObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "floatThat",
        "desc": "(Lorg/hamcrest/Matcher;)F"
      },
      {
        "name": "anyCollectionOf",
        "desc": "(Ljava/lang/Class;)Ljava/util/Collection;"
      },
      {
        "name": "charThat",
        "desc": "(Lorg/hamcrest/Matcher;)C"
      },
      {
        "name": "anyDouble",
        "desc": "()D"
      },
      {
        "name": "eq",
        "desc": "(C)C"
      },
      {
        "name": "anyLong",
        "desc": "()J"
      },
      {
        "name": "eq",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "isA",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "isNotNull",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "same",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "anyFloat",
        "desc": "()F"
      },
      {
        "name": "shortThat",
        "desc": "(Lorg/hamcrest/Matcher;)S"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "anyShort",
        "desc": "()S"
      },
      {
        "name": "any",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "anySetOf",
        "desc": "(Ljava/lang/Class;)Ljava/util/Set;"
      },
      {
        "name": "anyCollection",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "isNull",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "anyMap",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "anyMapOf",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "byteThat",
        "desc": "(Lorg/hamcrest/Matcher;)B"
      },
      {
        "name": "anySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "eq",
        "desc": "(S)S"
      },
      {
        "name": "refEq",
        "desc": "(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "isNotNull",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "eq",
        "desc": "(F)F"
      },
      {
        "name": "anyBoolean",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "anyListOf",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "eq",
        "desc": "(J)J"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "notNull",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "doubleThat",
        "desc": "(Lorg/hamcrest/Matcher;)D"
      },
      {
        "name": "eq",
        "desc": "(D)D"
      },
      {
        "name": "notNull",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "eq",
        "desc": "(B)B"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Mock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockSettings",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockingDetails",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Mockito",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "calls",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "verifyZeroInteractions",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "stub",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/DeprecatedOngoingStubbing;"
      },
      {
        "name": "times",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "doAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Lorg/mockito/ReturnValues;)Ljava/lang/Object;"
      },
      {
        "name": "spy",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "reset",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "after",
        "desc": "(I)Lorg/mockito/verification/VerificationAfterDelay;"
      },
      {
        "name": "when",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "timeout",
        "desc": "(J)Lorg/mockito/verification/VerificationWithTimeout;"
      },
      {
        "name": "stubVoid",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "ignoreStubs",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "spy",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "doThrow",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "validateMockitoUsage",
        "desc": "()V"
      },
      {
        "name": "only",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "inOrder",
        "desc": "([Ljava/lang/Object;)Lorg/mockito/InOrder;"
      },
      {
        "name": "doThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Lorg/mockito/stubbing/Answer;)Ljava/lang/Object;"
      },
      {
        "name": "doReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "atLeastOnce",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "atLeast",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "doCallRealMethod",
        "desc": "()Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "withSettings",
        "desc": "()Lorg/mockito/MockSettings;"
      },
      {
        "name": "mockingDetails",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockingDetails;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Lorg/mockito/MockSettings;)Ljava/lang/Object;"
      },
      {
        "name": "debug",
        "desc": "()Lorg/mockito/MockitoDebugger;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "atMost",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "verifyNoMoreInteractions",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "doNothing",
        "desc": "()Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "never",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.Matchers"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockitoAnnotations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "scanDeprecatedWay",
        "desc": "(Lorg/mockito/configuration/AnnotationEngine;Ljava/lang/Object;Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "processAnnotationDeprecatedWay",
        "desc": "(Lorg/mockito/configuration/AnnotationEngine;Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "initMocks",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "throwIfAlreadyAssigned",
        "desc": "(Ljava/lang/reflect/Field;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockitoAnnotations$Mock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.mockito.MockitoAnnotations",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockitoDebugger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.ReturnValues",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Spy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.AnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.AnnotationWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "size"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "size"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "size"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "size"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "put",
        "desc": "([Lorg/mockito/asm/AnnotationWriter;ILorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassWriter;ZLorg/mockito/asm/ByteVector;Lorg/mockito/asm/ByteVector;I)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "byte": [
        90,
        91
      ],
      "char": [
        90,
        91
      ],
      "short": [
        90,
        91
      ],
      "int": [
        0,
        1,
        2,
        90,
        91
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Attribute",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLabels",
        "desc": "()[Lorg/mockito/asm/Label;"
      },
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getLabels",
        "desc": "()[Lorg/mockito/asm/Label;"
      },
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "getSize",
        "desc": "(Lorg/mockito/asm/ClassWriter;[BIII)I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/ClassWriter;[BIIILorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "write",
        "desc": "(Lorg/mockito/asm/ClassWriter;[BIII)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "read",
        "desc": "(Lorg/mockito/asm/ClassReader;II[CI[Lorg/mockito/asm/Label;)Lorg/mockito/asm/Attribute;"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ByteVector",
    "setters": [
      {
        "name": "putByte",
        "desc": "(I)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putInt",
        "desc": "(I)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putLong",
        "desc": "(J)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "putByte",
        "desc": "(I)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "putInt",
        "desc": "(I)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "put11",
        "desc": "(II)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "putLong",
        "desc": "(J)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "put12",
        "desc": "(II)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/mockito/asm/ByteVector;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        64,
        127
      ],
      "char": [
        64
      ],
      "short": [
        8,
        64,
        127,
        2047
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        8,
        64,
        127,
        2047
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ClassAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ClassReader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;[Lorg/mockito/asm/Attribute;I)V"
      },
      {
        "name": "readClass",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readConst",
        "desc": "(I[C)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "readUTF8",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "readLabel",
        "desc": "(I[Lorg/mockito/asm/Label;)Lorg/mockito/asm/Label;"
      },
      {
        "name": "copyPool",
        "desc": "(Lorg/mockito/asm/ClassWriter;)V"
      },
      {
        "name": "readUnsignedShort",
        "desc": "(I)I"
      },
      {
        "name": "readInt",
        "desc": "(I)I"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "readLong",
        "desc": "(I)J"
      },
      {
        "name": "getItem",
        "desc": "(I)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "readByte",
        "desc": "(I)I"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;I)V"
      },
      {
        "name": "readShort",
        "desc": "(I)S"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        8,
        46,
        47,
        54,
        59,
        64,
        76,
        91
      ],
      "char": [
        46,
        47,
        54,
        59,
        64,
        76,
        91
      ],
      "short": [
        6,
        8,
        46,
        47,
        54,
        59,
        64,
        76,
        91,
        128,
        132,
        182,
        185,
        247,
        248,
        251,
        255,
        1000,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        2,
        4,
        6,
        8,
        46,
        47,
        54,
        59,
        64,
        76,
        91,
        101,
        128,
        132,
        182,
        185,
        247,
        248,
        251,
        255,
        1000,
        4096,
        131072
      ],
      "double": [
        0.75
      ],
      "str": [
        ".class",
        "<init>",
        "AnnotationDefault",
        "Code",
        "ConstantValue",
        "Deprecated",
        "EnclosingMethod",
        "Exceptions",
        "InnerClasses",
        "LineNumberTable",
        "LocalVariableTable",
        "LocalVariableTypeTable",
        "RuntimeInvisibleAnnotations",
        "RuntimeInvisibleParameterAnnotations",
        "RuntimeVisibleAnnotations",
        "RuntimeVisibleParameterAnnotations",
        "Signature",
        "SourceDebugExtension",
        "SourceFile",
        "StackMap",
        "StackMapTable",
        "Synthetic"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ClassWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "ianns"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "enclosingMethodOwner"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I",
        "field": "index"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "sourceDebug"
      },
      {
        "name": "newNameType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I",
        "field": "index"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "version"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
        "field": "innerClassesCount"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V",
        "field": "attrs"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "newField",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "newLong",
        "desc": "(J)Lorg/mockito/asm/Item;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newClassItem",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Item;"
      },
      {
        "name": "newNameType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "newDouble",
        "desc": "(D)Lorg/mockito/asm/Item;"
      },
      {
        "name": "addType",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "newMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I"
      },
      {
        "name": "newFloat",
        "desc": "(F)Lorg/mockito/asm/Item;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassReader;I)V"
      },
      {
        "name": "newInteger",
        "desc": "(I)Lorg/mockito/asm/Item;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newMethodItem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/mockito/asm/Item;"
      },
      {
        "name": "getMergedType",
        "desc": "(II)I"
      },
      {
        "name": "newConstItem",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/asm/Item;"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "addUninitializedType",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "newClass",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "newConst",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "newFieldItem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/Item;"
      },
      {
        "name": "getCommonSuperClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        10,
        14,
        15,
        16,
        32,
        49
      ],
      "char": [
        32,
        49
      ],
      "short": [
        6,
        7,
        8,
        10,
        14,
        15,
        16,
        32,
        49,
        220,
        256,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        14,
        15,
        16,
        32,
        49,
        220,
        256,
        4096,
        65535,
        131072,
        2147483647
      ],
      "double": [
        0.75
      ],
      "str": [
        "Deprecated",
        "EnclosingMethod",
        "Signature",
        "SourceDebugExtension"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Edge",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.FieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.FieldWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "ianns"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V",
        "field": "attrs"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        49
      ],
      "char": [
        49
      ],
      "short": [
        8,
        49,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        2,
        8,
        49,
        4096,
        65535,
        131072
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Frame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "execute",
        "desc": "(IILorg/mockito/asm/ClassWriter;Lorg/mockito/asm/Item;)V"
      },
      {
        "name": "initInputFrame",
        "desc": "(Lorg/mockito/asm/ClassWriter;I[Lorg/mockito/asm/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/ClassWriter;Lorg/mockito/asm/Frame;I)Z"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        10,
        40,
        60,
        68,
        74,
        91
      ],
      "char": [
        40,
        60,
        68,
        74,
        91
      ],
      "short": [
        8,
        10,
        40,
        60,
        68,
        74,
        91,
        183,
        184,
        202
      ],
      "int": [
        -268435456,
        -1048576,
        0,
        1,
        2,
        8,
        10,
        40,
        60,
        68,
        74,
        91,
        183,
        184,
        202,
        262144,
        16777216,
        16777217,
        16777219,
        16777220,
        16777221,
        16777222,
        24117248,
        25165824,
        33554432,
        50331648,
        251658240,
        267386880,
        268435455
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Handler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Item",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "set",
        "desc": "(D)V"
      },
      {
        "name": "isEqualTo",
        "desc": "(Lorg/mockito/asm/Item;)Z"
      },
      {
        "name": "set",
        "desc": "(F)V"
      },
      {
        "name": "set",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "set",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/Item;)V"
      },
      {
        "name": "set",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        3,
        4,
        5,
        6,
        2147483647
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Label",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/MethodWriter;Lorg/mockito/asm/ByteVector;IZ)V"
      },
      {
        "name": "addToSubroutine",
        "desc": "(JI)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "inSameSubroutine",
        "desc": "(Lorg/mockito/asm/Label;)Z"
      },
      {
        "name": "inSubroutine",
        "desc": "(J)Z"
      },
      {
        "name": "resolve",
        "desc": "(Lorg/mockito/asm/MethodWriter;I[B)Z"
      },
      {
        "name": "visitSubroutine",
        "desc": "(Lorg/mockito/asm/Label;JI)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        32
      ],
      "char": [
        32
      ],
      "short": [
        -32768,
        6,
        32,
        128,
        168,
        255,
        256,
        1024,
        32767
      ],
      "int": [
        -32768,
        -1,
        0,
        1,
        2,
        6,
        32,
        128,
        168,
        255,
        256,
        1024,
        32767
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.MethodAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.MethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.MethodWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "ianns"
      },
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "stackSize"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "maxLocals"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "previousFrameOffset"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "ipanns"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "stackSize"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "stackSize"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "stackSize"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "stackSize"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "stackSize"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V",
        "field": "stackSize"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "maxLocals"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V",
        "field": "handlerCount"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V",
        "field": "resize"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V",
        "field": "attrs"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V",
        "field": "lineNumberCount"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "stackSize"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V",
        "field": "localVarCount"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "readInt",
        "desc": "([BI)I"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "getNewOffset",
        "desc": "([I[III)I"
      },
      {
        "name": "readShort",
        "desc": "([BI)S"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZZ)V"
      },
      {
        "name": "readUnsignedShort",
        "desc": "([BI)I"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeShort",
        "desc": "([BII)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "getNewOffset",
        "desc": "([I[ILorg/mockito/asm/Label;)V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        -2,
        6,
        8,
        16,
        17,
        18,
        20,
        22,
        24,
        28,
        32,
        41,
        49,
        50,
        54,
        55,
        57,
        59,
        63,
        64,
        68,
        74,
        76,
        86,
        91,
        127
      ],
      "char": [
        32,
        41,
        49,
        50,
        54,
        55,
        57,
        59,
        63,
        64,
        68,
        74,
        76,
        86,
        91
      ],
      "short": [
        -32768,
        -1025,
        -128,
        -2,
        6,
        8,
        16,
        17,
        18,
        20,
        22,
        24,
        28,
        32,
        41,
        49,
        50,
        54,
        55,
        57,
        59,
        63,
        64,
        68,
        74,
        76,
        86,
        91,
        127,
        128,
        132,
        166,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        197,
        200,
        201,
        218,
        247,
        252,
        255,
        256,
        512,
        1024,
        4096,
        32767
      ],
      "int": [
        -268435456,
        -32768,
        -1025,
        -128,
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        16,
        17,
        18,
        20,
        22,
        24,
        28,
        32,
        41,
        49,
        50,
        54,
        55,
        57,
        59,
        63,
        64,
        68,
        74,
        76,
        86,
        91,
        127,
        128,
        132,
        166,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        197,
        200,
        201,
        218,
        247,
        248,
        251,
        252,
        255,
        256,
        512,
        1024,
        4096,
        32767,
        65535,
        131072,
        262144,
        1048575,
        16777216,
        16777219,
        16777220,
        24117248,
        25165824,
        267386880,
        2147483647
      ],
      "str": [
        "<init>",
        "Ljava/lang/Synthetic;"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Opcodes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Type",
    "setters": [],
    "getters": [
      {
        "name": "getSort",
        "desc": "()I",
        "field": "sort"
      }
    ],
    "observers": [
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "getOpcode",
        "desc": "(I)I"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/String;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/reflect/Method;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "getConstructorDescriptor",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getInternalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getMethodDescriptor",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "getMethodDescriptor",
        "desc": "(Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getObjectType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescriptor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        41,
        46,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "char": [
        41,
        46,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        41,
        46,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        41,
        46,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "str": [
        "double",
        "long"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.AbstractInsnNode",
    "setters": [],
    "getters": [
      {
        "name": "getOpcode",
        "desc": "()I",
        "field": "opcode"
      },
      {
        "name": "getNext",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;",
        "field": "next"
      },
      {
        "name": "getPrevious",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;",
        "field": "prev"
      }
    ],
    "observers": [
      {
        "name": "getOpcode",
        "desc": "()I"
      },
      {
        "name": "getNext",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "getPrevious",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.AnnotationNode",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "values"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "values"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "values"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "values"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.ClassNode",
    "setters": [
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "outerClass"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "sourceFile"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "version"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.asm.tree.MemberNode",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.FieldInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.FieldNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.asm.tree.MemberNode",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.FrameNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.IincInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        132
      ],
      "int": [
        132
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InnerClassNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InsnList",
    "setters": [
      {
        "name": "set",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "last"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)I",
        "field": "cache"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "remove",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      }
    ],
    "getters": [
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;",
        "field": "first"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;",
        "field": "last"
      },
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "set",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "get",
        "desc": "(I)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/asm/tree/InsnList;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "remove",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/InsnList;)V"
      },
      {
        "name": "iterator",
        "desc": "(I)Ljava/util/ListIterator;"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)I"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/InsnList;)V"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "resetLabels",
        "desc": "()V"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "contains",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)Z"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/InsnList;)V"
      },
      {
        "name": "toArray",
        "desc": "()[Lorg/mockito/asm/tree/AbstractInsnNode;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InsnList$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.asm.tree.InsnList",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InsnList$InsnListIterator",
    "setters": [
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)V",
        "field": "prev"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)V",
        "field": "prev"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "hasPrevious",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.ListIterator"
    ],
    "outerClass": "org.mockito.asm.tree.InsnList",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.IntInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.JumpInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LabelNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "getLabel",
        "desc": "()Lorg/mockito/asm/Label;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "getLabel",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "resetLabel",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LdcInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "byte": [
        18
      ],
      "short": [
        18
      ],
      "int": [
        18
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LineNumberNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LocalVariableNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/tree/LabelNode;Lorg/mockito/asm/tree/LabelNode;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LookupSwitchInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/LabelNode;[I[Lorg/mockito/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        171
      ],
      "int": [
        0,
        171
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MemberNode",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "invisibleAnnotations"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V",
        "field": "attrs"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MethodInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MethodNode",
    "setters": [
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "invisibleParameterAnnotations"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "getLabelNode",
        "desc": "(Lorg/mockito/asm/Label;)Lorg/mockito/asm/tree/LabelNode;"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1,
        5,
        1024
      ]
    },
    "parents": [
      "org.mockito.asm.tree.MemberNode",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MethodNode$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.ArrayList"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MultiANewArrayInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        197
      ],
      "int": [
        197
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.TableSwitchInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(IILorg/mockito/asm/tree/LabelNode;[Lorg/mockito/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        170
      ],
      "int": [
        0,
        170
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.TryCatchBlockNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/LabelNode;Lorg/mockito/asm/tree/LabelNode;Lorg/mockito/asm/tree/LabelNode;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.TypeInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.VarInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Analyzer",
    "setters": [
      {
        "name": "analyze",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/tree/MethodNode;)[Lorg/mockito/asm/tree/analysis/Frame;",
        "field": "n"
      }
    ],
    "getters": [
      {
        "name": "getFrames",
        "desc": "()[Lorg/mockito/asm/tree/analysis/Frame;",
        "field": "frames"
      }
    ],
    "observers": [
      {
        "name": "getFrames",
        "desc": "()[Lorg/mockito/asm/tree/analysis/Frame;"
      }
    ],
    "testableMethods": [
      {
        "name": "newFrame",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;)Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "newControlFlowExceptionEdge",
        "desc": "(II)Z"
      },
      {
        "name": "getFrames",
        "desc": "()[Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "analyze",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/tree/MethodNode;)[Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "getHandlers",
        "desc": "(I)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/analysis/Interpreter;)V"
      },
      {
        "name": "newFrame",
        "desc": "(II)Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "newControlFlowEdge",
        "desc": "(II)V"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        13,
        14,
        22,
        24,
        55,
        57
      ],
      "char": [
        55,
        57
      ],
      "short": [
        7,
        8,
        13,
        14,
        22,
        24,
        55,
        57,
        167,
        168,
        169,
        172,
        177,
        191,
        1280
      ],
      "int": [
        0,
        1,
        2,
        7,
        8,
        13,
        14,
        22,
        24,
        55,
        57,
        167,
        168,
        169,
        172,
        177,
        191,
        1280
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.Opcodes"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.AnalyzerException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/mockito/asm/tree/analysis/Value;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.BasicInterpreter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newValue",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "unaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "binaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "ternaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "copyOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "naryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      }
    ],
    "dictionary": {
      "short": [
        197
      ],
      "int": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        168,
        178,
        187,
        197
      ],
      "str": [
        "[J"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.Opcodes",
      "org.mockito.asm.tree.analysis.Interpreter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.BasicValue",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "isReference",
        "desc": "()Z"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "isReference",
        "desc": "()Z"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        10
      ],
      "short": [
        9,
        10
      ],
      "int": [
        1,
        9,
        10
      ],
      "str": [
        ".",
        "A",
        "java/lang/Object"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.tree.analysis.Value"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.BasicVerifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "unaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "binaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "ternaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "copyOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "naryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "getElementValue",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "isArrayValue",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)Z"
      },
      {
        "name": "isSubTypeOf",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        50
      ],
      "char": [
        50
      ],
      "short": [
        50,
        184,
        197
      ],
      "int": [
        0,
        50,
        184,
        197
      ],
      "str": [
        "[Z"
      ]
    },
    "parents": [
      "org.mockito.asm.tree.analysis.BasicInterpreter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Frame",
    "setters": [
      {
        "name": "init",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;)Lorg/mockito/asm/tree/analysis/Frame;",
        "field": "top"
      },
      {
        "name": "push",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)V",
        "field": "top"
      }
    ],
    "getters": [
      {
        "name": "getStackSize",
        "desc": "()I",
        "field": "top"
      },
      {
        "name": "getLocals",
        "desc": "()I",
        "field": "locals"
      }
    ],
    "observers": [
      {
        "name": "getStackSize",
        "desc": "()I"
      },
      {
        "name": "getLocals",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLocal",
        "desc": "(I)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "getStackSize",
        "desc": "()I"
      },
      {
        "name": "init",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;)Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "clearStack",
        "desc": "()V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setLocal",
        "desc": "(ILorg/mockito/asm/tree/analysis/Value;)V"
      },
      {
        "name": "push",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)V"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;[Z)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;)V"
      },
      {
        "name": "pop",
        "desc": "()Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "getLocals",
        "desc": "()I"
      },
      {
        "name": "getStack",
        "desc": "(I)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;Lorg/mockito/asm/tree/analysis/Interpreter;)Z"
      },
      {
        "name": "execute",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Interpreter;)V"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      }
    ],
    "dictionary": {
      "short": [
        184
      ],
      "int": [
        0,
        1,
        2,
        184
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Interpreter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.SimpleVerifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newValue",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;Ljava/util/List;Z)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;Z)V"
      },
      {
        "name": "isInterface",
        "desc": "(Lorg/mockito/asm/Type;)Z"
      },
      {
        "name": "getSuperClass",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)Z"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "getElementValue",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "isArrayValue",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)Z"
      },
      {
        "name": "isSubTypeOf",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Z"
      },
      {
        "name": "getClass",
        "desc": "(Lorg/mockito/asm/Type;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        10
      ],
      "short": [
        9,
        10
      ],
      "int": [
        0,
        1,
        9,
        10
      ],
      "str": [
        "Lnull;"
      ]
    },
    "parents": [
      "org.mockito.asm.tree.analysis.BasicVerifier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.SmallSet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "next",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "union",
        "desc": "(Lorg/mockito/asm/tree/analysis/SmallSet;)Ljava/util/Set;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        4
      ]
    },
    "parents": [
      "java.util.AbstractSet",
      "java.util.Iterator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.SourceInterpreter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newValue",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "unaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "binaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "ternaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "copyOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "naryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      }
    ],
    "dictionary": {
      "short": [
        197
      ],
      "int": [
        1,
        9,
        10,
        14,
        15,
        18,
        47,
        49,
        97,
        99,
        101,
        103,
        105,
        107,
        109,
        111,
        113,
        115,
        117,
        119,
        121,
        123,
        125,
        127,
        129,
        131,
        133,
        135,
        138,
        140,
        141,
        143,
        178,
        180,
        197
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.Opcodes",
      "org.mockito.asm.tree.analysis.Interpreter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.SourceValue",
    "setters": [],
    "getters": [
      {
        "name": "getSize",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/util/Set;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.tree.analysis.Value"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Subroutine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/LabelNode;ILorg/mockito/asm/tree/JumpInsnNode;)V"
      },
      {
        "name": "copy",
        "desc": "()Lorg/mockito/asm/tree/analysis/Subroutine;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Subroutine;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Value",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifiable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierAbstractVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "appendConstant",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "appendConstant",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        41,
        125
      ],
      "char": [
        41,
        125
      ],
      "short": [
        10,
        41,
        125
      ],
      "int": [
        0,
        10,
        41,
        125
      ],
      "str": [
        "\")",
        "Boolean.FALSE",
        "L)",
        "null"
      ]
    },
    "parents": [
      "org.mockito.asm.util.AbstractVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierAnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.asm.util.AbstractVisitor",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintWriter;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "appendAccess",
        "desc": "(I)V"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "createASMifierMethodVisitor",
        "desc": "()Lorg/mockito/asm/util/ASMifierMethodVisitor;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        32,
        46,
        47,
        48,
        64,
        92
      ],
      "char": [
        32,
        46,
        47,
        48,
        64,
        92
      ],
      "short": [
        8,
        16,
        32,
        46,
        47,
        48,
        64,
        92,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384
      ],
      "int": [
        -1,
        0,
        1,
        2,
        4,
        8,
        16,
        32,
        46,
        47,
        48,
        49,
        50,
        64,
        92,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384,
        131072,
        196653,
        262144,
        524288,
        1048576
      ],
      "str": [
        "-debug",
        ".class",
        "cw",
        "cw.visit("
      ]
    },
    "parents": [
      "org.mockito.asm.util.ASMifierAbstractVisitor",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierFieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "fv"
      ]
    },
    "parents": [
      "org.mockito.asm.util.ASMifierAbstractVisitor",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierMethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      }
    ],
    "dictionary": {
      "short": [
        188
      ],
      "int": [
        -1,
        0,
        188
      ],
      "str": [
        "mv"
      ]
    },
    "parents": [
      "org.mockito.asm.util.ASMifierAbstractVisitor",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.AbstractVisitor",
    "setters": [],
    "getters": [
      {
        "name": "getText",
        "desc": "()Ljava/util/List;",
        "field": "text"
      }
    ],
    "observers": [
      {
        "name": "getText",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10,
        13,
        16,
        32,
        34,
        44,
        92,
        127
      ],
      "char": [
        32,
        34,
        44,
        92
      ],
      "short": [
        10,
        13,
        16,
        32,
        34,
        44,
        92,
        127,
        256,
        4096
      ],
      "int": [
        0,
        1,
        10,
        13,
        16,
        32,
        34,
        44,
        92,
        127,
        256,
        4096
      ],
      "str": [
        "00",
        "000",
        "\\\"",
        "\\\\",
        "\\n",
        "\\r",
        "\\u"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckAnnotationAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;Z)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckClassAdapter",
    "setters": [
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "outer"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "source"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "start"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "checkAccess",
        "desc": "(II)V"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/asm/ClassReader;ZLjava/io/PrintWriter;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "byte": [
        16,
        59
      ],
      "char": [
        59
      ],
      "short": [
        16,
        59,
        512,
        1024
      ],
      "int": [
        -1,
        0,
        1,
        2,
        4,
        16,
        59,
        512,
        1024,
        100000,
        161329
      ],
      "str": [
        ".class",
        "java/lang/Object",
        "package-info"
      ]
    },
    "parents": [
      "org.mockito.asm.ClassAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckFieldAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/FieldVisitor;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckMethodAdapter",
    "setters": [
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "endCode"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "checkSignedByte",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "checkIdentifier",
        "desc": "(Ljava/lang/String;IILjava/lang/String;)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "checkInternalName",
        "desc": "(Ljava/lang/String;IILjava/lang/String;)V"
      },
      {
        "name": "checkEndMethod",
        "desc": "()V"
      },
      {
        "name": "checkEndCode",
        "desc": "()V"
      },
      {
        "name": "checkSignedShort",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "checkIdentifier",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "checkInternalName",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "checkFrameValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "checkConstant",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "checkMethodSignature",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "checkLabel",
        "desc": "(Lorg/mockito/asm/Label;ZLjava/lang/String;)V"
      },
      {
        "name": "checkDesc",
        "desc": "(Ljava/lang/String;IZ)I"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "checkDesc",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "checkUnsignedShort",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "checkOpcode",
        "desc": "(II)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "checkClassSignature",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "checkMethodIdentifier",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "checkFieldSignature",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "checkMethodDesc",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "checkStartCode",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        11,
        40,
        41,
        42,
        43,
        45,
        46,
        47,
        58,
        59,
        60,
        62,
        76,
        86,
        91,
        94,
        127
      ],
      "char": [
        40,
        41,
        42,
        43,
        45,
        46,
        47,
        58,
        59,
        60,
        62,
        76,
        86,
        91,
        94
      ],
      "short": [
        -32768,
        -128,
        11,
        40,
        41,
        42,
        43,
        45,
        46,
        47,
        58,
        59,
        60,
        62,
        76,
        86,
        91,
        94,
        127,
        187,
        199,
        32767
      ],
      "int": [
        -32768,
        -128,
        -1,
        0,
        1,
        2,
        3,
        4,
        11,
        16,
        17,
        40,
        41,
        42,
        43,
        45,
        46,
        47,
        58,
        59,
        60,
        62,
        76,
        86,
        91,
        94,
        127,
        187,
        199,
        32767,
        65535
      ],
      "str": [
        "<clinit>",
        "<init>",
        "BBBBBBBBBBBBBBBBCCIAADDDDDAAAAAAAAAAAAAAAAAAAABBBBBBBBDDDDDAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBJBBBBBBBBBBBBBBBBBBBBHHHHHHHHHHHHHHHHDKLBBBBBBFFFFGGGGAECEBBEEBBAMHHAA",
        "L[T",
        "ZCBSIFJDL[T",
        "type"
      ]
    },
    "parents": [
      "org.mockito.asm.MethodAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckSignatureAdapter",
    "setters": [
      {
        "name": "visitTypeVariable",
        "desc": "(Ljava/lang/String;)V",
        "field": "state"
      },
      {
        "name": "visitBaseType",
        "desc": "(C)V",
        "field": "state"
      },
      {
        "name": "visitClassType",
        "desc": "(Ljava/lang/String;)V",
        "field": "state"
      },
      {
        "name": "visitFormalTypeParameter",
        "desc": "(Ljava/lang/String;)V",
        "field": "state"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitClassBound",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitParameterType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitTypeArgument",
        "desc": "(C)Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitClassType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitSuperclass",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitReturnType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitBaseType",
        "desc": "(C)V"
      },
      {
        "name": "visitFormalTypeParameter",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInterfaceBound",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitInterface",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitExceptionType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitArrayType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitTypeVariable",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClassType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/signature/SignatureVisitor;)V"
      },
      {
        "name": "visitTypeArgument",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        16,
        23,
        32,
        64,
        86
      ],
      "char": [
        32,
        64,
        86
      ],
      "short": [
        7,
        8,
        16,
        23,
        32,
        64,
        86,
        128,
        256
      ],
      "int": [
        -1,
        1,
        2,
        4,
        7,
        8,
        16,
        23,
        32,
        64,
        86,
        128,
        256
      ],
      "str": [
        "+-=",
        "ZCBSIFJD"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.signature.SignatureVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceAbstractVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        2,
        4,
        5
      ]
    },
    "parents": [
      "org.mockito.asm.util.AbstractVisitor"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceAnnotationVisitor",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "valueNumber"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "valueNumber"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "valueNumber"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "valueNumber"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "byte": [
        61,
        68,
        70,
        76,
        123
      ],
      "char": [
        61,
        68,
        70,
        76,
        123
      ],
      "short": [
        61,
        68,
        70,
        76,
        123
      ],
      "int": [
        0,
        1,
        61,
        68,
        70,
        76,
        123
      ],
      "str": [
        "(byte)",
        "(char)",
        "(short)",
        ")",
        ".class",
        "}"
      ]
    },
    "parents": [
      "org.mockito.asm.util.TraceAbstractVisitor",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "createTraceFieldVisitor",
        "desc": "()Lorg/mockito/asm/util/TraceFieldVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/io/PrintWriter;)V"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintWriter;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "createTraceMethodVisitor",
        "desc": "()Lorg/mockito/asm/util/TraceMethodVisitor;"
      }
    ],
    "dictionary": {
      "byte": [
        -33,
        8,
        10,
        16,
        32,
        47,
        64,
        92
      ],
      "char": [
        32,
        47,
        64,
        92
      ],
      "short": [
        -33,
        8,
        10,
        16,
        32,
        47,
        64,
        92,
        128,
        256,
        512,
        1024,
        2048,
        8192,
        16384
      ],
      "int": [
        -33,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        16,
        32,
        47,
        64,
        92,
        128,
        256,
        512,
        1024,
        2048,
        8192,
        16384,
        131072
      ],
      "str": [
        "-debug",
        ".class",
        "java/lang/Object"
      ]
    },
    "parents": [
      "org.mockito.asm.util.TraceAbstractVisitor",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceFieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.util.TraceAbstractVisitor",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceMethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "appendLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32,
        188
      ],
      "int": [
        -1,
        0,
        2,
        32,
        188
      ],
      "str": [
        "[",
        "default="
      ]
    },
    "parents": [
      "org.mockito.asm.util.TraceAbstractVisitor",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceSignatureVisitor",
    "setters": [
      {
        "name": "visitInnerClassType",
        "desc": "(Ljava/lang/String;)V",
        "field": "argumentStack"
      },
      {
        "name": "visitTypeArgument",
        "desc": "(C)Lorg/mockito/asm/signature/SignatureVisitor;",
        "field": "argumentStack"
      },
      {
        "name": "visitClassType",
        "desc": "(Ljava/lang/String;)V",
        "field": "separator"
      },
      {
        "name": "visitFormalTypeParameter",
        "desc": "(Ljava/lang/String;)V",
        "field": "seenFormalParameter"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDeclaration",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExceptions",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitClassBound",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitParameterType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "visitTypeArgument",
        "desc": "(C)Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitClassType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitSuperclass",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "getDeclaration",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExceptions",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visitReturnType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitBaseType",
        "desc": "(C)V"
      },
      {
        "name": "visitFormalTypeParameter",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInterfaceBound",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitInterface",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitExceptionType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitArrayType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitTypeVariable",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClassType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visitTypeArgument",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        41,
        43,
        45,
        46,
        47,
        62,
        63
      ],
      "char": [
        41,
        43,
        45,
        46,
        47,
        62,
        63
      ],
      "short": [
        41,
        43,
        45,
        46,
        47,
        62,
        63,
        512
      ],
      "int": [
        0,
        1,
        2,
        41,
        43,
        45,
        46,
        47,
        62,
        63,
        512
      ],
      "str": [
        "",
        "[]",
        "double",
        "java/lang/Object"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.signature.SignatureVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.Traceable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanCopier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1,
        2
      ],
      "str": [
        "org.mockito.cglib.beans.BeanCopier"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanCopier$BeanCopierKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanCopier",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanCopier$Generator",
    "setters": [
      {
        "name": "setSource",
        "desc": "(Ljava/lang/Class;)V",
        "field": "source"
      },
      {
        "name": "setUseConverter",
        "desc": "(Z)V",
        "field": "useConverter"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setSource",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setUseConverter",
        "desc": "(Z)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/beans/BeanCopier;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanCopier",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanGenerator",
    "setters": [
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "superclass"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "createClass",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/mockito/cglib/beans/BeanGenerator;Ljava/util/Map;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/mockito/cglib/beans/BeanGenerator;Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "addProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/mockito/cglib/beans/BeanGenerator;[Ljava/beans/PropertyDescriptor;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "\""
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanGenerator$BeanGeneratorKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanGenerator",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMap",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      }
    ],
    "getters": [
      {
        "name": "getBean",
        "desc": "()Ljava/lang/Object;",
        "field": "bean"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBean",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Map"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMap$Generator",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      },
      {
        "name": "setBeanClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "beanClass"
      },
      {
        "name": "setRequire",
        "desc": "(I)V",
        "field": "require"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/beans/BeanMap;"
      },
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setBeanClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setRequire",
        "desc": "(I)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanMap",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMap$Generator$BeanMapKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanMap$Generator",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMapEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "newInstance"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMapEmitter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMapEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMapEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBean",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPropertyTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getGetters",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getSetters",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBean$BulkBeanKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.beans.BulkBean",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBean$Generator",
    "setters": [
      {
        "name": "setGetters",
        "desc": "([Ljava/lang/String;)V",
        "field": "getters"
      },
      {
        "name": "setSetters",
        "desc": "([Ljava/lang/String;)V",
        "field": "setters"
      },
      {
        "name": "setTypes",
        "desc": "([Ljava/lang/Class;)V",
        "field": "types"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setGetters",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "setTypes",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/beans/BulkBean;"
      },
      {
        "name": "setSetters",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.beans.BulkBean",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBeanEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "str": [
        "org.mockito.cglib.beans.BulkBean",
        "org.mockito.cglib.beans.BulkBeanException"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBeanException",
    "setters": [],
    "getters": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;",
        "field": "cause"
      },
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      }
    ],
    "observers": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;I)V"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.FixedKeySet",
    "setters": [],
    "getters": [
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.util.AbstractSet"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.ImmutableBean",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.ImmutableBean$Generator",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.beans.ImmutableBean",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.AbstractClassGenerator",
    "setters": [
      {
        "name": "setNamingPolicy",
        "desc": "(Lorg/mockito/cglib/core/NamingPolicy;)V",
        "field": "namingPolicy"
      },
      {
        "name": "setUseCache",
        "desc": "(Z)V",
        "field": "useCache"
      },
      {
        "name": "setStrategy",
        "desc": "(Lorg/mockito/cglib/core/GeneratorStrategy;)V",
        "field": "strategy"
      },
      {
        "name": "setAttemptLoad",
        "desc": "(Z)V",
        "field": "attemptLoad"
      },
      {
        "name": "setClassLoader",
        "desc": "(Ljava/lang/ClassLoader;)V",
        "field": "classLoader"
      }
    ],
    "getters": [
      {
        "name": "getStrategy",
        "desc": "()Lorg/mockito/cglib/core/GeneratorStrategy;",
        "field": "strategy"
      },
      {
        "name": "getUseCache",
        "desc": "()Z",
        "field": "useCache"
      },
      {
        "name": "getAttemptLoad",
        "desc": "()Z",
        "field": "attemptLoad"
      },
      {
        "name": "getNamingPolicy",
        "desc": "()Lorg/mockito/cglib/core/NamingPolicy;",
        "field": "namingPolicy"
      }
    ],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getUseCache",
        "desc": "()Z"
      },
      {
        "name": "getAttemptLoad",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStrategy",
        "desc": "()Lorg/mockito/cglib/core/GeneratorStrategy;"
      },
      {
        "name": "getNamingPolicy",
        "desc": "()Lorg/mockito/cglib/core/NamingPolicy;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ClassGenerator"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.AbstractClassGenerator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Predicate"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.AbstractClassGenerator$Source",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.AbstractClassGenerator",
    "access": 12,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Block",
    "setters": [],
    "getters": [
      {
        "name": "getEnd",
        "desc": "()Lorg/mockito/asm/Label;",
        "field": "end"
      },
      {
        "name": "getStart",
        "desc": "()Lorg/mockito/asm/Label;",
        "field": "start"
      },
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;",
        "field": "e"
      }
    ],
    "observers": [
      {
        "name": "getEnd",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getStart",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "testableMethods": [
      {
        "name": "getEnd",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getStart",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "end",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;)V"
      },
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V",
        "field": "cv"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;",
        "field": "rawStaticInit"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V",
        "field": "classInfo"
      }
    ],
    "getters": [
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;",
        "field": "classInfo"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "getStaticHook",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "testableMethods": [
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "getClassType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getFieldInfo",
        "desc": "(Ljava/lang/String;)Lorg/mockito/cglib/core/ClassEmitter$FieldInfo;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "begin_static",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "isFieldDeclared",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "init",
        "desc": "()V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "getStaticHook",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        8
      ],
      "str": [
        "()V",
        ";",
        "CGLIB$STATICHOOK"
      ]
    },
    "parents": [
      "org.mockito.asm.ClassAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter$1",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "val$classType"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/mockito/asm/Type;",
        "field": "val$interfaces"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "val$access"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.ClassInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        177
      ],
      "int": [
        177
      ]
    },
    "parents": [
      "org.mockito.asm.MethodAdapter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStaticHook",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter$FieldInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.ClassEmitter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassInfo",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassNameReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getClassName",
        "desc": "(Lorg/mockito/asm/ClassReader;)Ljava/lang/String;"
      },
      {
        "name": "getClassInfo",
        "desc": "(Lorg/mockito/asm/ClassReader;)[Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassNameReader$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        0,
        46,
        47
      ]
    },
    "parents": [
      "org.mockito.asm.ClassAdapter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassNameReader$EarlyExitException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "outerClass": "org.mockito.cglib.core.ClassNameReader",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassesKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassesKey$Key",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.ClassesKey",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.CodeEmitter",
    "setters": [],
    "getters": [
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/mockito/cglib/core/ClassEmitter;",
        "field": "ce"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/mockito/cglib/core/MethodInfo;",
        "field": "state"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "isStaticHook",
        "desc": "()Z"
      },
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/mockito/cglib/core/ClassEmitter;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/mockito/cglib/core/MethodInfo;"
      }
    ],
    "testableMethods": [
      {
        "name": "pop2",
        "desc": "()V"
      },
      {
        "name": "super_invoke",
        "desc": "()V"
      },
      {
        "name": "checkcast_this",
        "desc": "()V"
      },
      {
        "name": "super_invoke",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "unbox",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "ifnonnull",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "end_method",
        "desc": "()V"
      },
      {
        "name": "aaload",
        "desc": "()V"
      },
      {
        "name": "instance_of_this",
        "desc": "()V"
      },
      {
        "name": "invoke",
        "desc": "(Lorg/mockito/cglib/core/MethodInfo;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "swap",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "super_invoke_constructor",
        "desc": "()V"
      },
      {
        "name": "putstatic",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "make_local",
        "desc": "()Lorg/mockito/cglib/core/Local;"
      },
      {
        "name": "mark",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "push",
        "desc": "(D)V"
      },
      {
        "name": "load_this",
        "desc": "()V"
      },
      {
        "name": "monitorexit",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "invoke_constructor",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "invoke_constructor",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "pop",
        "desc": "()V"
      },
      {
        "name": "invoke_constructor_this",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "dup",
        "desc": "()V"
      },
      {
        "name": "dup2",
        "desc": "()V"
      },
      {
        "name": "mark",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "putfield",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "dup2_x1",
        "desc": "()V"
      },
      {
        "name": "super_getstatic",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "aaload",
        "desc": "(I)V"
      },
      {
        "name": "make_label",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getfield",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "zero_or_null",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;)V"
      },
      {
        "name": "push",
        "desc": "(I)V"
      },
      {
        "name": "iinc",
        "desc": "(Lorg/mockito/cglib/core/Local;I)V"
      },
      {
        "name": "emit_field",
        "desc": "(ILorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "throw_exception",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "new_instance",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "unbox_or_zero",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "arraylength",
        "desc": "()V"
      },
      {
        "name": "isStaticHook",
        "desc": "()Z"
      },
      {
        "name": "load_args",
        "desc": "(II)V"
      },
      {
        "name": "super_getfield",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "super_invoke_constructor",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "invoke_virtual",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "aconst_null",
        "desc": "()V"
      },
      {
        "name": "if_cmp",
        "desc": "(Lorg/mockito/asm/Type;ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "process_switch",
        "desc": "([ILorg/mockito/cglib/core/ProcessSwitchCallback;Z)V"
      },
      {
        "name": "ifnull",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "cast_numeric",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "super_putstatic",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "invoke_static",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "process_switch",
        "desc": "([ILorg/mockito/cglib/core/ProcessSwitchCallback;)V"
      },
      {
        "name": "instance_of",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/asm/MethodVisitor;ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "checkcast",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "swap",
        "desc": "()V"
      },
      {
        "name": "array_store",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "dup_x2",
        "desc": "()V"
      },
      {
        "name": "push",
        "desc": "(Z)V"
      },
      {
        "name": "if_jump",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "invoke_virtual_this",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "getstatic",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "invoke_static_this",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "push",
        "desc": "(J)V"
      },
      {
        "name": "array_load",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "push",
        "desc": "(F)V"
      },
      {
        "name": "dup2_x2",
        "desc": "()V"
      },
      {
        "name": "invoke_interface",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "athrow",
        "desc": "()V"
      },
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "begin_block",
        "desc": "()Lorg/mockito/cglib/core/Block;"
      },
      {
        "name": "dup_x1",
        "desc": "()V"
      },
      {
        "name": "box",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "invoke",
        "desc": "(Lorg/mockito/cglib/core/MethodInfo;)V"
      },
      {
        "name": "make_local",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/Local;"
      },
      {
        "name": "create_arg_array",
        "desc": "()V"
      },
      {
        "name": "monitorenter",
        "desc": "()V"
      },
      {
        "name": "math",
        "desc": "(ILorg/mockito/asm/Type;)V"
      },
      {
        "name": "getfield",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "newarray",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "invoke_constructor_this",
        "desc": "()V"
      },
      {
        "name": "load_arg",
        "desc": "(I)V"
      },
      {
        "name": "push",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "putfield",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "goTo",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "newarray",
        "desc": "()V"
      },
      {
        "name": "new_instance_this",
        "desc": "()V"
      },
      {
        "name": "if_icmp",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "store_local",
        "desc": "(Lorg/mockito/cglib/core/Local;)V"
      },
      {
        "name": "load_local",
        "desc": "(Lorg/mockito/cglib/core/Local;)V"
      },
      {
        "name": "catch_exception",
        "desc": "(Lorg/mockito/cglib/core/Block;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "return_value",
        "desc": "()V"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/mockito/cglib/core/MethodInfo;"
      },
      {
        "name": "load_args",
        "desc": "()V"
      },
      {
        "name": "aastore",
        "desc": "()V"
      },
      {
        "name": "not",
        "desc": "()V"
      },
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/mockito/cglib/core/ClassEmitter;"
      },
      {
        "name": "super_putfield",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      }
    ],
    "dictionary": {
      "byte": [
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127
      ],
      "char": [
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95
      ],
      "short": [
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127,
        130,
        133,
        134,
        135,
        138,
        141,
        144,
        145,
        146,
        147,
        150,
        165,
        166,
        167,
        172,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        198,
        199,
        32767
      ],
      "int": [
        -1,
        0,
        1,
        2,
        5,
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127,
        130,
        133,
        134,
        135,
        138,
        141,
        144,
        145,
        146,
        147,
        150,
        153,
        154,
        156,
        158,
        165,
        166,
        167,
        172,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        198,
        199,
        32767
      ],
      "long": [
        0,
        1
      ],
      "float": [
        0.0,
        0.5,
        1.0,
        2.0
      ],
      "double": [
        1.0,
        2.0
      ],
      "str": [
        "",
        "<init>",
        "String"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.LocalVariablesSorter"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.CodeEmitter$State",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;",
        "field": "sig"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/mockito/asm/Type;",
        "field": "exceptionTypes"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;",
        "field": "classInfo"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "access"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "getAttribute",
        "desc": "()Lorg/mockito/asm/Attribute;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.core.MethodInfo"
    ],
    "outerClass": "org.mockito.cglib.core.CodeEmitter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.CodeGenerationException",
    "setters": [],
    "getters": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;",
        "field": "cause"
      }
    ],
    "observers": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {
      "str": [
        "-->"
      ]
    },
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.CollectionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "filter",
        "desc": "(Ljava/util/Collection;Lorg/mockito/cglib/core/Predicate;)Ljava/util/Collection;"
      },
      {
        "name": "transform",
        "desc": "(Ljava/util/Collection;Lorg/mockito/cglib/core/Transformer;)Ljava/util/List;"
      },
      {
        "name": "reverse",
        "desc": "(Ljava/util/Map;Ljava/util/Map;)V"
      },
      {
        "name": "getIndexMap",
        "desc": "(Ljava/util/List;)Ljava/util/Map;"
      },
      {
        "name": "bucket",
        "desc": "(Ljava/util/Collection;Lorg/mockito/cglib/core/Transformer;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Constants",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "System",
        "org.mockito.cglib.core.Signature"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.Opcodes"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Converter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Customizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DebuggingClassWriter",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "className"
      }
    ],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;",
        "field": "superName"
      }
    ],
    "observers": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        46,
        47
      ]
    },
    "parents": [
      "org.mockito.asm.ClassWriter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DebuggingClassWriter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        46
      ],
      "str": [
        ".asm",
        ".class"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DefaultGeneratorStrategy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClassWriter",
        "desc": "()Lorg/mockito/asm/ClassWriter;"
      }
    ],
    "testableMethods": [
      {
        "name": "getClassWriter",
        "desc": "()Lorg/mockito/asm/ClassWriter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "transform",
        "desc": "([B)[B"
      },
      {
        "name": "transform",
        "desc": "(Lorg/mockito/cglib/core/ClassGenerator;)Lorg/mockito/cglib/core/ClassGenerator;"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassGenerator;)[B"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.GeneratorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DefaultNamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getClassName",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/mockito/cglib/core/Predicate;)Ljava/lang/String;"
      },
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        2
      ],
      "str": [
        "$",
        "java",
        "org.mockito.cglib.empty.Object"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.NamingPolicy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DuplicatesPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "push_array",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;[Ljava/lang/Object;)V"
      },
      {
        "name": "push_object",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Ljava/lang/Object;)V"
      },
      {
        "name": "hash_code",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;ILorg/mockito/cglib/core/Customizer;)V"
      },
      {
        "name": "wrap_undeclared_throwable",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/core/Block;[Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "constructor_switch",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Ljava/util/List;Lorg/mockito/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "null_constructor",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;)V"
      },
      {
        "name": "not_equals",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;Lorg/mockito/asm/Label;Lorg/mockito/cglib/core/Customizer;)V"
      },
      {
        "name": "load_method",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/core/MethodInfo;)V"
      },
      {
        "name": "add_properties",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;[Ljava/lang/String;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "factory_method",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "string_switch",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;[Ljava/lang/String;ILorg/mockito/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "getSwitchKeys",
        "desc": "(Ljava/util/Map;)[I"
      },
      {
        "name": "process_arrays",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/ProcessArrayCallback;)V"
      },
      {
        "name": "load_class_this",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;)V"
      },
      {
        "name": "begin_method",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/core/MethodInfo;)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "load_class",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "add_property",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Ljava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "append_string",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/EmitUtils$ArrayDelimiters;Lorg/mockito/cglib/core/Customizer;)V"
      },
      {
        "name": "process_array",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/ProcessArrayCallback;)V"
      },
      {
        "name": "method_switch",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Ljava/util/List;Lorg/mockito/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "begin_method",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/core/MethodInfo;I)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "wrap_throwable",
        "desc": "(Lorg/mockito/cglib/core/Block;Lorg/mockito/asm/Type;)V"
      }
    ],
    "dictionary": {
      "byte": [
        96
      ],
      "char": [
        96
      ],
      "short": [
        96,
        155
      ],
      "int": [
        0,
        1,
        96,
        155
      ],
      "str": [
        "",
        "get",
        "{",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$10",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.EmitUtils$ParameterTyper"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$11",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$12",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$13",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$14",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$15",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$16",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$6",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$7",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$8",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$9",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$ArrayDelimiters",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.EmitUtils",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$ParameterTyper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.EmitUtils",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.GeneratorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.KeyFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        50,
        51
      ],
      "char": [
        50,
        51
      ],
      "short": [
        50,
        51
      ],
      "int": [
        50,
        51,
        1288102441,
        1768288259
      ],
      "str": [
        "org.mockito.cglib.core.KeyFactory"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.KeyFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Customizer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.KeyFactory$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Customizer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.KeyFactory$Generator",
    "setters": [
      {
        "name": "setCustomizer",
        "desc": "(Lorg/mockito/cglib/core/Customizer;)V",
        "field": "customizer"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "keyInterface"
      },
      {
        "name": "setHashConstant",
        "desc": "(I)V",
        "field": "constant"
      },
      {
        "name": "setHashMultiplier",
        "desc": "(I)V",
        "field": "multiplier"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setCustomizer",
        "desc": "(Lorg/mockito/cglib/core/Customizer;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setHashConstant",
        "desc": "(I)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/core/KeyFactory;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setHashMultiplier",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.core.KeyFactory",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Local",
    "setters": [],
    "getters": [
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/Type;)V"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.LocalVariablesSorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "newLocal",
        "desc": "(I)I"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/LocalVariablesSorter;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        1,
        2,
        8,
        22,
        24,
        55,
        57
      ]
    },
    "parents": [
      "org.mockito.asm.MethodAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.LocalVariablesSorter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.LocalVariablesSorter",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.LocalVariablesSorter$State",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        40
      ],
      "char": [
        40
      ],
      "short": [
        40
      ],
      "int": [
        40
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.LocalVariablesSorter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.MethodInfo",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.MethodInfoTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "transform",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/mockito/cglib/core/MethodInfoTransformer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.MethodWrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/Object;"
      },
      {
        "name": "createSet",
        "desc": "(Ljava/util/Collection;)Ljava/util/Set;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.MethodWrapper$MethodWrapperKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.MethodWrapper",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.NamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ObjectSwitchCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Predicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ProcessArrayCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ProcessSwitchCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findMethod",
        "desc": "(Ljava/lang/String;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "(Ljava/lang/reflect/Member;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getBeanGetters",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "getConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getClassInfo",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "addAllMethods",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "getBeanProperties",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "getSignature",
        "desc": "(Ljava/lang/reflect/Member;)Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "findMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getPropertyMethods",
        "desc": "([Ljava/beans/PropertyDescriptor;ZZ)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "findPackageProtected",
        "desc": "([Ljava/lang/Class;)I"
      },
      {
        "name": "addAllInterfaces",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "getMethodInfo",
        "desc": "(Ljava/lang/reflect/Member;I)Lorg/mockito/cglib/core/MethodInfo;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getMethodInfo",
        "desc": "(Ljava/lang/reflect/Member;)Lorg/mockito/cglib/core/MethodInfo;"
      },
      {
        "name": "findConstructor",
        "desc": "(Ljava/lang/String;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "findConstructor",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "findDeclaredMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getNames",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "defineClass",
        "desc": "(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;"
      },
      {
        "name": "findMethods",
        "desc": "([Ljava/lang/String;[Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "findInterfaceMethod",
        "desc": "(Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getBeanSetters",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getClasses",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Class;"
      },
      {
        "name": "findNewInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        41,
        44
      ],
      "char": [
        41,
        44
      ],
      "short": [
        8,
        41,
        44
      ],
      "int": [
        0,
        1,
        2,
        3,
        8,
        41,
        44
      ],
      "str": [
        "",
        ";",
        "<init>",
        "Z",
        "[]",
        "boolean",
        "newInstance"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils$3",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;",
        "field": "val$sig"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "val$modifiers"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "getAttribute",
        "desc": "()Lorg/mockito/asm/Attribute;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.MethodInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils$4",
    "setters": [],
    "getters": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "val$sc"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "val$type"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.ClassInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.RejectModifierPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Signature",
    "setters": [],
    "getters": [
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "desc"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/mockito/asm/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        40
      ],
      "char": [
        40
      ],
      "short": [
        40
      ],
      "int": [
        0,
        40
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.TinyBitSet",
    "setters": [
      {
        "name": "set",
        "desc": "(I)V",
        "field": "value"
      },
      {
        "name": "clear",
        "desc": "(I)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "cardinality",
        "desc": "()I"
      },
      {
        "name": "length",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "set",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cardinality",
        "desc": "()I"
      },
      {
        "name": "clear",
        "desc": "(I)V"
      },
      {
        "name": "length",
        "desc": "()I"
      },
      {
        "name": "get",
        "desc": "(I)Z"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        -1,
        0,
        1,
        256
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Transformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.TypeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isConstructor",
        "desc": "(Lorg/mockito/cglib/core/MethodInfo;)Z"
      },
      {
        "name": "getTypes",
        "desc": "([Ljava/lang/Class;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "isAbstract",
        "desc": "(I)Z"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "parseType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "ICONST",
        "desc": "(I)I"
      },
      {
        "name": "isPrimitive",
        "desc": "(Lorg/mockito/asm/Type;)Z"
      },
      {
        "name": "parseSignature",
        "desc": "(Ljava/lang/String;)Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "parseConstructor",
        "desc": "(Ljava/lang/String;)Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "upperFirst",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "parseConstructor",
        "desc": "([Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "isStatic",
        "desc": "(I)Z"
      },
      {
        "name": "getPackageName",
        "desc": "(Lorg/mockito/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "isArray",
        "desc": "(Lorg/mockito/asm/Type;)Z"
      },
      {
        "name": "add",
        "desc": "([Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getBoxedType",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "isFinal",
        "desc": "(I)Z"
      },
      {
        "name": "isInterface",
        "desc": "(I)Z"
      },
      {
        "name": "fromInternalName",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "FCONST",
        "desc": "(F)I"
      },
      {
        "name": "escapeType",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isPublic",
        "desc": "(I)Z"
      },
      {
        "name": "add",
        "desc": "([Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "isProtected",
        "desc": "(I)Z"
      },
      {
        "name": "getClassName",
        "desc": "(Lorg/mockito/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "parseTypes",
        "desc": "(Ljava/lang/String;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getUnboxedType",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "emulateClassGetName",
        "desc": "(Lorg/mockito/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "fromInternalNames",
        "desc": "([Ljava/lang/String;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "LCONST",
        "desc": "(J)I"
      },
      {
        "name": "DCONST",
        "desc": "(D)I"
      },
      {
        "name": "isPrivate",
        "desc": "(I)Z"
      },
      {
        "name": "toInternalNames",
        "desc": "([Lorg/mockito/asm/Type;)[Ljava/lang/String;"
      },
      {
        "name": "getStackSize",
        "desc": "([Lorg/mockito/asm/Type;)I"
      },
      {
        "name": "getComponentType",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "isSynthetic",
        "desc": "(I)Z"
      },
      {
        "name": "NEWARRAY",
        "desc": "(Lorg/mockito/asm/Type;)I"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        9,
        11,
        12,
        14,
        16,
        44,
        46
      ],
      "char": [
        44,
        46
      ],
      "short": [
        8,
        9,
        11,
        12,
        14,
        16,
        44,
        46,
        512,
        1024,
        4096
      ],
      "int": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        14,
        16,
        36,
        40,
        41,
        44,
        46,
        47,
        59,
        91,
        512,
        1024,
        4096
      ],
      "long": [
        0,
        1
      ],
      "float": [
        0.0,
        1.0,
        2.0
      ],
      "double": [
        1.0,
        2.0
      ],
      "str": [
        "",
        "<init>",
        "V",
        "[]",
        "java.lang."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.VisibilityPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Callback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1536,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackGenerator$Context",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.CallbackGenerator",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackHelper",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getCallbackTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getCallbacks",
        "desc": "()[Lorg/mockito/cglib/proxy/Callback;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackFilter"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "determineTypes",
        "desc": "([Lorg/mockito/cglib/proxy/Callback;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getGenerators",
        "desc": "([Lorg/mockito/asm/Type;)[Lorg/mockito/cglib/proxy/CallbackGenerator;"
      },
      {
        "name": "determineTypes",
        "desc": "([Ljava/lang/Class;)[Lorg/mockito/asm/Type;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7
      ],
      "short": [
        6,
        7
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Dispatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.DispatcherGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer",
    "setters": [
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "superclass"
      },
      {
        "name": "setInterfaces",
        "desc": "([Ljava/lang/Class;)V",
        "field": "interfaces"
      },
      {
        "name": "setSerialVersionUID",
        "desc": "(Ljava/lang/Long;)V",
        "field": "serialVersionUID"
      },
      {
        "name": "setInterceptDuringConstruction",
        "desc": "(Z)V",
        "field": "interceptDuringConstruction"
      },
      {
        "name": "create",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;",
        "field": "classOnly"
      },
      {
        "name": "setCallbackFilter",
        "desc": "(Lorg/mockito/cglib/proxy/CallbackFilter;)V",
        "field": "filter"
      },
      {
        "name": "setCallbacks",
        "desc": "([Lorg/mockito/cglib/proxy/Callback;)V",
        "field": "callbacks"
      },
      {
        "name": "setCallbackTypes",
        "desc": "([Ljava/lang/Class;)V",
        "field": "callbackTypes"
      },
      {
        "name": "setUseFactory",
        "desc": "(Z)V",
        "field": "useFactory"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Lorg/mockito/cglib/proxy/CallbackFilter;[Lorg/mockito/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "setCallbackFilter",
        "desc": "(Lorg/mockito/cglib/proxy/CallbackFilter;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Ljava/util/List;)V"
      },
      {
        "name": "registerStaticCallbacks",
        "desc": "(Ljava/lang/Class;[Lorg/mockito/cglib/proxy/Callback;)V"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;Lorg/mockito/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "setCallbackType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "registerCallbacks",
        "desc": "(Ljava/lang/Class;[Lorg/mockito/cglib/proxy/Callback;)V"
      },
      {
        "name": "setInterfaces",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "setCallback",
        "desc": "(Lorg/mockito/cglib/proxy/Callback;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "setCallbacks",
        "desc": "([Lorg/mockito/cglib/proxy/Callback;)V"
      },
      {
        "name": "setCallbackTypes",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "filterConstructors",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)V"
      },
      {
        "name": "setSerialVersionUID",
        "desc": "(Ljava/lang/Long;)V"
      },
      {
        "name": "setInterceptDuringConstruction",
        "desc": "(Z)V"
      },
      {
        "name": "isEnhanced",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Lorg/mockito/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "createClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "setUseFactory",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        46
      ],
      "char": [
        46
      ],
      "short": [
        8,
        16,
        46
      ],
      "int": [
        0,
        1,
        2,
        8,
        16,
        46
      ],
      "str": [
        "",
        "$",
        "()V",
        "CGLIB$BOUND",
        "CGLIB$SET_STATIC_CALLBACKS",
        "CGLIB$SET_THREAD_CALLBACKS",
        "CGLIB$THREAD_CALLBACKS",
        "getCallback",
        "getCallbacks",
        "newInstance",
        "setCallbacks"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$6",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator$Context"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$EnhancerKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.Enhancer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Factory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.FixedValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.FixedValueGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        "org.mockito.cglib.proxy.FixedValue"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.InterfaceMaker",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "add",
        "desc": "(Lorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "java.lang.Object"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.InvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.InvocationHandlerGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        "java.lang.reflect.Method"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.LazyLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.LazyLoaderGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        "CGLIB$LOAD_PRIVATE_",
        "org.mockito.cglib.proxy.LazyLoader"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodInterceptor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodInterceptorGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "generateFindProxy",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "CGLIB$findMethodProxy"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodInterceptorGenerator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodInterceptorGenerator$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodProxy",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;",
        "field": "sig1"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSuperIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/cglib/proxy/MethodProxy;"
      },
      {
        "name": "find",
        "desc": "(Ljava/lang/Class;Lorg/mockito/cglib/core/Signature;)Lorg/mockito/cglib/proxy/MethodProxy;"
      },
      {
        "name": "invokeSuper",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getSuperIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodProxy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.MethodProxy",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodProxy$CreateInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.MethodProxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodProxy$FastClassInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.MethodProxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Mixin",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Mixin$Generator",
    "setters": [
      {
        "name": "setStyle",
        "desc": "(I)V",
        "field": "style"
      },
      {
        "name": "setDelegates",
        "desc": "([Ljava/lang/Object;)V",
        "field": "delegates"
      },
      {
        "name": "setClasses",
        "desc": "([Ljava/lang/Class;)V",
        "field": "classes"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setClasses",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setStyle",
        "desc": "(I)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setDelegates",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/proxy/Mixin;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.proxy.Mixin",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Mixin$MixinKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.Mixin",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Mixin$Route",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.Mixin",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MixinBeanEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.proxy.MixinEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MixinEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;[I)V"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "newInstance",
        "org.mockito.cglib.proxy.Mixin"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MixinEverythingEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "byte": [
        24
      ],
      "short": [
        24
      ],
      "int": [
        0,
        24
      ]
    },
    "parents": [
      "org.mockito.cglib.proxy.MixinEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.NoOp",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.NoOp$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.NoOp"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.NoOpGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Proxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isProxyClass",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/proxy/InvocationHandler;)V"
      },
      {
        "name": "getProxyClass",
        "desc": "(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "getInvocationHandler",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/cglib/proxy/InvocationHandler;"
      },
      {
        "name": "newProxyInstance",
        "desc": "(Ljava/lang/ClassLoader;[Ljava/lang/Class;Lorg/mockito/cglib/proxy/InvocationHandler;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Proxy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "equals",
        "hashCode",
        "java.lang.Object",
        "toString"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Proxy$ProxyImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.proxy.Proxy"
    ],
    "outerClass": "org.mockito.cglib.proxy.Proxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.ProxyRefDispatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.UndeclaredThrowableException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getUndeclaredThrowable",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [
      {
        "name": "getUndeclaredThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.CodeGenerationException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.ConstructorDelegate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.ConstructorDelegate$ConstructorKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.reflect.ConstructorDelegate",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.ConstructorDelegate$Generator",
    "setters": [
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "targetClass"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/reflect/ConstructorDelegate;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        "org.mockito.cglib.reflect.ConstructorDelegate"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.reflect.ConstructorDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClass",
    "setters": [],
    "getters": [
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClass$Generator",
    "setters": [
      {
        "name": "setType",
        "desc": "(Ljava/lang/Class;)V",
        "field": "type"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/reflect/FastClass;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.reflect.FastClass",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        0,
        1,
        100
      ],
      "str": [
        "getIndex"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$GetIndexCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "org.mockito.cglib.reflect.FastClassEmitter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastConstructor",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getJavaConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/reflect/FastClass;Ljava/lang/reflect/Constructor;)V"
      },
      {
        "name": "newInstance",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getJavaConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.reflect.FastMember"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastMember",
    "setters": [],
    "getters": [
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastMethod",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "testableMethods": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/reflect/FastClass;Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.reflect.FastMember"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MethodDelegate",
    "setters": [],
    "getters": [
      {
        "name": "getTarget",
        "desc": "()Ljava/lang/Object;",
        "field": "target"
      }
    ],
    "observers": [
      {
        "name": "getTarget",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MethodDelegate$Generator",
    "setters": [
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "targetClass"
      },
      {
        "name": "setMethodName",
        "desc": "(Ljava/lang/String;)V",
        "field": "methodName"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Object;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setMethodName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/reflect/MethodDelegate;"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "expected",
        "newInstance",
        "org.mockito.cglib.reflect.MethodDelegate"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.reflect.MethodDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MethodDelegate$MethodDelegateKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.reflect.MethodDelegate",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MulticastDelegate",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTargets",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Cloneable"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MulticastDelegate$Generator",
    "setters": [
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/reflect/MulticastDelegate;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "add",
        "addHelper",
        "newInstance",
        "org.mockito.cglib.reflect.MulticastDelegate"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.reflect.MulticastDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MulticastDelegate$Generator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractClassFilterTransformer",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.transform.AbstractClassTransformer"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractClassLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFlags",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        ":"
      ]
    },
    "parents": [
      "java.lang.ClassLoader"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractClassLoader$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractClassTransformer",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V",
        "field": "cv"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.ClassAdapter",
      "org.mockito.cglib.transform.ClassTransformer"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractProcessTask",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFiles",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.tools.ant.Task"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractTransformTask",
    "setters": [
      {
        "name": "setVerbose",
        "desc": "(Z)V",
        "field": "verbose"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getFlags",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -889275714,
        -1,
        0,
        1
      ],
      "long": [
        -889275714,
        1347093252
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.AbstractProcessTask"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AnnotationVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;Lorg/mockito/asm/AnnotationVisitor;)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getInstance",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;Lorg/mockito/asm/AnnotationVisitor;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassEmitterTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.ClassEmitter",
      "org.mockito.cglib.transform.ClassTransformer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassFilterTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/transform/ClassFilter;Lorg/mockito/cglib/transform/ClassTransformer;)V"
      },
      {
        "name": "accept",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        46,
        47
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.AbstractClassFilterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassReaderGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassReader;[Lorg/mockito/asm/Attribute;I)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassReader;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassTransformerChain",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "([Lorg/mockito/cglib/transform/ClassTransformer;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.AbstractClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassTransformerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassTransformerTee",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V",
        "field": "cv"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.ClassAdapter",
      "org.mockito.cglib.transform.ClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.FieldVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/FieldVisitor;Lorg/mockito/asm/FieldVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.MethodFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.MethodFilterTransformer",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V",
        "field": "direct"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/transform/MethodFilter;Lorg/mockito/cglib/transform/ClassTransformer;)V"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.transform.AbstractClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.MethodVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/MethodVisitor;Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.TransformingClassGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/ClassGenerator;Lorg/mockito/cglib/transform/ClassTransformer;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.TransformingClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getGenerator",
        "desc": "(Lorg/mockito/asm/ClassReader;)Lorg/mockito/cglib/core/ClassGenerator;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;Lorg/mockito/cglib/transform/ClassFilter;Lorg/mockito/cglib/transform/ClassTransformerFactory;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.transform.AbstractClassLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AbstractInterceptFieldCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "readDouble",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;D)D"
      },
      {
        "name": "readShort",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;S)S"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeFloat",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;FF)F"
      },
      {
        "name": "readByte",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;B)B"
      },
      {
        "name": "readFloat",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;F)F"
      },
      {
        "name": "readObject",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "writeDouble",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;DD)D"
      },
      {
        "name": "readInt",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;I)I"
      },
      {
        "name": "readBoolean",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Z)Z"
      },
      {
        "name": "writeLong",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;JJ)J"
      },
      {
        "name": "writeObject",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "readLong",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;J)J"
      },
      {
        "name": "writeChar",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;CC)C"
      },
      {
        "name": "writeInt",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;II)I"
      },
      {
        "name": "readChar",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;C)C"
      },
      {
        "name": "writeByte",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;BB)B"
      },
      {
        "name": "writeShort",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;SS)S"
      },
      {
        "name": "writeBoolean",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;ZZ)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.transform.impl.InterceptFieldCallback"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AccessFieldTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/transform/impl/AccessFieldTransformer$Callback;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "get"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AccessFieldTransformer$Callback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.transform.impl.AccessFieldTransformer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddDelegateTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;Ljava/lang/Class;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "<init>"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddDelegateTransformer$1",
    "setters": [
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "transformInit"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        183
      ],
      "int": [
        0,
        1,
        183
      ],
      "str": [
        "$CGLIB_DELEGATE"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddInitTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "<init>"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddInitTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        177
      ],
      "int": [
        177
      ]
    },
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddPropertyTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddStaticInitTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "init",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer",
    "setters": [
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V",
        "field": "access"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "CGLIB$FIELD_TYPES"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldEnabled",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/transform/impl/InterceptFieldFilter;)V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        9,
        10
      ],
      "str": [
        "$cglib_read_",
        "$cglib_write_",
        "(",
        "()",
        ")V",
        "getInterceptFieldCallback",
        "org.mockito.cglib.transform.impl.InterceptFieldEnabled",
        "setInterceptFieldCallback"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        180,
        181
      ]
    },
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.UndeclaredThrowableStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "transform",
        "desc": "(Lorg/mockito/cglib/core/ClassGenerator;)Lorg/mockito/cglib/core/ClassGenerator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.DefaultGeneratorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.UndeclaredThrowableStrategy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        36
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.transform.MethodFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.UndeclaredThrowableTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.UndeclaredThrowableTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.util.SorterTemplate"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$ByteComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$ComparatorComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Object;Ljava/util/Comparator;)V"
      },
      {
        "name": "compare",
        "desc": "(II)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$Comparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$DoubleComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([D)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$FloatComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([F)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$Generator",
    "setters": [
      {
        "name": "setArrays",
        "desc": "([Ljava/lang/Object;)V",
        "field": "arrays"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/util/ParallelSorter;"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setArrays",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$IntComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([I)V"
      },
      {
        "name": "compare",
        "desc": "(II)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$LongComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([J)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$ObjectComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$ShortComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([S)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorterEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "Object[]",
        "newInstance"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.SorterTemplate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        7,
        12
      ],
      "short": [
        7,
        12
      ],
      "int": [
        1,
        2,
        7,
        12
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.StringSwitcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.StringSwitcher$Generator",
    "setters": [
      {
        "name": "setStrings",
        "desc": "([Ljava/lang/String;)V",
        "field": "strings"
      },
      {
        "name": "setInts",
        "desc": "([I)V",
        "field": "ints"
      },
      {
        "name": "setFixedInput",
        "desc": "(Z)V",
        "field": "fixedInput"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setFixedInput",
        "desc": "(Z)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setStrings",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/util/StringSwitcher;"
      },
      {
        "name": "setInts",
        "desc": "([I)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.util.StringSwitcher",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.StringSwitcher$Generator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.StringSwitcher$StringSwitcherKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.util.StringSwitcher",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.configuration.AnnotationEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.configuration.DefaultMockitoConfiguration",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAnnotationEngine",
        "desc": "()Lorg/mockito/configuration/AnnotationEngine;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getReturnValues",
        "desc": "()Lorg/mockito/ReturnValues;"
      }
    ],
    "testableMethods": [
      {
        "name": "enableClassCache",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cleansStackTrace",
        "desc": "()Z"
      },
      {
        "name": "getAnnotationEngine",
        "desc": "()Lorg/mockito/configuration/AnnotationEngine;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getReturnValues",
        "desc": "()Lorg/mockito/ReturnValues;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.IMockitoConfiguration"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.configuration.IMockitoConfiguration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.Discrepancy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(II)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.reporting.Discrepancy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.Pluralizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.reporting.Pluralizer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.PrintableInvocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.Reporter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "argumentsAreDifferent",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "nullPassedToWhenMethod",
        "desc": "()V"
      },
      {
        "name": "tooLittleActualInvocations",
        "desc": "(Lorg/mockito/internal/reporting/Discrepancy;Lorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "notAMockPassedToVerifyNoMoreInteractions",
        "desc": "()V"
      },
      {
        "name": "tooManyActualInvocations",
        "desc": "(IILorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "tooManyActualInvocationsInOrder",
        "desc": "(IILorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "cannotInitializeForSpyAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
      },
      {
        "name": "delegatedMethodHasWrongReturnType",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "serializableWontWorkForObjectsThatDontImplementSerializable",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "cannotCallAbstractRealMethod",
        "desc": "()V"
      },
      {
        "name": "mocksHaveToBePassedWhenCreatingInOrder",
        "desc": "()V"
      },
      {
        "name": "invalidArgumentPositionRangeAtInvocationTime",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;ZI)I"
      },
      {
        "name": "noMoreInteractionsWanted",
        "desc": "(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V"
      },
      {
        "name": "incorrectUseOfApi",
        "desc": "()V"
      },
      {
        "name": "unfinishedStubbing",
        "desc": "(Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "tooLittleActualInvocationsInOrder",
        "desc": "(Lorg/mockito/internal/reporting/Discrepancy;Lorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "notAMockPassedToWhenMethod",
        "desc": "()V"
      },
      {
        "name": "invocationListenersRequiresAtLeastOneListener",
        "desc": "()V"
      },
      {
        "name": "wantedButNotInvoked",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;Ljava/util/List;)V"
      },
      {
        "name": "invalidArgumentRangeAtIdentityAnswerCreationTime",
        "desc": "()V"
      },
      {
        "name": "cannotMockFinalClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "noArgumentValueWasCaptured",
        "desc": "()V"
      },
      {
        "name": "unsupportedCombinationOfAnnotations",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "neverWantedButInvoked",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "cannotInitializeForInjectMocksAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
      },
      {
        "name": "extraInterfacesRequiresAtLeastOneInterface",
        "desc": "()V"
      },
      {
        "name": "notAMockPassedToVerify",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "wrongTypeOfReturnValue",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "nullPassedWhenCreatingInOrder",
        "desc": "()V"
      },
      {
        "name": "missingMethodInvocation",
        "desc": "()V"
      },
      {
        "name": "usingConstructorWithFancySerializable",
        "desc": "(Lorg/mockito/mock/SerializableMode;)V"
      },
      {
        "name": "extraInterfacesDoesNotAcceptNullParameters",
        "desc": "()V"
      },
      {
        "name": "moreThanOneAnnotationNotAllowed",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "invalidUseOfMatchers",
        "desc": "(ILjava/util/List;)V"
      },
      {
        "name": "invocationListenerThrewException",
        "desc": "(Lorg/mockito/listeners/InvocationListener;Ljava/lang/Throwable;)V"
      },
      {
        "name": "reportNoSubMatchersFound",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "incorrectUseOfAdditionalMatchers",
        "desc": "(Ljava/lang/String;ILjava/util/Collection;)V"
      },
      {
        "name": "notAMockPassedWhenCreatingInOrder",
        "desc": "()V"
      },
      {
        "name": "stubPassedToVerify",
        "desc": "()V"
      },
      {
        "name": "cannotVerifyToString",
        "desc": "()V"
      },
      {
        "name": "smartNullPointerException",
        "desc": "(Ljava/lang/String;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "nullPassedToVerify",
        "desc": "()V"
      },
      {
        "name": "inOrderRequiresFamiliarMock",
        "desc": "()V"
      },
      {
        "name": "checkedExceptionInvalid",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "extraInterfacesAcceptsOnlyInterfaces",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "mockedTypeIsInconsistentWithSpiedInstanceType",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "cannotStubWithNullThrowable",
        "desc": "()V"
      },
      {
        "name": "unfinishedVerificationException",
        "desc": "(Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "wantedAtMostX",
        "desc": "(II)V"
      },
      {
        "name": "extraInterfacesCannotContainMockedType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "onlyVoidMethodsCanBeSetToDoNothing",
        "desc": "()V"
      },
      {
        "name": "wantedButNotInvoked",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;)V"
      },
      {
        "name": "mockedTypeIsInconsistentWithDelegatedInstanceType",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "delegatedMethodDoesNotExistOnDelegate",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "noMoreInteractionsWantedInOrder",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "cannotStubVoidMethodWithAReturnValue",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "atMostAndNeverShouldNotBeUsedWithTimeout",
        "desc": "()V"
      },
      {
        "name": "mocksHaveToBePassedToVerifyNoMoreInteractions",
        "desc": "()V"
      },
      {
        "name": "cannotInjectDependency",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Exception;)V"
      },
      {
        "name": "invocationListenerDoesNotAcceptNullParameters",
        "desc": "()V"
      },
      {
        "name": "spyAndDelegateAreMutuallyExclusive",
        "desc": "()V"
      },
      {
        "name": "defaultAnswerDoesNotAcceptNullParameter",
        "desc": "()V"
      },
      {
        "name": "fieldInitialisationThrewException",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Throwable;)V"
      },
      {
        "name": "wrongTypeOfArgumentToReturn",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;Ljava/lang/String;Ljava/lang/Class;I)V"
      },
      {
        "name": "nullPassedToVerifyNoMoreInteractions",
        "desc": "()V"
      },
      {
        "name": "wantedButNotInvokedInOrder",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/DescribedInvocation;)V"
      },
      {
        "name": "misplacedArgumentMatcher",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "str": [
        "",
        "'",
        "()",
        ")",
        ":",
        "returned."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.base.MockitoAssertionError",
    "setters": [],
    "getters": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;",
        "field": "unfilteredStackTrace"
      }
    ],
    "observers": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.base.MockitoException",
    "setters": [],
    "getters": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;",
        "field": "unfilteredStackTrace"
      }
    ],
    "observers": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.base.MockitoSerializationIssue",
    "setters": [],
    "getters": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;",
        "field": "unfilteredStackTrace"
      }
    ],
    "observers": [
      {
        "name": "getStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "testableMethods": [
      {
        "name": "getStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.ObjectStreamException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.FriendlyReminderException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.InvalidUseOfMatchersException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.MockitoConfigurationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.NotAMockException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.NullInsteadOfMockException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.UnfinishedVerificationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.WrongTypeOfReturnValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.stacktrace.StackTraceCleaner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.ArgumentsAreDifferent",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.NeverWantedButInvoked",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.NoInteractionsWanted",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.SmartNullPointerException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.TooLittleActualInvocations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.TooManyActualInvocations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.VerificationInOrderFailure",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.WantedButNotInvoked",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
    "setters": [],
    "getters": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;",
        "field": "message"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;",
        "field": "unfilteredStackTrace"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "junit.framework.ComparisonFailure"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.junit.JUnitTool",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasJUnit",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createArgumentsAreDifferentException",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.InOrderImpl",
    "setters": [],
    "getters": [
      {
        "name": "getMocksToBeVerifiedInOrder",
        "desc": "()Ljava/util/List;",
        "field": "mocksToBeVerifiedInOrder"
      }
    ],
    "observers": [
      {
        "name": "getMocksToBeVerifiedInOrder",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMocksToBeVerifiedInOrder",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "verifyNoMoreInteractions",
        "desc": "()V"
      },
      {
        "name": "isVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      },
      {
        "name": "markVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.InOrder",
      "org.mockito.internal.verification.api.InOrderContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.InternalMockHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.MockHandler"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.MockitoCore",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLastInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;"
      }
    ],
    "testableMethods": [
      {
        "name": "inOrder",
        "desc": "([Ljava/lang/Object;)Lorg/mockito/InOrder;"
      },
      {
        "name": "verifyNoMoreInteractionsInOrder",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "stub",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/DeprecatedOngoingStubbing;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "stub",
        "desc": "()Lorg/mockito/internal/progress/IOngoingStubbing;"
      },
      {
        "name": "doAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;"
      },
      {
        "name": "isTypeMockable",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "reset",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "mockingDetails",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockingDetails;"
      },
      {
        "name": "when",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Lorg/mockito/MockSettings;)Ljava/lang/Object;"
      },
      {
        "name": "stubVoid",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "ignoreStubs",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "verifyNoMoreInteractions",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "getLastInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "validateMockitoUsage",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.CaptorAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "process",
        "desc": "(Lorg/mockito/Captor;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.ClassPathLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "loadConfiguration",
        "desc": "()Lorg/mockito/configuration/IMockitoConfiguration;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.DefaultAnnotationEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createMockFor",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "throwIfAlreadyAssigned",
        "desc": "(Ljava/lang/reflect/Field;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.AnnotationEngine"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.DefaultAnnotationEngine$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.DefaultInjectionEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "injectMocksOnFields",
        "desc": "(Ljava/util/Set;Ljava/util/Set;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.FieldAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.GlobalConfiguration",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getIt",
        "desc": "()Lorg/mockito/configuration/IMockitoConfiguration;"
      },
      {
        "name": "getAnnotationEngine",
        "desc": "()Lorg/mockito/configuration/AnnotationEngine;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getReturnValues",
        "desc": "()Lorg/mockito/ReturnValues;"
      }
    ],
    "testableMethods": [
      {
        "name": "getIt",
        "desc": "()Lorg/mockito/configuration/IMockitoConfiguration;"
      },
      {
        "name": "enableClassCache",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cleansStackTrace",
        "desc": "()Z"
      },
      {
        "name": "getAnnotationEngine",
        "desc": "()Lorg/mockito/configuration/AnnotationEngine;"
      },
      {
        "name": "validate",
        "desc": "()V"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getReturnValues",
        "desc": "()Lorg/mockito/ReturnValues;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.IMockitoConfiguration",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.InjectingAnnotationEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createMockFor",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "injectMocks",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.AnnotationEngine"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.MockAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Lorg/mockito/Mock;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.MockitoAnnotationsMockAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Lorg/mockito/MockitoAnnotations$Mock;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.SpyAnnotationEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createMockFor",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNoIncompatibleAnnotations",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Field;[Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'."
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.AnnotationEngine"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.ConstructorInjection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "processInjection",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/util/Set;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/util/reflection/FieldInitializer$ConstructorArgumentResolver;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.configuration.injection.MockInjectionStrategy"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "resolveTypeInstances",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver"
    ],
    "outerClass": "org.mockito.internal.configuration.injection.ConstructorInjection",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "onFields",
        "desc": "(Ljava/util/Set;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "onField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjection$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.configuration.injection.MockInjection",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "withMocks",
        "desc": "(Ljava/util/Set;)Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "tryConstructorInjection",
        "desc": "()Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "tryPropertyOrFieldInjection",
        "desc": "()Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "handleSpyAnnotation",
        "desc": "()Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "apply",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "fieldOwner",
        "fields",
        "mocks"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.configuration.injection.MockInjection",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjectionStrategy",
    "setters": [
      {
        "name": "thenTry",
        "desc": "(Lorg/mockito/internal/configuration/injection/MockInjectionStrategy;)Lorg/mockito/internal/configuration/injection/MockInjectionStrategy;",
        "field": "nextStrategy"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.configuration.injection.MockInjectionStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "processInjection",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/util/Set;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.internal.configuration.injection.MockInjectionStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$FieldTypeAndNameComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/reflect/Field;)I"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "processInjection",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/util/Set;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.internal.configuration.injection.MockInjectionStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "filterCandidate",
        "desc": "(Ljava/util/Collection;Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/filter/OngoingInjecter;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.MockCandidateFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.OngoingInjecter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.OngoingInjecter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.MockCandidateFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/configuration/injection/filter/MockCandidateFilter;)V"
      },
      {
        "name": "filterCandidate",
        "desc": "(Ljava/util/Collection;Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/filter/OngoingInjecter;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.MockCandidateFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.OngoingInjecter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/configuration/injection/filter/MockCandidateFilter;)V"
      },
      {
        "name": "filterCandidate",
        "desc": "(Ljava/util/Collection;Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/filter/OngoingInjecter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.MockCandidateFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addTo",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "assertNoAnnotations",
        "desc": "(Ljava/lang/reflect/Field;[Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.scanner.MockScanner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addPreparedMocks",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isEnabled",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.plugins.PluginSwitch"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.PluginFileReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "readPluginClass",
        "desc": "(Ljava/io/InputStream;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        35
      ],
      "char": [
        35
      ],
      "short": [
        35
      ],
      "int": [
        -1,
        35
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.PluginFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findPluginClass",
        "desc": "(Ljava/lang/Iterable;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/plugins/PluginSwitch;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.PluginLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "loadPlugin",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "loadImpl",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/plugins/PluginSwitch;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.PluginRegistry",
    "setters": [],
    "getters": [
      {
        "name": "getStackTraceCleanerProvider",
        "desc": "()Lorg/mockito/plugins/StackTraceCleanerProvider;",
        "field": "stackTraceCleanerProvider"
      },
      {
        "name": "getMockMaker",
        "desc": "()Lorg/mockito/plugins/MockMaker;",
        "field": "mockMaker"
      }
    ],
    "observers": [
      {
        "name": "getStackTraceCleanerProvider",
        "desc": "()Lorg/mockito/plugins/StackTraceCleanerProvider;"
      },
      {
        "name": "getMockMaker",
        "desc": "()Lorg/mockito/plugins/MockMaker;"
      }
    ],
    "testableMethods": [
      {
        "name": "getStackTraceCleanerProvider",
        "desc": "()Lorg/mockito/plugins/StackTraceCleanerProvider;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMockMaker",
        "desc": "()Lorg/mockito/plugins/MockMaker;"
      }
    ],
    "dictionary": {
      "str": [
        "org.mockito.internal.creation.cglib.CglibMockMaker",
        "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.Plugins",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getStackTraceCleanerProvider",
        "desc": "()Lorg/mockito/plugins/StackTraceCleanerProvider;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMockMaker",
        "desc": "()Lorg/mockito/plugins/MockMaker;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.DelegatingMethod",
    "setters": [],
    "getters": [
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "method"
      }
    ],
    "observers": [
      {
        "name": "isVarArgs",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "isVarArgs",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1,
        1024
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.MockitoMethod"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.MockSettingsImpl",
    "setters": [
      {
        "name": "spiedInstance",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockSettings;",
        "field": "spiedInstance"
      },
      {
        "name": "serializable",
        "desc": "(Lorg/mockito/mock/SerializableMode;)Lorg/mockito/MockSettings;",
        "field": "serializableMode"
      },
      {
        "name": "defaultAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/MockSettings;",
        "field": "defaultAnswer"
      },
      {
        "name": "name",
        "desc": "(Ljava/lang/String;)Lorg/mockito/MockSettings;",
        "field": "name"
      },
      {
        "name": "extraInterfaces",
        "desc": "([Ljava/lang/Class;)Lorg/mockito/MockSettings;",
        "field": "extraInterfaces"
      },
      {
        "name": "outerInstance",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockSettings;",
        "field": "outerClassInstance"
      }
    ],
    "getters": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;",
        "field": "extraInterfaces"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z",
        "field": "stubOnly"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z",
        "field": "useConstructor"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;",
        "field": "mockName"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;",
        "field": "typeToMock"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;",
        "field": "invocationListeners"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;",
        "field": "spiedInstance"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;",
        "field": "defaultAnswer"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;",
        "field": "outerClassInstance"
      }
    ],
    "observers": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "hasInvocationListeners",
        "desc": "()Z"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "serializable",
        "desc": "()Lorg/mockito/MockSettings;"
      }
    ],
    "testableMethods": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "spiedInstance",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "invocationListeners",
        "desc": "([Lorg/mockito/listeners/InvocationListener;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "verboseLogging",
        "desc": "()Lorg/mockito/MockSettings;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "defaultAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;"
      },
      {
        "name": "confirm",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "name",
        "desc": "(Ljava/lang/String;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "hasInvocationListeners",
        "desc": "()Z"
      },
      {
        "name": "serializable",
        "desc": "()Lorg/mockito/MockSettings;"
      },
      {
        "name": "useConstructor",
        "desc": "()Lorg/mockito/MockSettings;"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z"
      },
      {
        "name": "serializable",
        "desc": "(Lorg/mockito/mock/SerializableMode;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "extraInterfaces",
        "desc": "([Ljava/lang/Class;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "stubOnly",
        "desc": "()Lorg/mockito/internal/creation/MockSettingsImpl;"
      },
      {
        "name": "outerInstance",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockSettings;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.internal.creation.settings.CreationSettings",
      "org.mockito.MockSettings",
      "org.mockito.mock.MockCreationSettings"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "writeReplace",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isWriteReplace",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "enableSerializationAcrossJVM",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "'",
        "writeReplace"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$AcrossJVMMockSerializationProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$AcrossJVMMockitoMockSerializable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$MockitoMockObjectInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resolveClass",
        "desc": "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/Class;Ljava/util/Set;)V"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2,
        3
      ],
      "str": [
        "",
        "MockitoProxyMarker",
        "name"
      ]
    },
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$MockitoMockObjectOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.ObjectOutputStream"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.CGLIBHacker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setMockitoNamingPolicy",
        "desc": "(Lorg/mockito/cglib/proxy/MethodProxy;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.CglibMockMaker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resetMock",
        "desc": "(Ljava/lang/Object;Lorg/mockito/invocation/MockHandler;Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "createMock",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;Lorg/mockito/invocation/MockHandler;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getHandler",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/invocation/MockHandler;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.plugins.MockMaker"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "imposterise",
        "desc": "(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;Ljava/util/Collection;)Ljava/lang/Object;"
      },
      {
        "name": "setConstructorsAccessible",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "imposterise",
        "desc": "(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/creation/instance/Instantiator;)V"
      },
      {
        "name": "createProxyClass",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7
      ],
      "short": [
        6,
        7
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "str": [
        "",
        "'",
        "null"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.creation.cglib.MockitoNamingPolicy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.proxy.Enhancer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.ClassImposterizer",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/proxy/MethodProxy;)V"
      },
      {
        "name": "invokeSuper",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.creation.util.MockitoMethodProxy"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.MethodInterceptorFilter",
    "setters": [],
    "getters": [
      {
        "name": "getHandler",
        "desc": "()Lorg/mockito/invocation/MockHandler;",
        "field": "handler"
      }
    ],
    "observers": [
      {
        "name": "getHandler",
        "desc": "()Lorg/mockito/invocation/MockHandler;"
      }
    ],
    "testableMethods": [
      {
        "name": "createMockitoMethodProxy",
        "desc": "(Lorg/mockito/cglib/proxy/MethodProxy;)Lorg/mockito/internal/creation/util/MockitoMethodProxy;"
      },
      {
        "name": "createMockitoMethod",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/mockito/internal/invocation/MockitoMethod;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/InternalMockHandler;Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "getHandler",
        "desc": "()Lorg/mockito/invocation/MockHandler;"
      },
      {
        "name": "intercept",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.MethodInterceptor",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.MockitoNamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.DefaultNamingPolicy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.SerializableMockitoMethodProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/proxy/MethodProxy;)V"
      },
      {
        "name": "invokeSuper",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "c1",
        "c2"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.creation.util.MockitoMethodProxy",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.SerializableNoOp",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.NoOp",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.ConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.creation.instance.Instantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.InstantationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.InstantiatorProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getInstantiator",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)Lorg/mockito/internal/creation/instance/Instantiator;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.ObjenesisInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.creation.instance.Instantiator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.settings.CreationSettings",
    "setters": [
      {
        "name": "setMockName",
        "desc": "(Lorg/mockito/mock/MockName;)Lorg/mockito/internal/creation/settings/CreationSettings;",
        "field": "mockName"
      },
      {
        "name": "setExtraInterfaces",
        "desc": "(Ljava/util/Set;)Lorg/mockito/internal/creation/settings/CreationSettings;",
        "field": "extraInterfaces"
      },
      {
        "name": "setTypeToMock",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/internal/creation/settings/CreationSettings;",
        "field": "typeToMock"
      }
    ],
    "getters": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;",
        "field": "extraInterfaces"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z",
        "field": "stubOnly"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z",
        "field": "useConstructor"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;",
        "field": "mockName"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;",
        "field": "typeToMock"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;",
        "field": "invocationListeners"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;",
        "field": "spiedInstance"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;",
        "field": "defaultAnswer"
      },
      {
        "name": "getSerializableMode",
        "desc": "()Lorg/mockito/mock/SerializableMode;",
        "field": "serializableMode"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;",
        "field": "outerClassInstance"
      }
    ],
    "observers": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "isSerializable",
        "desc": "()Z"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getSerializableMode",
        "desc": "()Lorg/mockito/mock/SerializableMode;"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;"
      },
      {
        "name": "setMockName",
        "desc": "(Lorg/mockito/mock/MockName;)Lorg/mockito/internal/creation/settings/CreationSettings;"
      },
      {
        "name": "isSerializable",
        "desc": "()Z"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getSerializableMode",
        "desc": "()Lorg/mockito/mock/SerializableMode;"
      },
      {
        "name": "setExtraInterfaces",
        "desc": "(Ljava/util/Set;)Lorg/mockito/internal/creation/settings/CreationSettings;"
      },
      {
        "name": "setTypeToMock",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/internal/creation/settings/CreationSettings;"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/creation/settings/CreationSettings;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.mock.MockCreationSettings",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.util.MockitoMethodProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.util.SearchingClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "findClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "combineLoadersOf",
        "desc": "([Ljava/lang/Class;)Ljava/lang/ClassLoader;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ]
    },
    "parents": [
      "java.lang.ClassLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.FindingsListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.Localized",
    "setters": [],
    "getters": [
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;",
        "field": "object"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;",
        "field": "location"
      }
    ],
    "observers": [
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.LocationImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/exceptions/stacktrace/StackTraceFilter;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.Location",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.LoggingListener",
    "setters": [],
    "getters": [
      {
        "name": "isWarnAboutUnstubbed",
        "desc": "()Z",
        "field": "warnAboutUnstubbed"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/mockito/internal/util/MockitoLogger;",
        "field": "logger"
      }
    ],
    "observers": [
      {
        "name": "isWarnAboutUnstubbed",
        "desc": "()Z"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/mockito/internal/util/MockitoLogger;"
      }
    ],
    "testableMethods": [
      {
        "name": "isWarnAboutUnstubbed",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(ZLorg/mockito/internal/util/MockitoLogger;)V"
      },
      {
        "name": "foundStubCalledWithDifferentArgs",
        "desc": "(Lorg/mockito/invocation/Invocation;Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "foundUnstubbed",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "foundUnusedStub",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/mockito/internal/util/MockitoLogger;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.debugging.FindingsListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.MockitoDebuggerImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "printInvocations",
        "desc": "([Ljava/lang/Object;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "********************************"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.MockitoDebugger"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.VerboseMockInvocationLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "reportInvocation",
        "desc": "(Lorg/mockito/listeners/MethodInvocationReport;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintStream;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "\"",
        ")"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.listeners.InvocationListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.WarningsCollector",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getWarnings",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getWarnings",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.WarningsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "find",
        "desc": "(Lorg/mockito/internal/debugging/FindingsListener;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.WarningsPrinterImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ZLorg/mockito/internal/debugging/WarningsFinder;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Ljava/util/List;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Ljava/util/List;)V"
      },
      {
        "name": "print",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "print",
        "desc": "(Lorg/mockito/internal/util/MockitoLogger;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.MockitoLimitations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.VerificationAwareInvocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.DescribedInvocation"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "filter",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isOut",
        "desc": "(Ljava/lang/StackTraceElement;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "$$EnhancerByMockitoWithCGLIB$$",
        "org.mockito.",
        "org.mockito.internal.runners.",
        "org.mockito.runners."
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.exceptions.stacktrace.StackTraceCleaner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getStackTraceCleaner",
        "desc": "(Lorg/mockito/exceptions/stacktrace/StackTraceCleaner;)Lorg/mockito/exceptions/stacktrace/StackTraceCleaner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.plugins.StackTraceCleanerProvider"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.stacktrace.StackTraceFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "filter",
        "desc": "([Ljava/lang/StackTraceElement;Z)[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.util.ScenarioPrinter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "(Ljava/util/List;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "[?]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.handler.InvocationNotifierHandler",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      }
    ],
    "testableMethods": [
      {
        "name": "handle",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;"
      },
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "voidMethodStubbable",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/InternalMockHandler;Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "setAnswersForStubbing",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.MockHandler",
      "org.mockito.internal.InternalMockHandler"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.handler.MockHandlerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)Lorg/mockito/internal/InternalMockHandler;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.handler.MockHandlerImpl",
    "setters": [],
    "getters": [
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;",
        "field": "mockSettings"
      },
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;",
        "field": "invocationContainerImpl"
      }
    ],
    "observers": [
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "handle",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;"
      },
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "voidMethodStubbable",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "setAnswersForStubbing",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.InternalMockHandler"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.handler.NullResultGuardian",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      }
    ],
    "testableMethods": [
      {
        "name": "handle",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;"
      },
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "voidMethodStubbable",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "setAnswersForStubbing",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/InternalMockHandler;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.InternalMockHandler"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.AbstractAwareMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.ArgumentsComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "argumentsMatch",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;[Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "argumentsMatch",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/invocation/Invocation;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.ArgumentsProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "expandVarArgs",
        "desc": "(Z[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "argumentsToMatchers",
        "desc": "([Ljava/lang/Object;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.CapturesArgumensFromInvocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationImpl",
    "setters": [
      {
        "name": "markStubbed",
        "desc": "(Lorg/mockito/invocation/StubInfo;)V",
        "field": "stubInfo"
      }
    ],
    "getters": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;",
        "field": "mock"
      },
      {
        "name": "getRawArguments",
        "desc": "()[Ljava/lang/Object;",
        "field": "rawArguments"
      },
      {
        "name": "getSequenceNumber",
        "desc": "()I",
        "field": "sequenceNumber"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;",
        "field": "location"
      },
      {
        "name": "getArguments",
        "desc": "()[Ljava/lang/Object;",
        "field": "arguments"
      },
      {
        "name": "isIgnoredForVerification",
        "desc": "()Z",
        "field": "isIgnoredForVerification"
      }
    ],
    "observers": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRawArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getSequenceNumber",
        "desc": "()I"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "getArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isVerified",
        "desc": "()Z"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isIgnoredForVerification",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSequenceNumber",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isVerified",
        "desc": "()Z"
      },
      {
        "name": "getArgumentAt",
        "desc": "(ILjava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "ignoreForVerification",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "markStubbed",
        "desc": "(Lorg/mockito/invocation/StubInfo;)V"
      },
      {
        "name": "getRawArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "markVerified",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/mockito/internal/invocation/MockitoMethod;[Ljava/lang/Object;ILorg/mockito/internal/invocation/realmethod/RealMethod;)V"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "stubInfo",
        "desc": "()Lorg/mockito/invocation/StubInfo;"
      },
      {
        "name": "callRealMethod",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isIgnoredForVerification",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.Invocation",
      "org.mockito.internal.exceptions.VerificationAwareInvocation"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationMarker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "markVerified",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/CapturesArgumensFromInvocation;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "markVerifiedInOrder",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/CapturesArgumensFromInvocation;Lorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "markVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;Lorg/mockito/internal/invocation/CapturesArgumensFromInvocation;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationMatcher",
    "setters": [],
    "getters": [
      {
        "name": "getMatchers",
        "desc": "()Ljava/util/List;",
        "field": "matchers"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;",
        "field": "invocation"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "getMatchers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "testableMethods": [
      {
        "name": "createFrom",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V"
      },
      {
        "name": "hasSameMethod",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "getMatchers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "matches",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "captureArgumentsFrom",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "hasSimilarMethod",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.DescribedInvocation",
      "org.mockito.internal.invocation.CapturesArgumensFromInvocation",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findFirstUnverified",
        "desc": "(Ljava/util/List;Ljava/lang/Object;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "findMatchingChunk",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;ILorg/mockito/internal/verification/api/InOrderContext;)Ljava/util/List;"
      },
      {
        "name": "findFirstUnverified",
        "desc": "(Ljava/util/List;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "getLastLocation",
        "desc": "(Ljava/util/List;)Lorg/mockito/invocation/Location;"
      },
      {
        "name": "findPreviousVerifiedInOrder",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/verification/api/InOrderContext;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "findInvocations",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "findFirstUnverifiedInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/InOrderContext;Ljava/util/List;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "findSimilarInvocation",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "findAllMatchingUnverifiedChunks",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/internal/verification/api/InOrderContext;)Ljava/util/List;"
      },
      {
        "name": "findFirstMatchingUnverifiedInvocation",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/internal/verification/api/InOrderContext;)Lorg/mockito/invocation/Invocation;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationsFinder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.invocation.InvocationsFinder",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "org.mockito.internal.invocation.InvocationsFinder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "org.mockito.internal.invocation.InvocationsFinder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.MatchersBinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "bindMatchers",
        "desc": "(Lorg/mockito/internal/progress/ArgumentMatcherStorage;Lorg/mockito/invocation/Invocation;)Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.MockitoMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.AbstractAwareMethod"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.SerializableMethod",
    "setters": [],
    "getters": [
      {
        "name": "isVarArgs",
        "desc": "()Z",
        "field": "isVarArgs"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;",
        "field": "returnType"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "methodName"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;",
        "field": "parameterTypes"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;",
        "field": "exceptionTypes"
      },
      {
        "name": "isAbstract",
        "desc": "()Z",
        "field": "isAbstract"
      }
    ],
    "observers": [
      {
        "name": "isVarArgs",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "isVarArgs",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1,
        1024
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable",
      "org.mockito.internal.invocation.MockitoMethod"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.StubInfoImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;)V"
      },
      {
        "name": "stubbedAt",
        "desc": "()Lorg/mockito/invocation/Location;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.StubInfo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.UnusedStubsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "find",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.AllInvocationsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "find",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.AllInvocationsFinder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.invocation.finder.AllInvocationsFinder",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.AllInvocationsFinder$SequenceNumberComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.mockito.internal.invocation.finder.AllInvocationsFinder",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "find",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/realmethod/RealMethod;)V"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/creation/util/MockitoMethodProxy;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.realmethod.RealMethod",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.realmethod.DefaultRealMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/creation/util/MockitoMethodProxy;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.realmethod.RealMethod",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.realmethod.RealMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.FriendlyExceptionMaker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/junit/JUnitDetecter;)V"
      },
      {
        "name": "createArgumentsAreDifferentException",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.JUnitDetecter",
    "setters": [],
    "getters": [
      {
        "name": "hasJUnit",
        "desc": "()Z",
        "field": "hasJUnit"
      }
    ],
    "observers": [
      {
        "name": "hasJUnit",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "hasJUnit",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "junit.framework.ComparisonFailure"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.JUnitRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.JUnitRule$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.JUnitTool",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasJUnit",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createArgumentsAreDifferentException",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.listeners.CollectCreatedMocks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "mockingStarted",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.listeners.MockingStartedListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.listeners.MockingProgressListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.listeners.MockingStartedListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.listeners.MockingProgressListener"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.listeners.NotifiedMethodInvocationReport",
    "setters": [],
    "getters": [
      {
        "name": "getReturnedValue",
        "desc": "()Ljava/lang/Object;",
        "field": "returnedValue"
      },
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;",
        "field": "throwable"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/DescribedInvocation;",
        "field": "invocation"
      }
    ],
    "observers": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getLocationOfStubbing",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnedValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/DescribedInvocation;"
      }
    ],
    "testableMethods": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;Ljava/lang/Object;)V"
      },
      {
        "name": "getLocationOfStubbing",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getReturnedValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "threwException",
        "desc": "()Z"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/DescribedInvocation;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.listeners.MethodInvocationReport"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.And",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Any",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "<any>"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.AnyVararg",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.VarargMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.ArrayEquals",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createObjectArray",
        "desc": "(Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "org.mockito.internal.matchers.Equals"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.CapturesArguments",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.CapturingMatcher",
    "setters": [],
    "getters": [
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;",
        "field": "arguments"
      }
    ],
    "observers": [
      {
        "name": "getLastValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLastValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "captureFrom",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.CapturesArguments",
      "org.mockito.internal.matchers.VarargMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.CompareEqual",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.CompareTo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Contains",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.ContainsExtraTypeInformation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.EndsWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Equality",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "areArrayLengthsEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "areArraysEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "areArrayElementsEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "isArray",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "areEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Equals",
    "setters": [],
    "getters": [
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/Object;",
        "field": "wanted"
      }
    ],
    "observers": [
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "typeMatches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "describe",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "withExtraTypeInfo",
        "desc": "()Lorg/hamcrest/SelfDescribing;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "\""
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.ContainsExtraTypeInformation",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Equals$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.SelfDescribing"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.EqualsWithDelta",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;Ljava/lang/Number;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Find",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.GreaterOrEqual",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.GreaterThan",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.InstanceOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.LessOrEqual",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.LessThan",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.LocalizedMatcher",
    "setters": [],
    "getters": [
      {
        "name": "getActualMatcher",
        "desc": "()Lorg/hamcrest/Matcher;",
        "field": "actualMatcher"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;",
        "field": "location"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActualMatcher",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      }
    ],
    "testableMethods": [
      {
        "name": "_dont_implement_Matcher___instead_extend_BaseMatcher_",
        "desc": "()V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "getActualMatcher",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "typeMatches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "captureFrom",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "withExtraTypeInfo",
        "desc": "()Lorg/hamcrest/SelfDescribing;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.Matcher",
      "org.mockito.internal.matchers.ContainsExtraTypeInformation",
      "org.mockito.internal.matchers.CapturesArguments",
      "org.mockito.internal.matchers.MatcherDecorator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.MatcherDecorator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.MatchersPrinter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getArgumentsLine",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;"
      },
      {
        "name": "getArgumentsBlock",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Matches",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Not",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.NotNull",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "notNull()"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Null",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "isNull()"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Or",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Same",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "\"",
        "'",
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.StartsWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.VarargCapturingMatcher",
    "setters": [],
    "getters": [
      {
        "name": "getAllVarargs",
        "desc": "()Ljava/util/List;",
        "field": "arguments"
      }
    ],
    "observers": [
      {
        "name": "getLastVarargs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAllVarargs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLastVarargs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "captureFrom",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getAllVarargs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.CapturesArguments",
      "org.mockito.internal.matchers.VarargMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.VarargMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
    "setters": [
      {
        "name": "append",
        "desc": "(II)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "appendSuper",
        "desc": "(Z)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      }
    ],
    "getters": [
      {
        "name": "isEquals",
        "desc": "()Z",
        "field": "isEquals"
      }
    ],
    "observers": [
      {
        "name": "isEquals",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "append",
        "desc": "([S[S)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;)Z"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "setEquals",
        "desc": "(Z)V"
      },
      {
        "name": "appendSuper",
        "desc": "(Z)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([B[B)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)Z"
      },
      {
        "name": "append",
        "desc": "(FF)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([Z[Z)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([I[I)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([J[J)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Z)Z"
      },
      {
        "name": "isEquals",
        "desc": "()Z"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(DD)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([D[D)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([C[C)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([F[F)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        -1,
        0,
        1,
        36
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.apachecommons.ReflectionEquals",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;[Ljava/lang/String;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.ArgumentMatcherStorage",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.ArgumentMatcherStorageImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "reportMatcher",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;"
      },
      {
        "name": "reportOr",
        "desc": "()Lorg/mockito/internal/progress/HandyReturnValues;"
      },
      {
        "name": "pullLocalizedMatchers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "reportAnd",
        "desc": "()Lorg/mockito/internal/progress/HandyReturnValues;"
      },
      {
        "name": "validateState",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "reportNot",
        "desc": "()Lorg/mockito/internal/progress/HandyReturnValues;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "And(?)",
        "Not(?)",
        "Or(?)"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.ArgumentMatcherStorage"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.HandyReturnValues",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnMap",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "returnNull",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "returnFalse",
        "desc": "()Z"
      },
      {
        "name": "returnString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "returnSet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "returnZero",
        "desc": "()B"
      },
      {
        "name": "returnChar",
        "desc": "()C"
      },
      {
        "name": "returnFor",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "returnList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "returnFor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.IOngoingStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.MockingProgress",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.MockingProgressImpl",
    "setters": [
      {
        "name": "setListener",
        "desc": "(Lorg/mockito/internal/listeners/MockingProgressListener;)V",
        "field": "listener"
      },
      {
        "name": "stubbingCompleted",
        "desc": "(Lorg/mockito/invocation/Invocation;)V",
        "field": "stubbingInProgress"
      },
      {
        "name": "verificationStarted",
        "desc": "(Lorg/mockito/verification/VerificationMode;)V",
        "field": "verificationMode"
      },
      {
        "name": "reportOngoingStubbing",
        "desc": "(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
        "field": "iOngoingStubbing"
      }
    ],
    "getters": [
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
        "field": "argumentMatcherStorage"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;"
      }
    ],
    "testableMethods": [
      {
        "name": "setListener",
        "desc": "(Lorg/mockito/internal/listeners/MockingProgressListener;)V"
      },
      {
        "name": "verificationStarted",
        "desc": "(Lorg/mockito/verification/VerificationMode;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reportOngoingStubbing",
        "desc": "(Lorg/mockito/internal/progress/IOngoingStubbing;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "resetOngoingStubbing",
        "desc": "()V"
      },
      {
        "name": "pullOngoingStubbing",
        "desc": "()Lorg/mockito/internal/progress/IOngoingStubbing;"
      },
      {
        "name": "pullVerificationMode",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "mockingStarted",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)V"
      },
      {
        "name": "stubbingStarted",
        "desc": "()V"
      },
      {
        "name": "validateState",
        "desc": "()V"
      },
      {
        "name": "stubbingCompleted",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.MockingProgress"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.SequenceNumber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "next",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.ThreadSafeMockingProgress",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;"
      }
    ],
    "testableMethods": [
      {
        "name": "setListener",
        "desc": "(Lorg/mockito/internal/listeners/MockingProgressListener;)V"
      },
      {
        "name": "verificationStarted",
        "desc": "(Lorg/mockito/verification/VerificationMode;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reportOngoingStubbing",
        "desc": "(Lorg/mockito/internal/progress/IOngoingStubbing;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "threadSafely",
        "desc": "()Lorg/mockito/internal/progress/MockingProgress;"
      },
      {
        "name": "resetOngoingStubbing",
        "desc": "()V"
      },
      {
        "name": "pullOngoingStubbing",
        "desc": "()Lorg/mockito/internal/progress/IOngoingStubbing;"
      },
      {
        "name": "pullVerificationMode",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "mockingStarted",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)V"
      },
      {
        "name": "stubbingStarted",
        "desc": "()V"
      },
      {
        "name": "validateState",
        "desc": "()V"
      },
      {
        "name": "stubbingCompleted",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.MockingProgress",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.reporting.Discrepancy",
    "setters": [],
    "getters": [
      {
        "name": "getWantedCount",
        "desc": "()I",
        "field": "wantedCount"
      },
      {
        "name": "getActualCount",
        "desc": "()I",
        "field": "actualCount"
      }
    ],
    "observers": [
      {
        "name": "getPluralizedWantedCount",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWantedCount",
        "desc": "()I"
      },
      {
        "name": "getActualCount",
        "desc": "()I"
      },
      {
        "name": "getPluralizedActualCount",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getPluralizedWantedCount",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWantedCount",
        "desc": "()I"
      },
      {
        "name": "getActualCount",
        "desc": "()I"
      },
      {
        "name": "getPluralizedActualCount",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.reporting.Pluralizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "pluralize",
        "desc": "(I)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.reporting.PrintSettings",
    "setters": [
      {
        "name": "setMatchersToBeDescribedWithExtraTypeInfo",
        "desc": "([Ljava/lang/Integer;)V",
        "field": "withTypeInfo"
      },
      {
        "name": "setMultiline",
        "desc": "(Z)V",
        "field": "multiline"
      }
    ],
    "getters": [
      {
        "name": "isMultiline",
        "desc": "()Z",
        "field": "multiline"
      }
    ],
    "observers": [
      {
        "name": "isMultiline",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "print",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)Ljava/lang/String;"
      },
      {
        "name": "extraTypeInfoFor",
        "desc": "(I)Z"
      },
      {
        "name": "print",
        "desc": "(Ljava/util/List;Lorg/mockito/invocation/Invocation;)Ljava/lang/String;"
      },
      {
        "name": "setMultiline",
        "desc": "(Z)V"
      },
      {
        "name": "verboseMatchers",
        "desc": "([Ljava/lang/Integer;)Lorg/mockito/internal/reporting/PrintSettings;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setMatchersToBeDescribedWithExtraTypeInfo",
        "desc": "([Ljava/lang/Integer;)V"
      },
      {
        "name": "print",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/String;"
      },
      {
        "name": "isMultiline",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        45
      ],
      "char": [
        45
      ],
      "short": [
        45
      ],
      "int": [
        45
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.reporting.SmartPrinter",
    "setters": [],
    "getters": [
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;",
        "field": "actual"
      },
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/String;",
        "field": "wanted"
      }
    ],
    "observers": [
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/invocation/Invocation;[Ljava/lang/Integer;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.JUnit44RunnerImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.runners.RunnerImpl"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.JUnit44RunnerImpl$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.JUnit4ClassRunner"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.runners.RunnerImpl"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.RunnerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/internal/runners/RunnerImpl;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/runners/util/RunnerProvider;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.RunnerImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runner.manipulation.Filterable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.util.FrameworkUsageValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "testFinished",
        "desc": "(Lorg/junit/runner/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.util.RunnerProvider",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isJUnit45OrHigherAvailable",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isJUnit45OrHigherAvailable",
        "desc": "()Z"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Lorg/mockito/internal/runners/RunnerImpl;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.util.TestMethodsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasTestMethods",
        "desc": "(Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.BaseStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.OngoingStubbing",
      "org.mockito.stubbing.DeprecatedOngoingStubbing"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.ConsecutiveStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "then",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V"
      },
      {
        "name": "thenAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "toAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/DeprecatedOngoingStubbing;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.stubbing.BaseStubbing"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.InvocationContainer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.InvocationContainerImpl",
    "setters": [
      {
        "name": "setInvocationForPotentialStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
        "field": "invocationForStubbing"
      },
      {
        "name": "resetInvocationForPotentialStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
        "field": "invocationForStubbing"
      },
      {
        "name": "setMethodForStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
        "field": "invocationForStubbing"
      }
    ],
    "getters": [
      {
        "name": "getInvocationForStubbing",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;",
        "field": "invocationForStubbing"
      },
      {
        "name": "getStubbedInvocations",
        "desc": "()Ljava/util/List;",
        "field": "stubbed"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInvocations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getInvocationForStubbing",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "hasInvocationForPotentialStubbing",
        "desc": "()Z"
      },
      {
        "name": "hasAnswersForStubbing",
        "desc": "()Z"
      },
      {
        "name": "getStubbedInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "addAnswerForVoidMethod",
        "desc": "(Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/progress/MockingProgress;Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "resetInvocationForPotentialStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "findAnswerFor",
        "desc": "(Lorg/mockito/invocation/Invocation;)Lorg/mockito/internal/stubbing/StubbedInvocationMatcher;"
      },
      {
        "name": "setAnswersForStubbing",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getInvocationForStubbing",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "hasInvocationForPotentialStubbing",
        "desc": "()Z"
      },
      {
        "name": "addAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "addConsecutiveAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "hasAnswersForStubbing",
        "desc": "()Z"
      },
      {
        "name": "setInvocationForPotentialStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "invokedMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getInvocations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "setMethodForStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "getStubbedInvocations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "addAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;Z)V"
      },
      {
        "name": "answerTo",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.stubbing.InvocationContainer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.OngoingStubbingImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRegisteredInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "then",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V"
      },
      {
        "name": "getRegisteredInvocations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "thenAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "toAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/DeprecatedOngoingStubbing;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.stubbing.BaseStubbing"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.StubbedInvocationMatcher",
    "setters": [
      {
        "name": "markStubUsed",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;)V",
        "field": "usedAt"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      },
      {
        "name": "wasUsed",
        "desc": "()Z"
      },
      {
        "name": "addAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "markStubUsed",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.internal.invocation.InvocationMatcher",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.StubberImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "doThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "doReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "doAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "when",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "doNothing",
        "desc": "()Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "doThrow",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "doCallRealMethod",
        "desc": "()Lorg/mockito/stubbing/Stubber;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Stubber"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.VoidMethodStubbableImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "on",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "on",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V"
      },
      {
        "name": "toAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "toThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "toReturn",
        "desc": "()Lorg/mockito/stubbing/VoidMethodStubbable;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.VoidMethodStubbable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.AnswerReturnValuesAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/ReturnValues;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.AnswersValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validate",
        "desc": "(Lorg/mockito/stubbing/Answer;Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "null"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.CallsRealMethods",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ClonesArguments",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.DoesNothing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.MethodInfo",
    "setters": [],
    "getters": [
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "method"
      }
    ],
    "observers": [
      {
        "name": "isVoid",
        "desc": "()Z"
      },
      {
        "name": "isDeclaredOnInterface",
        "desc": "()Z"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isVoid",
        "desc": "()Z"
      },
      {
        "name": "isDeclaredOnInterface",
        "desc": "()Z"
      },
      {
        "name": "isValidException",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "returnsPrimitive",
        "desc": "()Z"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "isValidReturnType",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "printMethodReturnType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1024
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.AbstractAwareMethod"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.Returns",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "printReturnType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "returnsNull",
        "desc": "()Z"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ReturnsArgumentAt",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "wantedArgumentPosition",
        "desc": "()I"
      },
      {
        "name": "returnedTypeOnSignature",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Class;"
      },
      {
        "name": "validateIndexWithinInvocationRange",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ReturnsElementsOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Collection;)V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ThrowsException",
    "setters": [],
    "getters": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;",
        "field": "throwable"
      }
    ],
    "observers": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ThrowsExceptionClass",
    "setters": [],
    "getters": [
      {
        "name": "getThrowableClass",
        "desc": "()Ljava/lang/Class;",
        "field": "throwableClass"
      }
    ],
    "observers": [
      {
        "name": "getThrowableClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getThrowableClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.Answers",
    "setters": [],
    "getters": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;",
        "field": "implementation"
      }
    ],
    "observers": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      }
    ],
    "testableMethods": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "CALLS_REAL_METHODS",
        "RETURNS_DEEP_STUBS",
        "RETURNS_DEFAULTS",
        "RETURNS_MOCKS",
        "RETURNS_SMART_NULLS"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "actualParameterizedType",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport;"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "outerClass": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$LazyHolder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
      "java.io.Serializable"
    ],
    "outerClass": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnValueFor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnValueFor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnValueFor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer"
    ],
    "outerClass": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.Checks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "checkItemsNotNull",
        "desc": "(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/Iterable;"
      },
      {
        "name": "checkNotNull",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.ConsoleMockitoLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "log",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.MockitoLogger"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.Decamelizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "decamelizeMatcher",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "([A-Z\\d][^A-Z\\d]*)",
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.DefaultMockingDetails",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isSpy",
        "desc": "()Z"
      },
      {
        "name": "getInvocations",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "isMock",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isSpy",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/mockito/internal/util/MockUtil;)V"
      },
      {
        "name": "getInvocations",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "isMock",
        "desc": "()Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.MockingDetails"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.MockCreationValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validateSerializable",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateConstructorUse",
        "desc": "(ZLorg/mockito/mock/SerializableMode;)V"
      },
      {
        "name": "validateExtraInterfaces",
        "desc": "(Ljava/lang/Class;Ljava/util/Collection;)V"
      },
      {
        "name": "validateType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "validateDelegatedInstance",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "validateMockedType",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.MockNameImpl",
    "setters": [],
    "getters": [
      {
        "name": "isDefault",
        "desc": "()Z",
        "field": "defaultName"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "mockName"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isDefault",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)V"
      },
      {
        "name": "isDefault",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.mock.MockName",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.MockUtil",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "maybeRedefineMockName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)V"
      },
      {
        "name": "getMockHandler",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/internal/InternalMockHandler;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createMock",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)Ljava/lang/Object;"
      },
      {
        "name": "getMockSettings",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "isTypeMockable",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getMockName",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/mock/MockName;"
      },
      {
        "name": "isMock",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "resetMock",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "isSpy",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.MockitoLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.ObjectMethodsGuru",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isToString",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "isEqualsMethod",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "isHashCodeMethod",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "isToString",
        "desc": "(Lorg/mockito/internal/invocation/MockitoMethod;)Z"
      },
      {
        "name": "isCompareToMethod",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "compareTo",
        "equals",
        "hashCode",
        "toString"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.Primitives",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isPrimitiveOrWrapper",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "defaultValueForPrimitiveOrWrapper",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "primitiveTypeOf",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "double": [
        1.0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.RemoveFirstLine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.SimpleMockitoLogger",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLoggedInfo",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getLoggedInfo",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "log",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.util.ConsoleMockitoLogger"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.StringJoiner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.Timer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isCounting",
        "desc": "()Z"
      },
      {
        "name": "start",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.ArrayUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isEmpty",
        "desc": "([Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper",
    "setters": [],
    "getters": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;",
        "field": "mockInstance"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "HashCodeAndEqualsMockWrapper{mockInstance="
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "clone",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toArray",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "of",
        "desc": "([Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "toArray",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "addAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "removeAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "retainAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Iterable;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;"
      },
      {
        "name": "containsAll",
        "desc": "(Ljava/util/Collection;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "WRONG"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Set"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "next",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.IdentitySet",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.Iterables",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toIterable",
        "desc": "(Ljava/util/Enumeration;)Ljava/lang/Iterable;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.ListUtil",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "filter",
        "desc": "(Ljava/util/Collection;Lorg/mockito/internal/util/collections/ListUtil$Filter;)Ljava/util/LinkedList;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.ListUtil$Filter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.util.collections.ListUtil",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.Sets",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.io.IOUtil",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "close",
        "desc": "(Ljava/io/Closeable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeText",
        "desc": "(Ljava/lang/String;Ljava/io/File;)V"
      },
      {
        "name": "readLines",
        "desc": "(Ljava/io/InputStream;)Ljava/util/Collection;"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/io/Closeable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.junit.JUnitFailureHacker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "appendWarnings",
        "desc": "(Lorg/junit/runner/notification/Failure;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "",
        "fThrownException"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.AccessibilityChanger",
    "setters": [
      {
        "name": "enableAccess",
        "desc": "(Ljava/lang/reflect/AccessibleObject;)V",
        "field": "wasAccessible"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "enableAccess",
        "desc": "(Ljava/lang/reflect/AccessibleObject;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "safelyDisableAccess",
        "desc": "(Ljava/lang/reflect/AccessibleObject;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.BeanPropertySetter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'",
        "set"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Constructors",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldCopier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "copyValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializationReport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "fieldWasInitializedUsingContructorArgs",
        "desc": "()Z"
      },
      {
        "name": "fieldInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "fieldWasInitialized",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;ZZ)V"
      },
      {
        "name": "fieldClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "initialize",
        "desc": "()Lorg/mockito/internal/util/reflection/FieldInitializationReport;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;Lorg/mockito/internal/util/reflection/FieldInitializer$ConstructorArgumentResolver;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.util.reflection.FieldInitializer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.util.reflection.FieldInitializer",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "instantiate",
        "desc": "()Lorg/mockito/internal/util/reflection/FieldInitializationReport;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator"
    ],
    "outerClass": "org.mockito.internal.util.reflection.FieldInitializer",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "instantiate",
        "desc": "()Lorg/mockito/internal/util/reflection/FieldInitializationReport;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;Lorg/mockito/internal/util/reflection/FieldInitializer$ConstructorArgumentResolver;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator"
    ],
    "outerClass": "org.mockito.internal.util.reflection.FieldInitializer",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "isNull",
        "desc": "()Z"
      },
      {
        "name": "read",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldSetter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Fields",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Fields$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Fields$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Fields$InstanceFields",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assignedValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "instanceFields",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/mockito/internal/util/collections/ListUtil$Filter;)Lorg/mockito/internal/util/reflection/Fields$InstanceFields;"
      },
      {
        "name": "notNull",
        "desc": "()Lorg/mockito/internal/util/reflection/Fields$InstanceFields;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/util/List;)V"
      },
      {
        "name": "names",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.util.reflection.Fields",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMaster",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getGenericType",
        "desc": "(Ljava/lang/reflect/Field;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "type"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.Type"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/TypeVariable;)V"
      },
      {
        "name": "firstBound",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "typeVariable",
        "desc": "()Ljava/lang/reflect/TypeVariable;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "interfaceBounds",
        "desc": "()[Ljava/lang/reflect/Type;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/WildcardType;)V"
      },
      {
        "name": "firstBound",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "wildCard",
        "desc": "()Ljava/lang/reflect/WildcardType;"
      },
      {
        "name": "interfaceBounds",
        "desc": "()[Ljava/lang/reflect/Type;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.InstanceField",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isNull",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "annotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "jdkField",
        "desc": "()Ljava/lang/reflect/Field;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "isNull",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "read",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "name",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAnnotatedBy",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "field",
        "instance"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.LenientCopyTool",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "copyToMock",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "copyToRealObject",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Whitebox",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getInternalState",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setInternalState",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.AtLeast",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "verifyInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationDataInOrder;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.VerificationInOrderMode",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.AtMost",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.Calls",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "verifyInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationDataInOrder;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode",
      "org.mockito.internal.verification.api.VerificationInOrderMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.DefaultRegisteredInvocations",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAll",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "removeLast",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAll",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.RegisteredInvocations",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.DefaultRegisteredInvocations$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.verification.DefaultRegisteredInvocations",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "org.mockito.internal.verification.DefaultRegisteredInvocations",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.InOrderContextImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      },
      {
        "name": "markVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.InOrderContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.InOrderWrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationInOrderMode;Lorg/mockito/internal/InOrderImpl;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.MockAwareVerificationMode",
    "setters": [],
    "getters": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;",
        "field": "mock"
      }
    ],
    "observers": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.NoMoreInteractions",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "verifyInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationDataInOrder;)V"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode",
      "org.mockito.internal.verification.api.VerificationInOrderMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.Only",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.RegisteredInvocations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.SingleRegisteredInvocation",
    "setters": [
      {
        "name": "add",
        "desc": "(Lorg/mockito/invocation/Invocation;)V",
        "field": "invocation"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getAll",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "removeLast",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAll",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.RegisteredInvocations",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.Times",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "verifyInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationDataInOrder;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.VerificationInOrderMode",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.VerificationDataImpl",
    "setters": [],
    "getters": [
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;",
        "field": "wanted"
      }
    ],
    "observers": [
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/stubbing/InvocationContainer;Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.VerificationData"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.VerificationModeFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "only",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "calls",
        "desc": "(I)Lorg/mockito/internal/verification/Calls;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "noMoreInteractions",
        "desc": "()Lorg/mockito/internal/verification/NoMoreInteractions;"
      },
      {
        "name": "atMost",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "times",
        "desc": "(I)Lorg/mockito/internal/verification/Times;"
      },
      {
        "name": "atLeastOnce",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "atLeast",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.VerificationOverTimeImpl",
    "setters": [],
    "getters": [
      {
        "name": "getDuration",
        "desc": "()J",
        "field": "durationMillis"
      },
      {
        "name": "getPollingPeriod",
        "desc": "()J",
        "field": "pollingPeriodMillis"
      },
      {
        "name": "getDelegate",
        "desc": "()Lorg/mockito/verification/VerificationMode;",
        "field": "delegate"
      }
    ],
    "observers": [
      {
        "name": "getDuration",
        "desc": "()J"
      },
      {
        "name": "getDelegate",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "getPollingPeriod",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getDuration",
        "desc": "()J"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "canRecoverFromFailure",
        "desc": "(Lorg/mockito/verification/VerificationMode;)Z"
      },
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;Z)V"
      },
      {
        "name": "getDelegate",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "getPollingPeriod",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;ZLorg/mockito/internal/util/Timer;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.InOrderContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.VerificationData",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.VerificationDataInOrder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.VerificationDataInOrderImpl",
    "setters": [],
    "getters": [
      {
        "name": "getOrderingContext",
        "desc": "()Lorg/mockito/internal/verification/api/InOrderContext;",
        "field": "inOrder"
      },
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;",
        "field": "wanted"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;",
        "field": "allInvocations"
      }
    ],
    "observers": [
      {
        "name": "getOrderingContext",
        "desc": "()Lorg/mockito/internal/verification/api/InOrderContext;"
      },
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getOrderingContext",
        "desc": "()Lorg/mockito/internal/verification/api/InOrderContext;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/verification/api/InOrderContext;Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.VerificationDataInOrder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.VerificationInOrderMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getSuspiciouslyNotMatchingArgsIndexes",
        "desc": "(Ljava/util/List;[Ljava/lang/Object;)[Ljava/lang/Integer;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "null"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.AtLeastDiscrepancy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPluralizedWantedCount",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getPluralizedWantedCount",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.reporting.Discrepancy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsInOrderChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/verification/api/InOrderContext;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.MissingInvocationChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.MissingInvocationInOrderChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/verification/VerificationMode;Lorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.NonGreedyNumberOfInvocationsInOrderChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;ILorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;Lorg/mockito/internal/invocation/InvocationMarker;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/exceptions/Reporter;Lorg/mockito/internal/invocation/InvocationsFinder;)V"
      },
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;ILorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.DescribedInvocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.exceptions.PrintableInvocation"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.Invocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.InvocationOnMock",
      "org.mockito.invocation.DescribedInvocation"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.InvocationOnMock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.Location",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.MockHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.StubInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.junit.MockitoJUnit",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "rule",
        "desc": "()Lorg/mockito/junit/MockitoRule;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.junit.MockitoJUnitRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.MethodRule",
      "org.mockito.junit.MockitoRule"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.junit.MockitoRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.MethodRule"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.listeners.InvocationListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.listeners.MethodInvocationReport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.mock.MockCreationSettings",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.mock.MockName",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.mock.SerializableMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "ACROSS_CLASSLOADERS",
        "BASIC",
        "NONE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.plugins.MockMaker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.plugins.PluginSwitch",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.plugins.StackTraceCleanerProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/util/MockitoLogger;Lorg/mockito/internal/runners/RunnerImpl;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1",
    "setters": [
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V",
        "field": "warningsCollector"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.MockitoJUnit44Runner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.runners.MockitoJUnitRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.MockitoJUnitRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.VerboseMockitoJUnitRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/runners/RunnerImpl;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.VerboseMockitoJUnitRunner$1",
    "setters": [
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V",
        "field": "warningsCollector"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.Answer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.DeprecatedOngoingStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.IOngoingStubbing"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.OngoingStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.IOngoingStubbing"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.Stubber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.VoidMethodStubbable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.answers.ReturnsElementsOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Collection;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.stubbing.answers.ReturnsElementsOf"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.After",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "copySelfWithNewVerificationMode",
        "desc": "(Lorg/mockito/verification/VerificationMode;)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;)V"
      },
      {
        "name": "<init>",
        "desc": "(JLorg/mockito/verification/VerificationMode;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        10
      ]
    },
    "parents": [
      "org.mockito.verification.VerificationWrapper",
      "org.mockito.verification.VerificationAfterDelay"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.Timeout",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;Lorg/mockito/internal/util/Timer;)V"
      },
      {
        "name": "copySelfWithNewVerificationMode",
        "desc": "(Lorg/mockito/verification/VerificationMode;)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "atMost",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;)V"
      },
      {
        "name": "never",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "<init>",
        "desc": "(JLorg/mockito/verification/VerificationMode;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "long": [
        10
      ]
    },
    "parents": [
      "org.mockito.verification.VerificationWrapper",
      "org.mockito.verification.VerificationWithTimeout"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.VerificationAfterDelay",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.VerificationMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.VerificationWithTimeout",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.VerificationWrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.Objenesis",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisBase",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/objenesis/strategy/InstantiatorStrategy;)V"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/objenesis/strategy/InstantiatorStrategy;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.Objenesis"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getSerializableObjectInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "newSerializableInstance",
        "desc": "(Ljava/lang/Class;)Ljava/io/Serializable;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.objenesis.ObjenesisBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisStd",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.objenesis.ObjenesisBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.ObjectInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.SerializationInstantiatorHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getNonSerializableSuperClass",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.android.Android10Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.android.Android17Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.android.Android18Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.android.AndroidSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.AccessibleInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.objenesis.instantiator.basic.ConstructorInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.ConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.FailingInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.NewInstanceInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.NullInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator$MockStream",
    "setters": [
      {
        "name": "read",
        "desc": "([BII)I",
        "field": "pointer"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "available",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        5
      ]
    },
    "parents": [
      "java.io.InputStream"
    ],
    "outerClass": "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.ObjectStreamClassInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.gcj.GCJInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.objenesis.instantiator.gcj.GCJInstantiatorBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.gcj.GCJInstantiatorBase",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.gcj.GCJInstantiatorBase$DummyStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "outerClass": "org.objenesis.instantiator.gcj.GCJInstantiatorBase",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.gcj.GCJSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.objenesis.instantiator.gcj.GCJInstantiatorBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.perc.PercInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.perc.PercSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.sun.SunReflectionFactoryHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newConstructorForSerialization",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"
      }
    ],
    "dictionary": {
      "str": [
        "sun.reflect.ReflectionFactory"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.sun.SunReflectionFactorySerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.sun.UnsafeFactoryInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.BaseInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.strategy.InstantiatorStrategy"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.InstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.PlatformDescription",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isThisJVM",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "Dalvik",
        "java.vm.name"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.SerializingInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "Dalvik",
        "OpenJDK",
        "PERC"
      ]
    },
    "parents": [
      "org.objenesis.strategy.BaseInstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.SingleInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.strategy.InstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.StdInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        17
      ],
      "short": [
        10,
        17
      ],
      "int": [
        10,
        17
      ],
      "str": [
        "1.4",
        "BEA",
        "Dalvik",
        "OpenJDK",
        "PERC",
        "R",
        "R25.1",
        "R25.2"
      ]
    },
    "parents": [
      "org.objenesis.strategy.BaseInstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.ILoggerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.IMarkerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.Logger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.LoggerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "failedBinding",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "getLogger",
        "desc": "(Ljava/lang/Class;)Lorg/slf4j/Logger;"
      },
      {
        "name": "getILoggerFactory",
        "desc": "()Lorg/slf4j/ILoggerFactory;"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "getLogger",
        "desc": "(Ljava/lang/String;)Lorg/slf4j/Logger;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        2,
        3
      ],
      "str": [
        "1.7",
        "]",
        "org.slf4j.impl.StaticLoggerBinder",
        "org.slf4j.impl.StaticLoggerBinder.getSingleton()",
        "org/slf4j/impl/StaticLoggerBinder",
        "org/slf4j/impl/StaticLoggerBinder.class"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.MDC",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "put",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getMDCAdapter",
        "desc": "()Lorg/slf4j/spi/MDCAdapter;"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setContextMap",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "getCopyOfContextMap",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ],
      "str": [
        "StaticMDCBinder"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.Marker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.MarkerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getMarker",
        "desc": "(Ljava/lang/String;)Lorg/slf4j/Marker;"
      },
      {
        "name": "getDetachedMarker",
        "desc": "(Ljava/lang/String;)Lorg/slf4j/Marker;"
      },
      {
        "name": "getIMarkerFactory",
        "desc": "()Lorg/slf4j/IMarkerFactory;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.BasicMDCAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getKeys",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getCopyOfContextMap",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "testableMethods": [
      {
        "name": "isJDK14",
        "desc": "()Z"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "getKeys",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setContextMap",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "getCopyOfContextMap",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "str": [
        "1.4",
        "java.version"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.slf4j.spi.MDCAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.BasicMarker",
    "setters": [
      {
        "name": "add",
        "desc": "(Lorg/slf4j/Marker;)V",
        "field": "refereceList"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hasChildren",
        "desc": "()Z"
      },
      {
        "name": "hasReferences",
        "desc": "()Z"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      }
    ],
    "testableMethods": [
      {
        "name": "contains",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hasChildren",
        "desc": "()Z"
      },
      {
        "name": "contains",
        "desc": "(Lorg/slf4j/Marker;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "hasReferences",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "add",
        "desc": "(Lorg/slf4j/Marker;)V"
      },
      {
        "name": "remove",
        "desc": "(Lorg/slf4j/Marker;)Z"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        0,
        1,
        32
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.slf4j.Marker"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.BasicMarkerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getMarker",
        "desc": "(Ljava/lang/String;)Lorg/slf4j/Marker;"
      },
      {
        "name": "exists",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDetachedMarker",
        "desc": "(Ljava/lang/String;)Lorg/slf4j/Marker;"
      },
      {
        "name": "detachMarker",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.slf4j.IMarkerFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.FormattingTuple",
    "setters": [],
    "getters": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;",
        "field": "throwable"
      },
      {
        "name": "getArgArray",
        "desc": "()[Ljava/lang/Object;",
        "field": "argArray"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;",
        "field": "message"
      }
    ],
    "observers": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgArray",
        "desc": "()[Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "trimmedCopy",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getArgArray",
        "desc": "()[Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.MarkerIgnoringBase",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.slf4j.helpers.NamedLoggerBase",
      "org.slf4j.Logger"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.MessageFormatter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "arrayFormat",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;"
      },
      {
        "name": "isEscapedDelimeter",
        "desc": "(Ljava/lang/String;I)Z"
      },
      {
        "name": "isDoubleEscaped",
        "desc": "(Ljava/lang/String;I)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getThrowableCandidate",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Throwable;"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;"
      }
    ],
    "dictionary": {
      "byte": [
        50,
        91,
        92,
        93
      ],
      "char": [
        50,
        91,
        92,
        93
      ],
      "short": [
        50,
        91,
        92,
        93
      ],
      "int": [
        -1,
        0,
        1,
        2,
        50,
        91,
        92,
        93
      ],
      "str": [
        "null",
        "{}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.NOPLogger",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.slf4j.helpers.MarkerIgnoringBase"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.NOPLoggerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getLogger",
        "desc": "(Ljava/lang/String;)Lorg/slf4j/Logger;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.slf4j.ILoggerFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.NOPMDCAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getCopyOfContextMap",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "testableMethods": [
      {
        "name": "put",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setContextMap",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "getCopyOfContextMap",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.slf4j.spi.MDCAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.NamedLoggerBase",
    "setters": [],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "readResolve",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.slf4j.Logger",
      "java.io.Serializable"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.SubstituteLogger",
    "setters": [
      {
        "name": "setDelegate",
        "desc": "(Lorg/slf4j/Logger;)V",
        "field": "_delegate"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      },
      {
        "name": "delegate",
        "desc": "()Lorg/slf4j/Logger;"
      }
    ],
    "testableMethods": [
      {
        "name": "error",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "isErrorEnabled",
        "desc": "(Lorg/slf4j/Marker;)Z"
      },
      {
        "name": "error",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;)V"
      },
      {
        "name": "info",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;)V"
      },
      {
        "name": "info",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "delegate",
        "desc": "()Lorg/slf4j/Logger;"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "isInfoEnabled",
        "desc": "(Lorg/slf4j/Marker;)Z"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "info",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "isDebugEnabled",
        "desc": "(Lorg/slf4j/Marker;)Z"
      },
      {
        "name": "setDelegate",
        "desc": "(Lorg/slf4j/Logger;)V"
      },
      {
        "name": "debug",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "trace",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "trace",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "isTraceEnabled",
        "desc": "(Lorg/slf4j/Marker;)Z"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "info",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "trace",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "trace",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;)V"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      },
      {
        "name": "warn",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;)V"
      },
      {
        "name": "debug",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "trace",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "info",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isWarnEnabled",
        "desc": "(Lorg/slf4j/Marker;)Z"
      },
      {
        "name": "debug",
        "desc": "(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.slf4j.Logger"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.SubstituteLoggerFactory",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLoggers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getLoggerNames",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getLoggers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "getLoggerNames",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getLogger",
        "desc": "(Ljava/lang/String;)Lorg/slf4j/Logger;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.slf4j.ILoggerFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.helpers.Util",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "report",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "report",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.spi.LocationAwareLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.slf4j.Logger"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.spi.LoggerFactoryBinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.spi.MDCAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.slf4j.spi.MarkerFactoryBinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  }
]
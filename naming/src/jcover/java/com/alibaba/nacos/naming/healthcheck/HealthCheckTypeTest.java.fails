package com.alibaba.nacos.naming.healthcheck;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

/**
 * Unit tests for com.alibaba.nacos.naming.healthcheck.HealthCheckType
 *
 * @author Diffblue JCover
 */

public class HealthCheckTypeTest {

    @Test(timeout=10000)
    public void getLoadedHealthCheckerClassesReturnsInnerClassInnerClassInnerClassInnerClass() {
        assertThat(HealthCheckType.getLoadedHealthCheckerClasses(), hasSize(4));
        assertTrue(com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker.Tcp.class == HealthCheckType.getLoadedHealthCheckerClasses().get(0));
        assertTrue(com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker.Http.class == HealthCheckType.getLoadedHealthCheckerClasses().get(1));
        assertTrue(com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker.Mysql.class == HealthCheckType.getLoadedHealthCheckerClasses().get(2));
        assertTrue(com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker.None.class == HealthCheckType.getLoadedHealthCheckerClasses().get(3));
    }

    @Test(timeout=10000)
    public void ofHealthCheckerClassTypeIsGifReturnsNull() {
        assertThat(HealthCheckType.ofHealthCheckerClass("gif"), is(nullValue()));
    }

    @Test(timeout=10000)
    public void registerHealthCheckerHealthCheckerClassIsStringAndTypeIsGif() {
        HealthCheckType.registerHealthChecker("gif", String.class);
    }
}

[
  {
    "class": "com.alibaba.fastjson.JSON",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        8,
        20
      ],
      "short": [
        8,
        20
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        8,
        20,
        65536
      ],
      "str": [
        "false",
        "true"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONStreamAware",
      "com.alibaba.fastjson.JSONAware"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONArray",
    "setters": [
      {
        "name": "setComponentType",
        "desc": "(Ljava/lang/reflect/Type;)V",
        "field": "componentType"
      },
      {
        "name": "setRelatedArray",
        "desc": "(Ljava/lang/Object;)V",
        "field": "relatedArray"
      }
    ],
    "getters": [
      {
        "name": "getRelatedArray",
        "desc": "()Ljava/lang/Object;",
        "field": "relatedArray"
      },
      {
        "name": "getComponentType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "componentType"
      }
    ],
    "observers": [
      {
        "name": "getRelatedArray",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getComponentType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toArray",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "toArray",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "fluentSet",
        "desc": "(ILjava/lang/Object;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getObject",
        "desc": "(ILjava/lang/reflect/Type;)Ljava/lang/Object;"
      },
      {
        "name": "getBoolean",
        "desc": "(I)Ljava/lang/Boolean;"
      },
      {
        "name": "getShort",
        "desc": "(I)Ljava/lang/Short;"
      },
      {
        "name": "getShortValue",
        "desc": "(I)S"
      },
      {
        "name": "getLongValue",
        "desc": "(I)J"
      },
      {
        "name": "getBigDecimal",
        "desc": "(I)Ljava/math/BigDecimal;"
      },
      {
        "name": "getInteger",
        "desc": "(I)Ljava/lang/Integer;"
      },
      {
        "name": "get",
        "desc": "(I)Ljava/lang/Object;"
      },
      {
        "name": "set",
        "desc": "(ILjava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "fluentRemoveAll",
        "desc": "(Ljava/util/Collection;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "addAll",
        "desc": "(ILjava/util/Collection;)Z"
      },
      {
        "name": "setRelatedArray",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "fluentAdd",
        "desc": "(Ljava/lang/Object;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "getJSONArray",
        "desc": "(I)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "addAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "getDate",
        "desc": "(I)Ljava/util/Date;"
      },
      {
        "name": "fluentAdd",
        "desc": "(ILjava/lang/Object;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "fluentRetainAll",
        "desc": "(Ljava/util/Collection;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getDouble",
        "desc": "(I)Ljava/lang/Double;"
      },
      {
        "name": "subList",
        "desc": "(II)Ljava/util/List;"
      },
      {
        "name": "getBigInteger",
        "desc": "(I)Ljava/math/BigInteger;"
      },
      {
        "name": "fluentRemove",
        "desc": "(I)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "getLong",
        "desc": "(I)Ljava/lang/Long;"
      },
      {
        "name": "clone",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getDoubleValue",
        "desc": "(I)D"
      },
      {
        "name": "getSqlDate",
        "desc": "(I)Ljava/sql/Date;"
      },
      {
        "name": "getComponentType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getJSONObject",
        "desc": "(I)Lcom/alibaba/fastjson/JSONObject;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "setComponentType",
        "desc": "(Ljava/lang/reflect/Type;)V"
      },
      {
        "name": "toJavaList",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "add",
        "desc": "(ILjava/lang/Object;)V"
      },
      {
        "name": "getByteValue",
        "desc": "(I)B"
      },
      {
        "name": "getIntValue",
        "desc": "(I)I"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "fluentAddAll",
        "desc": "(Ljava/util/Collection;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "retainAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "remove",
        "desc": "(I)Ljava/lang/Object;"
      },
      {
        "name": "getRelatedArray",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "listIterator",
        "desc": "(I)Ljava/util/ListIterator;"
      },
      {
        "name": "getObject",
        "desc": "(ILjava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getBooleanValue",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toArray",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "fluentAddAll",
        "desc": "(ILjava/util/Collection;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "listIterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "fluentClear",
        "desc": "()Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "getFloatValue",
        "desc": "(I)F"
      },
      {
        "name": "getByte",
        "desc": "(I)Ljava/lang/Byte;"
      },
      {
        "name": "getFloat",
        "desc": "(I)Ljava/lang/Float;"
      },
      {
        "name": "getString",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "fluentRemove",
        "desc": "(Ljava/lang/Object;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "getTimestamp",
        "desc": "(I)Ljava/sql/Timestamp;"
      },
      {
        "name": "removeAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "containsAll",
        "desc": "(Ljava/util/Collection;)Z"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "com.alibaba.fastjson.JSON",
      "java.util.List",
      "java.lang.Cloneable",
      "java.util.RandomAccess",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONAware",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONObject",
    "setters": [],
    "getters": [
      {
        "name": "getInnerMap",
        "desc": "()Ljava/util/Map;",
        "field": "map"
      }
    ],
    "observers": [
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "getInnerMap",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "fluentPutAll",
        "desc": "(Ljava/util/Map;)Lcom/alibaba/fastjson/JSONObject;"
      },
      {
        "name": "getSqlDate",
        "desc": "(Ljava/lang/String;)Ljava/sql/Date;"
      },
      {
        "name": "getBooleanValue",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "getShortValue",
        "desc": "(Ljava/lang/String;)S"
      },
      {
        "name": "getLongValue",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getInteger",
        "desc": "(Ljava/lang/String;)Ljava/lang/Integer;"
      },
      {
        "name": "getDate",
        "desc": "(Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "getJSONArray",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/JSONArray;"
      },
      {
        "name": "getBoolean",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "getShort",
        "desc": "(Ljava/lang/String;)Ljava/lang/Short;"
      },
      {
        "name": "getDoubleValue",
        "desc": "(Ljava/lang/String;)D"
      },
      {
        "name": "getJSONObject",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/JSONObject;"
      },
      {
        "name": "containsKey",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getBytes",
        "desc": "(Ljava/lang/String;)[B"
      },
      {
        "name": "containsValue",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getFloat",
        "desc": "(Ljava/lang/String;)Ljava/lang/Float;"
      },
      {
        "name": "clone",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getFloatValue",
        "desc": "(Ljava/lang/String;)F"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getIntValue",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "getObject",
        "desc": "(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;"
      },
      {
        "name": "getByteValue",
        "desc": "(Ljava/lang/String;)B"
      },
      {
        "name": "fluentPut",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lcom/alibaba/fastjson/JSONObject;"
      },
      {
        "name": "getLong",
        "desc": "(Ljava/lang/String;)Ljava/lang/Long;"
      },
      {
        "name": "<init>",
        "desc": "(IZ)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "getDouble",
        "desc": "(Ljava/lang/String;)Ljava/lang/Double;"
      },
      {
        "name": "getInnerMap",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getByte",
        "desc": "(Ljava/lang/String;)Ljava/lang/Byte;"
      },
      {
        "name": "fluentRemove",
        "desc": "(Ljava/lang/Object;)Lcom/alibaba/fastjson/JSONObject;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getBigDecimal",
        "desc": "(Ljava/lang/String;)Ljava/math/BigDecimal;"
      },
      {
        "name": "getObject",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "values",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "putAll",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "entrySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "getObject",
        "desc": "(Ljava/lang/String;Lcom/alibaba/fastjson/TypeReference;)Ljava/lang/Object;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "fluentClear",
        "desc": "()Lcom/alibaba/fastjson/JSONObject;"
      },
      {
        "name": "keySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getBigInteger",
        "desc": "(Ljava/lang/String;)Ljava/math/BigInteger;"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "getTimestamp",
        "desc": "(Ljava/lang/String;)Ljava/sql/Timestamp;"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        0,
        1,
        2,
        3,
        16
      ],
      "str": [
        "equals",
        "get",
        "hashCode",
        "is",
        "set",
        "toString"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.JSON",
      "java.util.Map",
      "java.lang.Cloneable",
      "java.io.Serializable",
      "java.lang.reflect.InvocationHandler"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPObject",
    "setters": [
      {
        "name": "setFunction",
        "desc": "(Ljava/lang/String;)V",
        "field": "function"
      }
    ],
    "getters": [
      {
        "name": "getFunction",
        "desc": "()Ljava/lang/String;",
        "field": "function"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;",
        "field": "parameters"
      }
    ],
    "observers": [
      {
        "name": "toJSONString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFunction",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "addParameter",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "toJSONString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFunction",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setFunction",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "byte": [
        41
      ],
      "char": [
        41
      ],
      "short": [
        41
      ],
      "int": [
        0,
        41
      ],
      "str": [
        "/**/"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.JSONSerializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath",
    "setters": [],
    "getters": [
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;",
        "field": "path"
      }
    ],
    "observers": [
      {
        "name": "toJSONString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "arrayAdd",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "containsValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "removePropertyValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Z"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "paths",
        "desc": "(Ljava/lang/Object;)Ljava/util/Map;"
      },
      {
        "name": "isDouble",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "setPropertyValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/Object;)Z"
      },
      {
        "name": "containsValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z"
      },
      {
        "name": "getPropertyValues",
        "desc": "(Ljava/lang/Object;)Ljava/util/Collection;"
      },
      {
        "name": "deepScan",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;)V"
      },
      {
        "name": "evalSize",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "eqNotNull",
        "desc": "(Ljava/lang/Number;Ljava/lang/Number;)Z"
      },
      {
        "name": "toJSONString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Z"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "removeArrayItem",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;I)Z"
      },
      {
        "name": "getJavaBeanDeserializer",
        "desc": "(Ljava/lang/Class;)Lcom/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lcom/alibaba/fastjson/serializer/SerializeConfig;Lcom/alibaba/fastjson/parser/ParserConfig;)V"
      },
      {
        "name": "arrayAdd",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Z"
      },
      {
        "name": "compile",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/JSONPath;"
      },
      {
        "name": "init",
        "desc": "()V"
      },
      {
        "name": "isInt",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getJavaBeanSerializer",
        "desc": "(Ljava/lang/Class;)Lcom/alibaba/fastjson/serializer/JavaBeanSerializer;"
      },
      {
        "name": "deepSet",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/Object;)V"
      },
      {
        "name": "eval",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getPropertyValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;J)Ljava/lang/Object;"
      },
      {
        "name": "paths",
        "desc": "(Ljava/lang/Object;Lcom/alibaba/fastjson/serializer/SerializeConfig;)Ljava/util/Map;"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z"
      },
      {
        "name": "size",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)I"
      },
      {
        "name": "read",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Z)Z"
      },
      {
        "name": "getArrayItem",
        "desc": "(Ljava/lang/Object;I)Ljava/lang/Object;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setArrayItem",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;ILjava/lang/Object;)Z"
      },
      {
        "name": "eval",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "size",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "eq",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        11,
        12
      ],
      "short": [
        11,
        12,
        128,
        1024
      ],
      "int": [
        -1,
        0,
        1,
        2,
        5,
        11,
        12,
        128,
        1024
      ],
      "long": [
        -6586085717218287427,
        -4270347329889690746,
        -3851359326990528739,
        -1580386065683472715,
        -1014497654951707614,
        -811277319855450459,
        4647432019745535567,
        5614464919154503228,
        6607618197526598121,
        8963398325558730460
      ],
      "float": [
        0.75
      ],
      "str": [
        "*",
        "/"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONAware"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$ArrayAccessSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "remove",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;)Z"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "setValue",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$CombineSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/JSONPath$Segement;Lcom/alibaba/fastjson/JSONPath$Segement;Lcom/alibaba/fastjson/JSONPath$CombineSegement$Operator;)V"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$CombineSegement$Operator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "And",
        "Or"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath$CombineSegement",
    "access": 16408,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$DoubleOpSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;DLcom/alibaba/fastjson/JSONPath$Operator;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$Filter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$FilterGroup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/JSONPath$Filter;Lcom/alibaba/fastjson/JSONPath$Filter;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$FilterSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/JSONPath$Filter;)V"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$IntBetweenSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JJZ)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$IntInSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[JZ)V"
      },
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$IntObjInSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/Long;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$IntOpSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JLcom/alibaba/fastjson/JSONPath$Operator;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$JSONPathParser",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isEOF",
        "desc": "()Z"
      },
      {
        "name": "getNextChar",
        "desc": "()C"
      }
    ],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(C)V"
      },
      {
        "name": "isDigitFirst",
        "desc": "(C)Z"
      },
      {
        "name": "explain",
        "desc": "()[Lcom/alibaba/fastjson/JSONPath$Segement;"
      },
      {
        "name": "filterRest",
        "desc": "(Lcom/alibaba/fastjson/JSONPath$Filter;)Lcom/alibaba/fastjson/JSONPath$Filter;"
      },
      {
        "name": "readLongValue",
        "desc": "()J"
      },
      {
        "name": "isEOF",
        "desc": "()Z"
      },
      {
        "name": "getNextChar",
        "desc": "()C"
      },
      {
        "name": "readValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "parseArrayAccessFilter",
        "desc": "(Z)Ljava/lang/Object;"
      },
      {
        "name": "readName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "buildArraySegement",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/JSONPath$Segement;"
      },
      {
        "name": "readString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "skipWhitespace",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "readDoubleValue",
        "desc": "(J)D"
      },
      {
        "name": "parseArrayAccess",
        "desc": "(Z)Lcom/alibaba/fastjson/JSONPath$Segement;"
      },
      {
        "name": "next",
        "desc": "()V"
      },
      {
        "name": "readSegement",
        "desc": "()Lcom/alibaba/fastjson/JSONPath$Segement;"
      },
      {
        "name": "readOp",
        "desc": "()Lcom/alibaba/fastjson/JSONPath$Operator;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        9,
        10,
        12,
        13,
        32,
        33,
        34,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        90,
        91,
        92,
        93,
        97,
        102,
        110,
        116,
        122,
        124
      ],
      "char": [
        32,
        33,
        34,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        90,
        91,
        92,
        93,
        97,
        102,
        110,
        116,
        122,
        124
      ],
      "short": [
        8,
        9,
        10,
        12,
        13,
        32,
        33,
        34,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        90,
        91,
        92,
        93,
        97,
        102,
        110,
        116,
        122,
        124
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        8,
        9,
        10,
        12,
        13,
        32,
        33,
        34,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        65,
        90,
        91,
        92,
        93,
        97,
        102,
        110,
        116,
        122,
        124
      ],
      "double": [
        1.0
      ],
      "str": [
        "%",
        "%%",
        "'",
        ",",
        "-",
        ":",
        "\\-",
        "\\.",
        "\\\\-",
        "and",
        "between",
        "false",
        "in",
        "length",
        "like",
        "not",
        "null",
        "rlike",
        "size",
        "true"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$MatchSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V"
      },
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$MultiIndexSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([I)V"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$MultiPropertySegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$NotNullSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$NullSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$Operator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "str": [
        "And",
        "BETWEEN",
        "EQ",
        "GE",
        "GT",
        "IN",
        "LE",
        "LIKE",
        "LT",
        "NE",
        "NOT_BETWEEN",
        "NOT_IN",
        "NOT_LIKE",
        "NOT_RLIKE",
        "Or",
        "RLIKE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 16408,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$PropertySegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "setValue",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "remove",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;)Z"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$RangeSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(III)V"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$RlikeSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$Segement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$SizeSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Integer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$StringInSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$StringOpSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lcom/alibaba/fastjson/JSONPath$Operator;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$ValueSegment",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Filter"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPath$WildCardSegement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "eval",
        "desc": "(Lcom/alibaba/fastjson/JSONPath;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.JSONPath$Segement"
    ],
    "outerClass": "com.alibaba.fastjson.JSONPath",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONPathException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.JSONException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONReader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLocal",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "peek",
        "desc": "()I"
      },
      {
        "name": "getTimzeZone",
        "desc": "()Ljava/util/TimeZone;"
      }
    ],
    "testableMethods": [
      {
        "name": "readObject",
        "desc": "(Ljava/util/Map;)Ljava/lang/Object;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "readObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "startObject",
        "desc": "()V"
      },
      {
        "name": "startArray",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/JSONLexer;)V"
      },
      {
        "name": "getLocal",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "readLong",
        "desc": "()Ljava/lang/Long;"
      },
      {
        "name": "readObject",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/Object;"
      },
      {
        "name": "readObject",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;)V"
      },
      {
        "name": "config",
        "desc": "(Lcom/alibaba/fastjson/parser/Feature;Z)V"
      },
      {
        "name": "endObject",
        "desc": "()V"
      },
      {
        "name": "readInteger",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getTimzeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;[Lcom/alibaba/fastjson/parser/Feature;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)V"
      },
      {
        "name": "readObject",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "endArray",
        "desc": "()V"
      },
      {
        "name": "setLocale",
        "desc": "(Ljava/util/Locale;)V"
      },
      {
        "name": "peek",
        "desc": "()I"
      },
      {
        "name": "readString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "readObject",
        "desc": "(Lcom/alibaba/fastjson/TypeReference;)Ljava/lang/Object;"
      },
      {
        "name": "setTimzeZone",
        "desc": "(Ljava/util/TimeZone;)V"
      }
    ],
    "dictionary": {
      "byte": [
        12,
        13,
        14,
        15,
        18
      ],
      "short": [
        12,
        13,
        14,
        15,
        18,
        1001,
        1002,
        1004,
        1005
      ],
      "int": [
        -1,
        0,
        1,
        12,
        13,
        14,
        15,
        18,
        1001,
        1002,
        1003,
        1004,
        1005
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Closeable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONStreamAware",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONStreamContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/JSONStreamContext;I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.JSONWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "writeObject",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeStartObject",
        "desc": "()V"
      },
      {
        "name": "startObject",
        "desc": "()V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "writeStartArray",
        "desc": "()V"
      },
      {
        "name": "writeEndArray",
        "desc": "()V"
      },
      {
        "name": "startArray",
        "desc": "()V"
      },
      {
        "name": "writeValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "endArray",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;)V"
      },
      {
        "name": "writeEndObject",
        "desc": "()V"
      },
      {
        "name": "writeObject",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "config",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializerFeature;Z)V"
      },
      {
        "name": "writeKey",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "endObject",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        44,
        91,
        93,
        123,
        125
      ],
      "char": [
        44,
        91,
        93,
        123,
        125
      ],
      "short": [
        44,
        91,
        93,
        123,
        125,
        1001,
        1002,
        1004
      ],
      "int": [
        -1,
        44,
        91,
        93,
        123,
        125,
        1001,
        1002,
        1004
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Closeable",
      "java.io.Flushable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.PropertyNamingStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "translate",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        32,
        65,
        90,
        97,
        122
      ],
      "char": [
        32,
        65,
        90,
        97,
        122
      ],
      "short": [
        32,
        65,
        90,
        97,
        122
      ],
      "int": [
        0,
        1,
        2,
        3,
        32,
        65,
        90,
        97,
        122
      ],
      "str": [
        "CamelCase",
        "KebabCase",
        "PascalCase",
        "SnakeCase"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.PropertyNamingStrategy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        4
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.TypeReference",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/reflect/Type;)V"
      }
    ],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        0,
        1,
        16
      ],
      "float": [
        0.75
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.TypeReference$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.TypeReference"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.annotation.JSONCreator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.annotation.JSONField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.annotation.JSONPOJOBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.annotation.JSONType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.ByteVector",
    "setters": [
      {
        "name": "putShort",
        "desc": "(I)Lcom/alibaba/fastjson/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putInt",
        "desc": "(I)Lcom/alibaba/fastjson/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lcom/alibaba/fastjson/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByte",
        "desc": "(I)Lcom/alibaba/fastjson/asm/ByteVector;",
        "field": "length"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "put12",
        "desc": "(II)Lcom/alibaba/fastjson/asm/ByteVector;"
      },
      {
        "name": "put11",
        "desc": "(II)Lcom/alibaba/fastjson/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "putShort",
        "desc": "(I)Lcom/alibaba/fastjson/asm/ByteVector;"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;"
      },
      {
        "name": "putInt",
        "desc": "(I)Lcom/alibaba/fastjson/asm/ByteVector;"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lcom/alibaba/fastjson/asm/ByteVector;"
      },
      {
        "name": "putByte",
        "desc": "(I)Lcom/alibaba/fastjson/asm/ByteVector;"
      }
    ],
    "dictionary": {
      "byte": [
        64,
        127
      ],
      "char": [
        64
      ],
      "short": [
        64,
        127
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        64,
        127
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.ClassReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(Lcom/alibaba/fastjson/asm/TypeCollector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        8,
        10
      ],
      "short": [
        6,
        8,
        10,
        128,
        191,
        224,
        255,
        1024
      ],
      "int": [
        -1,
        0,
        1,
        2,
        6,
        8,
        10,
        128,
        191,
        224,
        255,
        1024
      ],
      "str": [
        "Code",
        "LocalVariableTable",
        "LocalVariableTypeTable"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.ClassWriter",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "version"
      },
      {
        "name": "newClassItem",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;",
        "field": "index"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I",
        "field": "index"
      },
      {
        "name": "newNameTypeItem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;",
        "field": "index"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "newConstItem",
        "desc": "(Ljava/lang/Object;)Lcom/alibaba/fastjson/asm/Item;"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "newNameTypeItem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newClassItem",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;"
      },
      {
        "name": "newFieldItem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;"
      },
      {
        "name": "newMethodItem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/alibaba/fastjson/asm/Item;"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        9,
        10,
        12
      ],
      "short": [
        7,
        8,
        9,
        10,
        12,
        256
      ],
      "int": [
        0,
        1,
        3,
        7,
        8,
        9,
        10,
        12,
        256
      ],
      "double": [
        0.75
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.FieldWriter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "put",
        "desc": "(Lcom/alibaba/fastjson/asm/ByteVector;)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.Item",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILcom/alibaba/fastjson/asm/Item;)V"
      },
      {
        "name": "set",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isEqualTo",
        "desc": "(Lcom/alibaba/fastjson/asm/Item;)Z"
      },
      {
        "name": "set",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        3,
        2147483647
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.Label",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "put",
        "desc": "(Lcom/alibaba/fastjson/asm/MethodWriter;Lcom/alibaba/fastjson/asm/ByteVector;I)V"
      },
      {
        "name": "resolve",
        "desc": "(Lcom/alibaba/fastjson/asm/MethodWriter;I[B)V"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        1,
        2,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.MethodCollector",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResult",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "getResult",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "arg"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.MethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.MethodWriter",
    "setters": [
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILcom/alibaba/fastjson/asm/Label;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "put",
        "desc": "(Lcom/alibaba/fastjson/asm/ByteVector;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "visitLabel",
        "desc": "(Lcom/alibaba/fastjson/asm/Label;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        8,
        18,
        20,
        54
      ],
      "char": [
        54
      ],
      "short": [
        -32768,
        6,
        8,
        18,
        20,
        54,
        132,
        169,
        185,
        256
      ],
      "int": [
        -32768,
        0,
        1,
        2,
        4,
        5,
        6,
        8,
        18,
        20,
        54,
        132,
        169,
        185,
        256
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.Opcodes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.Type",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/String;)[Lcom/alibaba/fastjson/asm/Type;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        41,
        59,
        68,
        74,
        76,
        86,
        91
      ],
      "char": [
        41,
        59,
        68,
        74,
        76,
        86,
        91
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        41,
        59,
        68,
        74,
        76,
        86,
        91
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        41,
        59,
        68,
        74,
        76,
        86,
        91,
        1107297537,
        1124075009,
        1141048066,
        1174536705,
        1224736769,
        1241579778,
        1392510721,
        1443168256,
        1509950721
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.TypeCollector",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getParameterNamesForMethod",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/Class;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodCollector;"
      },
      {
        "name": "getParameterNamesForMethod",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "",
        ";",
        "[]",
        "double",
        "long"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.asm.TypeCollector$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "D",
        "double"
      ]
    },
    "parents": [
      "java.util.HashMap"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.DefaultExtJSONParser",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lcom/alibaba/fastjson/parser/ParserConfig;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "([CILcom/alibaba/fastjson/parser/ParserConfig;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lcom/alibaba/fastjson/parser/ParserConfig;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.parser.DefaultJSONParser"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.DefaultJSONParser",
    "setters": [
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V",
        "field": "dateFormatPattern"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/Object;Ljava/lang/Object;)Lcom/alibaba/fastjson/parser/ParseContext;",
        "field": "context"
      },
      {
        "name": "setDateFomrat",
        "desc": "(Ljava/text/DateFormat;)V",
        "field": "dateFormat"
      },
      {
        "name": "setResolveStatus",
        "desc": "(I)V",
        "field": "resolveStatus"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/parser/ParseContext;)V",
        "field": "context"
      },
      {
        "name": "setConfig",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;)V",
        "field": "config"
      },
      {
        "name": "addResolveTask",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask;)V",
        "field": "resolveTaskList"
      },
      {
        "name": "setFieldTypeResolver",
        "desc": "(Lcom/alibaba/fastjson/parser/deserializer/FieldTypeResolver;)V",
        "field": "fieldTypeResolver"
      },
      {
        "name": "parseExtra",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)V",
        "field": "resolveStatus"
      }
    ],
    "getters": [
      {
        "name": "getFieldTypeResolver",
        "desc": "()Lcom/alibaba/fastjson/parser/deserializer/FieldTypeResolver;",
        "field": "fieldTypeResolver"
      },
      {
        "name": "getConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;",
        "field": "config"
      },
      {
        "name": "getResolveStatus",
        "desc": "()I",
        "field": "resolveStatus"
      },
      {
        "name": "getDateFomartPattern",
        "desc": "()Ljava/lang/String;",
        "field": "dateFormatPattern"
      },
      {
        "name": "getSymbolTable",
        "desc": "()Lcom/alibaba/fastjson/parser/SymbolTable;",
        "field": "symbolTable"
      },
      {
        "name": "getContext",
        "desc": "()Lcom/alibaba/fastjson/parser/ParseContext;",
        "field": "context"
      },
      {
        "name": "getLexer",
        "desc": "()Lcom/alibaba/fastjson/parser/JSONLexer;",
        "field": "lexer"
      }
    ],
    "observers": [
      {
        "name": "getFieldTypeResolver",
        "desc": "()Lcom/alibaba/fastjson/parser/deserializer/FieldTypeResolver;"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/text/DateFormat;"
      },
      {
        "name": "getConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;"
      },
      {
        "name": "getResolveStatus",
        "desc": "()I"
      },
      {
        "name": "getInput",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContext",
        "desc": "()Lcom/alibaba/fastjson/parser/ParseContext;"
      },
      {
        "name": "getExtraProcessors",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getResolveTaskList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getExtraTypeProviders",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getDateFomartPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSymbolTable",
        "desc": "()Lcom/alibaba/fastjson/parser/SymbolTable;"
      },
      {
        "name": "getLastResolveTask",
        "desc": "()Lcom/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask;"
      },
      {
        "name": "getLexer",
        "desc": "()Lcom/alibaba/fastjson/parser/JSONLexer;"
      }
    ],
    "testableMethods": [
      {
        "name": "getFieldTypeResolver",
        "desc": "()Lcom/alibaba/fastjson/parser/deserializer/FieldTypeResolver;"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/parser/ParseContext;)V"
      },
      {
        "name": "accept",
        "desc": "(I)V"
      },
      {
        "name": "getConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;"
      },
      {
        "name": "parseArray",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "([CILcom/alibaba/fastjson/parser/ParserConfig;I)V"
      },
      {
        "name": "parseArray",
        "desc": "(Ljava/lang/reflect/Type;Ljava/util/Collection;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/JSONLexer;)V"
      },
      {
        "name": "setContext",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lcom/alibaba/fastjson/parser/ParseContext;"
      },
      {
        "name": "setDateFomrat",
        "desc": "(Ljava/text/DateFormat;)V"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/util/Map;)Ljava/lang/Object;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/Object;"
      },
      {
        "name": "getLexer",
        "desc": "()Lcom/alibaba/fastjson/parser/JSONLexer;"
      },
      {
        "name": "handleResovleTask",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "setResolveStatus",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lcom/alibaba/fastjson/parser/ParserConfig;I)V"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lcom/alibaba/fastjson/parser/JSONLexer;Lcom/alibaba/fastjson/parser/ParserConfig;)V"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/text/DateFormat;"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "acceptType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getInput",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContext",
        "desc": "()Lcom/alibaba/fastjson/parser/ParseContext;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getResolveTaskList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "resolveReference",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "checkMapResolve",
        "desc": "(Ljava/util/Map;Ljava/lang/Object;)V"
      },
      {
        "name": "getObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/JSONLexer;Lcom/alibaba/fastjson/parser/ParserConfig;)V"
      },
      {
        "name": "setConfig",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;)V"
      },
      {
        "name": "parseKey",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "popContext",
        "desc": "()V"
      },
      {
        "name": "getDateFomartPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLastResolveTask",
        "desc": "()Lcom/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask;"
      },
      {
        "name": "parseArray",
        "desc": "(Ljava/util/Collection;Ljava/lang/Object;)V"
      },
      {
        "name": "throwException",
        "desc": "(I)V"
      },
      {
        "name": "addResolveTask",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask;)V"
      },
      {
        "name": "parseArray",
        "desc": "(Ljava/lang/Class;Ljava/util/Collection;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lcom/alibaba/fastjson/parser/ParserConfig;)V"
      },
      {
        "name": "parseArray",
        "desc": "([Ljava/lang/reflect/Type;)[Ljava/lang/Object;"
      },
      {
        "name": "setFieldTypeResolver",
        "desc": "(Lcom/alibaba/fastjson/parser/deserializer/FieldTypeResolver;)V"
      },
      {
        "name": "getExtraProcessors",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "parse",
        "desc": "(Lcom/alibaba/fastjson/parser/deserializer/PropertyProcessable;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "config",
        "desc": "(Lcom/alibaba/fastjson/parser/Feature;Z)V"
      },
      {
        "name": "parseArray",
        "desc": "(Ljava/lang/reflect/Type;Ljava/util/Collection;Ljava/lang/Object;)V"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/Object;Ljava/lang/Object;)Lcom/alibaba/fastjson/parser/ParseContext;"
      },
      {
        "name": "parseObject",
        "desc": "()Lcom/alibaba/fastjson/JSONObject;"
      },
      {
        "name": "getResolveStatus",
        "desc": "()I"
      },
      {
        "name": "accept",
        "desc": "(II)V"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "isEnabled",
        "desc": "(Lcom/alibaba/fastjson/parser/Feature;)Z"
      },
      {
        "name": "getExtraTypeProviders",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "parseArrayWithType",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/Object;"
      },
      {
        "name": "checkListResolve",
        "desc": "(Ljava/util/Collection;)V"
      },
      {
        "name": "getSymbolTable",
        "desc": "()Lcom/alibaba/fastjson/parser/SymbolTable;"
      },
      {
        "name": "parse",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "parseExtra",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)V"
      },
      {
        "name": "parseArray",
        "desc": "(Ljava/util/Collection;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        21,
        22,
        26,
        34,
        39,
        44,
        45,
        48,
        57,
        58,
        91,
        123,
        125
      ],
      "char": [
        34,
        39,
        44,
        45,
        48,
        57,
        58,
        91,
        123,
        125
      ],
      "short": [
        8,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        21,
        22,
        26,
        34,
        39,
        44,
        45,
        48,
        57,
        58,
        91,
        123,
        125
      ],
      "int": [
        0,
        1,
        2,
        4,
        8,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        21,
        22,
        26,
        34,
        39,
        44,
        45,
        48,
        57,
        58,
        91,
        123,
        125
      ],
      "str": [
        "$",
        "$ref",
        "..",
        "@",
        "NaN",
        "java.util.Collections$EmptyMap",
        "null"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Closeable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.parser.DefaultJSONParser",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.Feature",
    "setters": [],
    "getters": [
      {
        "name": "getMask",
        "desc": "()I",
        "field": "mask"
      }
    ],
    "observers": [
      {
        "name": "getMask",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "config",
        "desc": "(ILcom/alibaba/fastjson/parser/Feature;Z)I"
      },
      {
        "name": "of",
        "desc": "([Lcom/alibaba/fastjson/parser/Feature;)I"
      },
      {
        "name": "getMask",
        "desc": "()I"
      },
      {
        "name": "isEnabled",
        "desc": "(ILcom/alibaba/fastjson/parser/Feature;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22
      ],
      "str": [
        "AllowArbitraryCommas",
        "AllowComment",
        "AllowISO8601DateFormat",
        "AllowSingleQuotes",
        "AllowUnQuotedFieldNames",
        "AutoCloseSource",
        "CustomMapDeserializer",
        "DisableASM",
        "DisableCircularReferenceDetect",
        "DisableFieldSmartMatch",
        "DisableSpecialKeyDetect",
        "IgnoreAutoType",
        "IgnoreNotMatch",
        "InitStringFieldAsEmpty",
        "InternFieldNames",
        "NonStringKeyAsString",
        "OrderedField",
        "SortFeidFastMatch",
        "SupportArrayToBean",
        "SupportAutoType",
        "SupportNonPublicField",
        "UseBigDecimal",
        "UseObjectArray"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.JSONLexer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.JSONLexerBase",
    "setters": [
      {
        "name": "scanSymbol",
        "desc": "(Lcom/alibaba/fastjson/parser/SymbolTable;)Ljava/lang/String;",
        "field": "token"
      },
      {
        "name": "scanFieldInt",
        "desc": "([C)I",
        "field": "matchStat"
      },
      {
        "name": "scanFieldDouble",
        "desc": "([C)D",
        "field": "matchStat"
      },
      {
        "name": "scanSymbolUnQuoted",
        "desc": "(Lcom/alibaba/fastjson/parser/SymbolTable;)Ljava/lang/String;",
        "field": "np"
      },
      {
        "name": "scanFieldSymbol",
        "desc": "([C)J",
        "field": "matchStat"
      },
      {
        "name": "scanFieldFloatArray",
        "desc": "([C)[F",
        "field": "matchStat"
      },
      {
        "name": "nextToken",
        "desc": "(I)V",
        "field": "sp"
      },
      {
        "name": "scanFieldString",
        "desc": "([C)Ljava/lang/String;",
        "field": "matchStat"
      },
      {
        "name": "scanInt",
        "desc": "(C)I",
        "field": "matchStat"
      },
      {
        "name": "scanDecimal",
        "desc": "(C)Ljava/math/BigDecimal;",
        "field": "matchStat"
      },
      {
        "name": "scanType",
        "desc": "(Ljava/lang/String;)I",
        "field": "matchStat"
      },
      {
        "name": "scanSymbolWithSeperator",
        "desc": "(Lcom/alibaba/fastjson/parser/SymbolTable;C)Ljava/lang/String;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldDecimal",
        "desc": "([C)Ljava/math/BigDecimal;",
        "field": "matchStat"
      },
      {
        "name": "config",
        "desc": "(Lcom/alibaba/fastjson/parser/Feature;Z)V",
        "field": "features"
      },
      {
        "name": "scanBoolean",
        "desc": "(C)Z",
        "field": "matchStat"
      },
      {
        "name": "scanFieldLong",
        "desc": "([C)J",
        "field": "matchStat"
      },
      {
        "name": "scanUUID",
        "desc": "(C)Ljava/util/UUID;",
        "field": "matchStat"
      },
      {
        "name": "scanLong",
        "desc": "(C)J",
        "field": "matchStat"
      },
      {
        "name": "scanFieldFloatArray2",
        "desc": "([C)[[F",
        "field": "matchStat"
      },
      {
        "name": "setTimeZone",
        "desc": "(Ljava/util/TimeZone;)V",
        "field": "timeZone"
      },
      {
        "name": "scanString",
        "desc": "(C)Ljava/lang/String;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldStringArray",
        "desc": "([CLjava/lang/Class;)Ljava/util/Collection;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldBoolean",
        "desc": "([C)Z",
        "field": "matchStat"
      },
      {
        "name": "scanSymbol",
        "desc": "(Lcom/alibaba/fastjson/parser/SymbolTable;C)Ljava/lang/String;",
        "field": "np"
      },
      {
        "name": "scanFieldUUID",
        "desc": "([C)Ljava/util/UUID;",
        "field": "matchStat"
      },
      {
        "name": "scanDate",
        "desc": "(C)Ljava/util/Date;",
        "field": "matchStat"
      },
      {
        "name": "scanStringArray",
        "desc": "(Ljava/util/Collection;C)V",
        "field": "matchStat"
      },
      {
        "name": "scanFieldIntArray",
        "desc": "([C)[I",
        "field": "matchStat"
      },
      {
        "name": "scanFieldBigInteger",
        "desc": "([C)Ljava/math/BigInteger;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldDate",
        "desc": "([C)Ljava/util/Date;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldFloat",
        "desc": "([C)F",
        "field": "matchStat"
      },
      {
        "name": "setLocale",
        "desc": "(Ljava/util/Locale;)V",
        "field": "locale"
      },
      {
        "name": "matchField",
        "desc": "([C)Z",
        "field": "bp"
      },
      {
        "name": "setToken",
        "desc": "(I)V",
        "field": "token"
      },
      {
        "name": "scanFloat",
        "desc": "(C)F",
        "field": "matchStat"
      },
      {
        "name": "nextTokenWithChar",
        "desc": "(C)V",
        "field": "sp"
      },
      {
        "name": "scanDouble",
        "desc": "(C)D",
        "field": "matchStat"
      }
    ],
    "getters": [
      {
        "name": "getCalendar",
        "desc": "()Ljava/util/Calendar;",
        "field": "calendar"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;",
        "field": "timeZone"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;",
        "field": "locale"
      },
      {
        "name": "getFeatures",
        "desc": "()I",
        "field": "features"
      },
      {
        "name": "getCurrent",
        "desc": "()C",
        "field": "ch"
      }
    ],
    "observers": [
      {
        "name": "pos",
        "desc": "()I"
      },
      {
        "name": "token",
        "desc": "()I"
      },
      {
        "name": "getCalendar",
        "desc": "()Ljava/util/Calendar;"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "info",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCurrent",
        "desc": "()C"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getFeatures",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        -2,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        31,
        32,
        34,
        36,
        39,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        57,
        58,
        65,
        66,
        68,
        69,
        70,
        76,
        83,
        91,
        92,
        93,
        95,
        97,
        101,
        102,
        103,
        108,
        110,
        114,
        115,
        116,
        117,
        119,
        120,
        123,
        125,
        127
      ],
      "char": [
        32,
        34,
        36,
        39,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        57,
        58,
        65,
        66,
        68,
        69,
        70,
        76,
        83,
        91,
        92,
        93,
        95,
        97,
        101,
        102,
        103,
        108,
        110,
        114,
        115,
        116,
        117,
        119,
        120,
        123,
        125
      ],
      "short": [
        -2,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        31,
        32,
        34,
        36,
        39,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        57,
        58,
        65,
        66,
        68,
        69,
        70,
        76,
        83,
        91,
        92,
        93,
        95,
        97,
        101,
        102,
        103,
        108,
        110,
        114,
        115,
        116,
        117,
        119,
        120,
        123,
        125,
        127,
        512,
        8192
      ],
      "int": [
        -2147483648,
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        31,
        32,
        34,
        36,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        57,
        58,
        59,
        65,
        66,
        68,
        69,
        70,
        76,
        78,
        83,
        84,
        91,
        92,
        93,
        95,
        97,
        101,
        102,
        103,
        108,
        110,
        114,
        115,
        116,
        117,
        119,
        120,
        123,
        125,
        127,
        512,
        8192,
        3392903
      ],
      "long": [
        -9223372036854775808,
        -922337203685477580,
        -2147483648,
        -214748364,
        0,
        1,
        2147483647,
        1099511628211
      ],
      "float": [
        0.0
      ],
      "double": [
        1.0
      ],
      "str": [
        "",
        "\":\"",
        "Set",
        "TreeSet",
        "false",
        "new",
        "null",
        "true",
        "unclosed.str",
        "unclosed.str.lit",
        "undefined"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.JSONLexer",
      "java.io.Closeable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.JSONReaderScanner",
    "setters": [
      {
        "name": "charAt",
        "desc": "(I)C",
        "field": "bufLength"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "isEOF",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "indexOf",
        "desc": "(CI)I"
      },
      {
        "name": "copyTo",
        "desc": "(II[C)V"
      },
      {
        "name": "decimalValue",
        "desc": "()Ljava/math/BigDecimal;"
      },
      {
        "name": "bytesValue",
        "desc": "()[B"
      },
      {
        "name": "isBlankInput",
        "desc": "()Z"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "isEOF",
        "desc": "()Z"
      },
      {
        "name": "sub_chars",
        "desc": "(II)[C"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;I)V"
      },
      {
        "name": "charAt",
        "desc": "(I)C"
      },
      {
        "name": "numberString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "next",
        "desc": "()C"
      },
      {
        "name": "subString",
        "desc": "(II)Ljava/lang/String;"
      },
      {
        "name": "stringVal",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([CI)V"
      },
      {
        "name": "addSymbol",
        "desc": "(IIILcom/alibaba/fastjson/parser/SymbolTable;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "arrayCopy",
        "desc": "(I[CII)V"
      },
      {
        "name": "charArrayCompare",
        "desc": "([C)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "([CII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Reader;)V"
      }
    ],
    "dictionary": {
      "byte": [
        20,
        26,
        34,
        66,
        68,
        70,
        76,
        83
      ],
      "char": [
        34,
        66,
        68,
        70,
        76,
        83
      ],
      "short": [
        20,
        26,
        34,
        66,
        68,
        70,
        76,
        83,
        16384
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        20,
        26,
        34,
        66,
        68,
        70,
        76,
        83,
        16384,
        65279,
        65536
      ],
      "str": [
        "TODO"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.JSONLexerBase"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.JSONScanner",
    "setters": [
      {
        "name": "matchField2",
        "desc": "([C)Z",
        "field": "matchStat"
      },
      {
        "name": "scanFieldStringArray",
        "desc": "([CLjava/lang/Class;)Ljava/util/Collection;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldBoolean",
        "desc": "([C)Z",
        "field": "matchStat"
      },
      {
        "name": "scanFieldStringArray",
        "desc": "([CILcom/alibaba/fastjson/parser/SymbolTable;)[Ljava/lang/String;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldInt",
        "desc": "([C)I",
        "field": "matchStat"
      },
      {
        "name": "scanDate",
        "desc": "(C)Ljava/util/Date;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldSymbol",
        "desc": "([C)J",
        "field": "matchStat"
      },
      {
        "name": "scanFieldString",
        "desc": "([C)Ljava/lang/String;",
        "field": "matchStat"
      },
      {
        "name": "scanFieldDate",
        "desc": "([C)Ljava/util/Date;",
        "field": "matchStat"
      },
      {
        "name": "scanInt",
        "desc": "(C)I",
        "field": "matchStat"
      },
      {
        "name": "scanFieldLong",
        "desc": "([C)J",
        "field": "matchStat"
      },
      {
        "name": "scanLong",
        "desc": "(C)J",
        "field": "matchStat"
      },
      {
        "name": "scanDouble",
        "desc": "(C)D",
        "field": "matchStat"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "info",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEOF",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "copyTo",
        "desc": "(II[C)V"
      },
      {
        "name": "matchField2",
        "desc": "([C)Z"
      },
      {
        "name": "scanFieldInt",
        "desc": "([C)I"
      },
      {
        "name": "charAt",
        "desc": "(I)C"
      },
      {
        "name": "numberString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "scanFieldSymbol",
        "desc": "([C)J"
      },
      {
        "name": "scanFieldString",
        "desc": "([C)Ljava/lang/String;"
      },
      {
        "name": "scanInt",
        "desc": "(C)I"
      },
      {
        "name": "setTimeZone",
        "desc": "(CCCCC)V"
      },
      {
        "name": "newCollectionByType",
        "desc": "(Ljava/lang/Class;)Ljava/util/Collection;"
      },
      {
        "name": "info",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addSymbol",
        "desc": "(IIILcom/alibaba/fastjson/parser/SymbolTable;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([CII)V"
      },
      {
        "name": "scanFieldLong",
        "desc": "([C)J"
      },
      {
        "name": "scanLong",
        "desc": "(C)J"
      },
      {
        "name": "indexOf",
        "desc": "(CI)I"
      },
      {
        "name": "decimalValue",
        "desc": "()Ljava/math/BigDecimal;"
      },
      {
        "name": "setTime",
        "desc": "(CCCCCC)V"
      },
      {
        "name": "scanFieldStringArray",
        "desc": "([CLjava/lang/Class;)Ljava/util/Collection;"
      },
      {
        "name": "scanFieldBoolean",
        "desc": "([C)Z"
      },
      {
        "name": "scanFieldStringArray",
        "desc": "([CILcom/alibaba/fastjson/parser/SymbolTable;)[Ljava/lang/String;"
      },
      {
        "name": "bytesValue",
        "desc": "()[B"
      },
      {
        "name": "scanDate",
        "desc": "(C)Ljava/util/Date;"
      },
      {
        "name": "isEOF",
        "desc": "()Z"
      },
      {
        "name": "sub_chars",
        "desc": "(II)[C"
      },
      {
        "name": "scanISO8601DateIfMatch",
        "desc": "(Z)Z"
      },
      {
        "name": "next",
        "desc": "()C"
      },
      {
        "name": "subString",
        "desc": "(II)Ljava/lang/String;"
      },
      {
        "name": "scanISO8601DateIfMatch",
        "desc": "()Z"
      },
      {
        "name": "checkDate",
        "desc": "(CCCCCCII)Z"
      },
      {
        "name": "scanFieldDate",
        "desc": "([C)Ljava/util/Date;"
      },
      {
        "name": "stringVal",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([CI)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "arrayCopy",
        "desc": "(I[CII)V"
      },
      {
        "name": "charArrayCompare",
        "desc": "([C)Z"
      },
      {
        "name": "setTimeZone",
        "desc": "(CCC)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "charArrayCompare",
        "desc": "(Ljava/lang/String;I[C)Z"
      },
      {
        "name": "scanDouble",
        "desc": "(C)D"
      }
    ],
    "dictionary": {
      "byte": [
        -2,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        20,
        26,
        32,
        34,
        40,
        41,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        57,
        58,
        66,
        68,
        69,
        70,
        76,
        83,
        84,
        90,
        91,
        92,
        93,
        97,
        101,
        102,
        108,
        110,
        114,
        115,
        116,
        117,
        125
      ],
      "char": [
        32,
        34,
        40,
        41,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        57,
        58,
        66,
        68,
        69,
        70,
        76,
        83,
        84,
        90,
        91,
        92,
        93,
        97,
        101,
        102,
        108,
        110,
        114,
        115,
        116,
        117,
        125
      ],
      "short": [
        -2,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        20,
        26,
        32,
        34,
        40,
        41,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        57,
        58,
        66,
        68,
        69,
        70,
        76,
        83,
        84,
        90,
        91,
        92,
        93,
        97,
        101,
        102,
        108,
        110,
        114,
        115,
        116,
        117,
        125,
        1000,
        24180,
        26085,
        26376
      ],
      "int": [
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        20,
        26,
        32,
        34,
        40,
        41,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        57,
        58,
        66,
        68,
        69,
        70,
        76,
        83,
        84,
        90,
        91,
        92,
        93,
        97,
        101,
        102,
        108,
        110,
        114,
        115,
        116,
        117,
        125,
        1000,
        24180,
        26085,
        26376,
        45380,
        50900,
        51068,
        65279,
        65536
      ],
      "long": [
        -9223372036854775808,
        0,
        1,
        1099511628211
      ],
      "double": [
        1.0
      ],
      "str": [
        "ull"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.JSONLexerBase"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.JSONToken",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "name",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.ParseContext",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/Object;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "str": [
        "$",
        ".",
        "[",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.ParserConfig",
    "setters": [
      {
        "name": "addAccept",
        "desc": "(Ljava/lang/String;)V",
        "field": "acceptHashCodes"
      },
      {
        "name": "addDeny",
        "desc": "(Ljava/lang/String;)V",
        "field": "denyHashCodes"
      },
      {
        "name": "setDefaultClassLoader",
        "desc": "(Ljava/lang/ClassLoader;)V",
        "field": "defaultClassLoader"
      },
      {
        "name": "setAsmEnable",
        "desc": "(Z)V",
        "field": "asmEnable"
      },
      {
        "name": "configFromPropety",
        "desc": "(Ljava/util/Properties;)V",
        "field": "autoTypeSupport"
      }
    ],
    "getters": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;",
        "field": "defaultClassLoader"
      },
      {
        "name": "isAsmEnable",
        "desc": "()Z",
        "field": "asmEnable"
      },
      {
        "name": "getDeserializers",
        "desc": "()Lcom/alibaba/fastjson/util/IdentityHashMap;",
        "field": "deserializers"
      },
      {
        "name": "isAutoTypeSupport",
        "desc": "()Z",
        "field": "autoTypeSupport"
      }
    ],
    "observers": [
      {
        "name": "isAsmEnable",
        "desc": "()Z"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getDeserializers",
        "desc": "()Lcom/alibaba/fastjson/util/IdentityHashMap;"
      },
      {
        "name": "isAutoTypeSupport",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/deserializer/ASMDeserializerFactory;)V"
      },
      {
        "name": "parserAllFieldToCache",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;)V"
      },
      {
        "name": "isPrimitive2",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "checkAutoType",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "isAsmEnable",
        "desc": "()Z"
      },
      {
        "name": "getGlobalInstance",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;"
      },
      {
        "name": "addAccept",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "checkAutoType",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;I)Ljava/lang/Class;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "isPrimitive",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getFieldFromCache",
        "desc": "(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/reflect/Field;"
      },
      {
        "name": "putDeserializer",
        "desc": "(Ljava/lang/reflect/Type;Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;)V"
      },
      {
        "name": "setAsmEnable",
        "desc": "(Z)V"
      },
      {
        "name": "initJavaBeanDeserializers",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getDeserializer",
        "desc": "(Lcom/alibaba/fastjson/util/FieldInfo;)Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createJavaBeanDeserializer",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Type;)Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;"
      },
      {
        "name": "getDeserializer",
        "desc": "(Ljava/lang/reflect/Type;)Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;"
      },
      {
        "name": "addDeny",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "configFromPropety",
        "desc": "(Ljava/util/Properties;)V"
      },
      {
        "name": "createFieldDeserializer",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Lcom/alibaba/fastjson/util/JavaBeanInfo;Lcom/alibaba/fastjson/util/FieldInfo;)Lcom/alibaba/fastjson/parser/deserializer/FieldDeserializer;"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "setAutoTypeSupport",
        "desc": "(Z)V"
      },
      {
        "name": "getDeserializer",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Type;)Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;"
      },
      {
        "name": "setDefaultClassLoader",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getDeserializers",
        "desc": "()Lcom/alibaba/fastjson/util/IdentityHashMap;"
      },
      {
        "name": "clearDeserializers",
        "desc": "()V"
      },
      {
        "name": "isAutoTypeSupport",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        32,
        36,
        39,
        40,
        41,
        46,
        65,
        90,
        97,
        122
      ],
      "char": [
        32,
        36,
        39,
        40,
        41,
        46,
        65,
        90,
        97,
        122
      ],
      "short": [
        32,
        36,
        39,
        40,
        41,
        46,
        65,
        90,
        97,
        122,
        128,
        200,
        4096
      ],
      "int": [
        0,
        1,
        2,
        3,
        32,
        36,
        39,
        40,
        41,
        46,
        65,
        90,
        97,
        122,
        128,
        200,
        4096
      ],
      "long": [
        -5808493101479473382,
        1099511628211,
        655701488918567152,
        8389032537095247355,
        8838294710098435315
      ],
      "str": [
        "false",
        "fastjson.parser.autoTypeSupport",
        "java.awt.",
        "java.nio.file.Path",
        "java.time.",
        "java.util.Optional",
        "true"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.SymbolTable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addSymbol",
        "desc": "([CII)Ljava/lang/String;"
      },
      {
        "name": "addSymbol",
        "desc": "([CIII)Ljava/lang/String;"
      },
      {
        "name": "addSymbol",
        "desc": "(Ljava/lang/String;IIIZ)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "addSymbol",
        "desc": "(Ljava/lang/String;III)Ljava/lang/String;"
      },
      {
        "name": "hash",
        "desc": "([CII)I"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createJavaBeanDeserializer",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Lcom/alibaba/fastjson/util/JavaBeanInfo;)Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        10,
        11,
        12,
        14,
        16,
        21,
        22,
        23,
        24,
        25,
        32,
        54,
        55,
        56,
        57,
        58,
        87,
        89,
        91,
        123
      ],
      "char": [
        32,
        54,
        55,
        56,
        57,
        58,
        87,
        89,
        91,
        123
      ],
      "short": [
        9,
        10,
        11,
        12,
        14,
        16,
        21,
        22,
        23,
        24,
        25,
        32,
        54,
        55,
        56,
        57,
        58,
        87,
        89,
        91,
        123,
        153,
        160,
        180,
        181,
        182,
        183,
        184,
        185,
        192
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        9,
        10,
        11,
        12,
        14,
        16,
        21,
        22,
        23,
        24,
        25,
        32,
        54,
        55,
        56,
        57,
        58,
        87,
        89,
        91,
        123,
        153,
        160,
        180,
        181,
        182,
        183,
        184,
        185,
        192
      ],
      "str": [
        "()C",
        "()V",
        "()[C",
        "(B)Ljava/lang/Byte;",
        "(C)D",
        "(C)F",
        "(C)I",
        "(C)J",
        "(C)Ljava/lang/String;",
        "(C)Ljava/math/BigDecimal;",
        "(C)Ljava/util/Date;",
        "(C)Ljava/util/UUID;",
        "(C)Z",
        "(D)Ljava/lang/Double;",
        "(F)Ljava/lang/Float;",
        "(I)C",
        "(I)Ljava/lang/Integer;",
        "(I)V",
        "(J)Ljava/lang/Long;",
        "(J)V",
        "(L",
        "(Ljava/lang/Class;)Ljava/util/Collection;",
        "(Ljava/util/Collection;C)V",
        "(S)Ljava/lang/Short;",
        "([C)D",
        "([C)F",
        "([C)I",
        "([C)J",
        "([C)Ljava/lang/String;",
        "([C)Ljava/math/BigDecimal;",
        "([C)Ljava/math/BigInteger;",
        "([C)Ljava/util/Date;",
        "([C)Ljava/util/UUID;",
        "([C)Z",
        "([C)[F",
        "([C)[I",
        "([C)[[F",
        ")V",
        "/",
        ";Ljava/lang/reflect/Type;)Ljava/lang/Object;",
        ";Ljava/lang/reflect/Type;Ljava/lang/Object;I)Ljava/lang/Object;",
        ";Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",
        "<init>",
        "I",
        "Ljava/lang/Class;",
        "Ljava/lang/Object;",
        "[C",
        "_asm",
        "_asm_deser__",
        "_asm_list_item_deser__",
        "_asm_prefix__",
        "charAt",
        "check",
        "context",
        "createCollection",
        "createInstance",
        "deserialze",
        "deserialzeArrayMapping",
        "getConfig",
        "getContext",
        "getCurrent",
        "getDeserializer",
        "getFieldDeserializer",
        "getLastResolveTask",
        "getSymbolTable",
        "i",
        "instance",
        "java/lang/Byte",
        "java/lang/Double",
        "java/lang/Float",
        "java/lang/Integer",
        "java/lang/Long",
        "java/lang/Short",
        "java/lang/String",
        "java/util/ArrayList",
        "lexer",
        "listContext",
        "list_item_value",
        "matchStat",
        "parseArray",
        "parseRest",
        "scanBoolean",
        "scanDate",
        "scanDecimal",
        "scanDouble",
        "scanEnum",
        "scanFieldBigInteger",
        "scanFieldBoolean",
        "scanFieldDate",
        "scanFieldDecimal",
        "scanFieldDouble",
        "scanFieldFloat",
        "scanFieldFloatArray",
        "scanFieldFloatArray2",
        "scanFieldInt",
        "scanFieldIntArray",
        "scanFieldLong",
        "scanFieldString",
        "scanFieldStringArray",
        "scanFieldUUID",
        "scanFloat",
        "scanInt",
        "scanLong",
        "scanString",
        "scanStringArray",
        "scanUUID",
        "setContext",
        "toCharArray",
        "token",
        "valueOf"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.asm.Opcodes"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
    "setters": [
      {
        "name": "var",
        "desc": "(Ljava/lang/String;)I",
        "field": "variantIndex"
      },
      {
        "name": "var",
        "desc": "(Ljava/lang/String;I)I",
        "field": "variantIndex"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getInstClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "var",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lcom/alibaba/fastjson/parser/ParserConfig;Lcom/alibaba/fastjson/util/JavaBeanInfo;I)V"
      },
      {
        "name": "getInstClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "var",
        "desc": "(Ljava/lang/String;I)I"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        8,
        12,
        13,
        16,
        19
      ],
      "short": [
        8,
        12,
        13,
        16,
        19
      ],
      "int": [
        2,
        4,
        8,
        12,
        13,
        16,
        19
      ],
      "str": [
        "val",
        "yyyy-MM-dd'T'HH:mm:ss",
        "yyyy-MM-dd'T'HH:mm:ss.SSS",
        "yyyy-MM-ddTHH:mm:ss",
        "yyyy-MM-ddTHH:mm:ss.SSS"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
    "setters": [
      {
        "name": "parseArray",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/util/Collection;)V",
        "field": "deserializer"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Ljava/lang/Class;Lcom/alibaba/fastjson/util/FieldInfo;)V"
      },
      {
        "name": "parseField",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;)V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "parseArray",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/util/Collection;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        14,
        15,
        16
      ],
      "short": [
        8,
        14,
        15,
        16
      ],
      "int": [
        -1,
        0,
        1,
        4,
        8,
        14,
        15,
        16
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.deserializer.FieldDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Ljava/lang/Class;Lcom/alibaba/fastjson/util/FieldInfo;)V"
      },
      {
        "name": "parseFieldUnwrapped",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;)V"
      },
      {
        "name": "getFieldValueDeserilizer",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;)Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;"
      },
      {
        "name": "parseField",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;)V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        -1,
        0,
        1,
        1024
      ],
      "str": [
        "TODO",
        "gzip",
        "gzip,base64"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.deserializer.FieldDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getEnumByHashCode",
        "desc": "(J)Ljava/lang/Enum;"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "valueOf",
        "desc": "(I)Ljava/lang/Enum;"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        65,
        90
      ],
      "char": [
        65,
        90
      ],
      "short": [
        8,
        16,
        65,
        90
      ],
      "int": [
        0,
        2,
        4,
        8,
        16,
        65,
        90
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ParseProcess"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ParseProcess"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "TODO",
        "java.util.Collections$Unmodifiable",
        "trim"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ParseProcess"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        11,
        16,
        24,
        25
      ],
      "short": [
        10,
        11,
        16,
        24,
        25
      ],
      "int": [
        10,
        11,
        16,
        24,
        25
      ],
      "str": [
        "."
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
    "setters": [
      {
        "name": "parseField",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;[I)Z",
        "field": "extraFieldDeserializers"
      },
      {
        "name": "smartMatch",
        "desc": "(Ljava/lang/String;[I)Lcom/alibaba/fastjson/parser/deserializer/FieldDeserializer;",
        "field": "smartMatchHashArrayMapping"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Ljava/lang/Class;)V"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;I[I)Ljava/lang/Object;"
      },
      {
        "name": "scanEnum",
        "desc": "(Lcom/alibaba/fastjson/parser/JSONLexerBase;[CLcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;)Ljava/lang/Enum;"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Lcom/alibaba/fastjson/util/JavaBeanInfo;)V"
      },
      {
        "name": "createInstance",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Ljava/lang/Class;Ljava/lang/reflect/Type;)V"
      },
      {
        "name": "getFieldDeserializer",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/parser/deserializer/FieldDeserializer;"
      },
      {
        "name": "smartMatch",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/parser/deserializer/FieldDeserializer;"
      },
      {
        "name": "deserialzeArrayMapping",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "parseRest",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "getFieldDeserializer",
        "desc": "(J)Lcom/alibaba/fastjson/parser/deserializer/FieldDeserializer;"
      },
      {
        "name": "check",
        "desc": "(Lcom/alibaba/fastjson/parser/JSONLexer;I)V"
      },
      {
        "name": "parseField",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;)Z"
      },
      {
        "name": "createInstance",
        "desc": "(Ljava/util/Map;Lcom/alibaba/fastjson/parser/ParserConfig;)Ljava/lang/Object;"
      },
      {
        "name": "scanEnum",
        "desc": "(Lcom/alibaba/fastjson/parser/JSONLexer;C)Ljava/lang/Enum;"
      },
      {
        "name": "parseField",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;[I)Z"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "parseRest",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;I[I)Ljava/lang/Object;"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;I)Ljava/lang/Object;"
      },
      {
        "name": "getSeeAlso",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Lcom/alibaba/fastjson/util/JavaBeanInfo;Ljava/lang/String;)Lcom/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer;"
      },
      {
        "name": "getFieldDeserializer",
        "desc": "(Ljava/lang/String;[I)Lcom/alibaba/fastjson/parser/deserializer/FieldDeserializer;"
      },
      {
        "name": "isSetFlag",
        "desc": "(I[I)Z"
      },
      {
        "name": "getFieldType",
        "desc": "(I)Ljava/lang/reflect/Type;"
      },
      {
        "name": "parseArray",
        "desc": "(Ljava/util/Collection;Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "smartMatch",
        "desc": "(Ljava/lang/String;[I)Lcom/alibaba/fastjson/parser/deserializer/FieldDeserializer;"
      }
    ],
    "dictionary": {
      "byte": [
        -2,
        8,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        32,
        34,
        44,
        48,
        49,
        57,
        91,
        92,
        93,
        110
      ],
      "char": [
        32,
        34,
        44,
        48,
        49,
        57,
        91,
        92,
        93,
        110
      ],
      "short": [
        -2,
        8,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        32,
        34,
        44,
        48,
        49,
        57,
        91,
        92,
        93,
        110
      ],
      "int": [
        -2,
        -1,
        0,
        1,
        2,
        4,
        5,
        8,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        32,
        34,
        44,
        48,
        49,
        57,
        91,
        92,
        93,
        110
      ],
      "long": [
        0
      ],
      "float": [
        0.0,
        0.75
      ],
      "double": [
        1.0
      ],
      "str": [
        "$",
        "$ref",
        "..",
        "1.2.47",
        "@",
        "_",
        "error",
        "is",
        "java.util.ArrayList",
        "java.util.Collection",
        "java.util.HashMap",
        "java.util.List",
        "java.util.Map"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "parseZonedDateTime",
        "desc": "(Ljava/lang/String;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/Object;"
      },
      {
        "name": "parseDateTime",
        "desc": "(Ljava/lang/String;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDateTime;"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Lcom/alibaba/fastjson/serializer/BeanContext;)V"
      },
      {
        "name": "parseLocalDate",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDate;"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        9,
        10,
        12,
        16,
        17,
        19,
        23,
        32,
        45,
        46,
        47,
        48,
        58,
        84
      ],
      "char": [
        32,
        45,
        46,
        47,
        48,
        58,
        84
      ],
      "short": [
        7,
        8,
        9,
        10,
        12,
        16,
        17,
        19,
        23,
        32,
        45,
        46,
        47,
        48,
        58,
        84,
        24180,
        31186
      ],
      "int": [
        1,
        2,
        4,
        5,
        7,
        8,
        9,
        10,
        12,
        16,
        17,
        19,
        23,
        32,
        45,
        46,
        47,
        48,
        58,
        84,
        24180,
        31186,
        45380
      ],
      "str": [
        "",
        "AU",
        "BR",
        "US",
        "yyyy-MM-dd'T'HH:mm:ss"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.serializer.ContextObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "parseMap",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/util/Map;"
      },
      {
        "name": "createMap",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/util/Map;"
      },
      {
        "name": "parseMap",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        12,
        13,
        15,
        16,
        17,
        20,
        34,
        39,
        44,
        58,
        125
      ],
      "char": [
        34,
        39,
        44,
        58,
        125
      ],
      "short": [
        8,
        12,
        13,
        15,
        16,
        17,
        20,
        34,
        39,
        44,
        58,
        125
      ],
      "int": [
        0,
        1,
        2,
        4,
        8,
        12,
        13,
        15,
        16,
        17,
        20,
        34,
        39,
        44,
        58,
        125
      ],
      "str": [
        "$",
        "..",
        "org.springframework.util.LinkedMultiValueMap"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        16,
        18
      ],
      "short": [
        16,
        18
      ],
      "int": [
        2,
        3,
        16,
        18
      ],
      "long": [
        -2147483648,
        -32768,
        -128,
        127,
        32767,
        2147483647
      ],
      "double": [],
      "str": [
        "NaN"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.OptionalCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ParseProcess",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ParseProcess"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.PropertyProcessableDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/Object;)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "parseField",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Collection;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/util/List;I)V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.deserializer.FieldDeserializer"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "castTimestamp",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cast",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        12,
        13,
        16
      ],
      "short": [
        6,
        7,
        8,
        12,
        13,
        16
      ],
      "int": [
        0,
        2,
        4,
        6,
        7,
        8,
        12,
        13,
        16
      ],
      "str": [
        "classLoaderName",
        "className",
        "fileName",
        "java.lang.StackTraceElement",
        "lineNumber",
        "methodName",
        "moduleName",
        "moduleVersion",
        "nativeMethod"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;Ljava/lang/Class;)V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        12,
        13,
        16
      ],
      "short": [
        8,
        12,
        13,
        16
      ],
      "int": [
        0,
        1,
        2,
        4,
        8,
        12,
        13,
        16
      ],
      "str": [
        "cause",
        "message",
        "stackTrace"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        13,
        16,
        48,
        57
      ],
      "char": [
        48,
        57
      ],
      "short": [
        13,
        16,
        48,
        57
      ],
      "int": [
        0,
        2,
        4,
        13,
        16,
        48,
        57
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ASMSerializerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createJavaBeanSerializer",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeBeanInfo;)Lcom/alibaba/fastjson/serializer/JavaBeanSerializer;"
      }
    ],
    "dictionary": {
      "byte": [
        21,
        25,
        54,
        58,
        67,
        73,
        89,
        90
      ],
      "char": [
        54,
        58,
        67,
        73,
        89,
        90
      ],
      "short": [
        21,
        25,
        54,
        58,
        67,
        73,
        89,
        90,
        153,
        154,
        177,
        180,
        181,
        182,
        183,
        185,
        192,
        256
      ],
      "int": [
        0,
        1,
        2,
        3,
        5,
        21,
        25,
        54,
        58,
        67,
        73,
        89,
        90,
        153,
        154,
        177,
        180,
        181,
        182,
        183,
        185,
        192,
        256
      ],
      "str": [
        "(B)Ljava/lang/Byte;",
        "(C)Ljava/lang/Character;",
        "(D)Ljava/lang/Double;",
        "(F)Ljava/lang/Float;",
        "(I)Ljava/lang/Integer;",
        "(I)Ljava/lang/reflect/Type;",
        "(I)V",
        "(J)Ljava/lang/Long;",
        "(Ljava/lang/Object;Ljava/lang/Object;)V",
        "(Ljava/lang/String;C)V",
        "(Ljava/lang/String;Z)V",
        "(Ljava/util/List;)V",
        "(S)Ljava/lang/Short;",
        "(Z)Ljava/lang/Boolean;",
        ")V",
        "/",
        ";Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z",
        "<init>",
        "Ljava/lang/Object;",
        "Ljava/lang/reflect/Type;",
        "_asm_fieldType",
        "_asm_list_item_ser_",
        "_asm_ser_",
        "apply",
        "applyLabel",
        "applyName",
        "boolean",
        "char",
        "checkValue",
        "decimal",
        "enum",
        "fied_ser",
        "getBeanContext",
        "getContext",
        "getFieldType",
        "getObjectWriter",
        "hasNameFilters",
        "hasPropertyFilters",
        "java/io/IOException",
        "java/lang/Boolean",
        "java/lang/Byte",
        "java/lang/Character",
        "java/lang/Double",
        "java/lang/Float",
        "java/lang/Integer",
        "java/lang/Long",
        "java/lang/Short",
        "list",
        "list_item",
        "list_item_desc",
        "object",
        "out",
        "parent",
        "processKey",
        "processValue",
        "seperator",
        "setContext",
        "size",
        "string",
        "trim",
        "valueOf",
        "write",
        "writeAfter",
        "writeAsArrayNonContext",
        "writeBefore",
        "writeClassName",
        "writeDirect",
        "writeDirectNonContext",
        "writeFieldName",
        "writeFieldValue",
        "writeNoneASM",
        "writeNormal",
        "writeReference",
        "writeString",
        "writeUnsorted",
        "writeWithFieldName"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.asm.Opcodes"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
    "setters": [
      {
        "name": "var",
        "desc": "(Ljava/lang/String;)I",
        "field": "variantIndex"
      },
      {
        "name": "var",
        "desc": "(Ljava/lang/String;I)I",
        "field": "variantIndex"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getFieldOrinal",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "([Lcom/alibaba/fastjson/util/FieldInfo;Lcom/alibaba/fastjson/serializer/SerializeBeanInfo;Ljava/lang/String;ZZ)V"
      },
      {
        "name": "var",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "var",
        "desc": "(Ljava/lang/String;I)I"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        9
      ],
      "short": [
        7,
        8,
        9
      ],
      "int": [
        0,
        1,
        7,
        8,
        9
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.serializer.ASMSerializerFactory",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.AdderSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        125
      ],
      "char": [
        125
      ],
      "short": [
        125
      ],
      "int": [
        125
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.AfterFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        44
      ],
      "char": [
        44
      ],
      "short": [
        44
      ],
      "int": [
        44
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.SerializeFilter"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.AnnotationSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.AppendableSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ArraySerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/serializer/ObjectSerializer;)V"
      }
    ],
    "dictionary": {
      "byte": [
        93
      ],
      "char": [
        93
      ],
      "short": [
        93
      ],
      "int": [
        0,
        93
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.AtomicCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        91,
        93
      ],
      "char": [
        91,
        93
      ],
      "short": [
        8,
        16,
        91,
        93
      ],
      "int": [
        0,
        8,
        16,
        91,
        93
      ],
      "str": [
        "false",
        "true"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.AwtCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "parsePoint",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/Object;)Ljava/awt/Point;"
      },
      {
        "name": "support",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "parseColor",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)Ljava/awt/Color;"
      },
      {
        "name": "parseRectangle",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)Ljava/awt/Rectangle;"
      },
      {
        "name": "parseFont",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)Ljava/awt/Font;"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "writeClassName",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeWriter;Ljava/lang/Class;C)C"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        12,
        13,
        16,
        44,
        123,
        125
      ],
      "char": [
        44,
        123,
        125
      ],
      "short": [
        8,
        12,
        13,
        16,
        44,
        123,
        125
      ],
      "int": [
        0,
        2,
        3,
        4,
        8,
        12,
        13,
        16,
        44,
        123,
        125
      ],
      "str": [
        "$ref",
        "alpha",
        "b",
        "g",
        "height",
        "java.awt.Point",
        "name",
        "r",
        "size",
        "style",
        "width",
        "x",
        "y"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.BeanContext",
    "setters": [],
    "getters": [
      {
        "name": "getFormat",
        "desc": "()Ljava/lang/String;",
        "field": "format"
      },
      {
        "name": "getBeanClass",
        "desc": "()Ljava/lang/Class;",
        "field": "beanClass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isJsonDirect",
        "desc": "()Z"
      },
      {
        "name": "getFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getField",
        "desc": "()Ljava/lang/reflect/Field;"
      },
      {
        "name": "getFieldType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getLabel",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getFeatures",
        "desc": "()I"
      },
      {
        "name": "getBeanClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getFieldClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isJsonDirect",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/util/FieldInfo;)V"
      },
      {
        "name": "getFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getField",
        "desc": "()Ljava/lang/reflect/Field;"
      },
      {
        "name": "getFieldType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getLabel",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getFeatures",
        "desc": "()I"
      },
      {
        "name": "getBeanClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getFieldClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.BeforeFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        44
      ],
      "char": [
        44
      ],
      "short": [
        44
      ],
      "int": [
        44
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.SerializeFilter"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.BigDecimalCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)Ljava/lang/Object;"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        2,
        3,
        46
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.BigIntegerCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)Ljava/lang/Object;"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        2,
        16
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.BooleanCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        16
      ],
      "short": [
        6,
        7,
        16
      ],
      "int": [
        1,
        2,
        6,
        7,
        16
      ],
      "str": [
        "false"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.CalendarCodec",
    "setters": [
      {
        "name": "createXMLGregorianCalendar",
        "desc": "(Ljava/util/Calendar;)Ljavax/xml/datatype/XMLGregorianCalendar;",
        "field": "dateFactory"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createXMLGregorianCalendar",
        "desc": "(Ljava/util/Calendar;)Ljavax/xml/datatype/XMLGregorianCalendar;"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        14
      ],
      "short": [
        14
      ],
      "int": [
        4,
        14,
        3600000
      ],
      "str": [
        "Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.CharArrayCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        4
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.CharacterCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ClobSeriliazer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "short": [
        2048
      ],
      "int": [
        0,
        2048
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.CollectionCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        93
      ],
      "char": [
        93
      ],
      "short": [
        8,
        93
      ],
      "int": [
        0,
        8,
        93
      ],
      "str": [
        "Set"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ContextObjectSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ContextValueFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.SerializeFilter"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.DateCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cast",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        -9,
        9,
        14,
        20,
        22,
        90,
        124,
        125
      ],
      "char": [
        90,
        124,
        125
      ],
      "short": [
        -9,
        9,
        14,
        20,
        22,
        90,
        124,
        125
      ],
      "int": [
        -9,
        0,
        4,
        9,
        14,
        20,
        22,
        90,
        124,
        125,
        3600000
      ],
      "str": [
        ")/",
        "/Date(",
        "0000-00-00",
        "0000-00-00T00:00:00",
        "0001-01-01T00:00:00+08:00",
        "GMT",
        "yyyyMMddHHmmssSSSZ"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.DoubleSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/text/DecimalFormat;)V"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.EnumSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.EnumerationSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        91,
        93
      ],
      "char": [
        91,
        93
      ],
      "short": [
        91,
        93
      ],
      "int": [
        91,
        93
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.FieldSerializer",
    "setters": [
      {
        "name": "writeValue",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;)V",
        "field": "runtimeInfo"
      },
      {
        "name": "writePrefix",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;)V",
        "field": "un_quoted_fieldPrefix"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "writeValue",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lcom/alibaba/fastjson/serializer/FieldSerializer;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/util/FieldInfo;)V"
      },
      {
        "name": "getPropertyValueDirect",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getPropertyValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "writePrefix",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;)V"
      }
    ],
    "dictionary": {
      "byte": [
        34,
        39
      ],
      "char": [
        34,
        39
      ],
      "short": [
        34,
        39
      ],
      "int": [
        0,
        1,
        34,
        39
      ],
      "long": [
        -9007199254740991,
        9007199254740991
      ],
      "str": [
        "\":",
        "':",
        ":"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/serializer/ObjectSerializer;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.serializer.FieldSerializer",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.FloatCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/text/DecimalFormat;)V"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2,
        3
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.GuavaCodec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.IntegerCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        12,
        66,
        83
      ],
      "char": [
        66,
        83
      ],
      "short": [
        8,
        12,
        66,
        83
      ],
      "int": [
        1,
        2,
        3,
        8,
        12,
        66,
        83
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.JSONAwareSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.JSONSerializable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.JSONSerializer",
    "setters": [
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V",
        "field": "dateFormatPattern"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerialContext;)V",
        "field": "context"
      },
      {
        "name": "setDateFormat",
        "desc": "(Ljava/text/DateFormat;)V",
        "field": "dateFormat"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerialContext;Ljava/lang/Object;Ljava/lang/Object;II)V",
        "field": "context"
      }
    ],
    "getters": [
      {
        "name": "getMapping",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;",
        "field": "config"
      },
      {
        "name": "getContext",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerialContext;",
        "field": "context"
      },
      {
        "name": "getWriter",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeWriter;",
        "field": "out"
      },
      {
        "name": "getIndentCount",
        "desc": "()I",
        "field": "indentCount"
      }
    ],
    "observers": [
      {
        "name": "getMapping",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;"
      },
      {
        "name": "getDateFormatPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/text/DateFormat;"
      },
      {
        "name": "getContext",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerialContext;"
      },
      {
        "name": "getWriter",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeWriter;"
      },
      {
        "name": "getIndentCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getMapping",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;"
      },
      {
        "name": "getDateFormatPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isWriteClassName",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Object;)Z"
      },
      {
        "name": "hasPropertyFilters",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeFilterable;)Z"
      },
      {
        "name": "hasNameFilters",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeFilterable;)Z"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getContext",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerialContext;"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerialContext;)V"
      },
      {
        "name": "writeKeyValue",
        "desc": "(CLjava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "writeReference",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/io/Writer;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeConfig;)V"
      },
      {
        "name": "setDateFormat",
        "desc": "(Ljava/text/DateFormat;)V"
      },
      {
        "name": "writeWithFormat",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)V"
      },
      {
        "name": "isEnabled",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializerFeature;)Z"
      },
      {
        "name": "writeNull",
        "desc": "()V"
      },
      {
        "name": "setContext",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "config",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializerFeature;Z)V"
      },
      {
        "name": "println",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "containsReference",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getObjectWriter",
        "desc": "(Ljava/lang/Class;)Lcom/alibaba/fastjson/serializer/ObjectSerializer;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/text/DateFormat;"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeWriter;Ljava/lang/Object;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "checkValue",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeFilterable;)Z"
      },
      {
        "name": "decrementIdent",
        "desc": "()V"
      },
      {
        "name": "writeWithFieldName",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeWriter;Lcom/alibaba/fastjson/serializer/SerializeConfig;)V"
      },
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerialContext;Ljava/lang/Object;Ljava/lang/Object;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeWriter;)V"
      },
      {
        "name": "writeWithFieldName",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "popContext",
        "desc": "()V"
      },
      {
        "name": "getWriter",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeWriter;"
      },
      {
        "name": "getIndentCount",
        "desc": "()I"
      },
      {
        "name": "incrementIndent",
        "desc": "()V"
      },
      {
        "name": "setContext",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerialContext;Ljava/lang/Object;Ljava/lang/Object;II)V"
      }
    ],
    "dictionary": {
      "byte": [
        93
      ],
      "char": [
        93
      ],
      "short": [
        93,
        512
      ],
      "int": [
        0,
        1,
        93,
        512
      ],
      "str": [
        "\"}",
        "gzip",
        "gzip,base64",
        "hex",
        "{\"$ref\":\"..\"}",
        "{\"$ref\":\"@\"}"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.serializer.SerializeFilterable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.JSONSerializerMap",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/serializer/ObjectSerializer;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.serializer.SerializeConfig"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.JavaBeanSerializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getFieldValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "isWriteAsArray",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;)Z"
      },
      {
        "name": "getFieldValues",
        "desc": "(Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "getFieldSerializer",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/fastjson/serializer/FieldSerializer;"
      },
      {
        "name": "writeAfter",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;C)C"
      },
      {
        "name": "getFieldSerializer",
        "desc": "(J)Lcom/alibaba/fastjson/serializer/FieldSerializer;"
      },
      {
        "name": "writeNoneASM",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "createAliasMap",
        "desc": "([Ljava/lang/String;)Ljava/util/Map;"
      },
      {
        "name": "getSize",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "getFieldValuesMap",
        "desc": "(Ljava/lang/Object;)Ljava/util/Map;"
      },
      {
        "name": "writeAsArray",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "writeAsArrayNonContext",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "writeReference",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;I)Z"
      },
      {
        "name": "applyLabel",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;)V"
      },
      {
        "name": "getObjectFieldValues",
        "desc": "(Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "getBeanContext",
        "desc": "(I)Lcom/alibaba/fastjson/serializer/BeanContext;"
      },
      {
        "name": "writeClassName",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "isWriteAsArray",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;I)Z"
      },
      {
        "name": "writeBefore",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;C)C"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;IZ)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeBeanInfo;)V"
      },
      {
        "name": "getFieldType",
        "desc": "(I)Ljava/lang/reflect/Type;"
      },
      {
        "name": "getFieldValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;JZ)Ljava/lang/Object;"
      },
      {
        "name": "writeDirectNonContext",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      }
    ],
    "dictionary": {
      "byte": [
        44,
        91,
        93,
        123,
        125
      ],
      "char": [
        44,
        91,
        93,
        123,
        125
      ],
      "short": [
        44,
        91,
        93,
        123,
        125
      ],
      "int": [
        -1,
        0,
        1,
        44,
        91,
        93,
        123,
        125
      ],
      "long": [
        0
      ],
      "float": [
        0.0
      ],
      "double": [
        1.0
      ],
      "str": [
        "",
        "java.lang.",
        "trim"
      ]
    },
    "parents": [
      "com.alibaba.fastjson.serializer.SerializeFilterable",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.LabelFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.SerializeFilter"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.Labels",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "excludes",
        "desc": "([Ljava/lang/String;)Lcom/alibaba/fastjson/serializer/LabelFilter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "includes",
        "desc": "([Ljava/lang/String;)Lcom/alibaba/fastjson/serializer/LabelFilter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.Labels$DefaultLabelFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.LabelFilter"
    ],
    "outerClass": "com.alibaba.fastjson.serializer.Labels",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ListSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        93
      ],
      "char": [
        93
      ],
      "short": [
        93
      ],
      "int": [
        0,
        93
      ],
      "str": [
        "[]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.LongCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        12,
        76
      ],
      "char": [
        76
      ],
      "short": [
        12,
        76
      ],
      "int": [
        1,
        2,
        12,
        76
      ],
      "long": [
        -2147483648,
        2147483647
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.MapSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;IZ)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        44,
        125
      ],
      "char": [
        44,
        125
      ],
      "short": [
        44,
        125
      ],
      "int": [
        0,
        1,
        2,
        44,
        125
      ]
    },
    "parents": [
      "com.alibaba.fastjson.serializer.SerializeFilterable",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.MiscCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "writeIterator",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Lcom/alibaba/fastjson/serializer/SerializeWriter;Ljava/util/Iterator;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        13,
        16,
        17,
        91,
        93,
        125
      ],
      "char": [
        91,
        93,
        125
      ],
      "short": [
        8,
        13,
        16,
        17,
        91,
        93,
        125
      ],
      "int": [
        0,
        1,
        2,
        4,
        8,
        13,
        16,
        17,
        91,
        93,
        125
      ],
      "str": [
        "..",
        "address",
        "fastjson.deserializer.fileRelativePathSupport",
        "java.nio.file.Path",
        "net.sf.json.JSONNull",
        "port",
        "true",
        "val"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.NameFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.SerializeFilter"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ObjectArrayCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        26,
        91,
        93
      ],
      "char": [
        91,
        93
      ],
      "short": [
        8,
        16,
        26,
        91,
        93
      ],
      "int": [
        -1,
        0,
        1,
        4,
        8,
        16,
        26,
        91,
        93
      ],
      "str": [
        "[]",
        "null,",
        "null]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ObjectSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.PascalNameFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.NameFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        93
      ],
      "char": [
        93
      ],
      "short": [
        93
      ],
      "int": [
        0,
        93
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.PropertyFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.SerializeFilter"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.PropertyPreFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.SerializeFilter"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ReferenceCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SerialContext",
    "setters": [],
    "getters": [
      {
        "name": "getParent",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerialContext;",
        "field": "parent"
      },
      {
        "name": "getFieldName",
        "desc": "()Ljava/lang/Object;",
        "field": "fieldName"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;",
        "field": "object"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParent",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerialContext;"
      },
      {
        "name": "getFieldName",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParent",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerialContext;"
      },
      {
        "name": "getFieldName",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerialContext;Ljava/lang/Object;Ljava/lang/Object;II)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/StringBuilder;)V"
      }
    ],
    "dictionary": {
      "byte": [
        40,
        46,
        64,
        92
      ],
      "char": [
        40,
        46,
        64,
        92
      ],
      "short": [
        40,
        46,
        64,
        92
      ],
      "int": [
        0,
        1,
        40,
        46,
        64,
        92
      ],
      "str": [
        "$",
        ".null"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SerializeBeanInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/annotation/JSONType;Ljava/lang/String;Ljava/lang/String;I[Lcom/alibaba/fastjson/util/FieldInfo;[Lcom/alibaba/fastjson/util/FieldInfo;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SerializeConfig",
    "setters": [
      {
        "name": "setPropertyNamingStrategy",
        "desc": "(Lcom/alibaba/fastjson/PropertyNamingStrategy;)V",
        "field": "propertyNamingStrategy"
      },
      {
        "name": "setAsmEnable",
        "desc": "(Z)V",
        "field": "asm"
      },
      {
        "name": "setTypeKey",
        "desc": "(Ljava/lang/String;)V",
        "field": "typeKey"
      }
    ],
    "getters": [
      {
        "name": "getTypeKey",
        "desc": "()Ljava/lang/String;",
        "field": "typeKey"
      },
      {
        "name": "isAsmEnable",
        "desc": "()Z",
        "field": "asm"
      }
    ],
    "observers": [
      {
        "name": "isAsmEnable",
        "desc": "()Z"
      },
      {
        "name": "getTypeKey",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "createJavaBeanSerializer",
        "desc": "(Ljava/lang/Class;)Lcom/alibaba/fastjson/serializer/ObjectSerializer;"
      },
      {
        "name": "getObjectWriter",
        "desc": "(Ljava/lang/Class;)Lcom/alibaba/fastjson/serializer/ObjectSerializer;"
      },
      {
        "name": "isAsmEnable",
        "desc": "()Z"
      },
      {
        "name": "config",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/serializer/SerializerFeature;Z)V"
      },
      {
        "name": "getGlobalInstance",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "configEnumAsJavaBean",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "getTypeKey",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/reflect/Type;Lcom/alibaba/fastjson/serializer/ObjectSerializer;)Z"
      },
      {
        "name": "addFilter",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/serializer/SerializeFilter;)V"
      },
      {
        "name": "setPropertyNamingStrategy",
        "desc": "(Lcom/alibaba/fastjson/PropertyNamingStrategy;)V"
      },
      {
        "name": "clearSerializers",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(IZ)V"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "setTypeKey",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "createJavaBeanSerializer",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeBeanInfo;)Lcom/alibaba/fastjson/serializer/ObjectSerializer;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/reflect/Type;)Lcom/alibaba/fastjson/serializer/ObjectSerializer;"
      },
      {
        "name": "setAsmEnable",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "short": [
        8192
      ],
      "int": [
        -1,
        0,
        1,
        2,
        8192
      ],
      "str": [
        "com.google.common.collect.",
        "java.awt.",
        "java.time.",
        "java.util.Optional",
        "java.util.concurrent.atomic.DoubleAdder",
        "java.util.concurrent.atomic.LongAdder",
        "net.sf.json.JSONNull",
        "oracle.sql.",
        "org.springframework.aop.",
        "springfox.documentation.spring.web.json.Json",
        "trim"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SerializeFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SerializeFilterable",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getNameFilters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getContextValueFilters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getPropertyPreFilters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getBeforeFilters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getValueFilters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getLabelFilters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAfterFilters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getPropertyFilters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SerializeWriter",
    "setters": [
      {
        "name": "write",
        "desc": "([CII)V",
        "field": "count"
      },
      {
        "name": "writeStringWithDoubleQuote",
        "desc": "([CC)V",
        "field": "count"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;Z)V",
        "field": "count"
      },
      {
        "name": "writeInt",
        "desc": "(I)V",
        "field": "count"
      },
      {
        "name": "writeHex",
        "desc": "([B)V",
        "field": "count"
      },
      {
        "name": "writeFieldNameDirect",
        "desc": "(Ljava/lang/String;)V",
        "field": "count"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;II)V",
        "field": "count"
      },
      {
        "name": "writeStringWithDoubleQuote",
        "desc": "(Ljava/lang/String;C)V",
        "field": "count"
      },
      {
        "name": "writeFieldValueStringWithDoubleQuoteCheck",
        "desc": "(CLjava/lang/String;Ljava/lang/String;)V",
        "field": "count"
      },
      {
        "name": "writeByteArray",
        "desc": "([B)V",
        "field": "count"
      },
      {
        "name": "expandCapacity",
        "desc": "(I)V",
        "field": "buf"
      },
      {
        "name": "write",
        "desc": "(I)V",
        "field": "count"
      },
      {
        "name": "write",
        "desc": "(Ljava/util/List;)V",
        "field": "count"
      },
      {
        "name": "writeLong",
        "desc": "(J)V",
        "field": "count"
      },
      {
        "name": "setMaxBufSize",
        "desc": "(I)V",
        "field": "maxBufSize"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;I)V",
        "field": "count"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;J)V",
        "field": "count"
      },
      {
        "name": "config",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializerFeature;Z)V",
        "field": "features"
      },
      {
        "name": "writeFieldValueStringWithDoubleQuote",
        "desc": "(CLjava/lang/String;Ljava/lang/String;)V",
        "field": "count"
      }
    ],
    "getters": [
      {
        "name": "isSortField",
        "desc": "()Z",
        "field": "sortField"
      },
      {
        "name": "getMaxBufSize",
        "desc": "()I",
        "field": "maxBufSize"
      },
      {
        "name": "isNotWriteDefaultValue",
        "desc": "()Z",
        "field": "notWriteDefaultValue"
      },
      {
        "name": "size",
        "desc": "()I",
        "field": "count"
      }
    ],
    "observers": [
      {
        "name": "isSortField",
        "desc": "()Z"
      },
      {
        "name": "toCharArray",
        "desc": "()[C"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMaxBufSize",
        "desc": "()I"
      },
      {
        "name": "isNotWriteDefaultValue",
        "desc": "()Z"
      },
      {
        "name": "toCharArrayForSpringWebSocket",
        "desc": "()[C"
      },
      {
        "name": "getBufferLength",
        "desc": "()I"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "writeStringWithDoubleQuote",
        "desc": "([CC)V"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;Z)V"
      },
      {
        "name": "writeHex",
        "desc": "([B)V"
      },
      {
        "name": "writeToEx",
        "desc": "(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)I"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "writeEnum",
        "desc": "(Ljava/lang/Enum;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;I[Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      },
      {
        "name": "isNotWriteDefaultValue",
        "desc": "()Z"
      },
      {
        "name": "writeFloat",
        "desc": "(FZ)V"
      },
      {
        "name": "writeTo",
        "desc": "(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "writeLong",
        "desc": "(J)V"
      },
      {
        "name": "isSortField",
        "desc": "()Z"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeFieldValueStringWithDoubleQuote",
        "desc": "(CLjava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;Ljava/lang/Enum;)V"
      },
      {
        "name": "writeTo",
        "desc": "(Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "writeFieldName",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "expandCapacity",
        "desc": "(I)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;)V"
      },
      {
        "name": "isEnabled",
        "desc": "(I)Z"
      },
      {
        "name": "setMaxBufSize",
        "desc": "(I)V"
      },
      {
        "name": "toBytes",
        "desc": "(Ljava/lang/String;)[B"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;I)V"
      },
      {
        "name": "writeFieldName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;)Lcom/alibaba/fastjson/serializer/SerializeWriter;"
      },
      {
        "name": "writeString",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;C)V"
      },
      {
        "name": "toBytes",
        "desc": "(Ljava/nio/charset/Charset;)[B"
      },
      {
        "name": "writeNull",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      },
      {
        "name": "getBufferLength",
        "desc": "()I"
      },
      {
        "name": "writeFieldNameDirect",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "append",
        "desc": "(C)Lcom/alibaba/fastjson/serializer/SerializeWriter;"
      },
      {
        "name": "writeStringWithDoubleQuote",
        "desc": "(Ljava/lang/String;C)V"
      },
      {
        "name": "writeFieldValueStringWithDoubleQuoteCheck",
        "desc": "(CLjava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "writeByteArray",
        "desc": "([B)V"
      },
      {
        "name": "writeStringWithSingleQuote",
        "desc": "([C)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "getMaxBufSize",
        "desc": "()I"
      },
      {
        "name": "writeDouble",
        "desc": "(DZ)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;[Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      },
      {
        "name": "isEnabled",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializerFeature;)Z"
      },
      {
        "name": "writeNull",
        "desc": "()V"
      },
      {
        "name": "computeFeatures",
        "desc": "()V"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeString",
        "desc": "(Ljava/lang/String;C)V"
      },
      {
        "name": "config",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializerFeature;Z)V"
      },
      {
        "name": "write",
        "desc": "(Z)V"
      },
      {
        "name": "toCharArray",
        "desc": "()[C"
      },
      {
        "name": "writeInt",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;I)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "writeNull",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;J)V"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;F)V"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;D)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;II)Lcom/alibaba/fastjson/serializer/SerializeWriter;"
      },
      {
        "name": "writeFieldValue",
        "desc": "(CLjava/lang/String;Ljava/math/BigDecimal;)V"
      },
      {
        "name": "toCharArrayForSpringWebSocket",
        "desc": "()[C"
      },
      {
        "name": "writeStringWithSingleQuote",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeTo",
        "desc": "(Ljava/io/Writer;)V"
      },
      {
        "name": "writeString",
        "desc": "([C)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        8,
        9,
        10,
        12,
        13,
        32,
        34,
        39,
        40,
        41,
        47,
        48,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        68,
        70,
        92,
        93,
        108,
        126,
        127
      ],
      "char": [
        32,
        34,
        39,
        40,
        41,
        47,
        48,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        68,
        70,
        92,
        93,
        108,
        126
      ],
      "short": [
        6,
        8,
        9,
        10,
        12,
        13,
        32,
        34,
        39,
        40,
        41,
        47,
        48,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        68,
        70,
        92,
        93,
        108,
        126,
        127,
        160,
        255,
        2048,
        8192,
        8232,
        8233
      ],
      "int": [
        -2147483648,
        -1,
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        9,
        10,
        12,
        13,
        32,
        34,
        39,
        40,
        41,
        47,
        48,
        56,
        57,
        58,
        60,
        61,
        62,
        63,
        64,
        68,
        70,
        92,
        93,
        108,
        126,
        127,
        160,
        255,
        2048,
        8192,
        8232,
        8233,
        131072
      ],
      "long": [
        -9223372036854775808,
        -9007199254740991,
        0,
        1,
        21474836479,
        140758963191807,
        9007199254740991,
        5764610843043954687
      ],
      "str": [
        "",
        "-2147483648",
        "-9223372036854775808",
        ".0",
        "UTF-8",
        "[]",
        "false",
        "null",
        "null:"
      ]
    },
    "parents": [
      "java.io.Writer"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SerializerFeature",
    "setters": [],
    "getters": [
      {
        "name": "getMask",
        "desc": "()I",
        "field": "mask"
      }
    ],
    "observers": [
      {
        "name": "getMask",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "of",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)I"
      },
      {
        "name": "isEnabled",
        "desc": "(ILcom/alibaba/fastjson/serializer/SerializerFeature;)Z"
      },
      {
        "name": "getMask",
        "desc": "()I"
      },
      {
        "name": "isEnabled",
        "desc": "(IILcom/alibaba/fastjson/serializer/SerializerFeature;)Z"
      },
      {
        "name": "config",
        "desc": "(ILcom/alibaba/fastjson/serializer/SerializerFeature;Z)I"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29
      ],
      "str": [
        "BeanToArray",
        "BrowserCompatible",
        "BrowserSecure",
        "DisableCheckSpecialChar",
        "DisableCircularReferenceDetect",
        "IgnoreErrorGetter",
        "IgnoreNonFieldGetter",
        "MapSortField",
        "NotWriteDefaultValue",
        "NotWriteRootClassName",
        "PrettyFormat",
        "QuoteFieldNames",
        "SkipTransientField",
        "SortField",
        "UseISO8601DateFormat",
        "UseSingleQuotes",
        "WriteBigDecimalAsPlain",
        "WriteClassName",
        "WriteDateUseDateFormat",
        "WriteEnumUsingName",
        "WriteEnumUsingToString",
        "WriteMapNullValue",
        "WriteNonStringKeyAsString",
        "WriteNonStringValueAsString",
        "WriteNullBooleanAsFalse",
        "WriteNullListAsEmpty",
        "WriteNullNumberAsZero",
        "WriteNullStringAsEmpty",
        "WriteSlashAsSpecial",
        "WriteTabAsSpecial"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SimpleDateFormatSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
    "setters": [
      {
        "name": "setMaxLevel",
        "desc": "(I)V",
        "field": "maxLevel"
      }
    ],
    "getters": [
      {
        "name": "getClazz",
        "desc": "()Ljava/lang/Class;",
        "field": "clazz"
      },
      {
        "name": "getIncludes",
        "desc": "()Ljava/util/Set;",
        "field": "includes"
      },
      {
        "name": "getMaxLevel",
        "desc": "()I",
        "field": "maxLevel"
      },
      {
        "name": "getExcludes",
        "desc": "()Ljava/util/Set;",
        "field": "excludes"
      }
    ],
    "observers": [
      {
        "name": "getClazz",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getIncludes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getMaxLevel",
        "desc": "()I"
      },
      {
        "name": "getExcludes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "getClazz",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "setMaxLevel",
        "desc": "(I)V"
      },
      {
        "name": "getIncludes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getMaxLevel",
        "desc": "()I"
      },
      {
        "name": "getExcludes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "apply",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.PropertyPreFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.StringCodec",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;)Ljava/lang/Object;"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFastMatchToken",
        "desc": "()I"
      },
      {
        "name": "deserialze",
        "desc": "(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        2,
        4,
        16
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer",
      "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ToStringSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.serializer.ValueFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.SerializeFilter"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.config.FastJsonConfig",
    "setters": [
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V",
        "field": "dateFormat"
      },
      {
        "name": "setParserConfig",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;)V",
        "field": "parserConfig"
      },
      {
        "name": "setClassSerializeFilters",
        "desc": "(Ljava/util/Map;)V",
        "field": "classSerializeFilters"
      },
      {
        "name": "setWriteContentLength",
        "desc": "(Z)V",
        "field": "writeContentLength"
      },
      {
        "name": "setSerializeConfig",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeConfig;)V",
        "field": "serializeConfig"
      },
      {
        "name": "setSerializerFeatures",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)V",
        "field": "serializerFeatures"
      },
      {
        "name": "setCharset",
        "desc": "(Ljava/nio/charset/Charset;)V",
        "field": "charset"
      },
      {
        "name": "setSerializeFilters",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializeFilter;)V",
        "field": "serializeFilters"
      },
      {
        "name": "setFeatures",
        "desc": "([Lcom/alibaba/fastjson/parser/Feature;)V",
        "field": "features"
      }
    ],
    "getters": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;",
        "field": "charset"
      },
      {
        "name": "getClassSerializeFilters",
        "desc": "()Ljava/util/Map;",
        "field": "classSerializeFilters"
      },
      {
        "name": "isWriteContentLength",
        "desc": "()Z",
        "field": "writeContentLength"
      },
      {
        "name": "getSerializeConfig",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;",
        "field": "serializeConfig"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/parser/Feature;",
        "field": "features"
      },
      {
        "name": "getSerializerFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;",
        "field": "serializerFeatures"
      },
      {
        "name": "getParserConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;",
        "field": "parserConfig"
      },
      {
        "name": "getSerializeFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;",
        "field": "serializeFilters"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;",
        "field": "dateFormat"
      }
    ],
    "observers": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "getClassSerializeFilters",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "isWriteContentLength",
        "desc": "()Z"
      },
      {
        "name": "getSerializeConfig",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/parser/Feature;"
      },
      {
        "name": "getSerializerFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      },
      {
        "name": "getParserConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;"
      },
      {
        "name": "getSerializeFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "getClassSerializeFilters",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "isWriteContentLength",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getSerializeConfig",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;"
      },
      {
        "name": "setParserConfig",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;)V"
      },
      {
        "name": "setWriteContentLength",
        "desc": "(Z)V"
      },
      {
        "name": "setSerializeConfig",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeConfig;)V"
      },
      {
        "name": "getParserConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;"
      },
      {
        "name": "setCharset",
        "desc": "(Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "getSerializeFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setSerializeFilters",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializeFilter;)V"
      },
      {
        "name": "setFeatures",
        "desc": "([Lcom/alibaba/fastjson/parser/Feature;)V"
      },
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/parser/Feature;"
      },
      {
        "name": "setClassSerializeFilters",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "getSerializerFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      },
      {
        "name": "setSerializerFeatures",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.hsf.HSFJSONUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "parseInvocationArguments",
        "desc": "(Ljava/lang/String;Lcom/alibaba/fastjson/support/hsf/MethodLocator;)[Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        -2,
        12,
        14,
        44,
        93
      ],
      "char": [
        44,
        93
      ],
      "short": [
        -2,
        12,
        14,
        44,
        93,
        1024
      ],
      "int": [
        -2,
        0,
        12,
        14,
        44,
        93,
        1024
      ],
      "str": [
        "\"@type\":",
        "\"argsObjs\"",
        "com.alibaba.fastjson.JSONObject"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.hsf.MethodLocator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.jaxrs.FastJsonAutoDiscoverable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "configure",
        "desc": "(Ljavax/ws/rs/core/FeatureContext;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.glassfish.jersey.internal.spi.AutoDiscoverable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.jaxrs.FastJsonFeature",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "configure",
        "desc": "(Ljavax/ws/rs/core/FeatureContext;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "javax.ws.rs.core.Feature"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.jaxrs.FastJsonProvider",
    "setters": [
      {
        "name": "setPretty",
        "desc": "(Z)Lcom/alibaba/fastjson/support/jaxrs/FastJsonProvider;",
        "field": "pretty"
      },
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V",
        "field": "fastJsonConfig"
      }
    ],
    "getters": [
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;",
        "field": "fastJsonConfig"
      }
    ],
    "observers": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "getFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;"
      },
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      }
    ],
    "testableMethods": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "setPretty",
        "desc": "(Z)Lcom/alibaba/fastjson/support/jaxrs/FastJsonProvider;"
      },
      {
        "name": "writeTo",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/OutputStream;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Z"
      },
      {
        "name": "isWriteable",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)Z"
      },
      {
        "name": "isReadable",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)Z"
      },
      {
        "name": "setCharset",
        "desc": "(Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setFeatures",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      },
      {
        "name": "getSize",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)J"
      },
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;"
      },
      {
        "name": "hasMatchingMediaType",
        "desc": "(Ljavax/ws/rs/core/MediaType;)Z"
      },
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "setFilters",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializeFilter;)V"
      },
      {
        "name": "locateConfigProvider",
        "desc": "(Ljava/lang/Class;Ljavax/ws/rs/core/MediaType;)Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "readFrom",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/InputStream;)Ljava/lang/Object;"
      },
      {
        "name": "isValidType",
        "desc": "(Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)Z"
      },
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        3,
        4
      ],
      "str": [
        "+json",
        "UTF-8",
        "javascript",
        "json",
        "x-javascript",
        "x-json",
        "x-www-form-urlencoded"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.ws.rs.ext.MessageBodyReader",
      "javax.ws.rs.ext.MessageBodyWriter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.retrofit.Retrofit2ConverterFactory",
    "setters": [
      {
        "name": "setParserConfig",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;",
        "field": "parserConfig"
      },
      {
        "name": "setParserFeatures",
        "desc": "([Lcom/alibaba/fastjson/parser/Feature;)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;",
        "field": "features"
      },
      {
        "name": "setSerializeConfig",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeConfig;)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;",
        "field": "serializeConfig"
      },
      {
        "name": "setParserFeatureValues",
        "desc": "(I)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;",
        "field": "featureValues"
      },
      {
        "name": "setSerializerFeatures",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;",
        "field": "serializerFeatures"
      }
    ],
    "getters": [
      {
        "name": "getParserFeatureValues",
        "desc": "()I",
        "field": "featureValues"
      },
      {
        "name": "getSerializerFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;",
        "field": "serializerFeatures"
      },
      {
        "name": "getParserConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;",
        "field": "parserConfig"
      },
      {
        "name": "getParserFeatures",
        "desc": "()[Lcom/alibaba/fastjson/parser/Feature;",
        "field": "features"
      },
      {
        "name": "getSerializeConfig",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;",
        "field": "serializeConfig"
      }
    ],
    "observers": [
      {
        "name": "getSerializeConfig",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;"
      },
      {
        "name": "getParserFeatureValues",
        "desc": "()I"
      },
      {
        "name": "getSerializerFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      },
      {
        "name": "getParserConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;"
      },
      {
        "name": "getParserFeatures",
        "desc": "()[Lcom/alibaba/fastjson/parser/Feature;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getSerializeConfig",
        "desc": "()Lcom/alibaba/fastjson/serializer/SerializeConfig;"
      },
      {
        "name": "requestBodyConverter",
        "desc": "(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;"
      },
      {
        "name": "setParserFeatures",
        "desc": "([Lcom/alibaba/fastjson/parser/Feature;)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;"
      },
      {
        "name": "getParserConfig",
        "desc": "()Lcom/alibaba/fastjson/parser/ParserConfig;"
      },
      {
        "name": "getParserFeatures",
        "desc": "()[Lcom/alibaba/fastjson/parser/Feature;"
      },
      {
        "name": "responseBodyConverter",
        "desc": "(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;"
      },
      {
        "name": "setParserConfig",
        "desc": "(Lcom/alibaba/fastjson/parser/ParserConfig;)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;"
      },
      {
        "name": "getParserFeatureValues",
        "desc": "()I"
      },
      {
        "name": "getSerializerFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      },
      {
        "name": "setSerializeConfig",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeConfig;)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;"
      },
      {
        "name": "setParserFeatureValues",
        "desc": "(I)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;"
      },
      {
        "name": "setSerializerFeatures",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "retrofit2.Converter$Factory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.retrofit.Retrofit2ConverterFactory$RequestBodyConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;)Lokhttp3/RequestBody;"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "retrofit2.Converter"
    ],
    "outerClass": "com.alibaba.fastjson.support.retrofit.Retrofit2ConverterFactory",
    "access": 16,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.retrofit.Retrofit2ConverterFactory$ResponseBodyConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Lokhttp3/ResponseBody;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/support/retrofit/Retrofit2ConverterFactory;Ljava/lang/reflect/Type;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "retrofit2.Converter"
    ],
    "outerClass": "com.alibaba.fastjson.support.retrofit.Retrofit2ConverterFactory",
    "access": 16,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonContainer",
    "setters": [
      {
        "name": "setFilters",
        "desc": "(Lcom/alibaba/fastjson/support/spring/PropertyPreFilters;)V",
        "field": "filters"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V",
        "field": "value"
      }
    ],
    "getters": [
      {
        "name": "getFilters",
        "desc": "()Lcom/alibaba/fastjson/support/spring/PropertyPreFilters;",
        "field": "filters"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "getFilters",
        "desc": "()Lcom/alibaba/fastjson/support/spring/PropertyPreFilters;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getFilters",
        "desc": "()Lcom/alibaba/fastjson/support/spring/PropertyPreFilters;"
      },
      {
        "name": "setFilters",
        "desc": "(Lcom/alibaba/fastjson/support/spring/PropertyPreFilters;)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter",
    "setters": [
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V",
        "field": "fastJsonConfig"
      }
    ],
    "getters": [
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;",
        "field": "fastJsonConfig"
      }
    ],
    "observers": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "getFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;"
      },
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      }
    ],
    "testableMethods": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "read",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;"
      },
      {
        "name": "addSerializeFilter",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeFilter;)V"
      },
      {
        "name": "canRead",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeInternal",
        "desc": "(Ljava/lang/Object;Lorg/springframework/http/HttpOutputMessage;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V"
      },
      {
        "name": "setCharset",
        "desc": "(Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "supports",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setFeatures",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      },
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "canWrite",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z"
      },
      {
        "name": "getFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;"
      },
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V"
      },
      {
        "name": "setFilters",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializeFilter;)V"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      },
      {
        "name": "readInternal",
        "desc": "(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "UTF-8",
        "application",
        "com.fasterxml.jackson.databind.node.ObjectNode",
        "javascript"
      ]
    },
    "parents": [
      "org.springframework.http.converter.AbstractHttpMessageConverter",
      "org.springframework.http.converter.GenericHttpMessageConverter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter$Spring4TypeResolvableHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "canWrite",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z"
      },
      {
        "name": "read",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;"
      },
      {
        "name": "canRead",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeInternal",
        "desc": "(Ljava/lang/Object;Lorg/springframework/http/HttpOutputMessage;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V"
      },
      {
        "name": "supports",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "readInternal",
        "desc": "(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonJsonView",
    "setters": [
      {
        "name": "setJsonpParameterNames",
        "desc": "(Ljava/util/Set;)V",
        "field": "jsonpParameterNames"
      },
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V",
        "field": "fastJsonConfig"
      },
      {
        "name": "setDisableCaching",
        "desc": "(Z)V",
        "field": "disableCaching"
      },
      {
        "name": "setUpdateContentLength",
        "desc": "(Z)V",
        "field": "updateContentLength"
      },
      {
        "name": "setExtractValueFromSingleKeyModel",
        "desc": "(Z)V",
        "field": "extractValueFromSingleKeyModel"
      },
      {
        "name": "setRenderedAttributes",
        "desc": "(Ljava/util/Set;)V",
        "field": "renderedAttributes"
      }
    ],
    "getters": [
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;",
        "field": "fastJsonConfig"
      },
      {
        "name": "isExtractValueFromSingleKeyModel",
        "desc": "()Z",
        "field": "extractValueFromSingleKeyModel"
      }
    ],
    "observers": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "getFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;"
      },
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      },
      {
        "name": "isExtractValueFromSingleKeyModel",
        "desc": "()Z"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      }
    ],
    "testableMethods": [
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "setJsonpParameterNames",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setUpdateContentLength",
        "desc": "(Z)V"
      },
      {
        "name": "isExtractValueFromSingleKeyModel",
        "desc": "()Z"
      },
      {
        "name": "setExtractValueFromSingleKeyModel",
        "desc": "(Z)V"
      },
      {
        "name": "setCharset",
        "desc": "(Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "getDateFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setFeatures",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      },
      {
        "name": "renderMergedOutputModel",
        "desc": "(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V"
      },
      {
        "name": "setDateFormat",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFilters",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializeFilter;"
      },
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V"
      },
      {
        "name": "setFilters",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializeFilter;)V"
      },
      {
        "name": "setResponseContentType",
        "desc": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V"
      },
      {
        "name": "setDisableCaching",
        "desc": "(Z)V"
      },
      {
        "name": "setSerializerFeature",
        "desc": "([Lcom/alibaba/fastjson/serializer/SerializerFeature;)V"
      },
      {
        "name": "prepareResponse",
        "desc": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V"
      },
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      },
      {
        "name": "setRenderedAttributes",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "filterModel",
        "desc": "(Ljava/util/Map;)Ljava/lang/Object;"
      },
      {
        "name": "getFeatures",
        "desc": "()[Lcom/alibaba/fastjson/serializer/SerializerFeature;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        1
      ],
      "str": [
        "Expires",
        "UTF-8",
        "[0-9A-Za-z_\\.]*",
        "application/json;charset=UTF-8",
        "callback",
        "jsonp"
      ]
    },
    "parents": [
      "org.springframework.web.servlet.view.AbstractView"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonRedisSerializer",
    "setters": [
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V",
        "field": "fastJsonConfig"
      }
    ],
    "getters": [
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;",
        "field": "fastJsonConfig"
      }
    ],
    "observers": [
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      }
    ],
    "testableMethods": [
      {
        "name": "deserialize",
        "desc": "([B)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V"
      },
      {
        "name": "serialize",
        "desc": "(Ljava/lang/Object;)[B"
      },
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.data.redis.serializer.RedisSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonViewResponseBodyAdvice",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "supports",
        "desc": "(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "beforeBodyWriteInternal",
        "desc": "(Lcom/alibaba/fastjson/support/spring/FastJsonContainer;Lorg/springframework/http/MediaType;Lorg/springframework/core/MethodParameter;Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V"
      },
      {
        "name": "beforeBodyWrite",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/http/MediaType;Ljava/lang/Class;Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)Lcom/alibaba/fastjson/support/spring/FastJsonContainer;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonpHttpMessageConverter4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "canWrite",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z"
      },
      {
        "name": "read",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;"
      },
      {
        "name": "canRead",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeInternal",
        "desc": "(Ljava/lang/Object;Lorg/springframework/http/HttpOutputMessage;)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V"
      },
      {
        "name": "supports",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "readInternal",
        "desc": "(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastJsonpResponseBodyAdvice",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "supports",
        "desc": "(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Z"
      },
      {
        "name": "getContentType",
        "desc": "(Lorg/springframework/http/MediaType;Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)Lorg/springframework/http/MediaType;"
      },
      {
        "name": "beforeBodyWrite",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/http/MediaType;Ljava/lang/Class;Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "isValidJsonpQueryParam",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getOrCreateContainer",
        "desc": "(Ljava/lang/Object;)Lcom/alibaba/fastjson/support/spring/MappingFastJsonValue;"
      },
      {
        "name": "beforeBodyWriteInternal",
        "desc": "(Lcom/alibaba/fastjson/support/spring/MappingFastJsonValue;Lorg/springframework/http/MediaType;Lorg/springframework/core/MethodParameter;Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "application",
        "callback",
        "javascript",
        "jsonp"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.FastjsonSockJsMessageCodec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "decode",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "applyJsonQuoting",
        "desc": "(Ljava/lang/String;)[C"
      },
      {
        "name": "decodeInputStream",
        "desc": "(Ljava/io/InputStream;)[Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.web.socket.sockjs.frame.AbstractSockJsMessageCodec"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.GenericFastJsonRedisSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "deserialize",
        "desc": "([B)Ljava/lang/Object;"
      },
      {
        "name": "serialize",
        "desc": "(Ljava/lang/Object;)[B"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.data.redis.serializer.RedisSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.JSONPResponseBodyAdvice",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "supports",
        "desc": "(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Z"
      },
      {
        "name": "getContentType",
        "desc": "(Lorg/springframework/http/MediaType;Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)Lorg/springframework/http/MediaType;"
      },
      {
        "name": "beforeBodyWriteInternal",
        "desc": "(Lcom/alibaba/fastjson/JSONPObject;Lorg/springframework/http/MediaType;Lorg/springframework/core/MethodParameter;Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V"
      },
      {
        "name": "beforeBodyWrite",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/http/MediaType;Ljava/lang/Class;Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.MappingFastJsonValue",
    "setters": [
      {
        "name": "setJsonpFunction",
        "desc": "(Ljava/lang/String;)V",
        "field": "jsonpFunction"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V",
        "field": "value"
      }
    ],
    "getters": [
      {
        "name": "getJsonpFunction",
        "desc": "()Ljava/lang/String;",
        "field": "jsonpFunction"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "getJsonpFunction",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "setJsonpFunction",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getJsonpFunction",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        41
      ],
      "char": [
        41
      ],
      "short": [
        41
      ],
      "int": [
        41
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.JSONSerializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.PropertyPreFilters",
    "setters": [
      {
        "name": "setFilters",
        "desc": "(Ljava/util/List;)V",
        "field": "filters"
      }
    ],
    "getters": [
      {
        "name": "getFilters",
        "desc": "()Ljava/util/List;",
        "field": "filters"
      }
    ],
    "observers": [
      {
        "name": "toFilters",
        "desc": "()[Lcom/alibaba/fastjson/support/spring/PropertyPreFilters$MySimplePropertyPreFilter;"
      },
      {
        "name": "getFilters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "addFilter",
        "desc": "()Lcom/alibaba/fastjson/support/spring/PropertyPreFilters$MySimplePropertyPreFilter;"
      },
      {
        "name": "toFilters",
        "desc": "()[Lcom/alibaba/fastjson/support/spring/PropertyPreFilters$MySimplePropertyPreFilter;"
      },
      {
        "name": "addFilter",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;)Lcom/alibaba/fastjson/support/spring/PropertyPreFilters$MySimplePropertyPreFilter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addFilter",
        "desc": "([Ljava/lang/String;)Lcom/alibaba/fastjson/support/spring/PropertyPreFilters$MySimplePropertyPreFilter;"
      },
      {
        "name": "getFilters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "setFilters",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.PropertyPreFilters$MySimplePropertyPreFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/support/spring/PropertyPreFilters;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/support/spring/PropertyPreFilters;Ljava/lang/Class;[Ljava/lang/String;)V"
      },
      {
        "name": "addExcludes",
        "desc": "([Ljava/lang/String;)Lcom/alibaba/fastjson/support/spring/PropertyPreFilters$MySimplePropertyPreFilter;"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/alibaba/fastjson/support/spring/PropertyPreFilters;[Ljava/lang/String;)V"
      },
      {
        "name": "addIncludes",
        "desc": "([Ljava/lang/String;)Lcom/alibaba/fastjson/support/spring/PropertyPreFilters$MySimplePropertyPreFilter;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "com.alibaba.fastjson.serializer.SimplePropertyPreFilter"
    ],
    "outerClass": "com.alibaba.fastjson.support.spring.PropertyPreFilters",
    "access": 1,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.annotation.FastJsonFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.annotation.FastJsonView",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.annotation.ResponseJSONP",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.spring.messaging.MappingFastJsonMessageConverter",
    "setters": [
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V",
        "field": "fastJsonConfig"
      }
    ],
    "getters": [
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;",
        "field": "fastJsonConfig"
      }
    ],
    "observers": [
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      }
    ],
    "testableMethods": [
      {
        "name": "convertToInternal",
        "desc": "(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "canConvertTo",
        "desc": "(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Z"
      },
      {
        "name": "setFastJsonConfig",
        "desc": "(Lcom/alibaba/fastjson/support/config/FastJsonConfig;)V"
      },
      {
        "name": "canConvertFrom",
        "desc": "(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convertFromInternal",
        "desc": "(Lorg/springframework/messaging/Message;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getFastJsonConfig",
        "desc": "()Lcom/alibaba/fastjson/support/config/FastJsonConfig;"
      },
      {
        "name": "supports",
        "desc": "(Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "UTF-8",
        "application",
        "json"
      ]
    },
    "parents": [
      "org.springframework.messaging.converter.AbstractMessageConverter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.support.springfox.SwaggerJsonSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.fastjson.serializer.ObjectSerializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.ASMClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getParentClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "loadClass",
        "desc": "(Ljava/lang/String;Z)Ljava/lang/Class;"
      },
      {
        "name": "isExternalClass",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "defineClassPublic",
        "desc": "(Ljava/lang/String;[BII)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.ClassLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.ASMClassLoader$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.ASMUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "type",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getMethodType",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isAndroid",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "checkName",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "lookupParameterNames",
        "desc": "(Ljava/lang/reflect/AccessibleObject;)[Ljava/lang/String;"
      },
      {
        "name": "desc",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "desc",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "getPrimitiveLetter",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        127
      ],
      "char": [
        46
      ],
      "short": [
        46,
        127
      ],
      "int": [
        0,
        1,
        4,
        46,
        127
      ],
      "str": [
        "B",
        "C",
        "D",
        "F",
        "I",
        "J",
        "S",
        "V",
        "Z",
        "dalvik",
        "java.vm.name",
        "lemur"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "setters": [
      {
        "name": "put",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",
        "field": "modCount"
      }
    ],
    "getters": [
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "resize",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "createEntry",
        "desc": "(ILjava/lang/Object;Ljava/lang/Object;I)V"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(IF)V"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "init",
        "desc": "()V"
      },
      {
        "name": "newKeyIterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "removeMapping",
        "desc": "(Ljava/lang/Object;)Lcom/alibaba/fastjson/util/AntiCollisionHashMap$Entry;"
      },
      {
        "name": "values",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newEntryIterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getEntry",
        "desc": "(Ljava/lang/Object;)Lcom/alibaba/fastjson/util/AntiCollisionHashMap$Entry;"
      },
      {
        "name": "transfer",
        "desc": "([Lcom/alibaba/fastjson/util/AntiCollisionHashMap$Entry;)V"
      },
      {
        "name": "putAll",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "loadFactor",
        "desc": "()F"
      },
      {
        "name": "entrySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "hash",
        "desc": "(I)I"
      },
      {
        "name": "removeEntryForKey",
        "desc": "(Ljava/lang/Object;)Lcom/alibaba/fastjson/util/AntiCollisionHashMap$Entry;"
      },
      {
        "name": "addEntry",
        "desc": "(ILjava/lang/Object;Ljava/lang/Object;I)V"
      },
      {
        "name": "keySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "newValueIterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "containsKey",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "indexFor",
        "desc": "(II)I"
      },
      {
        "name": "containsValue",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        12,
        16
      ],
      "short": [
        12,
        16
      ],
      "int": [
        0,
        1,
        2,
        12,
        16,
        99999,
        1073741824,
        2147483647
      ],
      "float": [
        0.0,
        0.75,
        1.0
      ]
    },
    "parents": [
      "java.util.AbstractMap",
      "java.util.Map",
      "java.lang.Cloneable",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$Entry",
    "setters": [
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "getters": [
      {
        "name": "getKey",
        "desc": "()Ljava/lang/Object;",
        "field": "key"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "recordRemoval",
        "desc": "(Lcom/alibaba/fastjson/util/AntiCollisionHashMap;)V"
      },
      {
        "name": "recordAccess",
        "desc": "(Lcom/alibaba/fastjson/util/AntiCollisionHashMap;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/Object;Ljava/lang/Object;Lcom/alibaba/fastjson/util/AntiCollisionHashMap$Entry;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Map$Entry"
    ],
    "outerClass": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$EntryIterator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.util.AntiCollisionHashMap$HashIterator"
    ],
    "outerClass": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$EntrySet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.AbstractSet"
    ],
    "outerClass": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$HashIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "access": 1026,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$KeyIterator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.util.AntiCollisionHashMap$HashIterator"
    ],
    "outerClass": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$KeySet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.AbstractSet"
    ],
    "outerClass": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$ValueIterator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "com.alibaba.fastjson.util.AntiCollisionHashMap$HashIterator"
    ],
    "outerClass": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.AntiCollisionHashMap$Values",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.AbstractCollection"
    ],
    "outerClass": "com.alibaba.fastjson.util.AntiCollisionHashMap",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.Base64",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "decodeFast",
        "desc": "(Ljava/lang/String;II)[B"
      },
      {
        "name": "decodeFast",
        "desc": "(Ljava/lang/String;)[B"
      },
      {
        "name": "decodeFast",
        "desc": "([CII)[B"
      }
    ],
    "dictionary": {
      "byte": [
        13,
        16,
        19,
        61,
        76
      ],
      "char": [
        61,
        76
      ],
      "short": [
        13,
        16,
        19,
        61,
        76,
        255,
        256
      ],
      "int": [
        0,
        1,
        3,
        13,
        16,
        19,
        61,
        76,
        255,
        256
      ],
      "str": [
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.FieldInfo",
    "setters": [],
    "getters": [
      {
        "name": "getFormat",
        "desc": "()Ljava/lang/String;",
        "field": "format"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotation",
        "desc": "()Lcom/alibaba/fastjson/annotation/JSONField;"
      },
      {
        "name": "getDeclaredClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getMember",
        "desc": "()Ljava/lang/reflect/Member;"
      }
    ],
    "testableMethods": [
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "genFieldNameChars",
        "desc": "()[C"
      },
      {
        "name": "getFormat",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "compareTo",
        "desc": "(Lcom/alibaba/fastjson/util/FieldInfo;)I"
      },
      {
        "name": "setAccessible",
        "desc": "()V"
      },
      {
        "name": "getDeclaredClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/lang/reflect/Field;III)V"
      },
      {
        "name": "getAnnation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/reflect/Field;Ljava/lang/Class;Ljava/lang/reflect/Type;IIILcom/alibaba/fastjson/annotation/JSONField;Lcom/alibaba/fastjson/annotation/JSONField;Ljava/lang/String;)V"
      },
      {
        "name": "getAnnotation",
        "desc": "()Lcom/alibaba/fastjson/annotation/JSONField;"
      },
      {
        "name": "getFieldType",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "getMember",
        "desc": "()Ljava/lang/reflect/Member;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        2,
        3
      ],
      "str": [
        "",
        "java."
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.IOUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getStringProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "decodeBase64",
        "desc": "([CII)[B"
      },
      {
        "name": "decodeBase64",
        "desc": "(Ljava/lang/String;)[B"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "decodeUTF8",
        "desc": "([BII[C)I"
      },
      {
        "name": "getChars",
        "desc": "(BI[C)V"
      },
      {
        "name": "getChars",
        "desc": "(JI[C)V"
      },
      {
        "name": "isValidJsonpQueryParam",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "stringSize",
        "desc": "(J)I"
      },
      {
        "name": "stringSize",
        "desc": "(I)I"
      },
      {
        "name": "encodeUTF8",
        "desc": "([CII[B)I"
      },
      {
        "name": "close",
        "desc": "(Ljava/io/Closeable;)V"
      },
      {
        "name": "firstIdentifier",
        "desc": "(C)Z"
      },
      {
        "name": "readAll",
        "desc": "(Ljava/io/Reader;)Ljava/lang/String;"
      },
      {
        "name": "isIdent",
        "desc": "(C)Z"
      },
      {
        "name": "decodeBase64",
        "desc": "(Ljava/lang/String;II)[B"
      },
      {
        "name": "decode",
        "desc": "(Ljava/nio/charset/CharsetDecoder;Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)V"
      },
      {
        "name": "loadPropertiesFromFile",
        "desc": "()V"
      },
      {
        "name": "getChars",
        "desc": "(II[C)V"
      }
    ],
    "dictionary": {
      "byte": [
        -32,
        -2,
        10,
        13,
        14,
        15,
        16,
        19,
        30,
        31,
        35,
        36,
        46,
        48,
        57,
        61,
        65,
        70,
        76,
        90,
        92,
        93,
        95,
        96,
        97,
        99,
        100,
        122,
        127
      ],
      "char": [
        35,
        36,
        46,
        48,
        57,
        61,
        65,
        70,
        76,
        90,
        92,
        93,
        95,
        96,
        97,
        99,
        100,
        122
      ],
      "short": [
        -32,
        -2,
        10,
        13,
        14,
        15,
        16,
        19,
        30,
        31,
        35,
        36,
        46,
        48,
        57,
        61,
        65,
        70,
        76,
        90,
        92,
        93,
        95,
        96,
        97,
        99,
        100,
        122,
        127,
        128,
        160,
        161,
        192,
        224,
        255,
        256,
        2048
      ],
      "int": [
        -123008,
        -32,
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        10,
        13,
        14,
        15,
        16,
        19,
        30,
        31,
        35,
        36,
        46,
        48,
        57,
        61,
        65,
        70,
        76,
        90,
        92,
        93,
        95,
        96,
        97,
        99,
        100,
        122,
        127,
        128,
        160,
        161,
        192,
        224,
        255,
        256,
        2048,
        55296,
        57344,
        65536
      ],
      "long": [
        0,
        10,
        2147483647
      ],
      "str": [
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        "UTF-8"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.IOUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.IdentityHashMap",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "short": [
        8192
      ],
      "int": [
        0,
        1,
        8192
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.IdentityHashMap$Entry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ILcom/alibaba/fastjson/util/IdentityHashMap$Entry;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.util.IdentityHashMap",
    "access": 28,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.JavaBeanInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getBuilderClass",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/annotation/JSONType;)Ljava/lang/Class;"
      },
      {
        "name": "build",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Type;Lcom/alibaba/fastjson/PropertyNamingStrategy;ZZ)Lcom/alibaba/fastjson/util/JavaBeanInfo;"
      },
      {
        "name": "getBuilderClass",
        "desc": "(Lcom/alibaba/fastjson/annotation/JSONType;)Ljava/lang/Class;"
      },
      {
        "name": "build",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Type;Lcom/alibaba/fastjson/PropertyNamingStrategy;)Lcom/alibaba/fastjson/util/JavaBeanInfo;"
      },
      {
        "name": "getCreatorConstructor",
        "desc": "([Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getDefaultConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Lcom/alibaba/fastjson/annotation/JSONType;Ljava/util/List;)V"
      },
      {
        "name": "add",
        "desc": "(Ljava/util/List;Lcom/alibaba/fastjson/util/FieldInfo;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        95,
        102
      ],
      "char": [
        95,
        102
      ],
      "short": [
        8,
        16,
        95,
        102,
        512
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        16,
        95,
        102,
        512
      ],
      "str": [
        "get",
        "javax.servlet.http.Cookie",
        "multi-JSONCreator",
        "org.springframework.security.core.authority.SimpleGrantedAuthority",
        "org.springframework.security.core.userdetails.User",
        "org.springframework.security.web.authentication.WebAuthenticationDetails",
        "org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken",
        "org.springframework.security.web.savedrequest.DefaultSavedRequest",
        "password",
        "set"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.ParameterizedTypeImpl",
    "setters": [],
    "getters": [
      {
        "name": "getOwnerType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "ownerType"
      },
      {
        "name": "getActualTypeArguments",
        "desc": "()[Ljava/lang/reflect/Type;",
        "field": "actualTypeArguments"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "rawType"
      }
    ],
    "observers": [
      {
        "name": "getOwnerType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getActualTypeArguments",
        "desc": "()[Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V"
      },
      {
        "name": "getOwnerType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getActualTypeArguments",
        "desc": "()[Ljava/lang/reflect/Type;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.ParameterizedType"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.ServiceLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "load",
        "desc": "(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Set;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "load",
        "desc": "(Ljava/net/URL;Ljava/util/Set;)V"
      }
    ],
    "dictionary": {
      "byte": [
        35
      ],
      "char": [
        35
      ],
      "short": [
        35
      ],
      "int": [
        35
      ],
      "str": [
        "META-INF/services/",
        "utf-8"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.ThreadLocalCache",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clearChars",
        "desc": "()V"
      },
      {
        "name": "getChars",
        "desc": "(I)[C"
      },
      {
        "name": "getUTF8Decoder",
        "desc": "()Ljava/nio/charset/CharsetDecoder;"
      },
      {
        "name": "clearBytes",
        "desc": "()V"
      },
      {
        "name": "getBytes",
        "desc": "(I)[B"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        17
      ],
      "short": [
        10,
        17
      ],
      "int": [
        0,
        1,
        10,
        17,
        131072
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.TypeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "buildBeanInfo",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;Lcom/alibaba/fastjson/PropertyNamingStrategy;)Lcom/alibaba/fastjson/serializer/SerializeBeanInfo;"
      },
      {
        "name": "getSuperMethodAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Method;)Lcom/alibaba/fastjson/annotation/JSONField;"
      },
      {
        "name": "castToChar",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Character;"
      },
      {
        "name": "isPath",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "isNumber",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "computeGettersWithFieldBase",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;ZLcom/alibaba/fastjson/PropertyNamingStrategy;)Ljava/util/List;"
      },
      {
        "name": "getCollectionItemType",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "setAccessible",
        "desc": "(Ljava/lang/reflect/AccessibleObject;)V"
      },
      {
        "name": "unwrapOptional",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "castToFloat",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Float;"
      },
      {
        "name": "castToByte",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Byte;"
      },
      {
        "name": "createCollection",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/util/Collection;"
      },
      {
        "name": "getCollectionItemClass",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/Class;"
      },
      {
        "name": "castToDate",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "cast",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/ParameterizedType;Lcom/alibaba/fastjson/parser/ParserConfig;)Ljava/lang/Object;"
      },
      {
        "name": "buildBeanInfo",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;Lcom/alibaba/fastjson/PropertyNamingStrategy;Z)Lcom/alibaba/fastjson/serializer/SerializeBeanInfo;"
      },
      {
        "name": "loadClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "loadClass",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/lang/Class;"
      },
      {
        "name": "isGenericParamType",
        "desc": "(Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "getKoltinConstructorParameters",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "computeGetters",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;)Ljava/util/List;"
      },
      {
        "name": "isAnnotationPresentOneToMany",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "castToBoolean",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Boolean;"
      },
      {
        "name": "castToDouble",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Double;"
      },
      {
        "name": "castToJavaBean",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "castToInt",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Integer;"
      },
      {
        "name": "isKotlin",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getRawClass",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/Class;"
      },
      {
        "name": "getSerializeFeatures",
        "desc": "(Ljava/lang/Class;)I"
      },
      {
        "name": "castToDate",
        "desc": "(Ljava/lang/Object;)Ljava/util/Date;"
      },
      {
        "name": "cast",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Lcom/alibaba/fastjson/parser/ParserConfig;)Ljava/lang/Object;"
      },
      {
        "name": "computeGetters",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;Z)Ljava/util/List;"
      },
      {
        "name": "computeGetters",
        "desc": "(Ljava/lang/Class;Lcom/alibaba/fastjson/annotation/JSONType;Ljava/util/Map;Ljava/util/Map;ZLcom/alibaba/fastjson/PropertyNamingStrategy;)Ljava/util/List;"
      },
      {
        "name": "castToBytes",
        "desc": "(Ljava/lang/Object;)[B"
      },
      {
        "name": "cast",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/alibaba/fastjson/parser/ParserConfig;)Ljava/lang/Object;"
      },
      {
        "name": "getClassFromMapping",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "isProxy",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "isTransient",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "getParserFeatures",
        "desc": "(Ljava/lang/Class;)I"
      },
      {
        "name": "getField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/reflect/Field;)Ljava/lang/reflect/Field;"
      },
      {
        "name": "isAnnotationPresentManyToMany",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "castToSqlDate",
        "desc": "(Ljava/lang/Object;)Ljava/sql/Date;"
      },
      {
        "name": "castToSqlTime",
        "desc": "(Ljava/lang/Object;)Ljava/sql/Time;"
      },
      {
        "name": "fnv1a_64_lower",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "castToEnum",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Lcom/alibaba/fastjson/parser/ParserConfig;)Ljava/lang/Object;"
      },
      {
        "name": "castToLong",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Long;"
      },
      {
        "name": "isHibernateInitialized",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "clearClassMapping",
        "desc": "()V"
      },
      {
        "name": "castToBigDecimal",
        "desc": "(Ljava/lang/Object;)Ljava/math/BigDecimal;"
      },
      {
        "name": "castToJavaBean",
        "desc": "(Ljava/util/Map;Ljava/lang/Class;Lcom/alibaba/fastjson/parser/ParserConfig;)Ljava/lang/Object;"
      },
      {
        "name": "checkPrimitiveArray",
        "desc": "(Ljava/lang/reflect/GenericArrayType;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "castToShort",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Short;"
      },
      {
        "name": "fnv1a_64",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "getGenericParamType",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/Class;"
      },
      {
        "name": "loadClass",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;"
      },
      {
        "name": "toLocale",
        "desc": "(Ljava/lang/String;)Ljava/util/Locale;"
      },
      {
        "name": "decapitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "castToTimestamp",
        "desc": "(Ljava/lang/Object;)Ljava/sql/Timestamp;"
      },
      {
        "name": "castToBigInteger",
        "desc": "(Ljava/lang/Object;)Ljava/math/BigInteger;"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "castToString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "getKoltinConstructor",
        "desc": "([Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        10,
        16,
        22,
        26,
        28,
        29,
        43,
        44,
        45,
        48,
        57,
        58,
        65,
        90,
        91,
        95,
        97,
        102,
        122
      ],
      "char": [
        43,
        44,
        45,
        48,
        57,
        58,
        65,
        90,
        91,
        95,
        97,
        102,
        122
      ],
      "short": [
        7,
        10,
        16,
        22,
        26,
        28,
        29,
        43,
        44,
        45,
        48,
        57,
        58,
        65,
        90,
        91,
        95,
        97,
        102,
        122,
        512
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        10,
        16,
        22,
        26,
        28,
        29,
        43,
        44,
        45,
        48,
        57,
        58,
        65,
        90,
        91,
        95,
        97,
        102,
        122,
        512
      ],
      "long": [
        -1,
        0
      ],
      "float": [
        0.0,
        0.75
      ],
      "double": [
        1.0
      ],
      "str": [
        ")/",
        ".000000",
        ".000000000",
        "/Date(",
        "0",
        "1",
        ";",
        "F",
        "L",
        "N",
        "NULL",
        "T",
        "TODO",
        "Y",
        "[",
        "_",
        "andDecrement",
        "andIncrement",
        "country",
        "false",
        "fastjson.compatibleWithFieldName",
        "fastjson.compatibleWithJavaBean",
        "get",
        "getClass",
        "getDeclaringClass",
        "getMetaClass",
        "getSuppressed",
        "groovy.lang.MetaClass",
        "is",
        "java.",
        "java.time.",
        "javassist.util.proxy.ProxyObject",
        "javax.xml.datatype.XMLGregorianCalendar",
        "kotlin.jvm.internal.DefaultConstructorMarker",
        "net.sf.cglib.proxy.Factory",
        "null",
        "oracle.sql.DATE",
        "oracle.sql.TIMESTAMP",
        "org.apache.ibatis.javassist.util.proxy.ProxyObject",
        "org.springframework.cglib.proxy.Factory",
        "true",
        "yyyy-MM-dd",
        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
        "yyyyMMddHHmmssSSSZ"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.UTF8Decoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "malformedN",
        "desc": "(Ljava/nio/ByteBuffer;I)Ljava/nio/charset/CoderResult;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "updatePositions",
        "desc": "(Ljava/nio/Buffer;ILjava/nio/Buffer;I)V"
      },
      {
        "name": "decodeLoop",
        "desc": "(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;"
      }
    ],
    "dictionary": {
      "byte": [
        -32,
        -2,
        30,
        63
      ],
      "char": [
        63
      ],
      "short": [
        -32,
        -2,
        30,
        63,
        128,
        144,
        191,
        192,
        224,
        240,
        244,
        255
      ],
      "int": [
        -32,
        -2,
        1,
        2,
        3,
        4,
        5,
        30,
        63,
        128,
        144,
        191,
        192,
        224,
        240,
        244,
        255
      ],
      "float": [
        1.0
      ],
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "java.nio.charset.CharsetDecoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.fastjson.util.UTF8Decoder$Surrogate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        65536,
        1114111
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.fastjson.util.UTF8Decoder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.NacosFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createNamingService",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/nacos/api/naming/NamingService;"
      },
      {
        "name": "createConfigService",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/nacos/api/config/ConfigService;"
      },
      {
        "name": "createMaintainService",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/nacos/api/naming/NamingMaintainService;"
      },
      {
        "name": "createNamingService",
        "desc": "(Ljava/util/Properties;)Lcom/alibaba/nacos/api/naming/NamingService;"
      },
      {
        "name": "createConfigService",
        "desc": "(Ljava/util/Properties;)Lcom/alibaba/nacos/api/config/ConfigService;"
      },
      {
        "name": "createMaintainService",
        "desc": "(Ljava/util/Properties;)Lcom/alibaba/nacos/api/naming/NamingMaintainService;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.PropertyKeyConst",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.PropertyKeyConst$SystemEnv",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "com.alibaba.nacos.api.PropertyKeyConst",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.SystemPropertyKeyConst",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.annotation.NacosInjected",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.annotation.NacosProperties",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.cmdb.pojo.Entity",
    "setters": [
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "name"
      },
      {
        "name": "setLabels",
        "desc": "(Ljava/util/Map;)V",
        "field": "labels"
      },
      {
        "name": "setType",
        "desc": "(Ljava/lang/String;)V",
        "field": "type"
      }
    ],
    "getters": [
      {
        "name": "getLabels",
        "desc": "()Ljava/util/Map;",
        "field": "labels"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getLabels",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLabels",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setLabels",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "setType",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.cmdb.pojo.EntityEvent",
    "setters": [
      {
        "name": "setEntityType",
        "desc": "(Ljava/lang/String;)V",
        "field": "entityType"
      },
      {
        "name": "setType",
        "desc": "(Lcom/alibaba/nacos/api/cmdb/pojo/EntityEventType;)V",
        "field": "type"
      },
      {
        "name": "setEntityName",
        "desc": "(Ljava/lang/String;)V",
        "field": "entityName"
      }
    ],
    "getters": [
      {
        "name": "getEntityType",
        "desc": "()Ljava/lang/String;",
        "field": "entityType"
      },
      {
        "name": "getEntityName",
        "desc": "()Ljava/lang/String;",
        "field": "entityName"
      },
      {
        "name": "getType",
        "desc": "()Lcom/alibaba/nacos/api/cmdb/pojo/EntityEventType;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Lcom/alibaba/nacos/api/cmdb/pojo/EntityEventType;"
      },
      {
        "name": "getEntityType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEntityName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Lcom/alibaba/nacos/api/cmdb/pojo/EntityEventType;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getEntityType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEntityName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setEntityType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setType",
        "desc": "(Lcom/alibaba/nacos/api/cmdb/pojo/EntityEventType;)V"
      },
      {
        "name": "setEntityName",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.cmdb.pojo.EntityEventType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "ENTITY_ADD_OR_UPDATE",
        "ENTITY_REMOVE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.cmdb.pojo.Label",
    "setters": [
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "name"
      },
      {
        "name": "setValues",
        "desc": "(Ljava/util/Set;)V",
        "field": "values"
      },
      {
        "name": "setDescription",
        "desc": "(Ljava/lang/String;)V",
        "field": "description"
      }
    ],
    "getters": [
      {
        "name": "getValues",
        "desc": "()Ljava/util/Set;",
        "field": "values"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;",
        "field": "description"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getValues",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getValues",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "setValues",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setDescription",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.cmdb.pojo.PreservedEntityTypes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "ip",
        "service"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.cmdb.spi.CmdbService",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.common.Constants",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "long": [
        5,
        30
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.ConfigFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createConfigService",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/nacos/api/config/ConfigService;"
      },
      {
        "name": "createConfigService",
        "desc": "(Ljava/util/Properties;)Lcom/alibaba/nacos/api/config/ConfigService;"
      }
    ],
    "dictionary": {
      "short": [
        -400
      ],
      "int": [
        -400
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.ConfigService",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.ConfigType",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "str": [
        "HTML",
        "JSON",
        "PROPERTIES",
        "TEXT",
        "XML",
        "YAML",
        "html",
        "json",
        "properties",
        "text",
        "xml",
        "yaml"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.annotation.NacosConfigListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.annotation.NacosConfigurationProperties",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.annotation.NacosIgnore",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.annotation.NacosProperty",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.annotation.NacosValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.convert.NacosConfigConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.filter.IConfigContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.filter.IConfigFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.filter.IConfigFilterChain",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.filter.IConfigRequest",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.filter.IConfigResponse",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.filter.IFilterConfig",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.listener.AbstractListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getExecutor",
        "desc": "()Ljava/util/concurrent/Executor;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.nacos.api.config.listener.Listener"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.listener.AbstractSharedListener",
    "setters": [
      {
        "name": "fillContext",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "dataId"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getExecutor",
        "desc": "()Ljava/util/concurrent/Executor;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.nacos.api.config.listener.Listener"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.config.listener.Listener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.exception.NacosException",
    "setters": [
      {
        "name": "setErrCode",
        "desc": "(I)V",
        "field": "errCode"
      },
      {
        "name": "setErrMsg",
        "desc": "(Ljava/lang/String;)V",
        "field": "errMsg"
      },
      {
        "name": "setCauseThrowable",
        "desc": "(Ljava/lang/Throwable;)V",
        "field": "causeThrowable"
      }
    ],
    "getters": [
      {
        "name": "getErrCode",
        "desc": "()I",
        "field": "errCode"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getErrCode",
        "desc": "()I"
      },
      {
        "name": "getErrMsg",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILjava/lang/Throwable;)V"
      },
      {
        "name": "setErrCode",
        "desc": "(I)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setCauseThrowable",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "getErrCode",
        "desc": "()I"
      },
      {
        "name": "setErrMsg",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getErrMsg",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.CommonParams",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.NamingFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createNamingService",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/nacos/api/naming/NamingService;"
      },
      {
        "name": "createNamingService",
        "desc": "(Ljava/util/Properties;)Lcom/alibaba/nacos/api/naming/NamingService;"
      }
    ],
    "dictionary": {
      "short": [
        -400
      ],
      "int": [
        -400
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.NamingMaintainFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createMaintainService",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/nacos/api/naming/NamingMaintainService;"
      },
      {
        "name": "createMaintainService",
        "desc": "(Ljava/util/Properties;)Lcom/alibaba/nacos/api/naming/NamingMaintainService;"
      }
    ],
    "dictionary": {
      "short": [
        -400
      ],
      "int": [
        -400
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.NamingMaintainService",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.NamingService",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.PreservedMetadataKeys",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.listener.Event",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.listener.EventListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.listener.NamingEvent",
    "setters": [
      {
        "name": "setGroupName",
        "desc": "(Ljava/lang/String;)V",
        "field": "groupName"
      },
      {
        "name": "setClusters",
        "desc": "(Ljava/lang/String;)V",
        "field": "clusters"
      },
      {
        "name": "setServiceName",
        "desc": "(Ljava/lang/String;)V",
        "field": "serviceName"
      },
      {
        "name": "setInstances",
        "desc": "(Ljava/util/List;)V",
        "field": "instances"
      }
    ],
    "getters": [
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;",
        "field": "groupName"
      },
      {
        "name": "getInstances",
        "desc": "()Ljava/util/List;",
        "field": "instances"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;",
        "field": "serviceName"
      },
      {
        "name": "getClusters",
        "desc": "()Ljava/lang/String;",
        "field": "clusters"
      }
    ],
    "observers": [
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstances",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getClusters",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V"
      },
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstances",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getClusters",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setClusters",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/List;)V"
      },
      {
        "name": "setGroupName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setServiceName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setInstances",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.alibaba.nacos.api.naming.listener.Event"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker",
    "setters": [
      {
        "name": "setType",
        "desc": "(Ljava/lang/String;)V",
        "field": "type"
      }
    ],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "unknown"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Cloneable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker$Http",
    "setters": [
      {
        "name": "setHeaders",
        "desc": "(Ljava/lang/String;)V",
        "field": "headers"
      },
      {
        "name": "setPath",
        "desc": "(Ljava/lang/String;)V",
        "field": "path"
      },
      {
        "name": "setExpectedResponseCode",
        "desc": "(I)V",
        "field": "expectedResponseCode"
      }
    ],
    "getters": [
      {
        "name": "getHeaders",
        "desc": "()Ljava/lang/String;",
        "field": "headers"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;",
        "field": "path"
      },
      {
        "name": "getExpectedResponseCode",
        "desc": "()I",
        "field": "expectedResponseCode"
      }
    ],
    "observers": [
      {
        "name": "getHeaders",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCustomHeaders",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpectedResponseCode",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "setHeaders",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getHeaders",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCustomHeaders",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getExpectedResponseCode",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "setExpectedResponseCode",
        "desc": "(I)V"
      },
      {
        "name": "jsonAdapterCallback",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeWriter;)V"
      },
      {
        "name": "clone",
        "desc": "()Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker$Http;"
      },
      {
        "name": "setPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        16,
        44
      ],
      "char": [
        44
      ],
      "short": [
        16,
        44,
        200
      ],
      "int": [
        0,
        2,
        16,
        44,
        200
      ],
      "str": [
        "",
        ":",
        "HTTP",
        "headers"
      ]
    },
    "parents": [
      "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker"
    ],
    "outerClass": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker$Mysql",
    "setters": [
      {
        "name": "setCmd",
        "desc": "(Ljava/lang/String;)V",
        "field": "cmd"
      },
      {
        "name": "setUser",
        "desc": "(Ljava/lang/String;)V",
        "field": "user"
      },
      {
        "name": "setPwd",
        "desc": "(Ljava/lang/String;)V",
        "field": "pwd"
      }
    ],
    "getters": [
      {
        "name": "getUser",
        "desc": "()Ljava/lang/String;",
        "field": "user"
      },
      {
        "name": "getCmd",
        "desc": "()Ljava/lang/String;",
        "field": "cmd"
      },
      {
        "name": "getPwd",
        "desc": "()Ljava/lang/String;",
        "field": "pwd"
      }
    ],
    "observers": [
      {
        "name": "getCmd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPwd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getUser",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "setCmd",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getCmd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setUser",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getPwd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "setPwd",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getUser",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "jsonAdapterCallback",
        "desc": "(Lcom/alibaba/fastjson/serializer/SerializeWriter;)V"
      },
      {
        "name": "clone",
        "desc": "()Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker$Mysql;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        44
      ],
      "char": [
        44
      ],
      "short": [
        44
      ],
      "int": [
        0,
        44
      ],
      "str": [
        "MYSQL",
        "cmd"
      ]
    },
    "parents": [
      "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker"
    ],
    "outerClass": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker$None",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clone",
        "desc": "()Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker;"
      }
    ],
    "dictionary": {
      "str": [
        "NONE"
      ]
    },
    "parents": [
      "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker"
    ],
    "outerClass": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker$Tcp",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "clone",
        "desc": "()Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker$Tcp;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "TCP"
      ]
    },
    "parents": [
      "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker"
    ],
    "outerClass": "com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.Cluster",
    "setters": [
      {
        "name": "setDefaultCheckPort",
        "desc": "(I)V",
        "field": "defaultCheckPort"
      },
      {
        "name": "setHealthChecker",
        "desc": "(Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker;)V",
        "field": "healthChecker"
      },
      {
        "name": "setMetadata",
        "desc": "(Ljava/util/Map;)V",
        "field": "metadata"
      },
      {
        "name": "setUseIPPort4Check",
        "desc": "(Z)V",
        "field": "useIPPort4Check"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "name"
      },
      {
        "name": "setDefaultPort",
        "desc": "(I)V",
        "field": "defaultPort"
      },
      {
        "name": "setServiceName",
        "desc": "(Ljava/lang/String;)V",
        "field": "serviceName"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getDefaultCheckPort",
        "desc": "()I",
        "field": "defaultCheckPort"
      },
      {
        "name": "getDefaultPort",
        "desc": "()I",
        "field": "defaultPort"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;",
        "field": "metadata"
      },
      {
        "name": "isUseIPPort4Check",
        "desc": "()Z",
        "field": "useIPPort4Check"
      },
      {
        "name": "getHealthChecker",
        "desc": "()Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker;",
        "field": "healthChecker"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;",
        "field": "serviceName"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDefaultCheckPort",
        "desc": "()I"
      },
      {
        "name": "getDefaultPort",
        "desc": "()I"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "isUseIPPort4Check",
        "desc": "()Z"
      },
      {
        "name": "getHealthChecker",
        "desc": "()Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker;"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setDefaultCheckPort",
        "desc": "(I)V"
      },
      {
        "name": "setHealthChecker",
        "desc": "(Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultPort",
        "desc": "()I"
      },
      {
        "name": "setUseIPPort4Check",
        "desc": "(Z)V"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setServiceName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getDefaultCheckPort",
        "desc": "()I"
      },
      {
        "name": "setMetadata",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setDefaultPort",
        "desc": "(I)V"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "isUseIPPort4Check",
        "desc": "()Z"
      },
      {
        "name": "getHealthChecker",
        "desc": "()Lcom/alibaba/nacos/api/naming/pojo/AbstractHealthChecker;"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        80
      ],
      "char": [
        80
      ],
      "short": [
        80
      ],
      "int": [
        1,
        80
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.Instance",
    "setters": [
      {
        "name": "setIp",
        "desc": "(Ljava/lang/String;)V",
        "field": "ip"
      },
      {
        "name": "setPort",
        "desc": "(I)V",
        "field": "port"
      },
      {
        "name": "setHealthy",
        "desc": "(Z)V",
        "field": "healthy"
      },
      {
        "name": "setEphemeral",
        "desc": "(Z)V",
        "field": "ephemeral"
      },
      {
        "name": "setMetadata",
        "desc": "(Ljava/util/Map;)V",
        "field": "metadata"
      },
      {
        "name": "setClusterName",
        "desc": "(Ljava/lang/String;)V",
        "field": "clusterName"
      },
      {
        "name": "setWeight",
        "desc": "(D)V",
        "field": "weight"
      },
      {
        "name": "setEnabled",
        "desc": "(Z)V",
        "field": "enabled"
      },
      {
        "name": "setInstanceId",
        "desc": "(Ljava/lang/String;)V",
        "field": "instanceId"
      },
      {
        "name": "setServiceName",
        "desc": "(Ljava/lang/String;)V",
        "field": "serviceName"
      }
    ],
    "getters": [
      {
        "name": "getClusterName",
        "desc": "()Ljava/lang/String;",
        "field": "clusterName"
      },
      {
        "name": "isHealthy",
        "desc": "()Z",
        "field": "healthy"
      },
      {
        "name": "getWeight",
        "desc": "()D",
        "field": "weight"
      },
      {
        "name": "getIp",
        "desc": "()Ljava/lang/String;",
        "field": "ip"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;",
        "field": "metadata"
      },
      {
        "name": "isEnabled",
        "desc": "()Z",
        "field": "enabled"
      },
      {
        "name": "getInstanceId",
        "desc": "()Ljava/lang/String;",
        "field": "instanceId"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;",
        "field": "serviceName"
      },
      {
        "name": "isEphemeral",
        "desc": "()Z",
        "field": "ephemeral"
      },
      {
        "name": "getPort",
        "desc": "()I",
        "field": "port"
      }
    ],
    "observers": [
      {
        "name": "getClusterName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstanceHeartBeatInterval",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEphemeral",
        "desc": "()Z"
      },
      {
        "name": "getPort",
        "desc": "()I"
      },
      {
        "name": "isHealthy",
        "desc": "()Z"
      },
      {
        "name": "getWeight",
        "desc": "()D"
      },
      {
        "name": "getInstanceHeartBeatTimeOut",
        "desc": "()J"
      },
      {
        "name": "getIp",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "isEnabled",
        "desc": "()Z"
      },
      {
        "name": "toInetAddr",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstanceId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getIpDeleteTimeout",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getInstanceHeartBeatInterval",
        "desc": "()J"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "setPort",
        "desc": "(I)V"
      },
      {
        "name": "getWeight",
        "desc": "()D"
      },
      {
        "name": "setClusterName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getIp",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setWeight",
        "desc": "(D)V"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "toInetAddr",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstanceId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getServiceName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClusterName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setIp",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setHealthy",
        "desc": "(Z)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setEnabled",
        "desc": "(Z)V"
      },
      {
        "name": "setInstanceId",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isEphemeral",
        "desc": "()Z"
      },
      {
        "name": "getPort",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "setServiceName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isHealthy",
        "desc": "()Z"
      },
      {
        "name": "setEphemeral",
        "desc": "(Z)V"
      },
      {
        "name": "setMetadata",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "addMetadata",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getInstanceHeartBeatTimeOut",
        "desc": "()J"
      },
      {
        "name": "isEnabled",
        "desc": "()Z"
      },
      {
        "name": "getIpDeleteTimeout",
        "desc": "()J"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "double": [
        2.0
      ],
      "str": [
        "^\\d+$"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.ListView",
    "setters": [
      {
        "name": "setCount",
        "desc": "(I)V",
        "field": "count"
      },
      {
        "name": "setData",
        "desc": "(Ljava/util/List;)V",
        "field": "data"
      }
    ],
    "getters": [
      {
        "name": "getData",
        "desc": "()Ljava/util/List;",
        "field": "data"
      },
      {
        "name": "getCount",
        "desc": "()I",
        "field": "count"
      }
    ],
    "observers": [
      {
        "name": "getData",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "setCount",
        "desc": "(I)V"
      },
      {
        "name": "getData",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "setData",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.Service",
    "setters": [
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "name"
      },
      {
        "name": "setGroupName",
        "desc": "(Ljava/lang/String;)V",
        "field": "groupName"
      },
      {
        "name": "setMetadata",
        "desc": "(Ljava/util/Map;)V",
        "field": "metadata"
      },
      {
        "name": "setProtectThreshold",
        "desc": "(F)V",
        "field": "protectThreshold"
      },
      {
        "name": "setAppName",
        "desc": "(Ljava/lang/String;)V",
        "field": "appName"
      }
    ],
    "getters": [
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;",
        "field": "groupName"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;",
        "field": "metadata"
      },
      {
        "name": "getAppName",
        "desc": "()Ljava/lang/String;",
        "field": "appName"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getProtectThreshold",
        "desc": "()F",
        "field": "protectThreshold"
      }
    ],
    "observers": [
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getAppName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getProtectThreshold",
        "desc": "()F"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setGroupName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setMetadata",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "addMetadata",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "setProtectThreshold",
        "desc": "(F)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getMetadata",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getAppName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getProtectThreshold",
        "desc": "()F"
      },
      {
        "name": "setAppName",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "float": [
        0.0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.pojo.ServiceInfo",
    "setters": [
      {
        "name": "setLastRefTime",
        "desc": "(J)V",
        "field": "lastRefTime"
      },
      {
        "name": "setClusters",
        "desc": "(Ljava/lang/String;)V",
        "field": "clusters"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "name"
      },
      {
        "name": "setGroupName",
        "desc": "(Ljava/lang/String;)V",
        "field": "groupName"
      },
      {
        "name": "setJsonFromServer",
        "desc": "(Ljava/lang/String;)V",
        "field": "jsonFromServer"
      },
      {
        "name": "setHosts",
        "desc": "(Ljava/util/List;)V",
        "field": "hosts"
      },
      {
        "name": "setAllIPs",
        "desc": "(Z)V",
        "field": "allIPs"
      },
      {
        "name": "setChecksum",
        "desc": "(Ljava/lang/String;)V",
        "field": "checksum"
      },
      {
        "name": "setCacheMillis",
        "desc": "(J)V",
        "field": "cacheMillis"
      }
    ],
    "getters": [
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;",
        "field": "groupName"
      },
      {
        "name": "getCacheMillis",
        "desc": "()J",
        "field": "cacheMillis"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getClusters",
        "desc": "()Ljava/lang/String;",
        "field": "clusters"
      },
      {
        "name": "getJsonFromServer",
        "desc": "()Ljava/lang/String;",
        "field": "jsonFromServer"
      },
      {
        "name": "getLastRefTime",
        "desc": "()J",
        "field": "lastRefTime"
      },
      {
        "name": "isAllIPs",
        "desc": "()Z",
        "field": "allIPs"
      },
      {
        "name": "getChecksum",
        "desc": "()Ljava/lang/String;",
        "field": "checksum"
      }
    ],
    "observers": [
      {
        "name": "getKeyEncoded",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClusters",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAllIPs",
        "desc": "()Z"
      },
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCacheMillis",
        "desc": "()J"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getJsonFromServer",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLastRefTime",
        "desc": "()J"
      },
      {
        "name": "getHosts",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isValid",
        "desc": "()Z"
      },
      {
        "name": "getChecksum",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClusters",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getKey",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "fromKey",
        "desc": "(Ljava/lang/String;)Lcom/alibaba/nacos/api/naming/pojo/ServiceInfo;"
      },
      {
        "name": "setCacheMillis",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getGroupName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCacheMillis",
        "desc": "()J"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setLastRefTime",
        "desc": "(J)V"
      },
      {
        "name": "getHosts",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isValid",
        "desc": "()Z"
      },
      {
        "name": "setAllIPs",
        "desc": "(Z)V"
      },
      {
        "name": "getKeyEncoded",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setGroupName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isAllIPs",
        "desc": "()Z"
      },
      {
        "name": "expired",
        "desc": "()Z"
      },
      {
        "name": "setHosts",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "setClusters",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getJsonFromServer",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLastRefTime",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setJsonFromServer",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "ipCount",
        "desc": "()I"
      },
      {
        "name": "validate",
        "desc": "()Z"
      },
      {
        "name": "setChecksum",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getChecksum",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0,
        1000
      ],
      "str": [
        "",
        "@@"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.naming.utils.NamingUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getGroupedName",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getGroupName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getServiceName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "@@"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.selector.AbstractSelector",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.selector.ExpressionSelector",
    "setters": [
      {
        "name": "setExpression",
        "desc": "(Ljava/lang/String;)V",
        "field": "expression"
      }
    ],
    "getters": [
      {
        "name": "getExpression",
        "desc": "()Ljava/lang/String;",
        "field": "expression"
      }
    ],
    "observers": [
      {
        "name": "getExpression",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "setExpression",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getExpression",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "com.alibaba.nacos.api.selector.AbstractSelector"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.selector.NoneSelector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "com.alibaba.nacos.api.selector.AbstractSelector"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "com.alibaba.nacos.api.selector.SelectorType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "label",
        "none",
        "unknown"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "com.vladium.emma.rt.RT",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "dumpCoverageData",
        "desc": "(Ljava/io/File;ZZ)V"
      },
      {
        "name": "dumpCoverageData",
        "desc": "(Ljava/io/File;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.ActiveTestSuite",
    "setters": [
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V",
        "field": "fActiveTestDeathCount"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "waitUntilFinished",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "runFinished",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)V"
      },
      {
        "name": "runTest",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/TestResult;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "junit.framework.TestSuite"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.ActiveTestSuite$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Thread"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.RepeatedTest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;I)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "junit.extensions.TestDecorator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.TestDecorator",
    "setters": [],
    "getters": [
      {
        "name": "getTest",
        "desc": "()Ljunit/framework/Test;",
        "field": "fTest"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTest",
        "desc": "()Ljunit/framework/Test;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "getTest",
        "desc": "()Ljunit/framework/Test;"
      },
      {
        "name": "basicRun",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "junit.framework.Assert",
      "junit.framework.Test"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.TestSetup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "tearDown",
        "desc": "()V"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "setUp",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "junit.extensions.TestDecorator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.extensions.TestSetup$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.Protectable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.Assert",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assertEquals",
        "desc": "(FFF)V"
      },
      {
        "name": "assertNull",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "failNotSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "assertSame",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;ZZ)V"
      },
      {
        "name": "assertEquals",
        "desc": "(BB)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;DDD)V"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "assertSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNotSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertFalse",
        "desc": "(Z)V"
      },
      {
        "name": "assertEquals",
        "desc": "(II)V"
      },
      {
        "name": "fail",
        "desc": "()V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;JJ)V"
      },
      {
        "name": "assertEquals",
        "desc": "(SS)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "assertNull",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "assertTrue",
        "desc": "(Z)V"
      },
      {
        "name": "assertFalse",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;BB)V"
      },
      {
        "name": "assertNotNull",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertNotSame",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "failNotEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNotNull",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertTrue",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assertEquals",
        "desc": "(CC)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;FFF)V"
      },
      {
        "name": "assertEquals",
        "desc": "(DDD)V"
      },
      {
        "name": "assertEquals",
        "desc": "(JJ)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;SS)V"
      },
      {
        "name": "assertEquals",
        "desc": "(ZZ)V"
      },
      {
        "name": "fail",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;CC)V"
      },
      {
        "name": "failSame",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.AssertionFailedError",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.ComparisonCompactor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compact",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.ComparisonFailure",
    "setters": [],
    "getters": [
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;",
        "field": "fExpected"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;",
        "field": "fActual"
      }
    ],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        20
      ],
      "short": [
        20
      ],
      "int": [
        20
      ]
    },
    "parents": [
      "junit.framework.AssertionFailedError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.JUnit4TestAdapter",
    "setters": [],
    "getters": [
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;",
        "field": "fNewTestClass"
      }
    ],
    "observers": [
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTests",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "sort",
        "desc": "(Lorg/junit/runner/manipulation/Sorter;)V"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "getTests",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljunit/framework/JUnit4TestAdapterCache;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.Test",
      "org.junit.runner.manipulation.Filterable",
      "org.junit.runner.manipulation.Sortable",
      "org.junit.runner.Describable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.JUnit4TestAdapterCache",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createTest",
        "desc": "(Lorg/junit/runner/Description;)Ljunit/framework/Test;"
      },
      {
        "name": "asTestList",
        "desc": "(Lorg/junit/runner/Description;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefault",
        "desc": "()Ljunit/framework/JUnit4TestAdapterCache;"
      },
      {
        "name": "getNotifier",
        "desc": "(Ljunit/framework/TestResult;Ljunit/framework/JUnit4TestAdapter;)Lorg/junit/runner/notification/RunNotifier;"
      },
      {
        "name": "asTest",
        "desc": "(Lorg/junit/runner/Description;)Ljunit/framework/Test;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.util.HashMap"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.JUnit4TestAdapterCache$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.JUnit4TestCaseFacade",
    "setters": [],
    "getters": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;",
        "field": "fDescription"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.Test",
      "org.junit.runner.Describable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.Protectable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.Test",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestCase",
    "setters": [
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "fName"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "fName"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "junit.framework.Assert",
      "junit.framework.Test"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestFailure",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "trace",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "exceptionMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFailure",
        "desc": "()Z"
      },
      {
        "name": "thrownException",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;Ljava/lang/Throwable;)V"
      },
      {
        "name": "failedTest",
        "desc": "()Ljunit/framework/Test;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestResult",
    "setters": [
      {
        "name": "startTest",
        "desc": "(Ljunit/framework/Test;)V",
        "field": "fRunTests"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "errors",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "failures",
        "desc": "()Ljava/util/Enumeration;"
      }
    ],
    "testableMethods": [
      {
        "name": "addListener",
        "desc": "(Ljunit/framework/TestListener;)V"
      },
      {
        "name": "removeListener",
        "desc": "(Ljunit/framework/TestListener;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "endTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestCase;)V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V"
      },
      {
        "name": "wasSuccessful",
        "desc": "()Z"
      },
      {
        "name": "failureCount",
        "desc": "()I"
      },
      {
        "name": "shouldStop",
        "desc": "()Z"
      },
      {
        "name": "errors",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "startTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "addError",
        "desc": "(Ljunit/framework/Test;Ljava/lang/Throwable;)V"
      },
      {
        "name": "errorCount",
        "desc": "()I"
      },
      {
        "name": "runProtected",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/Protectable;)V"
      },
      {
        "name": "failures",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "runCount",
        "desc": "()I"
      },
      {
        "name": "stop",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestResult$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.Protectable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestSuite",
    "setters": [
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "fName"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "fName"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "addTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "testCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "warning",
        "desc": "(Ljava/lang/String;)Ljunit/framework/Test;"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "addTestSuite",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "runTest",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/TestResult;)V"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;Ljava/lang/String;)V"
      },
      {
        "name": "getTestConstructor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "tests",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "countTestCases",
        "desc": "()I"
      },
      {
        "name": "testAt",
        "desc": "(I)Ljunit/framework/Test;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "createTest",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljunit/framework/Test;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        0,
        10
      ],
      "str": [
        ")",
        "test",
        "warning"
      ]
    },
    "parents": [
      "java.lang.Object",
      "junit.framework.Test"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.framework.TestSuite$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "junit.framework.TestCase"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.runner.BaseTestRunner",
    "setters": [
      {
        "name": "setLoading",
        "desc": "(Z)V",
        "field": "fLoading"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        2
      ],
      "str": [
        "-c",
        "-nofilterstack",
        "-noloading",
        "filterstack",
        "junit.properties",
        "loading",
        "maxmessage",
        "true",
        "user.home"
      ]
    },
    "parents": [
      "java.lang.Object",
      "junit.framework.TestListener"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.runner.TestRunListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.runner.Version",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "id",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.textui.ResultPrinter",
    "setters": [
      {
        "name": "startTest",
        "desc": "(Ljunit/framework/Test;)V",
        "field": "fColumn"
      }
    ],
    "getters": [
      {
        "name": "getWriter",
        "desc": "()Ljava/io/PrintStream;",
        "field": "fWriter"
      }
    ],
    "observers": [
      {
        "name": "getWriter",
        "desc": "()Ljava/io/PrintStream;"
      }
    ],
    "testableMethods": [
      {
        "name": "printDefects",
        "desc": "(Ljava/util/Enumeration;ILjava/lang/String;)V"
      },
      {
        "name": "printHeader",
        "desc": "(J)V"
      },
      {
        "name": "printFailures",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "printErrors",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "endTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "print",
        "desc": "(Ljunit/framework/TestResult;J)V"
      },
      {
        "name": "printDefect",
        "desc": "(Ljunit/framework/TestFailure;I)V"
      },
      {
        "name": "elapsedTimeAsString",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "printWaitPrompt",
        "desc": "()V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintStream;)V"
      },
      {
        "name": "printFooter",
        "desc": "(Ljunit/framework/TestResult;)V"
      },
      {
        "name": "printDefectTrace",
        "desc": "(Ljunit/framework/TestFailure;)V"
      },
      {
        "name": "startTest",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "addError",
        "desc": "(Ljunit/framework/Test;Ljava/lang/Throwable;)V"
      },
      {
        "name": "printDefectHeader",
        "desc": "(Ljunit/framework/TestFailure;I)V"
      },
      {
        "name": "getWriter",
        "desc": "()Ljava/io/PrintStream;"
      }
    ],
    "dictionary": {
      "byte": [
        40
      ],
      "char": [
        40
      ],
      "short": [
        40
      ],
      "int": [
        0,
        1,
        40
      ],
      "str": [
        ":",
        "E",
        "F",
        "FAILURES!!!",
        "OK",
        "error",
        "failure"
      ]
    },
    "parents": [
      "java.lang.Object",
      "junit.framework.TestListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "junit.textui.TestRunner",
    "setters": [
      {
        "name": "setPrinter",
        "desc": "(Ljunit/textui/ResultPrinter;)V",
        "field": "fPrinter"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "runAndWait",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "runSingleMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Z)Ljunit/framework/TestResult;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/Test;)Ljunit/framework/TestResult;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "testEnded",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "pause",
        "desc": "(Z)V"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintStream;)V"
      },
      {
        "name": "doRun",
        "desc": "(Ljunit/framework/Test;Z)Ljunit/framework/TestResult;"
      },
      {
        "name": "testFailed",
        "desc": "(ILjunit/framework/Test;Ljava/lang/Throwable;)V"
      },
      {
        "name": "doRun",
        "desc": "(Ljunit/framework/Test;)Ljunit/framework/TestResult;"
      },
      {
        "name": "testStarted",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "run",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljunit/textui/ResultPrinter;)V"
      },
      {
        "name": "createTestResult",
        "desc": "()Ljunit/framework/TestResult;"
      },
      {
        "name": "setPrinter",
        "desc": "(Ljunit/textui/ResultPrinter;)V"
      },
      {
        "name": "start",
        "desc": "([Ljava/lang/String;)Ljunit/framework/TestResult;"
      },
      {
        "name": "runFailed",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "",
        "-c",
        "-m",
        "-v",
        "-wait"
      ]
    },
    "parents": [
      "junit.runner.BaseTestRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.AnnotationUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "(Ljava/lang/annotation/Annotation;)I"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/annotation/Annotation;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z"
      },
      {
        "name": "isValidAnnotationMemberType",
        "desc": "(Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        127
      ],
      "short": [
        127
      ],
      "int": [
        0,
        1,
        127
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.AnnotationUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "",
        "[",
        "]"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ArrayUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isSorted",
        "desc": "([J)Z"
      },
      {
        "name": "contains",
        "desc": "([CC)Z"
      },
      {
        "name": "indexOf",
        "desc": "([DDID)I"
      },
      {
        "name": "toArray",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "reverse",
        "desc": "([FII)V"
      },
      {
        "name": "removeElement",
        "desc": "([SS)[S"
      },
      {
        "name": "addAll",
        "desc": "([C[C)[C"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Long;)[Ljava/lang/Long;"
      },
      {
        "name": "contains",
        "desc": "([SS)Z"
      },
      {
        "name": "subarray",
        "desc": "([DII)[D"
      },
      {
        "name": "add",
        "desc": "([CIC)[C"
      },
      {
        "name": "lastIndexOf",
        "desc": "([JJ)I"
      },
      {
        "name": "removeElements",
        "desc": "([C[C)[C"
      },
      {
        "name": "isSorted",
        "desc": "([Z)Z"
      },
      {
        "name": "indexOf",
        "desc": "([DD)I"
      },
      {
        "name": "isEmpty",
        "desc": "([Ljava/lang/Object;)Z"
      },
      {
        "name": "isSameType",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([ZZ)I"
      },
      {
        "name": "clone",
        "desc": "([J)[J"
      },
      {
        "name": "subarray",
        "desc": "([FII)[F"
      },
      {
        "name": "contains",
        "desc": "([BB)Z"
      },
      {
        "name": "toObject",
        "desc": "([I)[Ljava/lang/Integer;"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Byte;)[Ljava/lang/Byte;"
      },
      {
        "name": "isNotEmpty",
        "desc": "([F)Z"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Boolean;Z)[Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([BBI)I"
      },
      {
        "name": "reverse",
        "desc": "([JII)V"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Long;J)[J"
      },
      {
        "name": "nullToEmpty",
        "desc": "([F)[F"
      },
      {
        "name": "remove",
        "desc": "([Ljava/lang/Object;I)[Ljava/lang/Object;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Byte;B)[B"
      },
      {
        "name": "isSorted",
        "desc": "([B)Z"
      },
      {
        "name": "reverse",
        "desc": "([BII)V"
      },
      {
        "name": "indexOf",
        "desc": "([FFI)I"
      },
      {
        "name": "isEmpty",
        "desc": "([I)Z"
      },
      {
        "name": "add",
        "desc": "([JJ)[J"
      },
      {
        "name": "isSorted",
        "desc": "([I)Z"
      },
      {
        "name": "subarray",
        "desc": "([ZII)[Z"
      },
      {
        "name": "add",
        "desc": "([III)[I"
      },
      {
        "name": "toObject",
        "desc": "([J)[Ljava/lang/Long;"
      },
      {
        "name": "removeElements",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "removeElement",
        "desc": "([II)[I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Short;)[Ljava/lang/Short;"
      },
      {
        "name": "subarray",
        "desc": "([BII)[B"
      },
      {
        "name": "isSameLength",
        "desc": "([J[J)Z"
      },
      {
        "name": "indexOf",
        "desc": "([FF)I"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Byte;)[B"
      },
      {
        "name": "reverse",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "removeElement",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "indexOf",
        "desc": "([ZZI)I"
      },
      {
        "name": "clone",
        "desc": "([D)[D"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Boolean;)[Z"
      },
      {
        "name": "isSorted",
        "desc": "([Ljava/lang/Comparable;)Z"
      },
      {
        "name": "removeElement",
        "desc": "([JJ)[J"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Long;)[J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "([ZIZ)[Z"
      },
      {
        "name": "contains",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "add",
        "desc": "([FIF)[F"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Short;)[S"
      },
      {
        "name": "removeAll",
        "desc": "([I[I)[I"
      },
      {
        "name": "clone",
        "desc": "([I)[I"
      },
      {
        "name": "reverse",
        "desc": "([B)V"
      },
      {
        "name": "indexOf",
        "desc": "([SSI)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Float;)[Ljava/lang/Float;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Double;)[D"
      },
      {
        "name": "remove",
        "desc": "([JI)[J"
      },
      {
        "name": "lastIndexOf",
        "desc": "([FF)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "([ZZI)I"
      },
      {
        "name": "removeAll",
        "desc": "([D[I)[D"
      },
      {
        "name": "removeAll",
        "desc": "(Ljava/lang/Object;[I)Ljava/lang/Object;"
      },
      {
        "name": "add",
        "desc": "([SIS)[S"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Character;C)[C"
      },
      {
        "name": "isSameLength",
        "desc": "([S[S)Z"
      },
      {
        "name": "remove",
        "desc": "([SI)[S"
      },
      {
        "name": "indexOf",
        "desc": "([DDD)I"
      },
      {
        "name": "clone",
        "desc": "([F)[F"
      },
      {
        "name": "reverse",
        "desc": "([Z)V"
      },
      {
        "name": "removeElements",
        "desc": "([S[S)[S"
      },
      {
        "name": "indexOf",
        "desc": "([II)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([J)[J"
      },
      {
        "name": "removeAll",
        "desc": "(Ljava/lang/Object;Ljava/util/BitSet;)Ljava/lang/Object;"
      },
      {
        "name": "addAll",
        "desc": "([B[B)[B"
      },
      {
        "name": "clone",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "lastIndexOf",
        "desc": "([DDD)I"
      },
      {
        "name": "addAll",
        "desc": "([S[S)[S"
      },
      {
        "name": "reverse",
        "desc": "([J)V"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Z)[Z"
      },
      {
        "name": "toObject",
        "desc": "([D)[Ljava/lang/Double;"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "remove",
        "desc": "([DI)[D"
      },
      {
        "name": "lastIndexOf",
        "desc": "([SSI)I"
      },
      {
        "name": "indexOf",
        "desc": "([JJ)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([I)[I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "reverse",
        "desc": "([Ljava/lang/Object;II)V"
      },
      {
        "name": "contains",
        "desc": "([DDD)Z"
      },
      {
        "name": "clone",
        "desc": "([Z)[Z"
      },
      {
        "name": "indexOf",
        "desc": "([ZZ)I"
      },
      {
        "name": "add",
        "desc": "([SS)[S"
      },
      {
        "name": "toObject",
        "desc": "([C)[Ljava/lang/Character;"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Double;D)[D"
      },
      {
        "name": "isSameLength",
        "desc": "([B[B)Z"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Float;F)[F"
      },
      {
        "name": "lastIndexOf",
        "desc": "([II)I"
      },
      {
        "name": "isNotEmpty",
        "desc": "([I)Z"
      },
      {
        "name": "subarray",
        "desc": "([SII)[S"
      },
      {
        "name": "nullToEmpty",
        "desc": "([D)[D"
      },
      {
        "name": "isEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "reverse",
        "desc": "([I)V"
      },
      {
        "name": "isEmpty",
        "desc": "([F)Z"
      },
      {
        "name": "remove",
        "desc": "([II)[I"
      },
      {
        "name": "addAll",
        "desc": "([J[J)[J"
      },
      {
        "name": "add",
        "desc": "([JIJ)[J"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Double;)[Ljava/lang/Double;"
      },
      {
        "name": "reverse",
        "desc": "([D)V"
      },
      {
        "name": "reverse",
        "desc": "([ZII)V"
      },
      {
        "name": "lastIndexOf",
        "desc": "([BB)I"
      },
      {
        "name": "add",
        "desc": "([FF)[F"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "toObject",
        "desc": "([B)[Ljava/lang/Byte;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isSameLength",
        "desc": "([Z[Z)Z"
      },
      {
        "name": "removeAll",
        "desc": "([J[I)[J"
      },
      {
        "name": "nullToEmpty",
        "desc": "([C)[C"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Short;S)[S"
      },
      {
        "name": "clone",
        "desc": "([B)[B"
      },
      {
        "name": "removeElements",
        "desc": "([J[J)[J"
      },
      {
        "name": "nullToEmpty",
        "desc": "([S)[S"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Integer;)[I"
      },
      {
        "name": "reverse",
        "desc": "([DII)V"
      },
      {
        "name": "subarray",
        "desc": "([CII)[C"
      },
      {
        "name": "contains",
        "desc": "([ZZ)Z"
      },
      {
        "name": "isSameLength",
        "desc": "([F[F)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([CC)I"
      },
      {
        "name": "contains",
        "desc": "([JJ)Z"
      },
      {
        "name": "isNotEmpty",
        "desc": "([J)Z"
      },
      {
        "name": "hashCode",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "([SS)I"
      },
      {
        "name": "toObject",
        "desc": "([S)[Ljava/lang/Short;"
      },
      {
        "name": "removeElements",
        "desc": "([B[B)[B"
      },
      {
        "name": "isSorted",
        "desc": "([F)Z"
      },
      {
        "name": "reverse",
        "desc": "([SII)V"
      },
      {
        "name": "isNotEmpty",
        "desc": "([Z)Z"
      },
      {
        "name": "contains",
        "desc": "([II)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([DDID)I"
      },
      {
        "name": "clone",
        "desc": "([S)[S"
      },
      {
        "name": "reverse",
        "desc": "([C)V"
      },
      {
        "name": "add",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "removeElement",
        "desc": "([ZZ)[Z"
      },
      {
        "name": "addAll",
        "desc": "([D[D)[D"
      },
      {
        "name": "lastIndexOf",
        "desc": "([DD)I"
      },
      {
        "name": "remove",
        "desc": "([ZI)[Z"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Boolean;)[Ljava/lang/Boolean;"
      },
      {
        "name": "isNotEmpty",
        "desc": "([B)Z"
      },
      {
        "name": "isSameLength",
        "desc": "([C[C)Z"
      },
      {
        "name": "removeElements",
        "desc": "([D[D)[D"
      },
      {
        "name": "remove",
        "desc": "([CI)[C"
      },
      {
        "name": "add",
        "desc": "([BIB)[B"
      },
      {
        "name": "isNotEmpty",
        "desc": "([Ljava/lang/Object;)Z"
      },
      {
        "name": "indexOf",
        "desc": "([JJI)I"
      },
      {
        "name": "isNotEmpty",
        "desc": "([S)Z"
      },
      {
        "name": "removeAll",
        "desc": "([Ljava/lang/Object;[I)[Ljava/lang/Object;"
      },
      {
        "name": "removeAll",
        "desc": "([C[I)[C"
      },
      {
        "name": "indexOf",
        "desc": "([III)I"
      },
      {
        "name": "reverse",
        "desc": "([S)V"
      },
      {
        "name": "add",
        "desc": "([ZZ)[Z"
      },
      {
        "name": "removeAll",
        "desc": "([F[I)[F"
      },
      {
        "name": "isEmpty",
        "desc": "([D)Z"
      },
      {
        "name": "add",
        "desc": "([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "indexOf",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;I)I"
      },
      {
        "name": "isSameLength",
        "desc": "([I[I)Z"
      },
      {
        "name": "add",
        "desc": "([CC)[C"
      },
      {
        "name": "reverse",
        "desc": "([F)V"
      },
      {
        "name": "isEmpty",
        "desc": "([C)Z"
      },
      {
        "name": "isSameLength",
        "desc": "([D[D)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([DDI)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Integer;)[Ljava/lang/Integer;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Integer;I)[I"
      },
      {
        "name": "add",
        "desc": "([II)[I"
      },
      {
        "name": "isNotEmpty",
        "desc": "([C)Z"
      },
      {
        "name": "toObject",
        "desc": "([F)[Ljava/lang/Float;"
      },
      {
        "name": "contains",
        "desc": "([FF)Z"
      },
      {
        "name": "subarray",
        "desc": "([III)[I"
      },
      {
        "name": "lastIndexOf",
        "desc": "([JJI)I"
      },
      {
        "name": "addAll",
        "desc": "([Z[Z)[Z"
      },
      {
        "name": "reverse",
        "desc": "([III)V"
      },
      {
        "name": "remove",
        "desc": "([FI)[F"
      },
      {
        "name": "removeAll",
        "desc": "([S[I)[S"
      },
      {
        "name": "reverse",
        "desc": "([CII)V"
      },
      {
        "name": "getLength",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "toObject",
        "desc": "([Z)[Ljava/lang/Boolean;"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Float;)[F"
      },
      {
        "name": "addAll",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "lastIndexOf",
        "desc": "([III)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([B)[B"
      },
      {
        "name": "isEmpty",
        "desc": "([S)Z"
      },
      {
        "name": "clone",
        "desc": "([C)[C"
      },
      {
        "name": "removeElement",
        "desc": "([FF)[F"
      },
      {
        "name": "isSorted",
        "desc": "([D)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;I)I"
      },
      {
        "name": "nullToEmpty",
        "desc": "([Ljava/lang/Character;)[Ljava/lang/Character;"
      },
      {
        "name": "isEmpty",
        "desc": "([B)Z"
      },
      {
        "name": "add",
        "desc": "([DID)[D"
      },
      {
        "name": "removeAll",
        "desc": "([Z[I)[Z"
      },
      {
        "name": "addAll",
        "desc": "([I[I)[I"
      },
      {
        "name": "isSorted",
        "desc": "([S)Z"
      },
      {
        "name": "removeAll",
        "desc": "([B[I)[B"
      },
      {
        "name": "indexOf",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "add",
        "desc": "([DD)[D"
      },
      {
        "name": "removeElements",
        "desc": "([Z[Z)[Z"
      },
      {
        "name": "isNotEmpty",
        "desc": "([D)Z"
      },
      {
        "name": "removeElements",
        "desc": "([I[I)[I"
      },
      {
        "name": "indexOf",
        "desc": "([DDI)I"
      },
      {
        "name": "indexOf",
        "desc": "([BB)I"
      },
      {
        "name": "subarray",
        "desc": "([Ljava/lang/Object;II)[Ljava/lang/Object;"
      },
      {
        "name": "lastIndexOf",
        "desc": "([CCI)I"
      },
      {
        "name": "toPrimitive",
        "desc": "([Ljava/lang/Character;)[C"
      },
      {
        "name": "removeElement",
        "desc": "([DD)[D"
      },
      {
        "name": "isSameLength",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "([FFI)I"
      },
      {
        "name": "contains",
        "desc": "([DD)Z"
      },
      {
        "name": "isSorted",
        "desc": "([Ljava/lang/Object;Ljava/util/Comparator;)Z"
      },
      {
        "name": "indexOf",
        "desc": "([CCI)I"
      },
      {
        "name": "remove",
        "desc": "([BI)[B"
      },
      {
        "name": "addAll",
        "desc": "([F[F)[F"
      },
      {
        "name": "add",
        "desc": "([BB)[B"
      },
      {
        "name": "isEmpty",
        "desc": "([Z)Z"
      },
      {
        "name": "removeElement",
        "desc": "([CC)[C"
      },
      {
        "name": "indexOf",
        "desc": "([CC)I"
      },
      {
        "name": "removeElements",
        "desc": "([F[F)[F"
      },
      {
        "name": "indexOf",
        "desc": "([SS)I"
      },
      {
        "name": "subarray",
        "desc": "([JII)[J"
      },
      {
        "name": "toMap",
        "desc": "([Ljava/lang/Object;)Ljava/util/Map;"
      },
      {
        "name": "lastIndexOf",
        "desc": "([Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "indexOf",
        "desc": "([BBI)I"
      },
      {
        "name": "isSorted",
        "desc": "([C)Z"
      },
      {
        "name": "removeElement",
        "desc": "([BB)[B"
      },
      {
        "name": "isEmpty",
        "desc": "([J)Z"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        2
      ],
      "double": [
        1.5
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ArrayUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.BitField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getShortValue",
        "desc": "(S)S"
      },
      {
        "name": "isSet",
        "desc": "(I)Z"
      },
      {
        "name": "setShortValue",
        "desc": "(SS)S"
      },
      {
        "name": "setByteBoolean",
        "desc": "(BZ)B"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "setShortBoolean",
        "desc": "(SZ)S"
      },
      {
        "name": "set",
        "desc": "(I)I"
      },
      {
        "name": "isAllSet",
        "desc": "(I)Z"
      },
      {
        "name": "setBoolean",
        "desc": "(IZ)I"
      },
      {
        "name": "clearShort",
        "desc": "(S)S"
      },
      {
        "name": "clearByte",
        "desc": "(B)B"
      },
      {
        "name": "clear",
        "desc": "(I)I"
      },
      {
        "name": "setShort",
        "desc": "(S)S"
      },
      {
        "name": "setByte",
        "desc": "(B)B"
      },
      {
        "name": "getValue",
        "desc": "(I)I"
      },
      {
        "name": "getShortRawValue",
        "desc": "(S)S"
      },
      {
        "name": "setValue",
        "desc": "(II)I"
      },
      {
        "name": "getRawValue",
        "desc": "(I)I"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.BooleanUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "toInteger",
        "desc": "(Ljava/lang/Boolean;III)I"
      },
      {
        "name": "toBoolean",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "isTrue",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "toBooleanDefaultIfNull",
        "desc": "(Ljava/lang/Boolean;Z)Z"
      },
      {
        "name": "toIntegerObject",
        "desc": "(Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;"
      },
      {
        "name": "xor",
        "desc": "([Z)Z"
      },
      {
        "name": "toInteger",
        "desc": "(Z)I"
      },
      {
        "name": "toStringTrueFalse",
        "desc": "(Z)Ljava/lang/String;"
      },
      {
        "name": "negate",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/Boolean;"
      },
      {
        "name": "toBoolean",
        "desc": "(III)Z"
      },
      {
        "name": "toStringOnOff",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/String;"
      },
      {
        "name": "isNotTrue",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "toInteger",
        "desc": "(ZII)I"
      },
      {
        "name": "toBoolean",
        "desc": "(I)Z"
      },
      {
        "name": "toBooleanObject",
        "desc": "(I)Ljava/lang/Boolean;"
      },
      {
        "name": "and",
        "desc": "([Ljava/lang/Boolean;)Ljava/lang/Boolean;"
      },
      {
        "name": "toBooleanObject",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "isNotFalse",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "toBooleanObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "toString",
        "desc": "(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "xor",
        "desc": "([Ljava/lang/Boolean;)Ljava/lang/Boolean;"
      },
      {
        "name": "toBooleanObject",
        "desc": "(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Boolean;"
      },
      {
        "name": "or",
        "desc": "([Ljava/lang/Boolean;)Ljava/lang/Boolean;"
      },
      {
        "name": "toIntegerObject",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/Integer;"
      },
      {
        "name": "toStringYesNo",
        "desc": "(Z)Ljava/lang/String;"
      },
      {
        "name": "isFalse",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toStringYesNo",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/String;"
      },
      {
        "name": "toBooleanObject",
        "desc": "(Ljava/lang/Integer;)Ljava/lang/Boolean;"
      },
      {
        "name": "toBoolean",
        "desc": "(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Z"
      },
      {
        "name": "and",
        "desc": "([Z)Z"
      },
      {
        "name": "toIntegerObject",
        "desc": "(Z)Ljava/lang/Integer;"
      },
      {
        "name": "toBoolean",
        "desc": "(Ljava/lang/Boolean;)Z"
      },
      {
        "name": "toBooleanObject",
        "desc": "(IIII)Ljava/lang/Boolean;"
      },
      {
        "name": "toIntegerObject",
        "desc": "(ZLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "toBoolean",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "or",
        "desc": "([Z)Z"
      },
      {
        "name": "toStringTrueFalse",
        "desc": "(Ljava/lang/Boolean;)Ljava/lang/String;"
      },
      {
        "name": "compare",
        "desc": "(ZZ)I"
      },
      {
        "name": "toStringOnOff",
        "desc": "(Z)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        65,
        69,
        70,
        76,
        78,
        79,
        82,
        83,
        84,
        85,
        89,
        97,
        101,
        102,
        108,
        110,
        111,
        114,
        115,
        116,
        117,
        121
      ],
      "char": [
        65,
        69,
        70,
        76,
        78,
        79,
        82,
        83,
        84,
        85,
        89,
        97,
        101,
        102,
        108,
        110,
        111,
        114,
        115,
        116,
        117,
        121
      ],
      "short": [
        65,
        69,
        70,
        76,
        78,
        79,
        82,
        83,
        84,
        85,
        89,
        97,
        101,
        102,
        108,
        110,
        111,
        114,
        115,
        116,
        117,
        121
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        65,
        69,
        70,
        76,
        78,
        79,
        82,
        83,
        84,
        85,
        89,
        97,
        101,
        102,
        108,
        110,
        111,
        114,
        115,
        116,
        117,
        121
      ],
      "str": [
        "true"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharEncoding",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isSupported",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharRange",
    "setters": [],
    "getters": [
      {
        "name": "getEnd",
        "desc": "()C",
        "field": "end"
      },
      {
        "name": "getStart",
        "desc": "()C",
        "field": "start"
      },
      {
        "name": "isNegated",
        "desc": "()Z",
        "field": "negated"
      }
    ],
    "observers": [
      {
        "name": "getEnd",
        "desc": "()C"
      },
      {
        "name": "getStart",
        "desc": "()C"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "isNegated",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isNotIn",
        "desc": "(CC)Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "getEnd",
        "desc": "()C"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "isIn",
        "desc": "(CC)Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getStart",
        "desc": "()C"
      },
      {
        "name": "contains",
        "desc": "(Lorg/apache/commons/lang3/CharRange;)Z"
      },
      {
        "name": "contains",
        "desc": "(C)Z"
      },
      {
        "name": "isNot",
        "desc": "(C)Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "is",
        "desc": "(C)Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "isNegated",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        7
      ],
      "short": [
        7
      ],
      "int": [
        0,
        1,
        4,
        7,
        65535
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable",
      "java.io.Serializable"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharRange$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.CharRange",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharRange$CharacterIterator",
    "setters": [],
    "getters": [
      {
        "name": "hasNext",
        "desc": "()Z",
        "field": "hasNext"
      }
    ],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        65535
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "org.apache.commons.lang3.CharRange",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharSequenceUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;II)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;II)I"
      },
      {
        "name": "regionMatches",
        "desc": "(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toCharArray",
        "desc": "(Ljava/lang/CharSequence;)[C"
      },
      {
        "name": "subSequence",
        "desc": "(Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharSet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCharRanges",
        "desc": "()[Lorg/apache/commons/lang3/CharRange;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getInstance",
        "desc": "([Ljava/lang/String;)Lorg/apache/commons/lang3/CharSet;"
      },
      {
        "name": "getCharRanges",
        "desc": "()[Lorg/apache/commons/lang3/CharRange;"
      },
      {
        "name": "contains",
        "desc": "(C)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        45,
        94
      ],
      "char": [
        45,
        94
      ],
      "short": [
        45,
        94
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        45,
        94
      ],
      "str": [
        "0-9",
        "A-Z",
        "a-z",
        "a-zA-Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharSetUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "squeeze",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "containsAny",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Z"
      },
      {
        "name": "keep",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "delete",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "count",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)I"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.CharUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isAsciiControl",
        "desc": "(C)Z"
      },
      {
        "name": "toCharacterObject",
        "desc": "(C)Ljava/lang/Character;"
      },
      {
        "name": "toIntValue",
        "desc": "(Ljava/lang/Character;I)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isAsciiNumeric",
        "desc": "(C)Z"
      },
      {
        "name": "isAsciiAlpha",
        "desc": "(C)Z"
      },
      {
        "name": "isAsciiAlphanumeric",
        "desc": "(C)Z"
      },
      {
        "name": "toChar",
        "desc": "(Ljava/lang/Character;C)C"
      },
      {
        "name": "isAsciiAlphaLower",
        "desc": "(C)Z"
      },
      {
        "name": "toCharacterObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Character;"
      },
      {
        "name": "toChar",
        "desc": "(Ljava/lang/String;)C"
      },
      {
        "name": "unicodeEscaped",
        "desc": "(C)Ljava/lang/String;"
      },
      {
        "name": "isAsciiPrintable",
        "desc": "(C)Z"
      },
      {
        "name": "isAscii",
        "desc": "(C)Z"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Character;)Ljava/lang/String;"
      },
      {
        "name": "toIntValue",
        "desc": "(C)I"
      },
      {
        "name": "isAsciiAlphaUpper",
        "desc": "(C)Z"
      },
      {
        "name": "toIntValue",
        "desc": "(Ljava/lang/Character;)I"
      },
      {
        "name": "toChar",
        "desc": "(Ljava/lang/Character;)C"
      },
      {
        "name": "unicodeEscaped",
        "desc": "(Ljava/lang/Character;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(C)Ljava/lang/String;"
      },
      {
        "name": "compare",
        "desc": "(CC)I"
      },
      {
        "name": "toChar",
        "desc": "(Ljava/lang/String;C)C"
      },
      {
        "name": "toIntValue",
        "desc": "(CI)I"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        16,
        32,
        48,
        57,
        65,
        90,
        97,
        122,
        127
      ],
      "char": [
        32,
        48,
        57,
        65,
        90,
        97,
        122
      ],
      "short": [
        6,
        16,
        32,
        48,
        57,
        65,
        90,
        97,
        122,
        127,
        128
      ],
      "int": [
        0,
        1,
        6,
        16,
        32,
        48,
        57,
        65,
        90,
        97,
        122,
        127,
        128
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassPathUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "toFullyQualifiedPath",
        "desc": "(Ljava/lang/Package;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "toFullyQualifiedPath",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "toFullyQualifiedName",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toFullyQualifiedName",
        "desc": "(Ljava/lang/Package;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "resourceName"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getPackageCanonicalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "convertClassesToClassNames",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "toClass",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Class;"
      },
      {
        "name": "hierarchy",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Iterable;"
      },
      {
        "name": "convertClassNamesToClasses",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "getAllInterfaces",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getPackageCanonicalName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;Z)Ljava/lang/Class;"
      },
      {
        "name": "getShortClassName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isAssignable",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Z"
      },
      {
        "name": "wrapperToPrimitive",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "primitivesToWrappers",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "isPrimitiveOrWrapper",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "isAssignable",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Class;Z)Z"
      },
      {
        "name": "hierarchy",
        "desc": "(Ljava/lang/Class;Lorg/apache/commons/lang3/ClassUtils$Interfaces;)Ljava/lang/Iterable;"
      },
      {
        "name": "getShortClassName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "wrappersToPrimitives",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "isAssignable",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Z)Z"
      },
      {
        "name": "getPublicMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAbbreviatedName",
        "desc": "(Ljava/lang/Class;I)Ljava/lang/String;"
      },
      {
        "name": "getAbbreviatedName",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "getSimpleName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getPackageCanonicalName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getShortCanonicalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getShortCanonicalName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/String;Z)Ljava/lang/Class;"
      },
      {
        "name": "getShortCanonicalName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "getSimpleName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getShortClassName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "primitiveToWrapper",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "getAllSuperclasses",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "isPrimitiveWrapper",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "isInnerClass",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "isAssignable",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        36,
        46,
        59,
        76,
        91
      ],
      "char": [
        36,
        46,
        59,
        76,
        91
      ],
      "short": [
        36,
        46,
        59,
        76,
        91
      ],
      "int": [
        -1,
        0,
        1,
        36,
        46,
        59,
        76,
        91
      ],
      "str": [
        "",
        ";",
        "L",
        "V",
        "[",
        "[]",
        "void"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$1$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$2",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$2$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ClassUtils$Interfaces",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "EXCLUDE",
        "INCLUDE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.ClassUtils",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.Conversion",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "intToHexDigitMsb0",
        "desc": "(I)C"
      },
      {
        "name": "binaryToLong",
        "desc": "([ZIJII)J"
      },
      {
        "name": "binaryBeMsb0ToHexDigit",
        "desc": "([ZI)C"
      },
      {
        "name": "intToByteArray",
        "desc": "(II[BII)[B"
      },
      {
        "name": "shortToByteArray",
        "desc": "(SI[BII)[B"
      },
      {
        "name": "longToHex",
        "desc": "(JILjava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "byteArrayToUuid",
        "desc": "([BI)Ljava/util/UUID;"
      },
      {
        "name": "byteToHex",
        "desc": "(BILjava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "hexDigitMsb0ToBinary",
        "desc": "(C)[Z"
      },
      {
        "name": "intToHex",
        "desc": "(IILjava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "hexDigitToInt",
        "desc": "(C)I"
      },
      {
        "name": "binaryToHexDigitMsb0_4bits",
        "desc": "([Z)C"
      },
      {
        "name": "hexDigitToBinary",
        "desc": "(C)[Z"
      },
      {
        "name": "longToByteArray",
        "desc": "(JI[BII)[B"
      },
      {
        "name": "hexToShort",
        "desc": "(Ljava/lang/String;ISII)S"
      },
      {
        "name": "hexToLong",
        "desc": "(Ljava/lang/String;IJII)J"
      },
      {
        "name": "hexDigitMsb0ToInt",
        "desc": "(C)I"
      },
      {
        "name": "shortArrayToLong",
        "desc": "([SIJII)J"
      },
      {
        "name": "shortArrayToInt",
        "desc": "([SIIII)I"
      },
      {
        "name": "intArrayToLong",
        "desc": "([IIJII)J"
      },
      {
        "name": "byteArrayToShort",
        "desc": "([BISII)S"
      },
      {
        "name": "intToHexDigit",
        "desc": "(I)C"
      },
      {
        "name": "byteArrayToInt",
        "desc": "([BIIII)I"
      },
      {
        "name": "binaryToHexDigit",
        "desc": "([ZI)C"
      },
      {
        "name": "intToBinary",
        "desc": "(II[ZII)[Z"
      },
      {
        "name": "intToShortArray",
        "desc": "(II[SII)[S"
      },
      {
        "name": "shortToHex",
        "desc": "(SILjava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "longToBinary",
        "desc": "(JI[ZII)[Z"
      },
      {
        "name": "uuidToByteArray",
        "desc": "(Ljava/util/UUID;[BII)[B"
      },
      {
        "name": "binaryToInt",
        "desc": "([ZIIII)I"
      },
      {
        "name": "longToIntArray",
        "desc": "(JI[III)[I"
      },
      {
        "name": "byteToBinary",
        "desc": "(BI[ZII)[Z"
      },
      {
        "name": "binaryToByte",
        "desc": "([ZIBII)B"
      },
      {
        "name": "hexToInt",
        "desc": "(Ljava/lang/String;IIII)I"
      },
      {
        "name": "binaryToHexDigit",
        "desc": "([Z)C"
      },
      {
        "name": "binaryBeMsb0ToHexDigit",
        "desc": "([Z)C"
      },
      {
        "name": "hexToByte",
        "desc": "(Ljava/lang/String;IBII)B"
      },
      {
        "name": "shortToBinary",
        "desc": "(SI[ZII)[Z"
      },
      {
        "name": "binaryToShort",
        "desc": "([ZISII)S"
      },
      {
        "name": "byteArrayToLong",
        "desc": "([BIJII)J"
      },
      {
        "name": "binaryToHexDigitMsb0_4bits",
        "desc": "([ZI)C"
      },
      {
        "name": "longToShortArray",
        "desc": "(JI[SII)[S"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        15,
        16,
        32,
        64,
        102
      ],
      "char": [
        32,
        64,
        102
      ],
      "short": [
        8,
        15,
        16,
        32,
        64,
        102
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        8,
        15,
        16,
        32,
        64,
        102
      ],
      "long": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.EnumUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generateBitVectors",
        "desc": "(Ljava/lang/Class;Ljava/lang/Iterable;)[J"
      },
      {
        "name": "processBitVector",
        "desc": "(Ljava/lang/Class;J)Ljava/util/EnumSet;"
      },
      {
        "name": "generateBitVectors",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Enum;)[J"
      },
      {
        "name": "processBitVectors",
        "desc": "(Ljava/lang/Class;[J)Ljava/util/EnumSet;"
      },
      {
        "name": "generateBitVector",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Enum;)J"
      },
      {
        "name": "isValidEnum",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Z"
      },
      {
        "name": "getEnumList",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getEnum",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;"
      },
      {
        "name": "generateBitVector",
        "desc": "(Ljava/lang/Class;Ljava/lang/Iterable;)J"
      },
      {
        "name": "getEnumMap",
        "desc": "(Ljava/lang/Class;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "byte": [
        64
      ],
      "char": [
        64
      ],
      "short": [
        64
      ],
      "int": [
        0,
        1,
        64
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.JavaVersion",
    "setters": [],
    "getters": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "get",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/JavaVersion;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getJavaVersion",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/JavaVersion;"
      },
      {
        "name": "atLeast",
        "desc": "(Lorg/apache/commons/lang3/JavaVersion;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10
      ],
      "short": [
        6,
        7,
        8,
        9,
        10
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "float": [
        0.0,
        0.9,
        1.1,
        1.2,
        1.3,
        1.4,
        1.5,
        1.6,
        1.7,
        1.8,
        1.9
      ],
      "double": [
        2.0
      ],
      "str": [
        "0.9",
        "1.1",
        "1.2",
        "1.3",
        "1.4",
        "1.5",
        "1.6",
        "1.7",
        "1.8",
        "1.9",
        "2.0",
        "JAVA_0_9",
        "JAVA_1_1",
        "JAVA_1_2",
        "JAVA_1_3",
        "JAVA_1_4",
        "JAVA_1_5",
        "JAVA_1_6",
        "JAVA_1_7",
        "JAVA_1_8",
        "JAVA_1_9",
        "JAVA_RECENT",
        "\\."
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.LocaleUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "toLocale",
        "desc": "(Ljava/lang/String;)Ljava/util/Locale;"
      },
      {
        "name": "availableLocaleList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "languagesByCountry",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "localeLookupList",
        "desc": "(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;"
      },
      {
        "name": "isAvailableLocale",
        "desc": "(Ljava/util/Locale;)Z"
      },
      {
        "name": "localeLookupList",
        "desc": "(Ljava/util/Locale;)Ljava/util/List;"
      },
      {
        "name": "availableLocaleSet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "countriesByLanguage",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "byte": [
        95
      ],
      "char": [
        95
      ],
      "short": [
        95
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        95
      ],
      "str": [
        "",
        "#"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.LocaleUtils$SyncAvoid",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.LocaleUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.NotImplementedException",
    "setters": [],
    "getters": [
      {
        "name": "getCode",
        "desc": "()Ljava/lang/String;",
        "field": "code"
      }
    ],
    "observers": [
      {
        "name": "getCode",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "getCode",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.UnsupportedOperationException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ObjectUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "min",
        "desc": "([Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "identityToString",
        "desc": "(Ljava/lang/StringBuilder;Ljava/lang/Object;)V"
      },
      {
        "name": "CONST",
        "desc": "(Z)Z"
      },
      {
        "name": "CONST_SHORT",
        "desc": "(I)S"
      },
      {
        "name": "firstNonNull",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Comparable;Ljava/lang/Comparable;)I"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "cloneIfPossible",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "CONST",
        "desc": "(D)D"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "identityToString",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;Ljava/lang/Object;)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "CONST",
        "desc": "(B)B"
      },
      {
        "name": "CONST",
        "desc": "(C)C"
      },
      {
        "name": "CONST",
        "desc": "(I)I"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I"
      },
      {
        "name": "CONST",
        "desc": "(F)F"
      },
      {
        "name": "median",
        "desc": "(Ljava/util/Comparator;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "identityToString",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/Object;)V"
      },
      {
        "name": "CONST",
        "desc": "(J)J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "identityToString",
        "desc": "(Ljava/lang/Appendable;Ljava/lang/Object;)V"
      },
      {
        "name": "median",
        "desc": "([Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "defaultIfNull",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "hashCodeMulti",
        "desc": "([Ljava/lang/Object;)I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "CONST_BYTE",
        "desc": "(I)B"
      },
      {
        "name": "notEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "identityToString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "max",
        "desc": "([Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "CONST",
        "desc": "(S)S"
      },
      {
        "name": "mode",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "CONST",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        64,
        127
      ],
      "char": [
        64
      ],
      "short": [
        -32768,
        -128,
        64,
        127,
        32767
      ],
      "int": [
        -32768,
        -128,
        0,
        1,
        64,
        127,
        32767
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.ObjectUtils$Null",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "outerClass": "org.apache.commons.lang3.ObjectUtils",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.RandomStringUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "random",
        "desc": "(IIIZZ[C)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(IIIZZ[CLjava/util/Random;)Ljava/lang/String;"
      },
      {
        "name": "randomAscii",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "randomNumeric",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(ILjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "random",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "randomAlphanumeric",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "randomAlphabetic",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(IZZ)Ljava/lang/String;"
      },
      {
        "name": "random",
        "desc": "(IIIZZ)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        32,
        55296,
        56191,
        56192,
        56319,
        56320,
        57343
      ],
      "str": [
        "",
        ")"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.RandomUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "nextFloat",
        "desc": "(FF)F"
      },
      {
        "name": "nextInt",
        "desc": "(II)I"
      },
      {
        "name": "nextBytes",
        "desc": "(I)[B"
      },
      {
        "name": "nextLong",
        "desc": "(JJ)J"
      },
      {
        "name": "nextDouble",
        "desc": "(DD)D"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ],
      "float": [
        0.0
      ],
      "double": [
        1.0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.Range",
    "setters": [],
    "getters": [
      {
        "name": "getMinimum",
        "desc": "()Ljava/lang/Object;",
        "field": "minimum"
      },
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;",
        "field": "comparator"
      },
      {
        "name": "getMaximum",
        "desc": "()Ljava/lang/Object;",
        "field": "maximum"
      }
    ],
    "observers": [
      {
        "name": "getMinimum",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMaximum",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isNaturalOrdering",
        "desc": "()Z"
      },
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMinimum",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "elementCompareTo",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "containsRange",
        "desc": "(Lorg/apache/commons/lang3/Range;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "isBeforeRange",
        "desc": "(Lorg/apache/commons/lang3/Range;)Z"
      },
      {
        "name": "isOverlappedBy",
        "desc": "(Lorg/apache/commons/lang3/Range;)Z"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "isStartedBy",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "between",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getMaximum",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isNaturalOrdering",
        "desc": "()Z"
      },
      {
        "name": "isAfterRange",
        "desc": "(Lorg/apache/commons/lang3/Range;)Z"
      },
      {
        "name": "isBefore",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isAfter",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "intersectionWith",
        "desc": "(Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "between",
        "desc": "(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;"
      },
      {
        "name": "isEndedBy",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        -1,
        0,
        1,
        32
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.Range$ComparableComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "INSTANCE"
      ]
    },
    "parents": [
      "java.lang.Enum",
      "java.util.Comparator"
    ],
    "outerClass": "org.apache.commons.lang3.Range",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.SerializationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.SerializationUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "deserialize",
        "desc": "([B)Ljava/lang/Object;"
      },
      {
        "name": "deserialize",
        "desc": "(Ljava/io/InputStream;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "roundtrip",
        "desc": "(Ljava/io/Serializable;)Ljava/io/Serializable;"
      },
      {
        "name": "serialize",
        "desc": "(Ljava/io/Serializable;)[B"
      },
      {
        "name": "clone",
        "desc": "(Ljava/io/Serializable;)Ljava/io/Serializable;"
      },
      {
        "name": "serialize",
        "desc": "(Ljava/io/Serializable;Ljava/io/OutputStream;)V"
      }
    ],
    "dictionary": {
      "short": [
        512
      ],
      "int": [
        512
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resolveClass",
        "desc": "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V"
      }
    ],
    "dictionary": {
      "str": [
        "void"
      ]
    },
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "outerClass": "org.apache.commons.lang3.SerializationUtils",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.StringEscapeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "unescapeXml",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeXml",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeJson",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "escapeXml10",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeXml11",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeEcmaScript",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeCsv",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeJson",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeEcmaScript",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeHtml4",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeCsv",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeHtml3",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeHtml4",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "escapeJava",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeJava",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "unescapeHtml3",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        32,
        127
      ],
      "char": [
        32
      ],
      "short": [
        6,
        7,
        8,
        32,
        127,
        134,
        159
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        32,
        127,
        134,
        159
      ],
      "str": [
        "",
        "/",
        "\\",
        "\\/",
        "\\\\",
        "￿"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.StringEscapeUtils$CsvEscaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        13,
        34
      ],
      "char": [
        34
      ],
      "short": [
        10,
        13,
        34
      ],
      "int": [
        2,
        3,
        4,
        10,
        13,
        34
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "outerClass": "org.apache.commons.lang3.StringEscapeUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        13,
        34
      ],
      "char": [
        34
      ],
      "short": [
        10,
        13,
        34
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        10,
        13,
        34
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "outerClass": "org.apache.commons.lang3.StringEscapeUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.StringUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "substring",
        "desc": "(Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "mid",
        "desc": "(Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "splitPreserveAllTokens",
        "desc": "(Ljava/lang/String;C)[Ljava/lang/String;"
      },
      {
        "name": "lowerCase",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "right",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "splitByWholeSeparatorPreserveAllTokens",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "substringAfterLast",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "splitPreserveAllTokens",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "reverse",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "startsWithIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "substringsBetween",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "containsNone",
        "desc": "(Ljava/lang/CharSequence;[C)Z"
      },
      {
        "name": "leftPad",
        "desc": "(Ljava/lang/String;IC)Ljava/lang/String;"
      },
      {
        "name": "isAsciiPrintable",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "abbreviateMiddle",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "strip",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "containsOnly",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)Z"
      },
      {
        "name": "lastIndexOfAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)I"
      },
      {
        "name": "isNoneEmpty",
        "desc": "([Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "stripAccents",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "containsAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "capitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "prependIfMissingIgnoreCase",
        "desc": "(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([CC)Ljava/lang/String;"
      },
      {
        "name": "splitByWholeSeparator",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;"
      },
      {
        "name": "stripAll",
        "desc": "([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "swapCase",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isWhitespace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "containsOnly",
        "desc": "(Ljava/lang/CharSequence;[C)Z"
      },
      {
        "name": "replaceChars",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "indexOfAnyBut",
        "desc": "(Ljava/lang/CharSequence;[C)I"
      },
      {
        "name": "endsWithAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "stripToNull",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([BC)Ljava/lang/String;"
      },
      {
        "name": "isAlphanumericSpace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "removeStart",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "containsNone",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)Z"
      },
      {
        "name": "leftPad",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "upperCase",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([BCII)Ljava/lang/String;"
      },
      {
        "name": "indexOfAnyBut",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "isAnyEmpty",
        "desc": "([Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "containsAny",
        "desc": "(Ljava/lang/CharSequence;[C)Z"
      },
      {
        "name": "join",
        "desc": "([SCII)Ljava/lang/String;"
      },
      {
        "name": "indexOfIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "indexOfAny",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)I"
      },
      {
        "name": "lastOrdinalIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "toEncodedString",
        "desc": "([BLjava/nio/charset/Charset;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([DC)Ljava/lang/String;"
      },
      {
        "name": "reverseDelimited",
        "desc": "(Ljava/lang/String;C)Ljava/lang/String;"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;II)I"
      },
      {
        "name": "upperCase",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "substringBeforeLast",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isNumericSpace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "deleteWhitespace",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "stripEnd",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "chomp",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "repeat",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "rightPad",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "abbreviate",
        "desc": "(Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "isAnyBlank",
        "desc": "([Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "containsWhitespace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "splitByCharacterTypeCamelCase",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([DCII)Ljava/lang/String;"
      },
      {
        "name": "replacePattern",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/String;C)Ljava/lang/String;"
      },
      {
        "name": "indexOfDifference",
        "desc": "([Ljava/lang/CharSequence;)I"
      },
      {
        "name": "substringBetween",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "center",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "lastIndexOfIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "countMatches",
        "desc": "(Ljava/lang/CharSequence;C)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "trim",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "replaceEach",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "defaultString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "strip",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "equalsIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "removePattern",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "lowerCase",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getJaroWinklerDistance",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)D"
      },
      {
        "name": "trimToNull",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "stripToEmpty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;II)I"
      },
      {
        "name": "replaceOnce",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "leftPad",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "abbreviate",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "substringBefore",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "trimToEmpty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([FCII)Ljava/lang/String;"
      },
      {
        "name": "appendIfMissingIgnoreCase",
        "desc": "(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "isNumeric",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/CharSequence;I)Z"
      },
      {
        "name": "isEmpty",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "isNotEmpty",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/String;C)Ljava/lang/String;"
      },
      {
        "name": "defaultIfBlank",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
      },
      {
        "name": "isBlank",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([FC)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "(Ljava/util/Iterator;C)Ljava/lang/String;"
      },
      {
        "name": "isAlpha",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;C)Ljava/lang/String;"
      },
      {
        "name": "rightPad",
        "desc": "(Ljava/lang/String;IC)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;C)[Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "defaultIfEmpty",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
      },
      {
        "name": "join",
        "desc": "(Ljava/util/Iterator;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isNotBlank",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "ordinalIndexOf",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "replaceChars",
        "desc": "(Ljava/lang/String;CC)Ljava/lang/String;"
      },
      {
        "name": "lastIndexOfIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "join",
        "desc": "([ICII)Ljava/lang/String;"
      },
      {
        "name": "uncapitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "center",
        "desc": "(Ljava/lang/String;IC)Ljava/lang/String;"
      },
      {
        "name": "containsIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "isAllUpperCase",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([JCII)Ljava/lang/String;"
      },
      {
        "name": "removeEnd",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "splitByWholeSeparatorPreserveAllTokens",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;"
      },
      {
        "name": "getLevenshteinDistance",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "countMatches",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "stripAll",
        "desc": "([Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "center",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "getFuzzyDistance",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/util/Locale;)I"
      },
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "removeStartIgnoreCase",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isAllLowerCase",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "join",
        "desc": "([IC)Ljava/lang/String;"
      },
      {
        "name": "overlay",
        "desc": "(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "getCommonPrefix",
        "desc": "([Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "chomp",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "left",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "substringBetween",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "length",
        "desc": "(Ljava/lang/CharSequence;)I"
      },
      {
        "name": "rightPad",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "removeEndIgnoreCase",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "containsAny",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "prependIfMissing",
        "desc": "(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "substringAfter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "normalizeSpace",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;CII)Ljava/lang/String;"
      },
      {
        "name": "indexOfAny",
        "desc": "(Ljava/lang/CharSequence;[C)I"
      },
      {
        "name": "join",
        "desc": "([CCII)Ljava/lang/String;"
      },
      {
        "name": "repeat",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "getLevenshteinDistance",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "difference",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "stripStart",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "([BLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isAlphanumeric",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "appendIfMissing",
        "desc": "(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "splitByWholeSeparator",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "replaceEachRepeatedly",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "indexOfIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I"
      },
      {
        "name": "splitPreserveAllTokens",
        "desc": "(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "([SC)Ljava/lang/String;"
      },
      {
        "name": "splitPreserveAllTokens",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "chop",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "(Ljava/lang/Iterable;C)Ljava/lang/String;"
      },
      {
        "name": "isNoneBlank",
        "desc": "([Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "indexOfAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)I"
      },
      {
        "name": "join",
        "desc": "([JC)Ljava/lang/String;"
      },
      {
        "name": "defaultString",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "indexOfDifference",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I"
      },
      {
        "name": "splitByCharacterType",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "startsWithAny",
        "desc": "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "isAlphaSpace",
        "desc": "(Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "repeat",
        "desc": "(CI)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "endsWithIgnoreCase",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
      },
      {
        "name": "substring",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        10,
        13,
        16,
        32,
        64
      ],
      "char": [
        32,
        64
      ],
      "short": [
        7,
        10,
        13,
        16,
        32,
        64,
        160,
        256,
        8192
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        10,
        13,
        16,
        32,
        64,
        160,
        256,
        8192,
        2147483647
      ],
      "double": [
        1.0
      ],
      "str": [
        "",
        "..."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.SystemUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getUserHome",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isJavaAwtHeadless",
        "desc": "()Z"
      },
      {
        "name": "isOSNameMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isOSMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getUserDir",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isOSVersionMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getJavaIoTmpDir",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isJavaVersionMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "getJavaHome",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isJavaVersionAtLeast",
        "desc": "(Lorg/apache/commons/lang3/JavaVersion;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "1.1",
        "1.2",
        "1.3",
        "1.4",
        "1.5",
        "1.6",
        "1.7",
        "1.8",
        "1.9",
        "10.0",
        "10.1",
        "10.10",
        "10.2",
        "10.3",
        "10.4",
        "10.5",
        "10.6",
        "10.7",
        "10.8",
        "10.9",
        "AIX",
        "FreeBSD",
        "HP-UX",
        "Irix",
        "LINUX",
        "Linux",
        "Mac",
        "NetBSD",
        "OS/2",
        "OS/400",
        "OpenBSD",
        "Solaris",
        "SunOS",
        "Windows",
        "java.home",
        "java.io.tmpdir",
        "user.dir",
        "user.home",
        "user.timezone"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.Validate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validIndex",
        "desc": "([Ljava/lang/Object;I)[Ljava/lang/Object;"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V"
      },
      {
        "name": "isTrue",
        "desc": "(ZLjava/lang/String;J)V"
      },
      {
        "name": "notBlank",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;"
      },
      {
        "name": "validState",
        "desc": "(Z)V"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(JJJ)V"
      },
      {
        "name": "notEmpty",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;"
      },
      {
        "name": "isInstanceOf",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "validIndex",
        "desc": "(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(DDDLjava/lang/String;)V"
      },
      {
        "name": "notNull",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "validState",
        "desc": "(ZLjava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(JJJ)V"
      },
      {
        "name": "matchesPattern",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;)V"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "noNullElements",
        "desc": "(Ljava/lang/Iterable;)Ljava/lang/Iterable;"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(DDDLjava/lang/String;)V"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(DDD)V"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/util/Map;)Ljava/util/Map;"
      },
      {
        "name": "validIndex",
        "desc": "(Ljava/util/Collection;I)Ljava/util/Collection;"
      },
      {
        "name": "noNullElements",
        "desc": "(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(JJJLjava/lang/String;)V"
      },
      {
        "name": "notNull",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "validIndex",
        "desc": "(Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;"
      },
      {
        "name": "notBlank",
        "desc": "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
      },
      {
        "name": "isInstanceOf",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "noNullElements",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "noNullElements",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "matchesPattern",
        "desc": "(Ljava/lang/CharSequence;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "inclusiveBetween",
        "desc": "(JJJLjava/lang/String;)V"
      },
      {
        "name": "notEmpty",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "validIndex",
        "desc": "(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;"
      },
      {
        "name": "isTrue",
        "desc": "(ZLjava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
      },
      {
        "name": "exclusiveBetween",
        "desc": "(DDD)V"
      },
      {
        "name": "notEmpty",
        "desc": "(Ljava/util/Collection;)Ljava/util/Collection;"
      },
      {
        "name": "validIndex",
        "desc": "([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "isTrue",
        "desc": "(ZLjava/lang/String;D)V"
      },
      {
        "name": "isTrue",
        "desc": "(Z)V"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.CompareToBuilder",
    "setters": [
      {
        "name": "append",
        "desc": "(SS)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(FF)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([Z[Z)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([I[I)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([D[D)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([F[F)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([S[S)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "appendSuper",
        "desc": "(I)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([B[B)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([J[J)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "([C[C)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      },
      {
        "name": "append",
        "desc": "(DD)Lorg/apache/commons/lang3/builder/CompareToBuilder;",
        "field": "comparison"
      }
    ],
    "getters": [
      {
        "name": "toComparison",
        "desc": "()I",
        "field": "comparison"
      }
    ],
    "observers": [
      {
        "name": "toComparison",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)I"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([I[I)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([D[D)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "toComparison",
        "desc": "()I"
      },
      {
        "name": "append",
        "desc": "([S[S)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "appendSuper",
        "desc": "(I)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)I"
      },
      {
        "name": "append",
        "desc": "(DD)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Z)I"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(FF)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([Z[Z)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "append",
        "desc": "([F[F)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([B[B)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "append",
        "desc": "([J[J)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      },
      {
        "name": "reflectionCompare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)I"
      },
      {
        "name": "append",
        "desc": "([C[C)Lorg/apache/commons/lang3/builder/CompareToBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        -1,
        0,
        1,
        36
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.Diff",
    "setters": [],
    "getters": [
      {
        "name": "getFieldName",
        "desc": "()Ljava/lang/String;",
        "field": "fieldName"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.tuple.Pair"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "append",
        "desc": "(Ljava/lang/String;DD)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;ZZ)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[C[C)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;FF)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Z[Z)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;II)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;CC)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[J[J)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;SS)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[S[S)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[B[B)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[I[I)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[F[F)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;BB)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "build",
        "desc": "()Lorg/apache/commons/lang3/builder/DiffResult;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;JJ)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[D[D)Lorg/apache/commons/lang3/builder/DiffBuilder;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Boolean;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$10",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Float;"
      },
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Float;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$11",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Integer;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$12",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Integer;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Integer;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$13",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Long;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Long;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$14",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Long;"
      },
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Long;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$15",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Short;"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Short;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$16",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Short;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Short;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$17",
    "setters": [],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "val$lhs"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "val$rhs"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$18",
    "setters": [],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Object;",
        "field": "val$lhs"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Object;",
        "field": "val$rhs"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$2",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Boolean;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Boolean;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$3",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Byte;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Byte;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$4",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Byte;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Byte;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$5",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Character;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Character;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$6",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Character;"
      },
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Character;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$7",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Double;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Double;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$8",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()[Ljava/lang/Double;"
      },
      {
        "name": "getRight",
        "desc": "()[Ljava/lang/Double;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffBuilder$9",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Float;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Float;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.Diff"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.DiffResult",
    "setters": [],
    "getters": [
      {
        "name": "getToStringStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;",
        "field": "style"
      }
    ],
    "observers": [
      {
        "name": "getDiffs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getNumberOfDiffs",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "getToStringStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      }
    ],
    "testableMethods": [
      {
        "name": "getDiffs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getNumberOfDiffs",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "toString",
        "desc": "(Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "getToStringStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.Diffable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.EqualsBuilder",
    "setters": [
      {
        "name": "append",
        "desc": "(CC)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "appendSuper",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/apache/commons/lang3/builder/EqualsBuilder;",
        "field": "isEquals"
      }
    ],
    "getters": [
      {
        "name": "isEquals",
        "desc": "()Z",
        "field": "isEquals"
      }
    ],
    "observers": [
      {
        "name": "isEquals",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getRegisterPair",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Pair;"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([S[S)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([D[D)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "build",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "append",
        "desc": "(FF)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "unregister",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "append",
        "desc": "([C[C)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)Z"
      },
      {
        "name": "setEquals",
        "desc": "(Z)V"
      },
      {
        "name": "append",
        "desc": "([B[B)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "register",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "append",
        "desc": "([F[F)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)Z"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "isRegistered",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Z)Z"
      },
      {
        "name": "isEquals",
        "desc": "()Z"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([J[J)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([I[I)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([Z[Z)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "appendSuper",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)Z"
      },
      {
        "name": "getRegistry",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "append",
        "desc": "(DD)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/apache/commons/lang3/builder/EqualsBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        -1,
        0,
        1,
        36
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.HashCodeBuilder",
    "setters": [
      {
        "name": "append",
        "desc": "(B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "appendSuper",
        "desc": "(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([D)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "([Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;",
        "field": "iTotal"
      }
    ],
    "getters": [
      {
        "name": "toHashCode",
        "desc": "()I",
        "field": "iTotal"
      }
    ],
    "observers": [
      {
        "name": "toHashCode",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "appendSuper",
        "desc": "(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "unregister",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(IILjava/lang/Object;)I"
      },
      {
        "name": "append",
        "desc": "(S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "(J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "isRegistered",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "append",
        "desc": "(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(Ljava/lang/Object;Ljava/util/Collection;)I"
      },
      {
        "name": "append",
        "desc": "([D)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "append",
        "desc": "([Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(Ljava/lang/Object;[Ljava/lang/String;)I"
      },
      {
        "name": "toHashCode",
        "desc": "()I"
      },
      {
        "name": "append",
        "desc": "(B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "append",
        "desc": "([J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "(D)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "append",
        "desc": "([B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "register",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(IILjava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)I"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(IILjava/lang/Object;Z)I"
      },
      {
        "name": "reflectionHashCode",
        "desc": "(Ljava/lang/Object;Z)I"
      },
      {
        "name": "append",
        "desc": "(F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      },
      {
        "name": "getRegistry",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        17,
        32,
        36,
        37
      ],
      "char": [
        32,
        36,
        37
      ],
      "short": [
        17,
        32,
        36,
        37
      ],
      "int": [
        -1,
        0,
        1,
        2,
        17,
        32,
        36,
        37
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.IDKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle",
    "setters": [
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "spaces"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[B)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[S)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[C)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[J)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[Z)V"
      },
      {
        "name": "reflectionAppendArrayDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[I)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[F)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[D)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;[Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ],
      "str": [
        "]",
        "}"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.RecursiveToStringStyle"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.RecursiveToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/util/Collection;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "appendDetail",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ReflectionToStringBuilder",
    "setters": [
      {
        "name": "setUpToClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "upToClass"
      },
      {
        "name": "setAppendTransients",
        "desc": "(Z)V",
        "field": "appendTransients"
      },
      {
        "name": "setAppendStatics",
        "desc": "(Z)V",
        "field": "appendStatics"
      },
      {
        "name": "setExcludeFieldNames",
        "desc": "([Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
        "field": "excludeFieldNames"
      }
    ],
    "getters": [
      {
        "name": "getUpToClass",
        "desc": "()Ljava/lang/Class;",
        "field": "upToClass"
      },
      {
        "name": "isAppendStatics",
        "desc": "()Z",
        "field": "appendStatics"
      },
      {
        "name": "isAppendTransients",
        "desc": "()Z",
        "field": "appendTransients"
      }
    ],
    "observers": [
      {
        "name": "getUpToClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAppendTransients",
        "desc": "()Z"
      },
      {
        "name": "isAppendStatics",
        "desc": "()Z"
      },
      {
        "name": "getExcludeFieldNames",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZ)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V"
      },
      {
        "name": "toNoNullStringArray",
        "desc": "(Ljava/util/Collection;)[Ljava/lang/String;"
      },
      {
        "name": "toNoNullStringArray",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "getUpToClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V"
      },
      {
        "name": "isAppendStatics",
        "desc": "()Z"
      },
      {
        "name": "setUpToClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "accept",
        "desc": "(Ljava/lang/reflect/Field;)Z"
      },
      {
        "name": "getExcludeFieldNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "(Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "setExcludeFieldNames",
        "desc": "([Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;"
      },
      {
        "name": "appendFieldsIn",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "isAppendTransients",
        "desc": "()Z"
      },
      {
        "name": "setAppendTransients",
        "desc": "(Z)V"
      },
      {
        "name": "toStringExclude",
        "desc": "(Ljava/lang/Object;Ljava/util/Collection;)Ljava/lang/String;"
      },
      {
        "name": "toStringExclude",
        "desc": "(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "setAppendStatics",
        "desc": "(Z)V"
      },
      {
        "name": "reflectionAppendArray",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        -1,
        0,
        36
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.StandardToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSizeStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseClassName",
        "desc": "()Z"
      },
      {
        "name": "isFieldSeparatorAtStart",
        "desc": "()Z"
      },
      {
        "name": "getSummaryObjectEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isArrayContentDetail",
        "desc": "()Z"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldNameValueSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArraySeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSizeEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFieldSeparatorAtEnd",
        "desc": "()Z"
      },
      {
        "name": "getContentEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseShortClassName",
        "desc": "()Z"
      },
      {
        "name": "isUseFieldNames",
        "desc": "()Z"
      },
      {
        "name": "getSummaryObjectStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayStart",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseIdentityHashCode",
        "desc": "()Z"
      },
      {
        "name": "isDefaultFullDetail",
        "desc": "()Z"
      },
      {
        "name": "getContentStart",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getSizeStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setSizeStartText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isFieldSeparatorAtStart",
        "desc": "()Z"
      },
      {
        "name": "setSizeEndText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setDefaultFullDetail",
        "desc": "(Z)V"
      },
      {
        "name": "setFieldSeparatorAtStart",
        "desc": "(Z)V"
      },
      {
        "name": "setContentEnd",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setFieldSeparatorAtEnd",
        "desc": "(Z)V"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setNullText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFieldNameValueSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setUseIdentityHashCode",
        "desc": "(Z)V"
      },
      {
        "name": "getSizeEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseShortClassName",
        "desc": "()Z"
      },
      {
        "name": "setUseClassName",
        "desc": "(Z)V"
      },
      {
        "name": "setFieldSeparator",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isDefaultFullDetail",
        "desc": "()Z"
      },
      {
        "name": "setSummaryObjectStartText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isUseClassName",
        "desc": "()Z"
      },
      {
        "name": "setArrayEnd",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setFieldNameValueSeparator",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSummaryObjectEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setUseFieldNames",
        "desc": "(Z)V"
      },
      {
        "name": "isArrayContentDetail",
        "desc": "()Z"
      },
      {
        "name": "setArraySeparator",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setUseShortClassName",
        "desc": "(Z)V"
      },
      {
        "name": "setArrayStart",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setArrayContentDetail",
        "desc": "(Z)V"
      },
      {
        "name": "getArraySeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFieldSeparatorAtEnd",
        "desc": "()Z"
      },
      {
        "name": "setSummaryObjectEndText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isUseFieldNames",
        "desc": "()Z"
      },
      {
        "name": "setContentStart",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSummaryObjectStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayStart",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseIdentityHashCode",
        "desc": "()Z"
      },
      {
        "name": "getContentStart",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringBuilder",
    "setters": [],
    "getters": [
      {
        "name": "getStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;",
        "field": "style"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;",
        "field": "object"
      },
      {
        "name": "getStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;",
        "field": "buffer"
      }
    ],
    "observers": [
      {
        "name": "getStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;"
      }
    ],
    "testableMethods": [
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([I)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[IZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "appendToString",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "reflectionToString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(I)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "appendAsObjectToString",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(J)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([J)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "reflectionToString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "([Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[S)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([D)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(F)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;J)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;S)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "reflectionToString",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZLjava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[J)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "append",
        "desc": "(D)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([F)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "getStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[CZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;C)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[D)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[JZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[C)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([S)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;D)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[B)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(S)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[F)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "getStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([B)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;F)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "appendSuper",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(B)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "getDefaultStyle",
        "desc": "()Lorg/apache/commons/lang3/builder/ToStringStyle;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[ZZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[I)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "setDefaultStyle",
        "desc": "(Lorg/apache/commons/lang3/builder/ToStringStyle;)V"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[FZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;I)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "build",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "reflectionToString",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;B)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[BZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[SZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[DZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;"
      }
    ],
    "dictionary": {
      "short": [
        512
      ],
      "int": [
        512
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle",
    "setters": [],
    "getters": [
      {
        "name": "getSizeStartText",
        "desc": "()Ljava/lang/String;",
        "field": "sizeStartText"
      },
      {
        "name": "isUseClassName",
        "desc": "()Z",
        "field": "useClassName"
      },
      {
        "name": "isFieldSeparatorAtStart",
        "desc": "()Z",
        "field": "fieldSeparatorAtStart"
      },
      {
        "name": "getSummaryObjectEndText",
        "desc": "()Ljava/lang/String;",
        "field": "summaryObjectEndText"
      },
      {
        "name": "isArrayContentDetail",
        "desc": "()Z",
        "field": "arrayContentDetail"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;",
        "field": "nullText"
      },
      {
        "name": "getFieldNameValueSeparator",
        "desc": "()Ljava/lang/String;",
        "field": "fieldNameValueSeparator"
      },
      {
        "name": "getArrayEnd",
        "desc": "()Ljava/lang/String;",
        "field": "arrayEnd"
      },
      {
        "name": "getArraySeparator",
        "desc": "()Ljava/lang/String;",
        "field": "arraySeparator"
      },
      {
        "name": "getSizeEndText",
        "desc": "()Ljava/lang/String;",
        "field": "sizeEndText"
      },
      {
        "name": "isFieldSeparatorAtEnd",
        "desc": "()Z",
        "field": "fieldSeparatorAtEnd"
      },
      {
        "name": "getContentEnd",
        "desc": "()Ljava/lang/String;",
        "field": "contentEnd"
      },
      {
        "name": "getFieldSeparator",
        "desc": "()Ljava/lang/String;",
        "field": "fieldSeparator"
      },
      {
        "name": "isUseShortClassName",
        "desc": "()Z",
        "field": "useShortClassName"
      },
      {
        "name": "isUseFieldNames",
        "desc": "()Z",
        "field": "useFieldNames"
      },
      {
        "name": "getSummaryObjectStartText",
        "desc": "()Ljava/lang/String;",
        "field": "summaryObjectStartText"
      },
      {
        "name": "getArrayStart",
        "desc": "()Ljava/lang/String;",
        "field": "arrayStart"
      },
      {
        "name": "isUseIdentityHashCode",
        "desc": "()Z",
        "field": "useIdentityHashCode"
      },
      {
        "name": "isDefaultFullDetail",
        "desc": "()Z",
        "field": "defaultFullDetail"
      },
      {
        "name": "getContentStart",
        "desc": "()Ljava/lang/String;",
        "field": "contentStart"
      }
    ],
    "observers": [
      {
        "name": "getSizeStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseClassName",
        "desc": "()Z"
      },
      {
        "name": "isFieldSeparatorAtStart",
        "desc": "()Z"
      },
      {
        "name": "getSummaryObjectEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isArrayContentDetail",
        "desc": "()Z"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldNameValueSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArraySeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSizeEndText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFieldSeparatorAtEnd",
        "desc": "()Z"
      },
      {
        "name": "getContentEnd",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldSeparator",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseShortClassName",
        "desc": "()Z"
      },
      {
        "name": "isUseFieldNames",
        "desc": "()Z"
      },
      {
        "name": "getSummaryObjectStartText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArrayStart",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUseIdentityHashCode",
        "desc": "()Z"
      },
      {
        "name": "isDefaultFullDetail",
        "desc": "()Z"
      },
      {
        "name": "getContentStart",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        ",",
        "<",
        "<null>",
        "<size=",
        "=",
        ">",
        "[",
        "]",
        "{",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "\"",
        "\"<size=",
        ">\""
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "[",
        "]"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.apache.commons.lang3.builder.ToStringStyle"
    ],
    "outerClass": "org.apache.commons.lang3.builder.ToStringStyle",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.AtomicInitializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.AtomicSafeInitializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BackgroundInitializer",
    "setters": [
      {
        "name": "setExternalExecutor",
        "desc": "(Ljava/util/concurrent/ExecutorService;)V",
        "field": "externalExecutor"
      }
    ],
    "getters": [
      {
        "name": "getExternalExecutor",
        "desc": "()Ljava/util/concurrent/ExecutorService;",
        "field": "externalExecutor"
      },
      {
        "name": "getActiveExecutor",
        "desc": "()Ljava/util/concurrent/ExecutorService;",
        "field": "executor"
      }
    ],
    "observers": [
      {
        "name": "getFuture",
        "desc": "()Ljava/util/concurrent/Future;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getTaskCount",
        "desc": "()I"
      },
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "getExternalExecutor",
        "desc": "()Ljava/util/concurrent/ExecutorService;"
      },
      {
        "name": "getActiveExecutor",
        "desc": "()Ljava/util/concurrent/ExecutorService;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.BackgroundInitializer",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
    "setters": [],
    "getters": [
      {
        "name": "getDaemonFlag",
        "desc": "()Ljava/lang/Boolean;",
        "field": "daemonFlag"
      },
      {
        "name": "getWrappedFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;",
        "field": "wrappedFactory"
      },
      {
        "name": "getUncaughtExceptionHandler",
        "desc": "()Ljava/lang/Thread$UncaughtExceptionHandler;",
        "field": "uncaughtExceptionHandler"
      },
      {
        "name": "getNamingPattern",
        "desc": "()Ljava/lang/String;",
        "field": "namingPattern"
      },
      {
        "name": "getPriority",
        "desc": "()Ljava/lang/Integer;",
        "field": "priority"
      }
    ],
    "observers": [
      {
        "name": "getDaemonFlag",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "getWrappedFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;"
      },
      {
        "name": "getNamingPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPriority",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getUncaughtExceptionHandler",
        "desc": "()Ljava/lang/Thread$UncaughtExceptionHandler;"
      },
      {
        "name": "getThreadCount",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getDaemonFlag",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "getWrappedFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;"
      },
      {
        "name": "getNamingPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "newThread",
        "desc": "(Ljava/lang/Runnable;)Ljava/lang/Thread;"
      },
      {
        "name": "getPriority",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getUncaughtExceptionHandler",
        "desc": "()Ljava/lang/Thread$UncaughtExceptionHandler;"
      },
      {
        "name": "getThreadCount",
        "desc": "()J"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.ThreadFactory"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BasicThreadFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder",
    "setters": [
      {
        "name": "wrappedFactory",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "wrappedFactory"
      },
      {
        "name": "uncaughtExceptionHandler",
        "desc": "(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "exceptionHandler"
      },
      {
        "name": "priority",
        "desc": "(I)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "priority"
      },
      {
        "name": "namingPattern",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "namingPattern"
      },
      {
        "name": "daemon",
        "desc": "(Z)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;",
        "field": "daemonFlag"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "wrappedFactory",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      },
      {
        "name": "uncaughtExceptionHandler",
        "desc": "(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      },
      {
        "name": "build",
        "desc": "()Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;"
      },
      {
        "name": "priority",
        "desc": "(I)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "namingPattern",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      },
      {
        "name": "daemon",
        "desc": "(Z)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.BasicThreadFactory",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "initialize",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/Callable;Ljava/util/concurrent/ExecutorService;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/Callable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.concurrent.BackgroundInitializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentInitializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "handleCauseUnchecked",
        "desc": "(Ljava/util/concurrent/ExecutionException;)V"
      },
      {
        "name": "initialize",
        "desc": "(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;"
      },
      {
        "name": "initializeUnchecked",
        "desc": "(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;"
      },
      {
        "name": "createIfAbsentUnchecked",
        "desc": "(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;"
      },
      {
        "name": "extractCauseUnchecked",
        "desc": "(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;"
      },
      {
        "name": "handleCause",
        "desc": "(Ljava/util/concurrent/ExecutionException;)V"
      },
      {
        "name": "createIfAbsent",
        "desc": "(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;"
      },
      {
        "name": "putIfAbsent",
        "desc": "(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "extractCause",
        "desc": "(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;"
      },
      {
        "name": "checkedException",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/Throwable;"
      },
      {
        "name": "constantFuture",
        "desc": "(Ljava/lang/Object;)Ljava/util/concurrent/Future;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture",
    "setters": [],
    "getters": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      },
      {
        "name": "get",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "cancel",
        "desc": "(Z)Z"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      },
      {
        "name": "get",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Future"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.ConcurrentUtils",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.ConstantInitializer",
    "setters": [],
    "getters": [
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;",
        "field": "object"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.LazyInitializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.concurrent.ConcurrentInitializer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTaskCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getTaskCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addInitializer",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/ExecutorService;)V"
      },
      {
        "name": "initialize",
        "desc": "()Lorg/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.concurrent.BackgroundInitializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isSuccessful",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "initializerNames",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isSuccessful",
        "desc": "()Z"
      },
      {
        "name": "isException",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getResultObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getException",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;"
      },
      {
        "name": "getInitializer",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.TimedSemaphore",
    "setters": [
      {
        "name": "setLimit",
        "desc": "(I)V",
        "field": "limit"
      }
    ],
    "getters": [
      {
        "name": "getUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;",
        "field": "unit"
      },
      {
        "name": "getLastAcquiresPerPeriod",
        "desc": "()I",
        "field": "lastCallsPerPeriod"
      },
      {
        "name": "getExecutorService",
        "desc": "()Ljava/util/concurrent/ScheduledExecutorService;",
        "field": "executorService"
      },
      {
        "name": "getLimit",
        "desc": "()I",
        "field": "limit"
      },
      {
        "name": "getPeriod",
        "desc": "()J",
        "field": "period"
      },
      {
        "name": "getAcquireCount",
        "desc": "()I",
        "field": "acquireCount"
      },
      {
        "name": "isShutdown",
        "desc": "()Z",
        "field": "shutdown"
      }
    ],
    "observers": [
      {
        "name": "getAvailablePermits",
        "desc": "()I"
      },
      {
        "name": "getUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "getLastAcquiresPerPeriod",
        "desc": "()I"
      },
      {
        "name": "getExecutorService",
        "desc": "()Ljava/util/concurrent/ScheduledExecutorService;"
      },
      {
        "name": "getLimit",
        "desc": "()I"
      },
      {
        "name": "getPeriod",
        "desc": "()J"
      },
      {
        "name": "getAcquireCount",
        "desc": "()I"
      },
      {
        "name": "isShutdown",
        "desc": "()Z"
      },
      {
        "name": "getAverageCallsPerPeriod",
        "desc": "()D"
      }
    ],
    "testableMethods": [
      {
        "name": "endOfPeriod",
        "desc": "()V"
      },
      {
        "name": "getLastAcquiresPerPeriod",
        "desc": "()I"
      },
      {
        "name": "getPeriod",
        "desc": "()J"
      },
      {
        "name": "getAcquireCount",
        "desc": "()I"
      },
      {
        "name": "isShutdown",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;I)V"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/util/concurrent/TimeUnit;I)V"
      },
      {
        "name": "acquire",
        "desc": "()V"
      },
      {
        "name": "getAvailablePermits",
        "desc": "()I"
      },
      {
        "name": "setLimit",
        "desc": "(I)V"
      },
      {
        "name": "getUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "startTimer",
        "desc": "()Ljava/util/concurrent/ScheduledFuture;"
      },
      {
        "name": "getExecutorService",
        "desc": "()Ljava/util/concurrent/ScheduledExecutorService;"
      },
      {
        "name": "getLimit",
        "desc": "()I"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "getAverageCallsPerPeriod",
        "desc": "()D"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0,
        1,
        9223372036854775807
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.concurrent.TimedSemaphore$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.event.EventListenerSupport",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getListeners",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getListenerCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "removeListener",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "fire",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getListeners",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;)Lorg/apache/commons/lang3/event/EventListenerSupport;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "createInvocationHandler",
        "desc": "()Ljava/lang/reflect/InvocationHandler;"
      },
      {
        "name": "addListener",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getListenerCount",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/event/EventListenerSupport;)V"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.InvocationHandler"
    ],
    "outerClass": "org.apache.commons.lang3.event.EventListenerSupport",
    "access": 4,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.event.EventUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "bindEventsToMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/String;)V"
      },
      {
        "name": "addEventListener",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.InvocationHandler"
    ],
    "outerClass": "org.apache.commons.lang3.event.EventUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.CloneFailedException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.ContextedException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getRawMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/commons/lang3/exception/ExceptionContext;)V"
      },
      {
        "name": "getContextValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "getFormattedExceptionMessage",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "setContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedException;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFirstContextValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getRawMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "addContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedException;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception",
      "org.apache.commons.lang3.exception.ExceptionContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.ContextedRuntimeException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getRawMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/commons/lang3/exception/ExceptionContext;)V"
      },
      {
        "name": "getContextValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "getFormattedExceptionMessage",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getFirstContextValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getRawMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "setContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedRuntimeException;"
      },
      {
        "name": "addContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedRuntimeException;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException",
      "org.apache.commons.lang3.exception.ExceptionContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.DefaultExceptionContext",
    "setters": [],
    "getters": [
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;",
        "field": "contextValues"
      }
    ],
    "observers": [
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getContextLabels",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "setContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/DefaultExceptionContext;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getContextEntries",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getFirstContextValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getContextValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "addContextValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/DefaultExceptionContext;"
      },
      {
        "name": "getFormattedExceptionMessage",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        256
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.exception.ExceptionContext",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.ExceptionContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.exception.ExceptionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getRootCause",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/Throwable;"
      },
      {
        "name": "printRootCauseStackTrace",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "printRootCauseStackTrace",
        "desc": "(Ljava/lang/Throwable;Ljava/io/PrintWriter;)V"
      },
      {
        "name": "indexOfType",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Class;I)I"
      },
      {
        "name": "getCause",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/Throwable;"
      },
      {
        "name": "getThrowableCount",
        "desc": "(Ljava/lang/Throwable;)I"
      },
      {
        "name": "indexOfThrowable",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Class;I)I"
      },
      {
        "name": "getStackTrace",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "printRootCauseStackTrace",
        "desc": "(Ljava/lang/Throwable;Ljava/io/PrintStream;)V"
      },
      {
        "name": "getStackFrameList",
        "desc": "(Ljava/lang/Throwable;)Ljava/util/List;"
      },
      {
        "name": "removeCommonFrames",
        "desc": "(Ljava/util/List;Ljava/util/List;)V"
      },
      {
        "name": "getMessage",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/String;"
      },
      {
        "name": "getDefaultCauseMethodNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getStackFrames",
        "desc": "(Ljava/lang/Throwable;)[Ljava/lang/String;"
      },
      {
        "name": "indexOfType",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Class;)I"
      },
      {
        "name": "getRootCauseStackTrace",
        "desc": "(Ljava/lang/Throwable;)[Ljava/lang/String;"
      },
      {
        "name": "getThrowables",
        "desc": "(Ljava/lang/Throwable;)[Ljava/lang/Throwable;"
      },
      {
        "name": "indexOfThrowable",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/Class;)I"
      },
      {
        "name": "getStackFrames",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "getCause",
        "desc": "(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;"
      },
      {
        "name": "getRootCauseMessage",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/String;"
      },
      {
        "name": "getThrowableList",
        "desc": "(Ljava/lang/Throwable;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        11
      ],
      "short": [
        10,
        11
      ],
      "int": [
        -1,
        0,
        1,
        2,
        10,
        11
      ],
      "str": [
        "at",
        "getLinkedCause",
        "getThrowable"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.math.Fraction",
    "setters": [],
    "getters": [
      {
        "name": "getDenominator",
        "desc": "()I",
        "field": "denominator"
      },
      {
        "name": "getNumerator",
        "desc": "()I",
        "field": "numerator"
      }
    ],
    "observers": [
      {
        "name": "negate",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDenominator",
        "desc": "()I"
      },
      {
        "name": "getProperWhole",
        "desc": "()I"
      },
      {
        "name": "invert",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "abs",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getNumerator",
        "desc": "()I"
      },
      {
        "name": "getProperNumerator",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "subtract",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getFraction",
        "desc": "(D)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "divideBy",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "pow",
        "desc": "(I)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "multiplyBy",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getFraction",
        "desc": "(III)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getFraction",
        "desc": "(II)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "invert",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "abs",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getNumerator",
        "desc": "()I"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "getProperNumerator",
        "desc": "()I"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)I"
      },
      {
        "name": "reduce",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toProperString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDenominator",
        "desc": "()I"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "add",
        "desc": "(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "negate",
        "desc": "()Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getFraction",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;"
      },
      {
        "name": "getProperWhole",
        "desc": "()I"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "getReducedFraction",
        "desc": "(II)Lorg/apache/commons/lang3/math/Fraction;"
      }
    ],
    "dictionary": {
      "byte": [
        25,
        31,
        32,
        37,
        46,
        47
      ],
      "char": [
        32,
        37,
        46,
        47
      ],
      "short": [
        25,
        31,
        32,
        37,
        46,
        47,
        629,
        10000
      ],
      "int": [
        -2147483648,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        25,
        31,
        32,
        37,
        46,
        47,
        629,
        10000
      ],
      "long": [
        -2147483648,
        2147483647
      ],
      "double": [
        1.0,
        2.147483647E9
      ],
      "str": [
        "-1",
        "0",
        "1"
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.math.IEEE754rUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "max",
        "desc": "(FF)F"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "max",
        "desc": "(DD)D"
      },
      {
        "name": "max",
        "desc": "(DDD)D"
      },
      {
        "name": "max",
        "desc": "(FFF)F"
      },
      {
        "name": "min",
        "desc": "([D)D"
      },
      {
        "name": "min",
        "desc": "([F)F"
      },
      {
        "name": "min",
        "desc": "(FF)F"
      },
      {
        "name": "min",
        "desc": "(DD)D"
      },
      {
        "name": "min",
        "desc": "(DDD)D"
      },
      {
        "name": "max",
        "desc": "([D)D"
      },
      {
        "name": "min",
        "desc": "(FFF)F"
      },
      {
        "name": "max",
        "desc": "([F)F"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.math.NumberUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "toByte",
        "desc": "(Ljava/lang/String;)B"
      },
      {
        "name": "max",
        "desc": "([I)I"
      },
      {
        "name": "toShort",
        "desc": "(Ljava/lang/String;S)S"
      },
      {
        "name": "min",
        "desc": "([B)B"
      },
      {
        "name": "max",
        "desc": "(FFF)F"
      },
      {
        "name": "min",
        "desc": "([D)D"
      },
      {
        "name": "toLong",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "min",
        "desc": "([F)F"
      },
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "createLong",
        "desc": "(Ljava/lang/String;)Ljava/lang/Long;"
      },
      {
        "name": "isNumber",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "createBigInteger",
        "desc": "(Ljava/lang/String;)Ljava/math/BigInteger;"
      },
      {
        "name": "createInteger",
        "desc": "(Ljava/lang/String;)Ljava/lang/Integer;"
      },
      {
        "name": "max",
        "desc": "(SSS)S"
      },
      {
        "name": "toShort",
        "desc": "(Ljava/lang/String;)S"
      },
      {
        "name": "min",
        "desc": "(SSS)S"
      },
      {
        "name": "isDigits",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "max",
        "desc": "(JJJ)J"
      },
      {
        "name": "toDouble",
        "desc": "(Ljava/lang/String;)D"
      },
      {
        "name": "min",
        "desc": "(III)I"
      },
      {
        "name": "compare",
        "desc": "(JJ)I"
      },
      {
        "name": "min",
        "desc": "([J)J"
      },
      {
        "name": "max",
        "desc": "([S)S"
      },
      {
        "name": "compare",
        "desc": "(BB)I"
      },
      {
        "name": "min",
        "desc": "(FFF)F"
      },
      {
        "name": "toInt",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toByte",
        "desc": "(Ljava/lang/String;B)B"
      },
      {
        "name": "createNumber",
        "desc": "(Ljava/lang/String;)Ljava/lang/Number;"
      },
      {
        "name": "max",
        "desc": "([J)J"
      },
      {
        "name": "max",
        "desc": "(III)I"
      },
      {
        "name": "max",
        "desc": "(BBB)B"
      },
      {
        "name": "createFloat",
        "desc": "(Ljava/lang/String;)Ljava/lang/Float;"
      },
      {
        "name": "toFloat",
        "desc": "(Ljava/lang/String;F)F"
      },
      {
        "name": "createBigDecimal",
        "desc": "(Ljava/lang/String;)Ljava/math/BigDecimal;"
      },
      {
        "name": "max",
        "desc": "([B)B"
      },
      {
        "name": "min",
        "desc": "(DDD)D"
      },
      {
        "name": "max",
        "desc": "([D)D"
      },
      {
        "name": "toDouble",
        "desc": "(Ljava/lang/String;D)D"
      },
      {
        "name": "createDouble",
        "desc": "(Ljava/lang/String;)Ljava/lang/Double;"
      },
      {
        "name": "max",
        "desc": "([F)F"
      },
      {
        "name": "compare",
        "desc": "(SS)I"
      },
      {
        "name": "toLong",
        "desc": "(Ljava/lang/String;J)J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toFloat",
        "desc": "(Ljava/lang/String;)F"
      },
      {
        "name": "max",
        "desc": "(DDD)D"
      },
      {
        "name": "min",
        "desc": "([S)S"
      },
      {
        "name": "toInt",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "isParsable",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "min",
        "desc": "([I)I"
      },
      {
        "name": "min",
        "desc": "(BBB)B"
      },
      {
        "name": "min",
        "desc": "(JJJ)J"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        16,
        43,
        45,
        46,
        48,
        55,
        57,
        65,
        68,
        69,
        70,
        76,
        88,
        97,
        100,
        101,
        102,
        108,
        120
      ],
      "char": [
        43,
        45,
        46,
        48,
        55,
        57,
        65,
        68,
        69,
        70,
        76,
        88,
        97,
        100,
        101,
        102,
        108,
        120
      ],
      "short": [
        7,
        8,
        16,
        43,
        45,
        46,
        48,
        55,
        57,
        65,
        68,
        69,
        70,
        76,
        88,
        97,
        100,
        101,
        102,
        108,
        120
      ],
      "int": [
        -1,
        0,
        1,
        2,
        7,
        8,
        16,
        43,
        45,
        46,
        48,
        55,
        57,
        65,
        68,
        69,
        70,
        76,
        88,
        97,
        100,
        101,
        102,
        108,
        120
      ],
      "float": [
        -1.0,
        0.0,
        1.0
      ],
      "double": [
        1.0
      ],
      "str": [
        "",
        "#",
        "-",
        "--",
        ".",
        "0",
        "0X",
        "0x"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.Mutable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableBoolean",
    "setters": [
      {
        "name": "setValue",
        "desc": "(Z)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Boolean;)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "isTrue",
        "desc": "()Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFalse",
        "desc": "()Z"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Boolean;"
      }
    ],
    "testableMethods": [
      {
        "name": "toBoolean",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "setTrue",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Boolean;)V"
      },
      {
        "name": "isTrue",
        "desc": "()Z"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableBoolean;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFalse",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "booleanValue",
        "desc": "()Z"
      },
      {
        "name": "setFalse",
        "desc": "()V"
      },
      {
        "name": "setValue",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Boolean;"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Boolean;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.mutable.Mutable",
      "java.io.Serializable",
      "java.lang.Comparable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableByte",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(B)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(B)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(B)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Byte;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Byte;"
      },
      {
        "name": "<init>",
        "desc": "(B)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "add",
        "desc": "(B)V"
      },
      {
        "name": "byteValue",
        "desc": "()B"
      },
      {
        "name": "toByte",
        "desc": "()Ljava/lang/Byte;"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableByte;)I"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "subtract",
        "desc": "(B)V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setValue",
        "desc": "(B)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableDouble",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(D)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(D)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(D)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInfinite",
        "desc": "()Z"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Double;"
      },
      {
        "name": "isNaN",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInfinite",
        "desc": "()Z"
      },
      {
        "name": "toDouble",
        "desc": "()Ljava/lang/Double;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableDouble;)I"
      },
      {
        "name": "add",
        "desc": "(D)V"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(D)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isNaN",
        "desc": "()Z"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "subtract",
        "desc": "(D)V"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Double;"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "setValue",
        "desc": "(D)V"
      }
    ],
    "dictionary": {
      "double": [
        2.0
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableFloat",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(F)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(F)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(F)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInfinite",
        "desc": "()Z"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Float;"
      },
      {
        "name": "isNaN",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInfinite",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "toFloat",
        "desc": "()Ljava/lang/Float;"
      },
      {
        "name": "add",
        "desc": "(F)V"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(F)V"
      },
      {
        "name": "isNaN",
        "desc": "()Z"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Float;"
      },
      {
        "name": "setValue",
        "desc": "(F)V"
      },
      {
        "name": "subtract",
        "desc": "(F)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableFloat;)I"
      }
    ],
    "dictionary": {
      "float": [
        1.0
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableInt",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(I)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(I)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(I)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Integer;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "toInteger",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setValue",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "add",
        "desc": "(I)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "subtract",
        "desc": "(I)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableInt;)I"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableLong",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(J)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(J)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(J)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Long;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setValue",
        "desc": "(J)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableLong;)I"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Long;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "toLong",
        "desc": "()Ljava/lang/Long;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "add",
        "desc": "(J)V"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "subtract",
        "desc": "(J)V"
      }
    ],
    "dictionary": {
      "long": [
        1
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableObject",
    "setters": [
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V",
        "field": "value"
      }
    ],
    "getters": [
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.mutable.Mutable",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.mutable.MutableShort",
    "setters": [
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "subtract",
        "desc": "(S)V",
        "field": "value"
      },
      {
        "name": "add",
        "desc": "(S)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V",
        "field": "value"
      },
      {
        "name": "setValue",
        "desc": "(S)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Short;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "longValue",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "subtract",
        "desc": "(S)V"
      },
      {
        "name": "floatValue",
        "desc": "()F"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "setValue",
        "desc": "(S)V"
      },
      {
        "name": "subtract",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/apache/commons/lang3/mutable/MutableShort;)I"
      },
      {
        "name": "<init>",
        "desc": "(S)V"
      },
      {
        "name": "doubleValue",
        "desc": "()D"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Short;"
      },
      {
        "name": "decrement",
        "desc": "()V"
      },
      {
        "name": "intValue",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "add",
        "desc": "(S)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Number;)V"
      },
      {
        "name": "shortValue",
        "desc": "()S"
      },
      {
        "name": "toShort",
        "desc": "()Ljava/lang/Short;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Number",
      "java.lang.Comparable",
      "org.apache.commons.lang3.mutable.Mutable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.ConstructorUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "invokeExactConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getMatchingAccessibleConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getAccessibleConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getAccessibleConstructor",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "invokeConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "invokeConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.FieldUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "readDeclaredStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;"
      },
      {
        "name": "writeDeclaredStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getDeclaredField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;"
      },
      {
        "name": "getAllFields",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Field;"
      },
      {
        "name": "readField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)Ljava/lang/Object;"
      },
      {
        "name": "readStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;"
      },
      {
        "name": "writeStaticField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)V"
      },
      {
        "name": "writeField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getAllFieldsList",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "readField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "writeStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "writeField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Z)V"
      },
      {
        "name": "writeDeclaredField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "writeStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Z)V"
      },
      {
        "name": "writeStaticField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;)V"
      },
      {
        "name": "writeDeclaredStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Z)V"
      },
      {
        "name": "writeField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;Z)V"
      },
      {
        "name": "readDeclaredField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "readStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "writeDeclaredField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Z)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "readField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "readDeclaredField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;"
      },
      {
        "name": "writeField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "readStaticField",
        "desc": "(Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "readDeclaredStaticField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;"
      },
      {
        "name": "getDeclaredField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/reflect/Field;"
      },
      {
        "name": "readField",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;"
      },
      {
        "name": "readStaticField",
        "desc": "(Ljava/lang/reflect/Field;Z)Ljava/lang/Object;"
      },
      {
        "name": "removeFinalModifier",
        "desc": "(Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "getFieldsWithAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/reflect/Field;"
      },
      {
        "name": "removeFinalModifier",
        "desc": "(Ljava/lang/reflect/Field;Z)V"
      },
      {
        "name": "getFieldsListWithAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getField",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/reflect/Field;"
      }
    ],
    "dictionary": {
      "byte": [
        -17
      ],
      "short": [
        -17
      ],
      "int": [
        -17,
        0,
        1
      ],
      "str": [
        "modifiers"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.InheritanceUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "distance",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.MemberUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6,
        7
      ],
      "short": [
        6,
        7
      ],
      "int": [
        -1,
        0,
        1,
        5,
        6,
        7
      ],
      "float": [
        0.0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.MethodUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "invokeStaticMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getMethodsListWithAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getAccessibleMethod",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "invokeMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getMethodsWithAnnotation",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "invokeExactMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "invokeStaticMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactStaticMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getMatchingAccessibleMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getAccessibleMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "invokeMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactStaticMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "invokeMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "invokeExactMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getOverrideHierarchy",
        "desc": "(Ljava/lang/reflect/Method;Lorg/apache/commons/lang3/ClassUtils$Interfaces;)Ljava/util/Set;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeLiteral",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "value"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "toString"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.reflect.Typed"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getImplicitLowerBounds",
        "desc": "(Ljava/lang/reflect/WildcardType;)[Ljava/lang/reflect/Type;"
      },
      {
        "name": "typesSatisfyVariables",
        "desc": "(Ljava/util/Map;)Z"
      },
      {
        "name": "parameterizeWithOwner",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/reflect/ParameterizedType;"
      },
      {
        "name": "getRawType",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Ljava/lang/Class;"
      },
      {
        "name": "isAssignable",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "parameterize",
        "desc": "(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/Typed;"
      },
      {
        "name": "parameterizeWithOwner",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;"
      },
      {
        "name": "unrollVariables",
        "desc": "(Ljava/util/Map;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "normalizeUpperBounds",
        "desc": "([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;"
      },
      {
        "name": "parameterize",
        "desc": "(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/reflect/ParameterizedType;"
      },
      {
        "name": "toLongString",
        "desc": "(Ljava/lang/reflect/TypeVariable;)Ljava/lang/String;"
      },
      {
        "name": "containsTypeVariables",
        "desc": "(Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "isInstance",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getTypeArguments",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/util/Map;"
      },
      {
        "name": "wildcardType",
        "desc": "()Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;"
      },
      {
        "name": "getImplicitUpperBounds",
        "desc": "(Ljava/lang/reflect/WildcardType;)[Ljava/lang/reflect/Type;"
      },
      {
        "name": "isArrayType",
        "desc": "(Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "getImplicitBounds",
        "desc": "(Ljava/lang/reflect/TypeVariable;)[Ljava/lang/reflect/Type;"
      },
      {
        "name": "genericArrayType",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/Class;)Lorg/apache/commons/lang3/reflect/Typed;"
      },
      {
        "name": "getArrayComponentType",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/String;"
      },
      {
        "name": "determineTypeArguments",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/ParameterizedType;)Ljava/util/Map;"
      },
      {
        "name": "getTypeArguments",
        "desc": "(Ljava/lang/reflect/ParameterizedType;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$1",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "val$type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.reflect.Typed"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl",
    "setters": [],
    "getters": [
      {
        "name": "getGenericComponentType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "componentType"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getGenericComponentType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.GenericArrayType"
    ],
    "outerClass": "org.apache.commons.lang3.reflect.TypeUtils",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl",
    "setters": [],
    "getters": [
      {
        "name": "getOwnerType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "useOwner"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "raw"
      }
    ],
    "observers": [
      {
        "name": "getOwnerType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getActualTypeArguments",
        "desc": "()[Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.ParameterizedType"
    ],
    "outerClass": "org.apache.commons.lang3.reflect.TypeUtils",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder",
    "setters": [
      {
        "name": "withLowerBounds",
        "desc": "([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;",
        "field": "lowerBounds"
      },
      {
        "name": "withUpperBounds",
        "desc": "([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;",
        "field": "upperBounds"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Ljava/lang/reflect/WildcardType;"
      },
      {
        "name": "withLowerBounds",
        "desc": "([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;"
      },
      {
        "name": "withUpperBounds",
        "desc": "([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "outerClass": "org.apache.commons.lang3.reflect.TypeUtils",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLowerBounds",
        "desc": "()[Ljava/lang/reflect/Type;"
      },
      {
        "name": "getUpperBounds",
        "desc": "()[Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.WildcardType"
    ],
    "outerClass": "org.apache.commons.lang3.reflect.TypeUtils",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.reflect.Typed",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.CompositeFormat",
    "setters": [],
    "getters": [
      {
        "name": "getParser",
        "desc": "()Ljava/text/Format;",
        "field": "parser"
      },
      {
        "name": "getFormatter",
        "desc": "()Ljava/text/Format;",
        "field": "formatter"
      }
    ],
    "observers": [
      {
        "name": "getParser",
        "desc": "()Ljava/text/Format;"
      },
      {
        "name": "getFormatter",
        "desc": "()Ljava/text/Format;"
      }
    ],
    "testableMethods": [
      {
        "name": "reformat",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getParser",
        "desc": "()Ljava/text/Format;"
      },
      {
        "name": "getFormatter",
        "desc": "()Ljava/text/Format;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/text/Format;Ljava/text/Format;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.text.Format"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.ExtendedMessageFormat",
    "setters": [
      {
        "name": "applyPattern",
        "desc": "(Ljava/lang/String;)V",
        "field": "toPattern"
      }
    ],
    "getters": [
      {
        "name": "toPattern",
        "desc": "()Ljava/lang/String;",
        "field": "toPattern"
      }
    ],
    "observers": [
      {
        "name": "toPattern",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Map;)V"
      },
      {
        "name": "setFormat",
        "desc": "(ILjava/text/Format;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;)V"
      },
      {
        "name": "toPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setFormatByArgumentIndex",
        "desc": "(ILjava/text/Format;)V"
      },
      {
        "name": "setFormats",
        "desc": "([Ljava/text/Format;)V"
      },
      {
        "name": "setFormatsByArgumentIndex",
        "desc": "([Ljava/text/Format;)V"
      },
      {
        "name": "applyPattern",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        39,
        44,
        125
      ],
      "char": [
        39,
        44,
        125
      ],
      "short": [
        39,
        44,
        125
      ],
      "int": [
        0,
        1,
        2,
        39,
        44,
        123,
        125
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.text.MessageFormat"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.FormatFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.FormattableUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;Ljava/util/Formatter;IIIC)Ljava/util/Formatter;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;Ljava/util/Formatter;III)Ljava/util/Formatter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toString",
        "desc": "(Ljava/util/Formattable;)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;Ljava/util/Formatter;IIILjava/lang/CharSequence;)Ljava/util/Formatter;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrBuilder",
    "setters": [
      {
        "name": "ensureCapacity",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "buffer"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(I[C)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "([CII)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "setNullText",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "nullText"
      },
      {
        "name": "append",
        "desc": "(Ljava/nio/CharBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "appendPadding",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "appendFixedWidthPadRight",
        "desc": "(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/nio/CharBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(IZ)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "setNewLineText",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "newLine"
      },
      {
        "name": "insert",
        "desc": "(ILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(I[CII)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "readFrom",
        "desc": "(Ljava/lang/Readable;)I",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "setLength",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      },
      {
        "name": "appendFixedWidthPadLeft",
        "desc": "(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;",
        "field": "size"
      }
    ],
    "getters": [
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;",
        "field": "nullText"
      },
      {
        "name": "getNewLineText",
        "desc": "()Ljava/lang/String;",
        "field": "newLine"
      },
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "toCharArray",
        "desc": "()[C"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toStringBuilder",
        "desc": "()Ljava/lang/StringBuilder;"
      },
      {
        "name": "getNewLineText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;"
      },
      {
        "name": "length",
        "desc": "()I"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toStringBuilder",
        "desc": "()Ljava/lang/StringBuilder;"
      },
      {
        "name": "appendln",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/StringBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendWithSeparators",
        "desc": "(Ljava/util/Iterator;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "contains",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Z"
      },
      {
        "name": "appendAll",
        "desc": "(Ljava/util/Iterator;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceAll",
        "desc": "(CC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "setNullText",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/nio/CharBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "([CII)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(ILjava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "getNewLineText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toCharArray",
        "desc": "(II)[C"
      },
      {
        "name": "append",
        "desc": "(J)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "insert",
        "desc": "(II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "substring",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "deleteCharAt",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendNull",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)I"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendNewLine",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "getChars",
        "desc": "(II[CI)V"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;I)I"
      },
      {
        "name": "append",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "substring",
        "desc": "(II)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "([CII)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(ID)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replace",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;III)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceFirst",
        "desc": "(CC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendTo",
        "desc": "(Ljava/lang/Appendable;)V"
      },
      {
        "name": "appendln",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceFirst",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(J)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendAll",
        "desc": "(Ljava/lang/Iterable;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteAll",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceAll",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendWithSeparators",
        "desc": "(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/StringBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "toCharArray",
        "desc": "()[C"
      },
      {
        "name": "appendln",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clear",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(D)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "getChars",
        "desc": "([C)[C"
      },
      {
        "name": "appendFixedWidthPadRight",
        "desc": "(IIC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "equals",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Z"
      },
      {
        "name": "build",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "readFrom",
        "desc": "(Ljava/lang/Readable;)I"
      },
      {
        "name": "replaceFirst",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteAll",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "subSequence",
        "desc": "(II)Ljava/lang/CharSequence;"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "asTokenizer",
        "desc": "()Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "appendFixedWidthPadLeft",
        "desc": "(IIC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(CC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "equalsIgnoreCase",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "appendln",
        "desc": "(F)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;I)I"
      },
      {
        "name": "insert",
        "desc": "(IJ)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replaceAll",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteFirst",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "asReader",
        "desc": "()Ljava/io/Reader;"
      },
      {
        "name": "validateRange",
        "desc": "(II)I"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/StringBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "reverse",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "setCharAt",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/CharSequence;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(D)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(Ljava/lang/String;I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "leftString",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "midString",
        "desc": "(II)Ljava/lang/String;"
      },
      {
        "name": "append",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendFixedWidthPadRight",
        "desc": "(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(IZ)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteFirst",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "replace",
        "desc": "(IILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(ILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteFirst",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/StringBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "rightString",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "appendSeparator",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "delete",
        "desc": "(II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/String;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "length",
        "desc": "()I"
      },
      {
        "name": "contains",
        "desc": "(C)Z"
      },
      {
        "name": "setLength",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "appendFixedWidthPadLeft",
        "desc": "(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(IF)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "ensureCapacity",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendln",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(I[C)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "toStringBuffer",
        "desc": "()Ljava/lang/StringBuffer;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getNullText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "charAt",
        "desc": "(I)C"
      },
      {
        "name": "append",
        "desc": "(F)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "lastIndexOf",
        "desc": "(C)I"
      },
      {
        "name": "minimizeCapacity",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendPadding",
        "desc": "(IC)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "asWriter",
        "desc": "()Ljava/io/Writer;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/nio/CharBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "indexOf",
        "desc": "(CI)I"
      },
      {
        "name": "appendAll",
        "desc": "([Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)I"
      },
      {
        "name": "setNewLineText",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(CI)I"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "trim",
        "desc": "()Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "appendSeparator",
        "desc": "(CI)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "append",
        "desc": "(I)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "insert",
        "desc": "(I[CII)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "deleteAll",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "validateIndex",
        "desc": "(I)V"
      },
      {
        "name": "indexOf",
        "desc": "(C)I"
      },
      {
        "name": "appendWithSeparators",
        "desc": "([Ljava/lang/Object;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/StringBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;"
      }
    ],
    "dictionary": {
      "byte": [
        32,
        101
      ],
      "char": [
        32,
        101
      ],
      "short": [
        32,
        101
      ],
      "int": [
        -1,
        0,
        1,
        2,
        4,
        5,
        32,
        101
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.CharSequence",
      "java.lang.Appendable",
      "java.io.Serializable",
      "org.apache.commons.lang3.builder.Builder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrBuilder$StrBuilderReader",
    "setters": [
      {
        "name": "read",
        "desc": "([CII)I",
        "field": "pos"
      },
      {
        "name": "mark",
        "desc": "(I)V",
        "field": "mark"
      },
      {
        "name": "skip",
        "desc": "(J)J",
        "field": "pos"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "ready",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)V"
      },
      {
        "name": "read",
        "desc": "([CII)I"
      },
      {
        "name": "ready",
        "desc": "()Z"
      },
      {
        "name": "mark",
        "desc": "(I)V"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "markSupported",
        "desc": "()Z"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "skip",
        "desc": "(J)J"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.io.Reader"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrBuilder",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getContent",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)V"
      },
      {
        "name": "getContent",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "tokenize",
        "desc": "([CII)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrTokenizer"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrBuilder",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)V"
      },
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "([C)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.Writer"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrBuilder",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrLookup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrLookup$MapStrLookup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "lookup",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrLookup"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrLookup",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        9,
        32,
        34,
        39,
        44
      ],
      "char": [
        32,
        34,
        39,
        44
      ],
      "short": [
        9,
        32,
        34,
        39,
        44
      ],
      "int": [
        0,
        1,
        9,
        32,
        34,
        39,
        44
      ],
      "str": [
        "'\""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$CharMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(C)V"
      },
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$CharSetMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      },
      {
        "name": "<init>",
        "desc": "([C)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$NoMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$StringMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrMatcher$TrimMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isMatch",
        "desc": "([CIII)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        32
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.StrMatcher"
    ],
    "outerClass": "org.apache.commons.lang3.text.StrMatcher",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrSubstitutor",
    "setters": [
      {
        "name": "setEscapeChar",
        "desc": "(C)V",
        "field": "escapeChar"
      },
      {
        "name": "setEnableSubstitutionInVariables",
        "desc": "(Z)V",
        "field": "enableSubstitutionInVariables"
      },
      {
        "name": "setVariableSuffixMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;",
        "field": "suffixMatcher"
      },
      {
        "name": "setValueDelimiterMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;",
        "field": "valueDelimiterMatcher"
      },
      {
        "name": "setVariableResolver",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;)V",
        "field": "variableResolver"
      },
      {
        "name": "setVariablePrefixMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;",
        "field": "prefixMatcher"
      }
    ],
    "getters": [
      {
        "name": "getVariableSuffixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "suffixMatcher"
      },
      {
        "name": "getVariableResolver",
        "desc": "()Lorg/apache/commons/lang3/text/StrLookup;",
        "field": "variableResolver"
      },
      {
        "name": "getVariablePrefixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "prefixMatcher"
      },
      {
        "name": "isEnableSubstitutionInVariables",
        "desc": "()Z",
        "field": "enableSubstitutionInVariables"
      },
      {
        "name": "getValueDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "valueDelimiterMatcher"
      },
      {
        "name": "getEscapeChar",
        "desc": "()C",
        "field": "escapeChar"
      }
    ],
    "observers": [
      {
        "name": "getVariableSuffixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getVariableResolver",
        "desc": "()Lorg/apache/commons/lang3/text/StrLookup;"
      },
      {
        "name": "getVariablePrefixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "isEnableSubstitutionInVariables",
        "desc": "()Z"
      },
      {
        "name": "getValueDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getEscapeChar",
        "desc": "()C"
      }
    ],
    "testableMethods": [
      {
        "name": "replaceSystemProperties",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/CharSequence;)Ljava/lang/String;"
      },
      {
        "name": "replaceIn",
        "desc": "(Ljava/lang/StringBuffer;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;C)V"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "setValueDelimiter",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;II)Ljava/lang/String;"
      },
      {
        "name": "replaceIn",
        "desc": "(Ljava/lang/StringBuilder;II)Z"
      },
      {
        "name": "isEnableSubstitutionInVariables",
        "desc": "()Z"
      },
      {
        "name": "getEscapeChar",
        "desc": "()C"
      },
      {
        "name": "setVariablePrefixMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "replaceIn",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Z"
      },
      {
        "name": "getVariablePrefixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getVariableSuffixMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "replaceIn",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Z"
      },
      {
        "name": "getVariableResolver",
        "desc": "()Lorg/apache/commons/lang3/text/StrLookup;"
      },
      {
        "name": "getValueDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "setEnableSubstitutionInVariables",
        "desc": "(Z)V"
      },
      {
        "name": "setVariablePrefix",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "setVariableSuffix",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/CharSequence;II)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "resolveVariable",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrBuilder;II)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/StringBuffer;II)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/String;"
      },
      {
        "name": "setEscapeChar",
        "desc": "(C)V"
      },
      {
        "name": "setValueDelimiter",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "setVariableSuffix",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;C)V"
      },
      {
        "name": "replace",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;)Ljava/lang/String;"
      },
      {
        "name": "replaceIn",
        "desc": "(Ljava/lang/StringBuffer;II)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;CLorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "setVariablePrefix",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;Ljava/lang/String;Ljava/lang/String;C)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;)V"
      },
      {
        "name": "setVariableSuffixMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "replace",
        "desc": "([C)Ljava/lang/String;"
      },
      {
        "name": "replaceIn",
        "desc": "(Ljava/lang/StringBuilder;)Z"
      },
      {
        "name": "replace",
        "desc": "([CII)Ljava/lang/String;"
      },
      {
        "name": "substitute",
        "desc": "(Lorg/apache/commons/lang3/text/StrBuilder;II)Z"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/StringBuffer;)Ljava/lang/String;"
      },
      {
        "name": "setValueDelimiterMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;"
      },
      {
        "name": "setVariableResolver",
        "desc": "(Lorg/apache/commons/lang3/text/StrLookup;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36,
        256
      ],
      "int": [
        0,
        1,
        36,
        256
      ],
      "str": [
        "->",
        ":-",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.StrTokenizer",
    "setters": [
      {
        "name": "reset",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "chars"
      },
      {
        "name": "setIgnoreEmptyTokens",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "ignoreEmptyTokens"
      },
      {
        "name": "setDelimiterMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "delimMatcher"
      },
      {
        "name": "setQuoteMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "quoteMatcher"
      },
      {
        "name": "setIgnoredMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "ignoredMatcher"
      },
      {
        "name": "setTrimmerMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "trimmerMatcher"
      },
      {
        "name": "setEmptyTokenAsNull",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "emptyAsNull"
      },
      {
        "name": "reset",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;",
        "field": "chars"
      }
    ],
    "getters": [
      {
        "name": "isIgnoreEmptyTokens",
        "desc": "()Z",
        "field": "ignoreEmptyTokens"
      },
      {
        "name": "getIgnoredMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "ignoredMatcher"
      },
      {
        "name": "getTrimmerMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "trimmerMatcher"
      },
      {
        "name": "getDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "delimMatcher"
      },
      {
        "name": "getQuoteMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;",
        "field": "quoteMatcher"
      },
      {
        "name": "isEmptyTokenAsNull",
        "desc": "()Z",
        "field": "emptyAsNull"
      }
    ],
    "observers": [
      {
        "name": "isIgnoreEmptyTokens",
        "desc": "()Z"
      },
      {
        "name": "getTokenList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getContent",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getIgnoredMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getTrimmerMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getTokenArray",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getQuoteMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "isEmptyTokenAsNull",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "setDelimiterChar",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "cloneReset",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "([C)V"
      },
      {
        "name": "hasPrevious",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getTokenArray",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "reset",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setIgnoreEmptyTokens",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "([CC)V"
      },
      {
        "name": "<init>",
        "desc": "([CLorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "tokenize",
        "desc": "([CII)Ljava/util/List;"
      },
      {
        "name": "setDelimiterMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "getIgnoredMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "getTrimmerMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "previousIndex",
        "desc": "()I"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getCSVInstance",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "clone",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "previous",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getQuoteMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "setTrimmerMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "getTokenList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "nextIndex",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "([CCC)V"
      },
      {
        "name": "getDelimiterMatcher",
        "desc": "()Lorg/apache/commons/lang3/text/StrMatcher;"
      },
      {
        "name": "setQuoteMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "setIgnoredMatcher",
        "desc": "(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "getTSVInstance",
        "desc": "()Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "getTSVInstance",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "reset",
        "desc": "()Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "getTSVInstance",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "nextToken",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "getCSVInstance",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setDelimiterString",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;C)V"
      },
      {
        "name": "setQuoteChar",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "<init>",
        "desc": "([CLorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;)V"
      },
      {
        "name": "setIgnoredChar",
        "desc": "(C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "setEmptyTokenAsNull",
        "desc": "(Z)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "isIgnoreEmptyTokens",
        "desc": "()Z"
      },
      {
        "name": "getContent",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;CC)V"
      },
      {
        "name": "reset",
        "desc": "([C)Lorg/apache/commons/lang3/text/StrTokenizer;"
      },
      {
        "name": "next",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([CLjava/lang/String;)V"
      },
      {
        "name": "previousToken",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEmptyTokenAsNull",
        "desc": "()Z"
      },
      {
        "name": "getCSVInstance",
        "desc": "()Lorg/apache/commons/lang3/text/StrTokenizer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.ListIterator",
      "java.lang.Cloneable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.WordUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "capitalizeFully",
        "desc": "(Ljava/lang/String;[C)Ljava/lang/String;"
      },
      {
        "name": "initials",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/String;I)Ljava/lang/String;"
      },
      {
        "name": "uncapitalize",
        "desc": "(Ljava/lang/String;[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "capitalize",
        "desc": "(Ljava/lang/String;[C)Ljava/lang/String;"
      },
      {
        "name": "capitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "capitalizeFully",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "uncapitalize",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "swapCase",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;"
      },
      {
        "name": "initials",
        "desc": "(Ljava/lang/String;[C)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        0,
        1,
        2,
        32
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.AggregateTranslator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      },
      {
        "name": "<init>",
        "desc": "([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        14,
        15,
        16,
        69,
        70
      ],
      "char": [
        69,
        70
      ],
      "short": [
        14,
        15,
        16,
        69,
        70
      ],
      "int": [
        0,
        1,
        2,
        14,
        15,
        16,
        69,
        70
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.CodePointTranslator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.EntityArrays",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "BASIC_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "APOS_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "ISO8859_1_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "ISO8859_1_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "HTML40_EXTENDED_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "JAVA_CTRL_CHARS_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "HTML40_EXTENDED_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "invert",
        "desc": "([[Ljava/lang/String;)[[Ljava/lang/String;"
      },
      {
        "name": "APOS_ESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "JAVA_CTRL_CHARS_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      },
      {
        "name": "BASIC_UNESCAPE",
        "desc": "()[[Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "\\r"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "below",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;"
      },
      {
        "name": "outsideOf",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;"
      },
      {
        "name": "<init>",
        "desc": "(IIZ)V"
      },
      {
        "name": "toUtf16Escape",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "above",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;"
      },
      {
        "name": "between",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.UnicodeEscaper"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.LookupTranslator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([[Ljava/lang/CharSequence;)V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.NumericEntityEscaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "between",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;"
      },
      {
        "name": "above",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(ILjava/io/Writer;)Z"
      },
      {
        "name": "below",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;"
      },
      {
        "name": "outsideOf",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2147483647
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CodePointTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Lorg/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION;)V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      },
      {
        "name": "isSet",
        "desc": "(Lorg/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        35,
        38,
        48,
        57,
        59,
        65,
        70,
        88,
        97,
        102,
        120
      ],
      "char": [
        35,
        38,
        48,
        57,
        59,
        65,
        70,
        88,
        97,
        102,
        120
      ],
      "short": [
        35,
        38,
        48,
        57,
        59,
        65,
        70,
        88,
        97,
        102,
        120
      ],
      "int": [
        0,
        1,
        2,
        35,
        38,
        48,
        57,
        59,
        65,
        70,
        88,
        97,
        102,
        120,
        65535
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "errorIfNoSemiColon",
        "semiColonOptional",
        "semiColonRequired"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.OctalUnescaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "byte": [
        48,
        51,
        55,
        92
      ],
      "char": [
        48,
        51,
        55,
        92
      ],
      "short": [
        48,
        51,
        55,
        92
      ],
      "int": [
        1,
        2,
        48,
        51,
        55,
        92
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.UnicodeEscaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "below",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;"
      },
      {
        "name": "between",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;"
      },
      {
        "name": "above",
        "desc": "(I)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;"
      },
      {
        "name": "<init>",
        "desc": "(IIZ)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "outsideOf",
        "desc": "(II)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;"
      },
      {
        "name": "toUtf16Escape",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "translate",
        "desc": "(ILjava/io/Writer;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        65535,
        2147483647
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CodePointTranslator"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.UnicodeUnescaper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(Ljava/lang/CharSequence;ILjava/io/Writer;)I"
      }
    ],
    "dictionary": {
      "byte": [
        43,
        92,
        117
      ],
      "char": [
        43,
        92,
        117
      ],
      "short": [
        43,
        92,
        117
      ],
      "int": [
        1,
        4,
        43,
        92,
        117
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CharSequenceTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "translate",
        "desc": "(ILjava/io/Writer;)Z"
      }
    ],
    "dictionary": {
      "int": [
        55296,
        57343
      ]
    },
    "parents": [
      "org.apache.commons.lang3.text.translate.CodePointTranslator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateFormatUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "formatUTC",
        "desc": "(JLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "formatUTC",
        "desc": "(JLjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "formatUTC",
        "desc": "(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "formatUTC",
        "desc": "(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "HH:mm:ssZZ"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateParser",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DatePrinter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMonths",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "getFragmentInDays",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "parseDate",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "addDays",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncatedEquals",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;I)Z"
      },
      {
        "name": "getFragmentInMinutes",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "getFragmentInHours",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "getFragmentInHours",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "parseDateStrictly",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "parseDate",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "round",
        "desc": "(Ljava/util/Calendar;I)Ljava/util/Calendar;"
      },
      {
        "name": "getFragmentInMilliseconds",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "toCalendar",
        "desc": "(Ljava/util/Date;)Ljava/util/Calendar;"
      },
      {
        "name": "setSeconds",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncate",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "iterator",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Iterator;"
      },
      {
        "name": "addSeconds",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "addYears",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "setHours",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "parseDateStrictly",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "iterator",
        "desc": "(Ljava/util/Date;I)Ljava/util/Iterator;"
      },
      {
        "name": "getFragmentInMinutes",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "isSameInstant",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;)Z"
      },
      {
        "name": "setMinutes",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "round",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Date;"
      },
      {
        "name": "addMinutes",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "addHours",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncatedCompareTo",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;I)I"
      },
      {
        "name": "getFragmentInSeconds",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "round",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncate",
        "desc": "(Ljava/util/Calendar;I)Ljava/util/Calendar;"
      },
      {
        "name": "addWeeks",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "isSameDay",
        "desc": "(Ljava/util/Date;Ljava/util/Date;)Z"
      },
      {
        "name": "truncatedCompareTo",
        "desc": "(Ljava/util/Date;Ljava/util/Date;I)I"
      },
      {
        "name": "setYears",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "addMilliseconds",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "isSameDay",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;)Z"
      },
      {
        "name": "truncatedEquals",
        "desc": "(Ljava/util/Date;Ljava/util/Date;I)Z"
      },
      {
        "name": "ceiling",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Date;"
      },
      {
        "name": "getFragmentInMilliseconds",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "setMonths",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "getFragmentInDays",
        "desc": "(Ljava/util/Calendar;I)J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isSameLocalTime",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;)Z"
      },
      {
        "name": "ceiling",
        "desc": "(Ljava/util/Calendar;I)Ljava/util/Calendar;"
      },
      {
        "name": "setDays",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "ceiling",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "setMilliseconds",
        "desc": "(Ljava/util/Date;I)Ljava/util/Date;"
      },
      {
        "name": "truncate",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Date;"
      },
      {
        "name": "isSameInstant",
        "desc": "(Ljava/util/Date;Ljava/util/Date;)Z"
      },
      {
        "name": "getFragmentInSeconds",
        "desc": "(Ljava/util/Date;I)J"
      },
      {
        "name": "iterator",
        "desc": "(Ljava/util/Calendar;I)Ljava/util/Iterator;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        30
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        30,
        500,
        1001
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        30,
        500,
        1001,
        280000000
      ],
      "long": [
        0,
        1000
      ],
      "str": [
        "",
        "ZZ"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateUtils$DateIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Calendar;Ljava/util/Calendar;)V"
      },
      {
        "name": "next",
        "desc": "()Ljava/util/Calendar;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        5
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "org.apache.commons.lang3.time.DateUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DateUtils$ModifyType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "CEILING",
        "ROUND",
        "TRUNCATE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.time.DateUtils",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DurationFormatUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "formatDuration",
        "desc": "(JLjava/lang/String;Z)Ljava/lang/String;"
      },
      {
        "name": "formatPeriodISO",
        "desc": "(JJ)Ljava/lang/String;"
      },
      {
        "name": "formatDurationHMS",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "formatPeriod",
        "desc": "(JJLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "formatDurationISO",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "format",
        "desc": "([Lorg/apache/commons/lang3/time/DurationFormatUtils$Token;JJJJJJJZ)Ljava/lang/String;"
      },
      {
        "name": "formatDuration",
        "desc": "(JLjava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "formatPeriod",
        "desc": "(JJLjava/lang/String;ZLjava/util/TimeZone;)Ljava/lang/String;"
      },
      {
        "name": "formatDurationWords",
        "desc": "(JZZ)Ljava/lang/String;"
      },
      {
        "name": "lexx",
        "desc": "(Ljava/lang/String;)[Lorg/apache/commons/lang3/time/DurationFormatUtils$Token;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        29,
        39
      ],
      "char": [
        39
      ],
      "short": [
        6,
        29,
        39
      ],
      "int": [
        0,
        1,
        2,
        5,
        6,
        29,
        39,
        72,
        77,
        83,
        100,
        109,
        115,
        121
      ],
      "long": [
        60000,
        3600000,
        86400000
      ],
      "str": [
        "",
        "S",
        "s"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.DurationFormatUtils$Token",
    "setters": [],
    "getters": [
      {
        "name": "getCount",
        "desc": "()I",
        "field": "count"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "containsTokenWithValue",
        "desc": "([Lorg/apache/commons/lang3/time/DurationFormatUtils$Token;Ljava/lang/Object;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "increment",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;I)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.DurationFormatUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateFormat",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;Ljava/util/Date;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "applyRules",
        "desc": "(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateTimeInstance",
        "desc": "(IILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateTimeInstance",
        "desc": "(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getTimeInstance",
        "desc": "(I)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;)Ljava/lang/String;"
      },
      {
        "name": "getDateInstance",
        "desc": "(I)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getDateInstance",
        "desc": "(ILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getTimeInstance",
        "desc": "(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "format",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "getTimeInstance",
        "desc": "(ILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateTimeInstance",
        "desc": "(IILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateInstance",
        "desc": "(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getDateTimeInstance",
        "desc": "(II)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;)Ljava/lang/String;"
      },
      {
        "name": "getDateInstance",
        "desc": "(ILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      },
      {
        "name": "getTimeInstance",
        "desc": "(ILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.text.Format",
      "org.apache.commons.lang3.time.DateParser",
      "org.apache.commons.lang3.time.DatePrinter"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateFormat$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.FormatCache"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser",
    "setters": [],
    "getters": [
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;",
        "field": "timeZone"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;",
        "field": "locale"
      },
      {
        "name": "getParsePattern",
        "desc": "()Ljava/util/regex/Pattern;",
        "field": "parsePattern"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;",
        "field": "pattern"
      }
    ],
    "observers": [
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFieldWidth",
        "desc": "()I"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getParsePattern",
        "desc": "()Ljava/util/regex/Pattern;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isNextNumber",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;Ljava/util/Date;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getFieldWidth",
        "desc": "()I"
      },
      {
        "name": "parseObject",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"
      },
      {
        "name": "getParsePattern",
        "desc": "()Ljava/util/regex/Pattern;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;)Ljava/util/Date;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isNextNumber",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        69,
        100
      ],
      "char": [
        69,
        100
      ],
      "short": [
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        69,
        100
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        39,
        69,
        92,
        100
      ],
      "str": [
        "'",
        "(Z|(?:[+-]\\d{2}(?::?\\d{2})?))",
        "JP",
        "ZZ",
        "ja"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.DateParser",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        1,
        100
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        24
      ],
      "short": [
        24
      ],
      "int": [
        24
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        12
      ],
      "short": [
        12
      ],
      "int": [
        12
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        41
      ],
      "char": [
        41
      ],
      "short": [
        41
      ],
      "int": [
        1,
        41
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        39
      ],
      "char": [
        39
      ],
      "short": [
        39
      ],
      "int": [
        0,
        1,
        39
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "(Z|(?:[+-]\\d{2}(?::)\\d{2}))",
        "(Z|(?:[+-]\\d{2}))",
        "(Z|(?:[+-]\\d{2}\\d{2}))",
        "UTC",
        "Z"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isNumber",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$Strategy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isNumber",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        41,
        43,
        45
      ],
      "char": [
        41,
        43,
        45
      ],
      "short": [
        41,
        43,
        45
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        41,
        43,
        45
      ],
      "str": [
        "GMT"
      ]
    },
    "parents": [
      "org.apache.commons.lang3.time.FastDateParser$Strategy"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDateParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter",
    "setters": [],
    "getters": [
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I",
        "field": "mMaxLengthEstimate"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;",
        "field": "mTimeZone"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;",
        "field": "mLocale"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;",
        "field": "mPattern"
      }
    ],
    "observers": [
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "applyRules",
        "desc": "(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "getTimeZoneDisplay",
        "desc": "(Ljava/util/TimeZone;ZILjava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "format",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "parsePattern",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "parseToken",
        "desc": "(Ljava/lang/String;[I)Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "selectNumberRule",
        "desc": "(II)Lorg/apache/commons/lang3/time/FastDatePrinter$NumberRule;"
      },
      {
        "name": "getMaxLengthEstimate",
        "desc": "()I"
      },
      {
        "name": "getTimeZone",
        "desc": "()Ljava/util/TimeZone;"
      },
      {
        "name": "format",
        "desc": "(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Date;)Ljava/lang/String;"
      },
      {
        "name": "format",
        "desc": "(Ljava/util/Calendar;)Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V"
      },
      {
        "name": "getPattern",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        9,
        10,
        11,
        39,
        48,
        65,
        90,
        97,
        122
      ],
      "char": [
        39,
        48,
        65,
        90,
        97,
        122
      ],
      "short": [
        7,
        9,
        10,
        11,
        39,
        48,
        65,
        90,
        97,
        122
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        7,
        9,
        10,
        11,
        39,
        48,
        65,
        90,
        97,
        122
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.DatePrinter",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6,
        15,
        16
      ],
      "short": [
        6,
        15,
        16
      ],
      "int": [
        3,
        5,
        6,
        15,
        16
      ],
      "str": [
        "Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$NumberRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        0,
        3,
        10
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$Rule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$StringLiteral",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TextField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -2147483648,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        0,
        1,
        16
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        0,
        1,
        16
      ],
      "str": [
        "UTC",
        "Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        10
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        11
      ],
      "short": [
        11
      ],
      "int": [
        11
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        100
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        1,
        100
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        1,
        2,
        10
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10,
        100
      ],
      "char": [
        100
      ],
      "short": [
        10,
        100
      ],
      "int": [
        10,
        100
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule"
    ],
    "outerClass": "org.apache.commons.lang3.time.FastDatePrinter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FormatCache",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInstance",
        "desc": "()Ljava/text/Format;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        7
      ],
      "short": [
        7
      ],
      "int": [
        1,
        2,
        7
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.FormatCache$MultipartKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.FormatCache",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSplitNanoTime",
        "desc": "()J"
      },
      {
        "name": "getNanoTime",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTime",
        "desc": "()J"
      },
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "getSplitTime",
        "desc": "()J"
      },
      {
        "name": "getStartTime",
        "desc": "()J"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "suspend",
        "desc": "()V"
      },
      {
        "name": "resume",
        "desc": "()V"
      },
      {
        "name": "getSplitNanoTime",
        "desc": "()J"
      },
      {
        "name": "getNanoTime",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "unsplit",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "split",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "getStartTime",
        "desc": "()J"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      },
      {
        "name": "getTime",
        "desc": "()J"
      },
      {
        "name": "toSplitString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "getSplitTime",
        "desc": "()J"
      },
      {
        "name": "start",
        "desc": "()V"
      },
      {
        "name": "stop",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.lang3.time.StopWatch",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$SplitState",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "SPLIT",
        "UNSPLIT"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.time.StopWatch",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "RUNNING",
        "STOPPED",
        "SUSPENDED",
        "UNSTARTED"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.lang3.time.StopWatch",
    "access": 17418,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.StopWatch$State"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State$2",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.StopWatch$State"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State$3",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.StopWatch$State"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.time.StopWatch$State$4",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isStopped",
        "desc": "()Z"
      },
      {
        "name": "isSuspended",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.time.StopWatch$State"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.ImmutablePair",
    "setters": [],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "left"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "right"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/ImmutablePair;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.tuple.Pair"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.ImmutableTriple",
    "setters": [],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "left"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "right"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;",
        "field": "middle"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/ImmutableTriple;"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.tuple.Triple"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.MutablePair",
    "setters": [
      {
        "name": "setLeft",
        "desc": "(Ljava/lang/Object;)V",
        "field": "left"
      },
      {
        "name": "setRight",
        "desc": "(Ljava/lang/Object;)V",
        "field": "right"
      }
    ],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "left"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "right"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setLeft",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "setRight",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/MutablePair;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.tuple.Pair"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.MutableTriple",
    "setters": [
      {
        "name": "setLeft",
        "desc": "(Ljava/lang/Object;)V",
        "field": "left"
      },
      {
        "name": "setMiddle",
        "desc": "(Ljava/lang/Object;)V",
        "field": "middle"
      },
      {
        "name": "setRight",
        "desc": "(Ljava/lang/Object;)V",
        "field": "right"
      }
    ],
    "getters": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;",
        "field": "left"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;",
        "field": "right"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;",
        "field": "middle"
      }
    ],
    "observers": [
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/MutableTriple;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setLeft",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "setRight",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getLeft",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getRight",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getMiddle",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "setMiddle",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.lang3.tuple.Triple"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.Pair",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Map$Entry",
      "java.lang.Comparable",
      "java.io.Serializable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.lang3.tuple.Triple",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable",
      "java.io.Serializable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.Log",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createLog",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/logging/Log;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        3
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$JavaUtilAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$JavaUtilLog",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "isFatalEnabled",
        "desc": "()Z"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "readResolve",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.logging.Log",
      "java.io.Serializable"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord",
    "setters": [
      {
        "name": "setSourceClassName",
        "desc": "(Ljava/lang/String;)V",
        "field": "resolved"
      },
      {
        "name": "setSourceMethodName",
        "desc": "(Ljava/lang/String;)V",
        "field": "resolved"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getSourceMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSourceClassName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.util.logging.LogRecord"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$Log4jAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$Log4jLog",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "isFatalEnabled",
        "desc": "()Z"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.apache.commons.logging.Log",
      "java.io.Serializable"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$LogApi",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "JUL",
        "LOG4J",
        "SLF4J",
        "SLF4J_LAL"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$Slf4jAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10,
        20,
        30,
        40
      ],
      "char": [
        40
      ],
      "short": [
        10,
        20,
        30,
        40
      ],
      "int": [
        0,
        10,
        20,
        30,
        40
      ]
    },
    "parents": [
      "org.apache.commons.logging.LogAdapter$Slf4jLog",
      "java.io.Serializable"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogAdapter$Slf4jLog",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "isFatalEnabled",
        "desc": "()Z"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.logging.Log",
      "java.io.Serializable"
    ],
    "outerClass": "org.apache.commons.logging.LogAdapter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.apache.commons.logging.LogFactory"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.LogFactoryService",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAttributeNames",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;"
      },
      {
        "name": "getAttributeNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getAttribute",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "setAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "release",
        "desc": "()V"
      },
      {
        "name": "removeAttribute",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getInstance",
        "desc": "(Ljava/lang/String;)Lorg/apache/commons/logging/Log;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.logging.LogFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.impl.NoOpLog",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "isFatalEnabled",
        "desc": "()Z"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "warn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "fatal",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isFatalEnabled",
        "desc": "()Z"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "fatal",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.logging.Log",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.apache.commons.logging.impl.SimpleLog",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.apache.commons.logging.impl.NoOpLog"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.BaseDescription",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        34
      ],
      "char": [
        34
      ],
      "short": [
        34
      ],
      "int": [
        0,
        9,
        10,
        13,
        34
      ],
      "str": [
        "F>",
        "L>",
        "[",
        "]",
        "null",
        "s>"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.hamcrest.Description"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.BaseMatcher",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.Matcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.hamcrest.Condition",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition$Matched",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.Condition"
    ],
    "outerClass": "org.hamcrest.Condition",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition$NotMatched",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.Condition"
    ],
    "outerClass": "org.hamcrest.Condition",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Condition$Step",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.hamcrest.Condition",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.CoreMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "notNullValue",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "describedAs",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;[Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "(Ljava/lang/Iterable;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "hasItems",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "containsString",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "sameInstance",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "instanceOf",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "nullValue",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItem",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "not",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isA",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anything",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "is",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "either",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableEitherMatcher;"
      },
      {
        "name": "anything",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "any",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "everyItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "equalTo",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Ljava/lang/Iterable;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "notNullValue",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "nullValue",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "not",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "theInstance",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "both",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableBothMatcher;"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.CustomMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.CustomTypeSafeMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Description",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Description$NullDescription",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "appendValueList",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lorg/hamcrest/Description;"
      },
      {
        "name": "appendDescriptionOf",
        "desc": "(Lorg/hamcrest/SelfDescribing;)Lorg/hamcrest/Description;"
      },
      {
        "name": "appendValueList",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Lorg/hamcrest/Description;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "appendValue",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Description;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "appendList",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Lorg/hamcrest/Description;"
      },
      {
        "name": "appendText",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Description;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.Description"
    ],
    "outerClass": "org.hamcrest.Description",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.DiagnosingMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Factory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.FeatureMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "featureValueOf"
      ]
    },
    "parents": [
      "org.hamcrest.TypeSafeDiagnosingMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.Matcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.SelfDescribing"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.MatcherAssert",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.SelfDescribing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.StringDescription",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "asString",
        "desc": "(Lorg/hamcrest/SelfDescribing;)Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "append",
        "desc": "(C)V"
      },
      {
        "name": "toString",
        "desc": "(Lorg/hamcrest/SelfDescribing;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Appendable;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseDescription"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.TypeSafeDiagnosingMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        2
      ],
      "str": [
        "matchesSafely"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.TypeSafeMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "matchesSafely"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.AllOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "allOf",
        "desc": "(Ljava/lang/Iterable;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "allOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Iterable;)V"
      },
      {
        "name": "allOf",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        2,
        3,
        4,
        5,
        6
      ],
      "str": [
        "(",
        ")"
      ]
    },
    "parents": [
      "org.hamcrest.DiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.AnyOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "anyOf",
        "desc": "(Ljava/lang/Iterable;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Iterable;)V"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      },
      {
        "name": "anyOf",
        "desc": "(Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/AnyOf;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "or"
      ]
    },
    "parents": [
      "org.hamcrest.core.ShortcutCombination"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.CombinableMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "and",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher;"
      },
      {
        "name": "or",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "both",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableBothMatcher;"
      },
      {
        "name": "either",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableEitherMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeDiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "and",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.hamcrest.core.CombinableMatcher",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "or",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.hamcrest.core.CombinableMatcher",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.DescribedAs",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "describedAs",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;[Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "describeMismatch",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;[Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "%([0-9]+)"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.Every",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Iterable;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "everyItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeDiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.Is",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "describeMismatch",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)V"
      },
      {
        "name": "isA",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "is",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "is",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsAnything",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "anything",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "anything",
        "desc": "()Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "str": [
        "ANYTHING"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsCollectionContaining",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Iterable;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "hasItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItem",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.hamcrest.TypeSafeDiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsEqual",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "equalTo",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsInstanceOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Description;)Z"
      },
      {
        "name": "instanceOf",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "any",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.hamcrest.DiagnosingMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsNot",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "not",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "not",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsNull",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "notNullValue",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "nullValue",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "notNullValue",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "nullValue",
        "desc": "(Ljava/lang/Class;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "str": [
        "null"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.IsSame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "theInstance",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "sameInstance",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.ShortcutCombination",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "(",
        ")"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1056,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.StringContains",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "evalSubstringOf",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "containsString",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.core.SubstringMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.StringEndsWith",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "evalSubstringOf",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.core.SubstringMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.StringStartsWith",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "relationship",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "evalSubstringOf",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.core.SubstringMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.core.SubstringMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "\""
      ]
    },
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.internal.ArrayIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "next",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "remove",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.internal.ReflectiveTypeFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;II)V"
      },
      {
        "name": "canObtainExpectedTypeFrom",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "expectedTypeFrom",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/Class;"
      },
      {
        "name": "findExpectedType",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.internal.SelfDescribingValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.SelfDescribing"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.hamcrest.internal.SelfDescribingValueIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "next",
        "desc": "()Lorg/hamcrest/SelfDescribing;"
      }
    ],
    "testableMethods": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Iterator;)V"
      },
      {
        "name": "next",
        "desc": "()Lorg/hamcrest/SelfDescribing;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.IAgent",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.RT",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getAgent",
        "desc": "()Lorg/jacoco/agent/rt/IAgent;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.Agent",
    "setters": [],
    "getters": [
      {
        "name": "getData",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;",
        "field": "data"
      }
    ],
    "observers": [
      {
        "name": "getData",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "startup",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/IExceptionLogger;)V"
      },
      {
        "name": "dump",
        "desc": "(Z)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;)Lorg/jacoco/agent/rt/internal_43f5073/Agent;"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/Agent;"
      },
      {
        "name": "getData",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;"
      },
      {
        "name": "createAgentOutput",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/output/IAgentOutput;"
      },
      {
        "name": "setSessionId",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getExecutionData",
        "desc": "(Z)[B"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "unknownhost"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.IAgent"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.Agent$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Thread"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.Agent$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        4
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.Agent",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.ClassFileDumper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "dump",
        "desc": "(Ljava/lang/String;[B)V"
      }
    ],
    "dictionary": {
      "byte": [
        47
      ],
      "char": [
        47
      ],
      "short": [
        47
      ],
      "int": [
        -1,
        0,
        1,
        47
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.ConfigLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "load",
        "desc": "(Ljava/lang/String;Ljava/util/Properties;)Ljava/util/Properties;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "\\$\\{([^\\}]+)\\}",
        "jacoco-agent."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.CoverageTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRuntime;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/IExceptionLogger;)V"
      },
      {
        "name": "transform",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B"
      },
      {
        "name": "filter",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/security/ProtectionDomain;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        0,
        46
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.instrument.ClassFileTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.IExceptionLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.IExceptionLogger$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.IExceptionLogger"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.JmxRegistration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/IAgent;)V"
      },
      {
        "name": "call",
        "desc": "()Ljava/lang/Void;"
      }
    ],
    "dictionary": {
      "str": [
        "org.jacoco:type=Runtime"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.Offline",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getProbes",
        "desc": "(JLjava/lang/String;I)[Z"
      }
    ],
    "dictionary": {
      "str": [
        "/jacoco-agent.properties"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.PreMain",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "premain",
        "desc": "(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V"
      }
    ],
    "dictionary": {
      "str": [
        "$JaCoCo"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.AnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.AnnotationWriter",
    "setters": [
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "numElementValuePairs"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "numElementValuePairs"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "numElementValuePairs"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "numElementValuePairs"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "computeAnnotationsSize",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "putParameterAnnotations",
        "desc": "(I[Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;ILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ZLorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;)V"
      },
      {
        "name": "computeParameterAnnotationsSize",
        "desc": "(Ljava/lang/String;[Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;I)I"
      },
      {
        "name": "create",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "putAnnotations",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "create",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;"
      },
      {
        "name": "computeAnnotationsSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;)I"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "putAnnotations",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      }
    ],
    "dictionary": {
      "byte": [
        90,
        91
      ],
      "char": [
        90,
        91
      ],
      "short": [
        90,
        91
      ],
      "int": [
        -1,
        0,
        1,
        2,
        90,
        91,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.AnnotationVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Attribute",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "getLabels",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassWriter;[BIII)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "computeAttributesSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;)I"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;IILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "getLabels",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      },
      {
        "name": "computeAttributesSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;[BIII)I"
      },
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;[BIIILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "computeAttributesSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;II)I"
      },
      {
        "name": "read",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;II[CI[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;"
      }
    ],
    "dictionary": {
      "byte": [
        49
      ],
      "char": [
        49
      ],
      "short": [
        49,
        4096
      ],
      "int": [
        -1,
        0,
        49,
        4096,
        131072
      ],
      "str": [
        "Deprecated",
        "Synthetic"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Attribute$Set",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toArray",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;"
      }
    ],
    "testableMethods": [
      {
        "name": "addAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toArray",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        1,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.asm.Attribute",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ByteVector",
    "setters": [
      {
        "name": "putInt",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putLong",
        "desc": "(J)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByte",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;",
        "field": "length"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "encodeUtf8",
        "desc": "(Ljava/lang/String;II)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "putInt",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "put11",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "put122",
        "desc": "(III)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putLong",
        "desc": "(J)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "put112",
        "desc": "(III)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "put12",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putByte",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        64,
        127
      ],
      "char": [
        64
      ],
      "short": [
        8,
        64,
        127,
        2047
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        64,
        127,
        2047,
        65535
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ClassReader",
    "setters": [],
    "getters": [
      {
        "name": "getMaxStringLength",
        "desc": "()I",
        "field": "maxStringLength"
      }
    ],
    "observers": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMaxStringLength",
        "desc": "()I"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getFirstAttributeOffset",
        "desc": "()I"
      },
      {
        "name": "getItemCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readConst",
        "desc": "(I[C)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "getItemCount",
        "desc": "()I"
      },
      {
        "name": "readUTF8",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "readInt",
        "desc": "(I)I"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "([BIZ)V"
      },
      {
        "name": "getMaxStringLength",
        "desc": "()I"
      },
      {
        "name": "readLong",
        "desc": "(I)J"
      },
      {
        "name": "getItem",
        "desc": "(I)I"
      },
      {
        "name": "readLabel",
        "desc": "(I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "readClass",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;I)V"
      },
      {
        "name": "readUnsignedShort",
        "desc": "(I)I"
      },
      {
        "name": "readModule",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "readUtf",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "readPackage",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "getFirstAttributeOffset",
        "desc": "()I"
      },
      {
        "name": "readByte",
        "desc": "(I)I"
      },
      {
        "name": "readShort",
        "desc": "(I)S"
      }
    ],
    "dictionary": {
      "byte": [
        -2,
        6,
        8,
        11,
        24,
        33,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91
      ],
      "char": [
        33,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91
      ],
      "short": [
        -2,
        6,
        8,
        11,
        24,
        33,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91,
        128,
        132,
        167,
        168,
        182,
        185,
        187,
        192,
        218,
        224,
        247,
        248,
        251,
        255,
        256,
        4096
      ],
      "int": [
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        11,
        21,
        22,
        23,
        24,
        25,
        33,
        54,
        55,
        56,
        57,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91,
        101,
        128,
        132,
        167,
        168,
        169,
        182,
        185,
        187,
        192,
        218,
        224,
        247,
        248,
        251,
        255,
        256,
        4096,
        131072
      ],
      "str": [
        "<init>",
        "AnnotationDefault",
        "BootstrapMethods",
        "Code",
        "ConstantValue",
        "Deprecated",
        "EnclosingMethod",
        "Exceptions",
        "InnerClasses",
        "LineNumberTable",
        "LocalVariableTable",
        "LocalVariableTypeTable",
        "MethodParameters",
        "Module",
        "ModuleMainClass",
        "ModulePackages",
        "NestHost",
        "NestMembers",
        "RuntimeInvisibleAnnotations",
        "RuntimeInvisibleParameterAnnotations",
        "RuntimeInvisibleTypeAnnotations",
        "RuntimeVisibleAnnotations",
        "RuntimeVisibleParameterAnnotations",
        "RuntimeVisibleTypeAnnotations",
        "Signature",
        "SourceDebugExtension",
        "SourceFile",
        "StackMap",
        "StackMapTable",
        "Synthetic"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ClassTooLargeException",
    "setters": [],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I",
        "field": "constantPoolCount"
      }
    ],
    "observers": [
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.IndexOutOfBoundsException"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ClassWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      },
      {
        "name": "visitNestMember",
        "desc": "(Ljava/lang/String;)V",
        "field": "numberOfNestMemberClasses"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "enclosingClassIndex"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "debugExtension"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;",
        "field": "lastMethod"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/FieldVisitor;",
        "field": "lastField"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "version"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
        "field": "numberOfInnerClasses"
      },
      {
        "name": "visitModule",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/ModuleVisitor;",
        "field": "moduleWriter"
      },
      {
        "name": "visitNestHost",
        "desc": "(Ljava/lang/String;)V",
        "field": "nestHostClassIndex"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "newInvokeDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)I"
      },
      {
        "name": "visitNestMember",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "newField",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newNameType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "newHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;"
      },
      {
        "name": "newPackage",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "newConstantDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)I"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/FieldVisitor;"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "newMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "newHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newModule",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "newMethodType",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "newClass",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "newConst",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "visitModule",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/ModuleVisitor;"
      },
      {
        "name": "visitNestHost",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;I)V"
      },
      {
        "name": "getCommonSuperClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        49,
        51
      ],
      "char": [
        49,
        51
      ],
      "short": [
        9,
        49,
        51,
        4096
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        9,
        49,
        51,
        4096,
        65535,
        131072,
        458752,
        2147483647
      ],
      "str": [
        "EnclosingMethod",
        "InnerClasses",
        "Signature",
        "SourceDebugExtension",
        "Synthetic"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ConstantDynamic",
    "setters": [],
    "getters": [
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;",
        "field": "bootstrapMethod"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;",
        "field": "bootstrapMethodArguments"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      }
    ],
    "observers": [
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethodArgumentCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getBootstrapMethodArgument",
        "desc": "(I)Ljava/lang/Object;"
      },
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getBootstrapMethodArgumentCount",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        68,
        74
      ],
      "char": [
        68,
        74
      ],
      "short": [
        68,
        74
      ],
      "int": [
        0,
        1,
        68,
        74
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Context",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.CurrentFrame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "execute",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.Frame"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Edge",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Edge;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.FieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.FieldWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "computeFieldInfoSize",
        "desc": "()I"
      },
      {
        "name": "collectAttributePrototypes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute$Set;)V"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "putFieldInfo",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        49
      ],
      "char": [
        49
      ],
      "short": [
        8,
        49,
        4096
      ],
      "int": [
        0,
        1,
        8,
        49,
        4096,
        131072,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.FieldVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Frame",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInputStackSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getAbstractTypeFromApiFormat",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Ljava/lang/Object;)I"
      },
      {
        "name": "execute",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;)V"
      },
      {
        "name": "setInputFrameFromDescriptor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILjava/lang/String;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "merge",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Lorg/jacoco/agent/rt/internal_43f5073/asm/Frame;I)Z"
      },
      {
        "name": "copyFrom",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Frame;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodWriter;)V"
      },
      {
        "name": "getAbstractTypeFromInternalName",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;Ljava/lang/String;)I"
      },
      {
        "name": "setInputFrameFromApiFormat",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;I[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "getInputStackSize",
        "desc": "()I"
      },
      {
        "name": "putAbstractType",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        10,
        26,
        40,
        60,
        68,
        74,
        91
      ],
      "char": [
        40,
        60,
        68,
        74,
        91
      ],
      "short": [
        8,
        10,
        26,
        40,
        60,
        68,
        74,
        91,
        183,
        184
      ],
      "int": [
        -67108864,
        -4194304,
        0,
        1,
        2,
        8,
        10,
        26,
        40,
        60,
        68,
        74,
        91,
        183,
        184,
        262144,
        1048575,
        1048576,
        4194304,
        4194305,
        4194307,
        4194308,
        4194309,
        4194310,
        8388608,
        12582912,
        16777216,
        20971520,
        62914560,
        67108863,
        71303172
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Handle",
    "setters": [],
    "getters": [
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      },
      {
        "name": "isInterface",
        "desc": "()Z",
        "field": "isInterface"
      },
      {
        "name": "getTag",
        "desc": "()I",
        "field": "tag"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;",
        "field": "owner"
      }
    ],
    "observers": [
      {
        "name": "getTag",
        "desc": "()I"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getTag",
        "desc": "()I"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        9
      ],
      "short": [
        9
      ],
      "int": [
        0,
        1,
        9
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Handler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "removeRange",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;ILjava/lang/String;)V"
      },
      {
        "name": "getExceptionTableLength",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;)I"
      },
      {
        "name": "getExceptionTableSize",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;)I"
      },
      {
        "name": "putExceptionTable",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handler;Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Label",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCanonicalInstance",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      }
    ],
    "testableMethods": [
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;IZ)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addSubroutineRetSuccessors",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "getCanonicalInstance",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "markSubroutine",
        "desc": "(S)V"
      },
      {
        "name": "resolve",
        "desc": "([BI)Z"
      },
      {
        "name": "addLineNumber",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        16,
        64
      ],
      "char": [
        64
      ],
      "short": [
        -32768,
        6,
        16,
        64,
        198,
        255,
        32767
      ],
      "int": [
        -268435456,
        -32768,
        -1,
        0,
        1,
        2,
        4,
        6,
        16,
        64,
        198,
        255,
        32767,
        268435455,
        268435456
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.MethodTooLargeException",
    "setters": [],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;",
        "field": "methodName"
      },
      {
        "name": "getCodeSize",
        "desc": "()I",
        "field": "codeSize"
      }
    ],
    "observers": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCodeSize",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCodeSize",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "."
      ]
    },
    "parents": [
      "java.lang.IndexOutOfBoundsException"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        11
      ],
      "short": [
        -257,
        11,
        185,
        256
      ],
      "int": [
        -257,
        0,
        1,
        11,
        185,
        256,
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.MethodWriter",
    "setters": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "previousFrameOffset"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V",
        "field": "parametersCount"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V",
        "field": "invisibleAnnotableParameterCount"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V",
        "field": "localVariableTableLength"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V",
        "field": "lastHandler"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "hasAsmInstructions"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleParameterAnnotations"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lineNumberTableLength"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "lastBytecodeOffset"
      }
    ],
    "getters": [
      {
        "name": "hasAsmInstructions",
        "desc": "()Z",
        "field": "hasAsmInstructions"
      }
    ],
    "observers": [
      {
        "name": "hasAsmInstructions",
        "desc": "()Z"
      },
      {
        "name": "hasFrames",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setMethodAttributesSource",
        "desc": "(II)V"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "collectAttributePrototypes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute$Set;)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "hasAsmInstructions",
        "desc": "()Z"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "putMethodInfo",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "computeMethodInfoSize",
        "desc": "()I"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAbstractType",
        "desc": "(II)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "hasFrames",
        "desc": "()Z"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "canCopyMethodAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;ZZIII)Z"
      },
      {
        "name": "visitFrameStart",
        "desc": "(III)I"
      },
      {
        "name": "visitFrameEnd",
        "desc": "()V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        -2,
        6,
        8,
        10,
        16,
        17,
        20,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127
      ],
      "char": [
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74
      ],
      "short": [
        -32768,
        -128,
        -2,
        6,
        8,
        10,
        16,
        17,
        20,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127,
        132,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        198,
        200,
        201,
        202,
        220,
        247,
        248,
        255,
        256,
        4096
      ],
      "int": [
        -32768,
        -128,
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        16,
        17,
        20,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127,
        132,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        198,
        200,
        201,
        202,
        220,
        247,
        248,
        251,
        252,
        255,
        256,
        4096,
        65535,
        131072,
        262144,
        458752,
        2147483647
      ],
      "str": [
        "<init>",
        "RuntimeInvisibleParameterAnnotations",
        "RuntimeVisibleParameterAnnotations"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ModuleVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.ModuleWriter",
    "setters": [
      {
        "name": "visitExport",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V",
        "field": "exportsCount"
      },
      {
        "name": "visitMainClass",
        "desc": "(Ljava/lang/String;)V",
        "field": "mainClassIndex"
      },
      {
        "name": "visitRequire",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)V",
        "field": "requiresCount"
      },
      {
        "name": "visitOpen",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V",
        "field": "opensCount"
      },
      {
        "name": "visitPackage",
        "desc": "(Ljava/lang/String;)V",
        "field": "packageCount"
      },
      {
        "name": "visitUse",
        "desc": "(Ljava/lang/String;)V",
        "field": "usesCount"
      },
      {
        "name": "visitProvide",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "providesCount"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getAttributeCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "computeAttributesSize",
        "desc": "()I"
      },
      {
        "name": "visitExport",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V"
      },
      {
        "name": "visitMainClass",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "visitRequire",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)V"
      },
      {
        "name": "visitOpen",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "visitPackage",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitUse",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/SymbolTable;III)V"
      },
      {
        "name": "visitProvide",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ModuleVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Opcodes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        5,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Symbol",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.SymbolTable",
    "setters": [],
    "getters": [
      {
        "name": "getMajorVersion",
        "desc": "()I",
        "field": "majorVersion"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I",
        "field": "constantPoolCount"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getSource",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;",
        "field": "sourceClassReader"
      }
    ],
    "observers": [
      {
        "name": "getMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSource",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;"
      },
      {
        "name": "getConstantPoolLength",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "putConstantPool",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "getSource",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;"
      },
      {
        "name": "addConstantPackage",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addType",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getConstantPoolLength",
        "desc": "()I"
      },
      {
        "name": "addConstantInteger",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassWriter;)V"
      },
      {
        "name": "addConstantMethodHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantMethodref",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "setMajorVersionAndClassName",
        "desc": "(ILjava/lang/String;)I"
      },
      {
        "name": "addConstantMethodType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantFloat",
        "desc": "(F)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantUtf8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "addConstantFieldref",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstant",
        "desc": "(Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addBootstrapMethod",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassWriter;Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;)V"
      },
      {
        "name": "putBootstrapMethods",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "addConstantString",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantLong",
        "desc": "(J)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantNameAndType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "addConstantDouble",
        "desc": "(D)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantClass",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "getMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addUninitializedType",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "addConstantModule",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "getType",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addConstantInvokeDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Symbol;"
      },
      {
        "name": "addMergedType",
        "desc": "(II)I"
      },
      {
        "name": "computeBootstrapMethodsSize",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        10,
        11,
        12,
        15,
        16,
        64
      ],
      "char": [
        64
      ],
      "short": [
        6,
        10,
        11,
        12,
        15,
        16,
        64,
        128,
        129,
        130,
        256
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10,
        11,
        12,
        15,
        16,
        64,
        128,
        129,
        130,
        256,
        2147483647
      ],
      "long": [
        0
      ],
      "str": [
        "BootstrapMethods"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.SymbolTable$Entry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.Symbol"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.asm.SymbolTable",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.Type",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMethodDescriptor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getReturnTypeOffset",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getMethodType",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/reflect/Constructor;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getConstructorDescriptor",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/lang/String;"
      },
      {
        "name": "getMethodType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getObjectType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/reflect/Method;)[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getOpcode",
        "desc": "(I)I"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/String;)[Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getInternalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getMethodDescriptor",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/Class;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Type;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "char": [
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91,
        172
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        40,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91,
        172
      ],
      "str": [
        "VZCBSIFJD",
        "double",
        "long"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.TypePath",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLength",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([BI)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "put",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Lorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "fromString",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;"
      },
      {
        "name": "getLength",
        "desc": "()I"
      },
      {
        "name": "getStep",
        "desc": "(I)I"
      },
      {
        "name": "getStepArgument",
        "desc": "(I)I"
      }
    ],
    "dictionary": {
      "byte": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "char": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "short": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "int": [
        0,
        1,
        2,
        3,
        42,
        46,
        48,
        57,
        59,
        91
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.TypeReference",
    "setters": [],
    "getters": [
      {
        "name": "getValue",
        "desc": "()I",
        "field": "targetTypeAndInfo"
      }
    ],
    "observers": [
      {
        "name": "getTypeParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getExceptionIndex",
        "desc": "()I"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getFormalParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()I"
      },
      {
        "name": "getTypeArgumentIndex",
        "desc": "()I"
      },
      {
        "name": "getTryCatchBlockIndex",
        "desc": "()I"
      },
      {
        "name": "getTypeParameterBoundIndex",
        "desc": "()I"
      },
      {
        "name": "getSuperTypeIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "newTypeParameterBoundReference",
        "desc": "(III)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getExceptionIndex",
        "desc": "()I"
      },
      {
        "name": "newTypeParameterReference",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getFormalParameterIndex",
        "desc": "()I"
      },
      {
        "name": "newTryCatchReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "newExceptionReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getTryCatchBlockIndex",
        "desc": "()I"
      },
      {
        "name": "putTarget",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/ByteVector;)V"
      },
      {
        "name": "newFormalParameterReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getTypeParameterBoundIndex",
        "desc": "()I"
      },
      {
        "name": "newTypeArgumentReference",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getTypeParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()I"
      },
      {
        "name": "getTypeArgumentIndex",
        "desc": "()I"
      },
      {
        "name": "newSuperTypeReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "newTypeReference",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/TypeReference;"
      },
      {
        "name": "getSuperTypeIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        24
      ],
      "short": [
        8,
        16,
        24
      ],
      "int": [
        8,
        16,
        24,
        65535,
        268435456,
        369098752,
        385875968,
        1107296256
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.commons.AnalyzerAdapter",
    "setters": [
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "maxLocals"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "labels"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "locals"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "locals"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "locals"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "labels"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V",
        "field": "maxLocals"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "labels"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V",
        "field": "labels"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "maxLocals"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "locals"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "labels"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "locals"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        9,
        10,
        11,
        22,
        24,
        40,
        55,
        57,
        68,
        74
      ],
      "char": [
        40,
        55,
        57,
        68,
        74
      ],
      "short": [
        8,
        9,
        10,
        11,
        22,
        24,
        40,
        55,
        57,
        68,
        74,
        132,
        167,
        168,
        169,
        170,
        171,
        172,
        177,
        183,
        184,
        187,
        191,
        197,
        256
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        8,
        9,
        10,
        11,
        22,
        24,
        40,
        55,
        57,
        68,
        74,
        132,
        167,
        168,
        169,
        170,
        171,
        172,
        177,
        183,
        184,
        187,
        191,
        197,
        256,
        327680,
        458752
      ],
      "str": [
        "<init>",
        "[J",
        "java/lang/Class",
        "java/lang/String",
        "java/lang/invoke/MethodHandle",
        "java/lang/invoke/MethodType"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.commons.JSRInlinerAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        11,
        12
      ],
      "short": [
        7,
        8,
        11,
        12,
        167,
        168,
        169
      ],
      "int": [
        0,
        1,
        7,
        8,
        11,
        12,
        167,
        168,
        169,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.MethodNode",
      "org.jacoco.agent.rt.internal_43f5073.asm.Opcodes"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.commons.JSRInlinerAdapter$Instantiation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        8
      ]
    },
    "parents": [
      "java.util.AbstractMap"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.asm.commons.JSRInlinerAdapter",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode",
    "setters": [],
    "getters": [
      {
        "name": "getNext",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;",
        "field": "nextInsn"
      },
      {
        "name": "getOpcode",
        "desc": "()I",
        "field": "opcode"
      },
      {
        "name": "getPrevious",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;",
        "field": "previousInsn"
      }
    ],
    "observers": [
      {
        "name": "getNext",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "getOpcode",
        "desc": "()I"
      },
      {
        "name": "getPrevious",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.AnnotationNode",
    "setters": [
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "values"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "values"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "values"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "values"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "check",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.FieldInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.FrameNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.IincInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        132
      ],
      "int": [
        132
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InsnList",
    "setters": [
      {
        "name": "remove",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "add",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "set",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "lastInsn"
      },
      {
        "name": "add",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)I",
        "field": "cache"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V",
        "field": "size"
      }
    ],
    "getters": [
      {
        "name": "getFirst",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;",
        "field": "firstInsn"
      },
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;",
        "field": "lastInsn"
      }
    ],
    "observers": [
      {
        "name": "getLast",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "getFirst",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "remove",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "removeAll",
        "desc": "(Z)V"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "insert",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "getFirst",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "iterator",
        "desc": "(I)Ljava/util/ListIterator;"
      },
      {
        "name": "toArray",
        "desc": "()[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "add",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V"
      },
      {
        "name": "set",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "add",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)I"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "resetLabels",
        "desc": "()V"
      },
      {
        "name": "get",
        "desc": "(I)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "contains",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;)Z"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/InsnList;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InsnList$InsnListIterator",
    "setters": [
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)V",
        "field": "nextInsn"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)V",
        "field": "previousInsn"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "hasPrevious",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.ListIterator"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InsnList",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.IntInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.InvokeDynamicInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        186
      ],
      "int": [
        186
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.JumpInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LabelNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "getLabel",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "getLabel",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "resetLabel",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LdcInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "byte": [
        18
      ],
      "short": [
        18
      ],
      "int": [
        18
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LineNumberNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LocalVariableAnnotationNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[ILjava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[ILjava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.TypeAnnotationNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LocalVariableNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.LookupSwitchInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        171
      ],
      "int": [
        0,
        171
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.MethodInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        185
      ],
      "int": [
        0,
        1,
        185
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.MethodNode",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "invisibleAnnotations"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V",
        "field": "attrs"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V",
        "field": "parameters"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V",
        "field": "invisibleAnnotableParameterCount"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "invisibleLocalVariableAnnotations"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "invisibleParameterAnnotations"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;",
        "field": "invisibleTypeAnnotations"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V",
        "field": "localVariables"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V",
        "field": "tryCatchBlocks"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V",
        "field": "visited"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "check",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "getLabelNode",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        11
      ],
      "short": [
        -257,
        8,
        11,
        185,
        256,
        1024
      ],
      "int": [
        -257,
        -1,
        0,
        1,
        5,
        8,
        11,
        185,
        256,
        1024,
        262144,
        327680,
        458752,
        16776960
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.MethodNode$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.ArrayList"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.MultiANewArrayInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        197
      ],
      "int": [
        197
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.ParameterNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.TableSwitchInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;[Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        170
      ],
      "int": [
        0,
        170
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.TryCatchBlockNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/LabelNode;Ljava/lang/String;)V"
      },
      {
        "name": "updateIndex",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.TypeAnnotationNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AnnotationNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.TypeInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.UnsupportedClassVersionException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.Util",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "asArrayList",
        "desc": "([F)Ljava/util/List;"
      },
      {
        "name": "add",
        "desc": "(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([I)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([J)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([Z)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([D)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "(I[Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "(I)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([C)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([B)Ljava/util/List;"
      },
      {
        "name": "asArrayList",
        "desc": "([S)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.asm.tree.VarInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.JaCoCo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "RUNTIMEPACKAGE"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.analysis.ICounter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.analysis.ICounter$CounterValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "COVEREDCOUNT",
        "COVEREDRATIO",
        "MISSEDCOUNT",
        "MISSEDRATIO",
        "TOTALCOUNT"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.analysis.ICounter",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionData",
    "setters": [],
    "getters": [
      {
        "name": "getId",
        "desc": "()J",
        "field": "id"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getProbes",
        "desc": "()[Z",
        "field": "probes"
      }
    ],
    "observers": [
      {
        "name": "getId",
        "desc": "()J"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getProbes",
        "desc": "()[Z"
      },
      {
        "name": "hasHits",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "merge",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      },
      {
        "name": "merge",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;Z)V"
      },
      {
        "name": "assertCompatibility",
        "desc": "(JLjava/lang/String;I)V"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/lang/String;I)V"
      },
      {
        "name": "getId",
        "desc": "()J"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getProbes",
        "desc": "()[Z"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/lang/String;[Z)V"
      },
      {
        "name": "hasHits",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataReader",
    "setters": [
      {
        "name": "setSessionInfoVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ISessionInfoVisitor;)V",
        "field": "sessionInfoVisitor"
      },
      {
        "name": "setExecutionDataVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/IExecutionDataVisitor;)V",
        "field": "executionDataVisitor"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "read",
        "desc": "()Z"
      },
      {
        "name": "setExecutionDataVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/IExecutionDataVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readBlock",
        "desc": "(B)Z"
      },
      {
        "name": "setSessionInfoVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ISessionInfoVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        16,
        17,
        49344
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataStore",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getContents",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [
      {
        "name": "contains",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "visitClassExecution",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      },
      {
        "name": "getContents",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "get",
        "desc": "(J)Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Long;Ljava/lang/String;I)Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/IExecutionDataVisitor;)V"
      },
      {
        "name": "subtract",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      },
      {
        "name": "subtract",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionDataStore;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "put",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.data.IExecutionDataVisitor"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitClassExecution",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "getFileHeader",
        "desc": "()[B"
      },
      {
        "name": "visitSessionInfo",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/SessionInfo;)V"
      }
    ],
    "dictionary": {
      "short": [
        4103
      ],
      "int": [
        4103
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.data.ISessionInfoVisitor",
      "org.jacoco.agent.rt.internal_43f5073.core.data.IExecutionDataVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.IExecutionDataVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.ISessionInfoVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.IncompatibleExecDataVersionException",
    "setters": [],
    "getters": [
      {
        "name": "getActualVersion",
        "desc": "()I",
        "field": "actualVersion"
      }
    ],
    "observers": [
      {
        "name": "getExpectedVersion",
        "desc": "()I"
      },
      {
        "name": "getActualVersion",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getExpectedVersion",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getActualVersion",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.io.IOException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.data.SessionInfo",
    "setters": [],
    "getters": [
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;",
        "field": "id"
      },
      {
        "name": "getStartTimeStamp",
        "desc": "()J",
        "field": "start"
      },
      {
        "name": "getDumpTimeStamp",
        "desc": "()J",
        "field": "dump"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStartTimeStamp",
        "desc": "()J"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDumpTimeStamp",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStartTimeStamp",
        "desc": "()J"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JJ)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/SessionInfo;)I"
      },
      {
        "name": "getDumpTimeStamp",
        "desc": "()J"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.instr.Instrumenter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "instrument",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "instrument",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;)[B"
      },
      {
        "name": "instrumentAll",
        "desc": "(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/lang/String;)I"
      },
      {
        "name": "instrument",
        "desc": "([BLjava/lang/String;)[B"
      },
      {
        "name": "setRemoveSignatures",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        -889275714,
        -889270259,
        -1,
        0,
        1,
        1024,
        529203200,
        1347093252
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.instr.Instrumenter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassWriter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.ContentTypeDetector",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()I",
        "field": "type"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;",
        "field": "in"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        45
      ],
      "char": [
        45
      ],
      "short": [
        8,
        45
      ],
      "int": [
        -889275714,
        -889270259,
        -65536,
        8,
        45,
        65535,
        529203200,
        1347093252
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.InputStreams",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "readFully",
        "desc": "(Ljava/io/InputStream;)[B"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        -1,
        1024
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.Pack200Streams",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "unpack",
        "desc": "(Ljava/io/InputStream;)Ljava/io/InputStream;"
      },
      {
        "name": "pack",
        "desc": "([BLjava/io/OutputStream;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.Pack200Streams$NoCloseInput",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.FilterInputStream"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.internal.Pack200Streams",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl",
    "setters": [],
    "getters": [
      {
        "name": "getMissedCount",
        "desc": "()I",
        "field": "missed"
      },
      {
        "name": "getCoveredCount",
        "desc": "()I",
        "field": "covered"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTotalCount",
        "desc": "()I"
      },
      {
        "name": "getMissedCount",
        "desc": "()I"
      },
      {
        "name": "getCoveredCount",
        "desc": "()I"
      },
      {
        "name": "getCoveredRatio",
        "desc": "()D"
      },
      {
        "name": "getMissedRatio",
        "desc": "()D"
      },
      {
        "name": "getStatus",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        30
      ],
      "short": [
        30
      ],
      "int": [
        0,
        1,
        30
      ],
      "str": [
        "Counter["
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.analysis.ICounter"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        5
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl$Fix",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl$Var",
    "setters": [
      {
        "name": "increment",
        "desc": "(II)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/CounterImpl;",
        "field": "missed"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.CounterImpl",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.analysis.Instruction",
    "setters": [
      {
        "name": "addBranch",
        "desc": "(ZI)V",
        "field": "branches"
      },
      {
        "name": "addBranch",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;I)V",
        "field": "branches"
      }
    ],
    "getters": [
      {
        "name": "getLine",
        "desc": "()I",
        "field": "line"
      }
    ],
    "observers": [
      {
        "name": "getBranchCounter",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/analysis/ICounter;"
      },
      {
        "name": "getInstructionCounter",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/analysis/ICounter;"
      },
      {
        "name": "getLine",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "addBranch",
        "desc": "(ZI)V"
      },
      {
        "name": "getBranchCounter",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/analysis/ICounter;"
      },
      {
        "name": "getInstructionCounter",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/analysis/ICounter;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "replaceBranches",
        "desc": "(Ljava/util/Collection;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;"
      },
      {
        "name": "addBranch",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;I)V"
      },
      {
        "name": "getLine",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.data.CRC64",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "classId",
        "desc": "([B)J"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        53
      ],
      "char": [
        53
      ],
      "short": [
        6,
        7,
        8,
        53,
        256
      ],
      "int": [
        0,
        6,
        7,
        8,
        53,
        256
      ],
      "long": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.data.CompactDataInput",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "readVarInt",
        "desc": "()I"
      },
      {
        "name": "readBooleanArray",
        "desc": "()[Z"
      }
    ],
    "testableMethods": [
      {
        "name": "readVarInt",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readBooleanArray",
        "desc": "()[Z"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8,
        128
      ],
      "int": [
        0,
        1,
        8,
        128
      ]
    },
    "parents": [
      "java.io.DataInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.data.CompactDataOutput",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "writeVarInt",
        "desc": "(I)V"
      },
      {
        "name": "writeBooleanArray",
        "desc": "([Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        7,
        8
      ],
      "short": [
        -128,
        7,
        8
      ],
      "int": [
        -128,
        0,
        7,
        8
      ]
    },
    "parents": [
      "java.io.DataOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesAdapter",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "name"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "nextId",
        "desc": "()I"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/ClassProbesVisitor;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.IProbeIdGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesAdapter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodProbesVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesAdapter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodSanitizer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.FrameSnapshot",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/commons/AnalyzerAdapter;I)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IFrame;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.IFrame"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.IFrame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.IProbeIdGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.LabelFlowAnalyzer",
    "setters": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "successor"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "successor"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "successor"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "lineStart"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "successor"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "successor"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "successor"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "successor"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V",
        "field": "successor"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "successor"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "successor"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "successor"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "markLabels",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/tree/MethodNode;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      }
    ],
    "dictionary": {
      "short": [
        167,
        168
      ],
      "int": [
        0,
        1,
        167,
        168,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.LabelInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setMethodInvocationLine",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setIntermediateLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setSuccessor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setInstruction",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;)V"
      },
      {
        "name": "isMultiTarget",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "needsProbe",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "isMethodInvocationLine",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "getProbeId",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)I"
      },
      {
        "name": "getIntermediateLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;"
      },
      {
        "name": "resetDone",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "isDone",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "getInstruction",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/analysis/Instruction;"
      },
      {
        "name": "resetDone",
        "desc": "([Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "isSuccessor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)Z"
      },
      {
        "name": "setDone",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "setProbeId",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodProbesAdapter",
    "setters": [
      {
        "name": "setAnalyzer",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/commons/AnalyzerAdapter;)V",
        "field": "analyzer"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setAnalyzer",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/commons/AnalyzerAdapter;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/MethodProbesVisitor;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IProbeIdGenerator;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        153,
        154,
        155,
        156,
        157,
        158,
        167,
        198,
        199,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodProbesVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodSanitizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      }
    ],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.commons.JSRInlinerAdapter"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ClassFieldProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JZLorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      }
    ],
    "dictionary": {
      "byte": [
        89
      ],
      "char": [
        89
      ],
      "short": [
        89,
        4234
      ],
      "int": [
        0,
        89,
        4234
      ],
      "str": [
        "$jacocoData",
        "[Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ClassInstrumenter",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "className"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/internal/instr/IProbeArrayStrategy;Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;)V"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jacoco/agent/rt/internal_43f5073/asm/FieldVisitor;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/MethodProbesVisitor;"
      },
      {
        "name": "visitTotalProbeCount",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.CondyProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;ZJLorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        3,
        6
      ],
      "str": [
        "$jacocoData",
        "$jacocoInit",
        "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/Class;)[Z",
        "Ljava/lang/Object;"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.DuplicateFrameEliminator",
    "setters": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "instruction"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "instruction"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "instruction"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "instruction"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "instruction"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "instruction"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "instruction"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "instruction"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "instruction"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V",
        "field": "instruction"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "instruction"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "instruction"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "instruction"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V",
        "field": "instruction"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        458752
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeInserter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1536,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.InstrSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getMajorVersion",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;)I"
      },
      {
        "name": "assertNotInstrumented",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "needsFrames",
        "desc": "(I)Z"
      },
      {
        "name": "getMajorVersion",
        "desc": "([B)I"
      },
      {
        "name": "setMajorVersion",
        "desc": "(I[B)V"
      },
      {
        "name": "classReaderFor",
        "desc": "([B)Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;"
      },
      {
        "name": "push",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;I)V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        7,
        16,
        50,
        57,
        58,
        127
      ],
      "char": [
        50,
        57,
        58
      ],
      "short": [
        -32768,
        -128,
        7,
        16,
        50,
        57,
        58,
        127,
        32767
      ],
      "int": [
        -32768,
        -128,
        -1,
        0,
        1,
        3,
        5,
        7,
        16,
        50,
        57,
        58,
        127,
        32767,
        65535
      ],
      "str": [
        "$jacocoData",
        "$jacocoInit"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.InterfaceFieldProbeArrayStrategy",
    "setters": [
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I",
        "field": "seenClinit"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JILorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      }
    ],
    "dictionary": {
      "byte": [
        58,
        89
      ],
      "char": [
        58,
        89
      ],
      "short": [
        58,
        89,
        4121
      ],
      "int": [
        0,
        1,
        58,
        89,
        4121
      ],
      "str": [
        "$jacocoData",
        "[Z"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.LocalProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;JILorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.MethodInstrumenter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitInsnWithProbe",
        "desc": "(II)V"
      },
      {
        "name": "visitTableSwitchInsnWithProbes",
        "desc": "(IILorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IFrame;)V"
      },
      {
        "name": "visitLookupSwitchInsnWithProbes",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[I[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IFrame;)V"
      },
      {
        "name": "visitJumpInsnWithProbe",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/Label;ILorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/IFrame;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/instr/IProbeInserter;)V"
      },
      {
        "name": "visitProbe",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "short": [
        167,
        198,
        199
      ],
      "int": [
        -1,
        0,
        167,
        198,
        199
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.MethodProbesVisitor"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.NoneProbeArrayStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addMembers",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/ClassVisitor;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "storeInstance",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;ZI)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeArrayStrategy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ProbeArrayStrategyFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFor",
        "desc": "(JLorg/jacoco/agent/rt/internal_43f5073/asm/ClassReader;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IExecutionDataAccessorGenerator;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/instr/IProbeArrayStrategy;"
      }
    ],
    "dictionary": {
      "byte": [
        52,
        55
      ],
      "char": [
        52,
        55
      ],
      "short": [
        52,
        55
      ],
      "int": [
        0,
        1,
        52,
        55,
        33280
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ProbeCounter",
    "setters": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/MethodProbesVisitor;",
        "field": "methods"
      },
      {
        "name": "visitTotalProbeCount",
        "desc": "(I)V",
        "field": "count"
      }
    ],
    "getters": [
      {
        "name": "hasMethods",
        "desc": "()Z",
        "field": "methods"
      },
      {
        "name": "getCount",
        "desc": "()I",
        "field": "count"
      }
    ],
    "observers": [
      {
        "name": "hasMethods",
        "desc": "()Z"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasMethods",
        "desc": "()Z"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/internal/flow/MethodProbesVisitor;"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "visitTotalProbeCount",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1,
        1024
      ],
      "str": [
        "<clinit>"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.internal.flow.ClassProbesVisitor"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.ProbeInserter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "insertProbe",
        "desc": "(I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;Lorg/jacoco/agent/rt/internal_43f5073/core/internal/instr/IProbeArrayStrategy;)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/jacoco/agent/rt/internal_43f5073/asm/TypePath;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;[ILjava/lang/String;Z)Lorg/jacoco/agent/rt/internal_43f5073/asm/AnnotationVisitor;"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;Lorg/jacoco/agent/rt/internal_43f5073/asm/Label;I)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        84
      ],
      "char": [
        84
      ],
      "short": [
        8,
        84
      ],
      "int": [
        -1,
        0,
        1,
        8,
        84,
        458752
      ],
      "str": [
        "<clinit>"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.MethodVisitor",
      "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.IProbeInserter"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.internal.instr.SignatureRemover",
    "setters": [
      {
        "name": "setActive",
        "desc": "(Z)V",
        "field": "active"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "filterEntry",
        "desc": "(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/OutputStream;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "removeEntry",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "setActive",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "-Digest",
        "META-INF/MANIFEST.MF",
        "META-INF/[^/]*\\.SF|META-INF/[^/]*\\.DSA|META-INF/[^/]*\\.RSA|META-INF/SIG-[^/]*"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.AbstractRuntime",
    "setters": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V",
        "field": "data"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRuntime"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.AgentOptions",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getExcludes",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDestfile",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAppend",
        "desc": "()Z"
      },
      {
        "name": "getIncludes",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAddress",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPort",
        "desc": "()I"
      },
      {
        "name": "getExclClassloader",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInclNoLocationClasses",
        "desc": "()Z"
      },
      {
        "name": "getOutput",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions$OutputMode;"
      },
      {
        "name": "getClassDumpDir",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInclBootstrapClasses",
        "desc": "()Z"
      },
      {
        "name": "getDumpOnExit",
        "desc": "()Z"
      },
      {
        "name": "getJmx",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getDestfile",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "prependVMArguments",
        "desc": "(Ljava/lang/String;Ljava/io/File;)Ljava/lang/String;"
      },
      {
        "name": "setIncludes",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getAddress",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setAddress",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setExclClassloader",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getExclClassloader",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setDumpOnExit",
        "desc": "(Z)V"
      },
      {
        "name": "setExcludes",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setInclNoLocationClasses",
        "desc": "(Z)V"
      },
      {
        "name": "setPort",
        "desc": "(I)V"
      },
      {
        "name": "setJmx",
        "desc": "(Z)V"
      },
      {
        "name": "getInclNoLocationClasses",
        "desc": "()Z"
      },
      {
        "name": "getClassDumpDir",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setSessionId",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getInclBootstrapClasses",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Properties;)V"
      },
      {
        "name": "getDumpOnExit",
        "desc": "()Z"
      },
      {
        "name": "getVMArgument",
        "desc": "(Ljava/io/File;)Ljava/lang/String;"
      },
      {
        "name": "setOutput",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions$OutputMode;)V"
      },
      {
        "name": "getExcludes",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setAppend",
        "desc": "(Z)V"
      },
      {
        "name": "setClassDumpDir",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAppend",
        "desc": "()Z"
      },
      {
        "name": "getIncludes",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPort",
        "desc": "()I"
      },
      {
        "name": "setDestfile",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setInclBootstrapClasses",
        "desc": "(Z)V"
      },
      {
        "name": "getOutput",
        "desc": "()Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions$OutputMode;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setOutput",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getJmx",
        "desc": "()Z"
      },
      {
        "name": "getQuotedVMArgument",
        "desc": "(Ljava/io/File;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        12,
        13,
        61
      ],
      "char": [
        61
      ],
      "short": [
        12,
        13,
        61
      ],
      "int": [
        -1,
        0,
        1,
        12,
        13,
        61
      ],
      "str": [
        "address",
        "append",
        "classdumpdir",
        "destfile",
        "dumponexit",
        "exclclassloader",
        "excludes",
        "inclbootstrapclasses",
        "inclnolocationclasses",
        "includes",
        "jmx",
        "output",
        "port",
        "sessionid"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.AgentOptions$OutputMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "file",
        "none",
        "tcpclient",
        "tcpserver"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.runtime.AgentOptions",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.CommandLineSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "quote",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "quote",
        "desc": "(Ljava/util/List;)Ljava/lang/String;"
      },
      {
        "name": "split",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "byte": [
        32,
        34,
        92
      ],
      "char": [
        32,
        34,
        92
      ],
      "short": [
        32,
        34,
        92
      ],
      "int": [
        -1,
        0,
        1,
        32,
        34,
        92
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.IExecutionDataAccessorGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRemoteCommandVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRuntime",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.IExecutionDataAccessorGenerator"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.InjectedClassRuntime",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "generateDataAccessor",
        "desc": "(JLjava/lang/String;ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        0,
        46,
        47
      ],
      "str": [
        "data"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.AbstractRuntime"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.InjectedClassRuntime$Lookup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "lookup"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.jacoco.agent.rt.internal_43f5073.core.runtime.InjectedClassRuntime",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.ModifiedSystemClassRuntime",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFor",
        "desc": "(Ljava/lang/instrument/Instrumentation;Ljava/lang/String;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRuntime;"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "instrument",
        "desc": "([BLjava/lang/String;)[B"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "generateDataAccessor",
        "desc": "(JLjava/lang/String;ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)I"
      },
      {
        "name": "createFor",
        "desc": "(Ljava/lang/instrument/Instrumentation;Ljava/lang/String;)Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRuntime;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47,
        4233
      ],
      "int": [
        0,
        1,
        46,
        47,
        4233,
        458752
      ],
      "str": [
        "Ljava/lang/Object;"
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.AbstractRuntime"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.ModifiedSystemClassRuntime$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.instrument.ClassFileTransformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.ModifiedSystemClassRuntime$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.asm.ClassVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.RemoteControlReader",
    "setters": [
      {
        "name": "setRemoteCommandVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRemoteCommandVisitor;)V",
        "field": "remoteCommandVisitor"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readBlock",
        "desc": "(B)Z"
      },
      {
        "name": "setRemoteCommandVisitor",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/IRemoteCommandVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        32,
        64
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataReader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.RemoteControlWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "sendCmdOk",
        "desc": "()V"
      },
      {
        "name": "visitDumpCommand",
        "desc": "(ZZ)V"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        32
      ]
    },
    "parents": [
      "org.jacoco.agent.rt.internal_43f5073.core.data.ExecutionDataWriter",
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRemoteCommandVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.RuntimeData",
    "setters": [
      {
        "name": "setSessionId",
        "desc": "(Ljava/lang/String;)V",
        "field": "sessionId"
      }
    ],
    "getters": [
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;",
        "field": "sessionId"
      }
    ],
    "observers": [
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateAccessCall",
        "desc": "(JLjava/lang/String;ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setSessionId",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "getExecutionData",
        "desc": "(Ljava/lang/Long;Ljava/lang/String;I)Lorg/jacoco/agent/rt/internal_43f5073/core/data/ExecutionData;"
      },
      {
        "name": "generateArgumentArray",
        "desc": "(JLjava/lang/String;ILorg/jacoco/agent/rt/internal_43f5073/asm/MethodVisitor;)V"
      },
      {
        "name": "getSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "collect",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/data/IExecutionDataVisitor;Lorg/jacoco/agent/rt/internal_43f5073/core/data/ISessionInfoVisitor;Z)V"
      },
      {
        "name": "getProbes",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        83
      ],
      "char": [
        83
      ],
      "short": [
        83,
        192
      ],
      "int": [
        0,
        83,
        192
      ],
      "str": [
        "<none>",
        "[Z"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.core.runtime.WildcardMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matches",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2,
        42,
        63
      ],
      "str": [
        "\\:"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.FileOutput",
    "setters": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V",
        "field": "data"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.NoneOutput",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpClientOutput",
    "setters": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V",
        "field": "connection"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/IExceptionLogger;)V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      },
      {
        "name": "createSocket",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;)Ljava/net/Socket;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpClientOutput$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpConnection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/net/Socket;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "visitDumpCommand",
        "desc": "(ZZ)V"
      },
      {
        "name": "init",
        "desc": "()V"
      },
      {
        "name": "run",
        "desc": "()V"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.core.runtime.IRemoteCommandVisitor"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpServerOutput",
    "setters": [
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V",
        "field": "serverSocket"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getInetAddress",
        "desc": "(Ljava/lang/String;)Ljava/net/InetAddress;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/IExceptionLogger;)V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "startup",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/RuntimeData;)V"
      },
      {
        "name": "createServerSocket",
        "desc": "(Lorg/jacoco/agent/rt/internal_43f5073/core/runtime/AgentOptions;)Ljava/net/ServerSocket;"
      },
      {
        "name": "writeExecutionData",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "*"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.jacoco.agent.rt.internal_43f5073.output.IAgentOutput"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.jacoco.agent.rt.internal_43f5073.output.TcpServerOutput$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.After",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.AfterClass",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Assert",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assertEquals",
        "desc": "(FFF)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([D[DD)V"
      },
      {
        "name": "assertNull",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([I[I)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([S[S)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertSame",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[Z[Z)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/String;JJ)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;DDD)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "assertSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[D[DD)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "fail",
        "desc": "()V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([B[B)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;JJ)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/String;FFF)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([Z[Z)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(FFF)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[S[S)V"
      },
      {
        "name": "assertNotNull",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNotNull",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertTrue",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[F[FF)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[B[B)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(Ljava/lang/String;DDD)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(DDD)V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V"
      },
      {
        "name": "format",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[J[J)V"
      },
      {
        "name": "assertEquals",
        "desc": "(DD)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([J[J)V"
      },
      {
        "name": "assertNotSame",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertFalse",
        "desc": "(Z)V"
      },
      {
        "name": "assertNull",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "assertTrue",
        "desc": "(Z)V"
      },
      {
        "name": "assertFalse",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([C[C)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[C[C)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;DD)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertNotSame",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "([F[FF)V"
      },
      {
        "name": "assertThat",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertEquals",
        "desc": "(Ljava/lang/String;FFF)V"
      },
      {
        "name": "assertEquals",
        "desc": "(DDD)V"
      },
      {
        "name": "assertEquals",
        "desc": "(JJ)V"
      },
      {
        "name": "assertNotEquals",
        "desc": "(JJ)V"
      },
      {
        "name": "fail",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "assertArrayEquals",
        "desc": "(Ljava/lang/String;[I[I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Assume",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assumeTrue",
        "desc": "(Z)V"
      },
      {
        "name": "assumeNoException",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "assumeThat",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assumeThat",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assumeFalse",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assumeTrue",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "assumeNotNull",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "assumeNoException",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "assumeFalse",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.AssumptionViolatedException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.internal.AssumptionViolatedException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Before",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.BeforeClass",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ClassRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ComparisonFailure",
    "setters": [],
    "getters": [
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;",
        "field": "fExpected"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;",
        "field": "fActual"
      }
    ],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpected",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        20
      ],
      "short": [
        20
      ],
      "int": [
        20
      ]
    },
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ComparisonFailure$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.ComparisonFailure",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ComparisonFailure$ComparisonCompactor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.ComparisonFailure",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.ComparisonFailure$ComparisonCompactor",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.FixMethodOrder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Ignore",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Rule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Test",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.Test$None",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Throwable"
    ],
    "outerClass": "org.junit.Test",
    "access": 9,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.ParallelComputer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getSuite",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;[Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "getRunner",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "<init>",
        "desc": "(ZZ)V"
      },
      {
        "name": "classes",
        "desc": "()Lorg/junit/runner/Computer;"
      },
      {
        "name": "methods",
        "desc": "()Lorg/junit/runner/Computer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runner.Computer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.ParallelComputer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        9223372036854775807
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.runners.model.RunnerScheduler"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Categories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/junit/runners/model/RunnerBuilder;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.Suite"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Categories$CategoryFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "include",
        "desc": "(Z[Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "include",
        "desc": "(Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "categoryFilter",
        "desc": "(ZLjava/util/Set;ZLjava/util/Set;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "describe",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "exclude",
        "desc": "([Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "<init>",
        "desc": "(ZLjava/util/Set;ZLjava/util/Set;)V"
      },
      {
        "name": "exclude",
        "desc": "(Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "exclude",
        "desc": "(Z[Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "include",
        "desc": "([Ljava/lang/Class;)Lorg/junit/experimental/categories/Categories$CategoryFilter;"
      },
      {
        "name": "shouldRun",
        "desc": "(Lorg/junit/runner/Description;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runner.manipulation.Filter"
    ],
    "outerClass": "org.junit.experimental.categories.Categories",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Categories$ExcludeCategory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.experimental.categories.Categories",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Categories$IncludeCategory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.experimental.categories.Categories",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.Category",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.CategoryFilterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.runner.FilterFactory"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.CategoryValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validateAnnotatedMethod",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2,
        3
      ]
    },
    "parents": [
      "org.junit.validator.AnnotationValidator"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.ExcludeCategories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFilter",
        "desc": "(Ljava/util/List;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.categories.CategoryFilterFactory"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.ExcludeCategories$ExcludesAny",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.experimental.categories.Categories$CategoryFilter"
    ],
    "outerClass": "org.junit.experimental.categories.ExcludeCategories",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.IncludeCategories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFilter",
        "desc": "(Ljava/util/List;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.categories.CategoryFilterFactory"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.categories.IncludeCategories$IncludesAny",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.experimental.categories.Categories$CategoryFilter"
    ],
    "outerClass": "org.junit.experimental.categories.IncludeCategories",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.CouldNotReadCoreException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxCore",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "storedLocally",
        "desc": "(Ljava/io/File;)Lorg/junit/experimental/max/MaxCore;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Request;Lorg/junit/runner/JUnitCore;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Request;)Lorg/junit/runner/Result;"
      },
      {
        "name": "sortedLeavesForTest",
        "desc": "(Lorg/junit/runner/Request;)Ljava/util/List;"
      },
      {
        "name": "sortRequest",
        "desc": "(Lorg/junit/runner/Request;)Lorg/junit/runner/Request;"
      },
      {
        "name": "forFolder",
        "desc": "(Ljava/lang/String;)Lorg/junit/experimental/max/MaxCore;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "]",
        "warning(junit.framework.TestSuite$1)"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxCore$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Request"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxCore$1$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.Suite"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxHistory",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "listener",
        "desc": "()Lorg/junit/runner/notification/RunListener;"
      }
    ],
    "testableMethods": [
      {
        "name": "forFolder",
        "desc": "(Ljava/io/File;)Lorg/junit/experimental/max/MaxHistory;"
      },
      {
        "name": "getTestDuration",
        "desc": "(Lorg/junit/runner/Description;)Ljava/lang/Long;"
      },
      {
        "name": "putTestDuration",
        "desc": "(Lorg/junit/runner/Description;J)V"
      },
      {
        "name": "putTestFailureTimestamp",
        "desc": "(Lorg/junit/runner/Description;J)V"
      },
      {
        "name": "isNewTest",
        "desc": "(Lorg/junit/runner/Description;)Z"
      },
      {
        "name": "getFailureTimestamp",
        "desc": "(Lorg/junit/runner/Description;)Ljava/lang/Long;"
      },
      {
        "name": "listener",
        "desc": "()Lorg/junit/runner/notification/RunListener;"
      },
      {
        "name": "testComparator",
        "desc": "()Ljava/util/Comparator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxHistory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.experimental.max.MaxHistory",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxHistory$RememberingListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "org.junit.experimental.max.MaxHistory",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.max.MaxHistory$TestComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.junit.experimental.max.MaxHistory",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.FailureList",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "result",
        "desc": "()Lorg/junit/runner/Result;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.PrintableResult",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "failureCount",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "testResult",
        "desc": "(Lorg/junit/runner/Request;)Lorg/junit/experimental/results/PrintableResult;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "testResult",
        "desc": "(Ljava/lang/Class;)Lorg/junit/experimental/results/PrintableResult;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.ResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasSingleFailureContaining",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isSuccessful",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasFailureContaining",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "failureCountIs",
        "desc": "(I)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.ResultMatchers$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.ResultMatchers$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.results.ResultMatchers$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.runners.Enclosed",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/junit/runners/model/RunnerBuilder;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.junit.runners.Suite"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.DataPoint",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.DataPoints",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.FromDataPoints",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.ParameterSignature",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "signatures",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/util/ArrayList;"
      },
      {
        "name": "hasAnnotation",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "signatures",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/util/List;"
      },
      {
        "name": "canAcceptType",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "canPotentiallyAcceptType",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "findDeepAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "canAcceptValue",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getAnnotations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.ParameterSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.ParametersSuppliedBy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.PotentialAssignment",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.PotentialAssignment$1",
    "setters": [],
    "getters": [
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "val$value"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.theories.PotentialAssignment"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "outerClass": "org.junit.experimental.theories.PotentialAssignment",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "validateTestMethods",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "computeTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "methodBlock",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "collectInitializationErrors",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "validateConstructor",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories$TheoryAnchor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Lorg/junit/runners/model/TestClass;)V"
      },
      {
        "name": "runWithIncompleteAssignment",
        "desc": "(Lorg/junit/experimental/theories/internal/Assignments;)V"
      },
      {
        "name": "handleDataPointSuccess",
        "desc": "()V"
      },
      {
        "name": "runWithCompleteAssignment",
        "desc": "(Lorg/junit/experimental/theories/internal/Assignments;)V"
      },
      {
        "name": "reportParameterizedError",
        "desc": "(Ljava/lang/Throwable;[Ljava/lang/Object;)V"
      },
      {
        "name": "handleAssumptionViolation",
        "desc": "(Lorg/junit/internal/AssumptionViolatedException;)V"
      },
      {
        "name": "runWithAssignment",
        "desc": "(Lorg/junit/experimental/theories/internal/Assignments;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "org.junit.experimental.theories.Theories",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories$TheoryAnchor$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories$TheoryAnchor$1$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theories$TheoryAnchor$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.Theory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.AllMembersSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/TestClass;)V"
      },
      {
        "name": "getValueSources",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List;"
      },
      {
        "name": "getDataPointsMethods",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getSingleDataPointFields",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getSingleDataPointMethods",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getDataPointsFields",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "[",
        "]"
      ]
    },
    "parents": [
      "org.junit.experimental.theories.ParameterSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.AllMembersSupplier$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.experimental.theories.internal.AllMembersSupplier",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.experimental.theories.PotentialAssignment"
    ],
    "outerClass": "org.junit.experimental.theories.internal.AllMembersSupplier",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.Assignments",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConstructorArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getMethodArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isComplete",
        "desc": "()Z"
      },
      {
        "name": "getAllArguments",
        "desc": "()[Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "allUnassigned",
        "desc": "(Ljava/lang/reflect/Method;Lorg/junit/runners/model/TestClass;)Lorg/junit/experimental/theories/internal/Assignments;"
      },
      {
        "name": "getConstructorArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getActualValues",
        "desc": "(II)[Ljava/lang/Object;"
      },
      {
        "name": "getMethodArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isComplete",
        "desc": "()Z"
      },
      {
        "name": "getArgumentStrings",
        "desc": "(Z)[Ljava/lang/Object;"
      },
      {
        "name": "nextUnassigned",
        "desc": "()Lorg/junit/experimental/theories/ParameterSignature;"
      },
      {
        "name": "assignNext",
        "desc": "(Lorg/junit/experimental/theories/PotentialAssignment;)Lorg/junit/experimental/theories/internal/Assignments;"
      },
      {
        "name": "potentialsForNextUnassigned",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAllArguments",
        "desc": "()[Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.BooleanSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getValueSources",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.theories.ParameterSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.EnumSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getValueSources",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.junit.experimental.theories.ParameterSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.ParameterizedAssertionError",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "join",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "join",
        "desc": "(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.internal.SpecificDataPointsSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/TestClass;)V"
      },
      {
        "name": "getDataPointsMethods",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getSingleDataPointFields",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getSingleDataPointMethods",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      },
      {
        "name": "getDataPointsFields",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.experimental.theories.internal.AllMembersSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.suppliers.TestedOn",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.experimental.theories.suppliers.TestedOnSupplier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getValueSources",
        "desc": "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "ints"
      ]
    },
    "parents": [
      "org.junit.experimental.theories.ParameterSupplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.ArrayComparisonFailure",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/AssertionError;I)V"
      },
      {
        "name": "addDimension",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.AssumptionViolatedException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;ZLjava/lang/Object;Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.RuntimeException",
      "org.hamcrest.SelfDescribing"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.Classes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.ComparisonCriteria",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.ExactComparisonCriteria",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertElementsEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.internal.ComparisonCriteria"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.InexactComparisonCriteria",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assertElementsEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(D)V"
      },
      {
        "name": "<init>",
        "desc": "(F)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.internal.ComparisonCriteria"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.JUnitSystem",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.MethodSorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getDeclaredMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.MethodSorter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.MethodSorter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.RealSystem",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "out",
        "desc": "()Ljava/io/PrintStream;"
      }
    ],
    "testableMethods": [
      {
        "name": "out",
        "desc": "()Ljava/io/PrintStream;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "exit",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.JUnitSystem"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.TextListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/internal/JUnitSystem;)V"
      },
      {
        "name": "testFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "printHeader",
        "desc": "(J)V"
      },
      {
        "name": "testRunFinished",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "printFailures",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "printFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;Ljava/lang/String;)V"
      },
      {
        "name": "printFooter",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "testIgnored",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "elapsedTimeAsString",
        "desc": "(J)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintStream;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        69,
        73
      ],
      "char": [
        46,
        69,
        73
      ],
      "short": [
        46,
        69,
        73
      ],
      "int": [
        1,
        46,
        69,
        73
      ],
      "str": [
        "FAILURES!!!",
        "OK"
      ]
    },
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.Throwables",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "rethrowAsException",
        "desc": "(Ljava/lang/Throwable;)Ljava/lang/Exception;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.AllDefaultPossibilitiesBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "junit4Builder",
        "desc": "()Lorg/junit/internal/builders/JUnit4Builder;"
      },
      {
        "name": "ignoredBuilder",
        "desc": "()Lorg/junit/internal/builders/IgnoredBuilder;"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "suiteMethodBuilder",
        "desc": "()Lorg/junit/runners/model/RunnerBuilder;"
      },
      {
        "name": "junit3Builder",
        "desc": "()Lorg/junit/internal/builders/JUnit3Builder;"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "annotatedBuilder",
        "desc": "()Lorg/junit/internal/builders/AnnotatedBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.AnnotatedBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;)V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "buildRunner",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.IgnoredBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.IgnoredClassRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.JUnit3Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "isPre4Test",
        "desc": "(Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.JUnit4Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.NullBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.builders.SuiteMethodBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasSuiteMethod",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runnerForClass",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.matchers.StacktracePrintingMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "isException",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isThrowable",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "describeMismatchSafely",
        "desc": "(Ljava/lang/Throwable;Lorg/hamcrest/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.matchers.ThrowableCauseMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "hasCause",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "describeMismatchSafely",
        "desc": "(Ljava/lang/Throwable;Lorg/hamcrest/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.matchers.ThrowableMessageMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matchesSafely",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "describeMismatchSafely",
        "desc": "(Ljava/lang/Throwable;Lorg/hamcrest/Description;)V"
      },
      {
        "name": "hasMessage",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.hamcrest.TypeSafeMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.matchers.TypeSafeMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "matchesSafely"
      ]
    },
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.requests.ClassRequest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.runner.Request"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.requests.FilterRequest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Request;Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.runner.Request"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.requests.SortingRequest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Request;Ljava/util/Comparator;)V"
      },
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Request"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.ClassRoadie",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "runProtected",
        "desc": "()V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;Lorg/junit/internal/runners/TestClass;Lorg/junit/runner/Description;Ljava/lang/Runnable;)V"
      },
      {
        "name": "runUnprotected",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.ErrorReportingRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.FailedBefore",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.InitializationError",
    "setters": [],
    "getters": [
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;",
        "field": "fErrors"
      }
    ],
    "observers": [
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit38ClassRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljunit/framework/Test;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "sort",
        "desc": "(Lorg/junit/runner/manipulation/Sorter;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "createAdaptingListener",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)Ljunit/framework/TestListener;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable",
      "org.junit.runner.manipulation.Sortable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit38ClassRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.JUnit38ClassRunner",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "junit.framework.TestListener"
    ],
    "outerClass": "org.junit.internal.runners.JUnit38ClassRunner",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit4ClassRunner",
    "setters": [],
    "getters": [
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/internal/runners/TestClass;",
        "field": "testClass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/internal/runners/TestClass;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "runMethods",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "testName",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "invokeTestMethod",
        "desc": "(Ljava/lang/reflect/Method;Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/internal/runners/TestClass;"
      },
      {
        "name": "createTest",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "classAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "methodDescription",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/junit/runner/Description;"
      },
      {
        "name": "sort",
        "desc": "(Lorg/junit/runner/manipulation/Sorter;)V"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "validate",
        "desc": "()V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "testAnnotations",
        "desc": "(Ljava/lang/reflect/Method;)[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "wrapMethod",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/junit/internal/runners/TestMethod;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable",
      "org.junit.runner.manipulation.Sortable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit4ClassRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.JUnit4ClassRunner$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodRoadie",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "runBeforesThenTestThenAfters",
        "desc": "(Ljava/lang/Runnable;)V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "runTestMethod",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/junit/internal/runners/TestMethod;Lorg/junit/runner/notification/RunNotifier;Lorg/junit/runner/Description;)V"
      },
      {
        "name": "run",
        "desc": "()V"
      },
      {
        "name": "runTest",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "long": [
        0
      ],
      "str": [
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodRoadie$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodRoadie$1$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodRoadie$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.MethodValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validateNoArgConstructor",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/internal/runners/TestClass;)V"
      },
      {
        "name": "validateInstanceMethods",
        "desc": "()V"
      },
      {
        "name": "validateStaticMethods",
        "desc": "()V"
      },
      {
        "name": "validateMethodsForDefaultRunner",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "assertValid",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.SuiteMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "testFromSuiteMethod",
        "desc": "(Ljava/lang/Class;)Ljunit/framework/Test;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "suite"
      ]
    },
    "parents": [
      "org.junit.internal.runners.JUnit38ClassRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.TestClass",
    "setters": [],
    "getters": [
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;",
        "field": "klass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAfters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getBefores",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getAfters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getBefores",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.TestMethod",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getExpectedException",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAfters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "getBefores",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isIgnored",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getExpectedException",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "expectsException",
        "desc": "()Z"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getAfters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "isUnexpected",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "getBefores",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isIgnored",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;Lorg/junit/internal/runners/TestClass;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.model.EachTestNotifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "fireTestStarted",
        "desc": "()V"
      },
      {
        "name": "addFailure",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "addFailedAssumption",
        "desc": "(Lorg/junit/internal/AssumptionViolatedException;)V"
      },
      {
        "name": "fireTestIgnored",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;Lorg/junit/runner/Description;)V"
      },
      {
        "name": "fireTestFinished",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.model.MultipleFailureException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.MultipleFailureException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.model.ReflectiveCallable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validate",
        "desc": "(Lorg/junit/runners/model/TestClass;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/internal/runners/rules/RuleMemberValidator$Builder;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.rules.RuleMemberValidator",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.rules.ValidationError",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/FrameworkMember;Ljava/lang/Class;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.ExpectException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Class;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        ">"
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.Fail",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.FailOnTimeout",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "builder",
        "desc": "()Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;J)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        5
      ],
      "long": [
        0
      ],
      "str": [
        "FailOnTimeoutGroup"
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.FailOnTimeout$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.statements.FailOnTimeout",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.FailOnTimeout$Builder",
    "setters": [
      {
        "name": "withTimeout",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;",
        "field": "timeout"
      },
      {
        "name": "withLookingForStuckThread",
        "desc": "(Z)Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;",
        "field": "lookForStuckThread"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "withTimeout",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;"
      },
      {
        "name": "withLookingForStuckThread",
        "desc": "(Z)Lorg/junit/internal/runners/statements/FailOnTimeout$Builder;"
      },
      {
        "name": "build",
        "desc": "(Lorg/junit/runners/model/Statement;)Lorg/junit/internal/runners/statements/FailOnTimeout;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.internal.runners.statements.FailOnTimeout",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.FailOnTimeout$CallableStatement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "org.junit.internal.runners.statements.FailOnTimeout",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.InvokeMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.RunAfters",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "evaluate",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/util/List;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.internal.runners.statements.RunBefores",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "evaluate",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/util/List;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.matchers.JUnitMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasItem",
        "desc": "(Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Ljava/lang/Object;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "hasItems",
        "desc": "([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isException",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "everyItem",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "isThrowable",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "containsString",
        "desc": "(Ljava/lang/String;)Lorg/hamcrest/Matcher;"
      },
      {
        "name": "both",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableBothMatcher;"
      },
      {
        "name": "either",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/hamcrest/core/CombinableMatcher$CombinableEitherMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.DisableOnDebug",
    "setters": [],
    "getters": [
      {
        "name": "isDebugging",
        "desc": "()Z",
        "field": "debugging"
      }
    ],
    "observers": [
      {
        "name": "isDebugging",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isDebugging",
        "desc": "()Z"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/rules/TestRule;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/rules/TestRule;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "-Xdebug",
        "-agentlib:jdwp"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ErrorCollector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "checkThat",
        "desc": "(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "checkSucceeds",
        "desc": "(Ljava/util/concurrent/Callable;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "checkThat",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "addError",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "verify",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.junit.rules.Verifier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ErrorCollector$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExpectedException",
    "setters": [
      {
        "name": "reportMissingExceptionWithMessage",
        "desc": "(Ljava/lang/String;)Lorg/junit/rules/ExpectedException;",
        "field": "missingExceptionMessage"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "none",
        "desc": "()Lorg/junit/rules/ExpectedException;"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "expectMessage",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "expectCause",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "handleAssumptionViolatedExceptions",
        "desc": "()Lorg/junit/rules/ExpectedException;"
      },
      {
        "name": "reportMissingExceptionWithMessage",
        "desc": "(Ljava/lang/String;)Lorg/junit/rules/ExpectedException;"
      },
      {
        "name": "expect",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "expectMessage",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "expect",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "handleAssertionErrors",
        "desc": "()Lorg/junit/rules/ExpectedException;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExpectedException$ExpectedExceptionStatement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "org.junit.rules.ExpectedException",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExpectedExceptionMatcherBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "expectsThrowable",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExternalResource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.ExternalResource$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.MethodRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.RuleChain",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "emptyRuleChain",
        "desc": "()Lorg/junit/rules/RuleChain;"
      },
      {
        "name": "around",
        "desc": "(Lorg/junit/rules/TestRule;)Lorg/junit/rules/RuleChain;"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "outerRule",
        "desc": "(Lorg/junit/rules/TestRule;)Lorg/junit/rules/RuleChain;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.RunRules",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Iterable;Lorg/junit/runner/Description;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Stopwatch",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Stopwatch$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.rules.Stopwatch",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Stopwatch$Clock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "nanoTime",
        "desc": "()J"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.rules.Stopwatch",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Stopwatch$InternalWatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.rules.TestWatcher"
    ],
    "outerClass": "org.junit.rules.Stopwatch",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TemporaryFolder",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRoot",
        "desc": "()Ljava/io/File;"
      }
    ],
    "testableMethods": [
      {
        "name": "after",
        "desc": "()V"
      },
      {
        "name": "delete",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()V"
      },
      {
        "name": "newFile",
        "desc": "(Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newFolder",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "newFolder",
        "desc": "([Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "before",
        "desc": "()V"
      },
      {
        "name": "newFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "newFolder",
        "desc": "(Ljava/lang/String;)Ljava/io/File;"
      },
      {
        "name": "getRoot",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "junit"
      ]
    },
    "parents": [
      "org.junit.rules.ExternalResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestName",
    "setters": [],
    "getters": [
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "starting",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.rules.TestWatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestWatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestWatcher$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestWatchman",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "starting",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)V"
      },
      {
        "name": "succeeded",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)V"
      },
      {
        "name": "finished",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "failed",
        "desc": "(Ljava/lang/Throwable;Lorg/junit/runners/model/FrameworkMethod;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.MethodRule"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.TestWatchman$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Timeout",
    "setters": [],
    "getters": [
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z",
        "field": "lookForStuckThread"
      }
    ],
    "observers": [
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/rules/Timeout$Builder;)V"
      },
      {
        "name": "millis",
        "desc": "(J)Lorg/junit/rules/Timeout;"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "builder",
        "desc": "()Lorg/junit/rules/Timeout$Builder;"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/util/concurrent/TimeUnit;)V"
      },
      {
        "name": "getTimeout",
        "desc": "(Ljava/util/concurrent/TimeUnit;)J"
      },
      {
        "name": "seconds",
        "desc": "(J)Lorg/junit/rules/Timeout;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "createFailOnTimeoutStatement",
        "desc": "(Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Timeout$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Timeout$Builder",
    "setters": [
      {
        "name": "withTimeout",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Lorg/junit/rules/Timeout$Builder;",
        "field": "timeout"
      },
      {
        "name": "withLookingForStuckThread",
        "desc": "(Z)Lorg/junit/rules/Timeout$Builder;",
        "field": "lookForStuckThread"
      }
    ],
    "getters": [
      {
        "name": "getTimeout",
        "desc": "()J",
        "field": "timeout"
      },
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;",
        "field": "timeUnit"
      },
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z",
        "field": "lookForStuckThread"
      }
    ],
    "observers": [
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "withLookingForStuckThread",
        "desc": "(Z)Lorg/junit/rules/Timeout$Builder;"
      },
      {
        "name": "withTimeout",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Lorg/junit/rules/Timeout$Builder;"
      },
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "build",
        "desc": "()Lorg/junit/rules/Timeout;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "getLookingForStuckThread",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.rules.Timeout",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Verifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.rules.Verifier$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Computer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getSuite",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;[Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "getRunner",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;Ljava/lang/Class;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "serial",
        "desc": "()Lorg/junit/runner/Computer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Computer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.RunnerBuilder"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Describable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Description",
    "setters": [],
    "getters": [
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;",
        "field": "fDisplayName"
      }
    ],
    "observers": [
      {
        "name": "isSuite",
        "desc": "()Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isTest",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/ArrayList;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "getAnnotations",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [
      {
        "name": "isSuite",
        "desc": "()Z"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "createSuiteDescription",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/Description;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isTest",
        "desc": "()Z"
      },
      {
        "name": "testCount",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "createTestDescription",
        "desc": "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "addChild",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "createSuiteDescription",
        "desc": "(Ljava/lang/String;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;"
      },
      {
        "name": "createSuiteDescription",
        "desc": "(Ljava/lang/String;Ljava/io/Serializable;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "createTestDescription",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/io/Serializable;)Lorg/junit/runner/Description;"
      },
      {
        "name": "createTestDescription",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Lorg/junit/runner/Description;"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/ArrayList;"
      },
      {
        "name": "createTestDescription",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;"
      },
      {
        "name": "childlessCopy",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getAnnotations",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "([\\s\\S]*)\\((.*)\\)"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.FilterFactories",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createFilter",
        "desc": "(Ljava/lang/Class;Lorg/junit/runner/FilterFactoryParams;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "createFilterFromFilterSpec",
        "desc": "(Lorg/junit/runner/Request;Ljava/lang/String;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createFilterFactory",
        "desc": "(Ljava/lang/Class;)Lorg/junit/runner/FilterFactory;"
      },
      {
        "name": "createFilter",
        "desc": "(Ljava/lang/String;Lorg/junit/runner/FilterFactoryParams;)Lorg/junit/runner/manipulation/Filter;"
      },
      {
        "name": "createFilterFactory",
        "desc": "(Ljava/lang/String;)Lorg/junit/runner/FilterFactory;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "="
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.FilterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.FilterFactory$FilterNotCreatedException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Exception;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "outerClass": "org.junit.runner.FilterFactory",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.FilterFactoryParams",
    "setters": [],
    "getters": [
      {
        "name": "getArgs",
        "desc": "()Ljava/lang/String;",
        "field": "args"
      },
      {
        "name": "getTopLevelDescription",
        "desc": "()Lorg/junit/runner/Description;",
        "field": "topLevelDescription"
      }
    ],
    "observers": [
      {
        "name": "getArgs",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTopLevelDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "getArgs",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTopLevelDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Description;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.JUnitCommandLineParseResult",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClasses",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getFilterSpecs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "parseOptions",
        "desc": "([Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "getClasses",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "parseParameters",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "getFilterSpecs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "parse",
        "desc": "([Ljava/lang/String;)Lorg/junit/runner/JUnitCommandLineParseResult;"
      },
      {
        "name": "createRequest",
        "desc": "(Lorg/junit/runner/Computer;)Lorg/junit/runner/Request;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "--",
        "--filter",
        "--filter=",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.JUnitCommandLineParseResult$CommandLineParserError",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "outerClass": "org.junit.runner.JUnitCommandLineParseResult",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.JUnitCore",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "runClasses",
        "desc": "(Lorg/junit/runner/Computer;[Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "removeListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "run",
        "desc": "([Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "addListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "runClasses",
        "desc": "([Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "runMain",
        "desc": "(Lorg/junit/internal/JUnitSystem;[Ljava/lang/String;)Lorg/junit/runner/Result;"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "defaultComputer",
        "desc": "()Lorg/junit/runner/Computer;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Computer;[Ljava/lang/Class;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Request;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Ljunit/framework/Test;)Lorg/junit/runner/Result;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/Runner;)Lorg/junit/runner/Result;"
      },
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Request",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Request$1",
    "setters": [],
    "getters": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;",
        "field": "val$runner"
      }
    ],
    "observers": [
      {
        "name": "getRunner",
        "desc": "()Lorg/junit/runner/Runner;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Request"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Result",
    "setters": [],
    "getters": [
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;",
        "field": "failures"
      }
    ],
    "observers": [
      {
        "name": "getIgnoreCount",
        "desc": "()I"
      },
      {
        "name": "getRunTime",
        "desc": "()J"
      },
      {
        "name": "getRunCount",
        "desc": "()I"
      },
      {
        "name": "getFailureCount",
        "desc": "()I"
      },
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "wasSuccessful",
        "desc": "()Z"
      },
      {
        "name": "getIgnoreCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getRunTime",
        "desc": "()J"
      },
      {
        "name": "getRunCount",
        "desc": "()I"
      },
      {
        "name": "getFailureCount",
        "desc": "()I"
      },
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "createListener",
        "desc": "()Lorg/junit/runner/notification/RunListener;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Result$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.runner.Result",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Result$Listener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "org.junit.runner.Result",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Result$SerializedForm",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        0
      ],
      "str": [
        "fCount",
        "fFailures",
        "fIgnoreCount",
        "fRunTime",
        "fStartTime"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "outerClass": "org.junit.runner.Result",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.RunWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.Runner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runner.Describable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.manipulation.Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.manipulation.Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filter$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.manipulation.Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Filterable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.NoTestsRemainException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Sortable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Sorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Comparator;)V"
      },
      {
        "name": "compare",
        "desc": "(Lorg/junit/runner/Description;Lorg/junit/runner/Description;)I"
      },
      {
        "name": "apply",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.manipulation.Sorter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.Failure",
    "setters": [],
    "getters": [
      {
        "name": "getException",
        "desc": "()Ljava/lang/Throwable;",
        "field": "fThrownException"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;",
        "field": "fDescription"
      }
    ],
    "observers": [
      {
        "name": "getTestHeader",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTrace",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getException",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/Description;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getTestHeader",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTrace",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getException",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "testRunStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "testFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "testAssumptionFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "testRunFinished",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "testIgnored",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "testFinished",
        "desc": "(Lorg/junit/runner/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunListener$ThreadSafe",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runner.notification.RunListener",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "fireTestIgnored",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "pleaseStop",
        "desc": "()V"
      },
      {
        "name": "removeListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "addListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "fireTestStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "fireTestRunFinished",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "fireTestRunStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "addFirstListener",
        "desc": "(Lorg/junit/runner/notification/RunListener;)V"
      },
      {
        "name": "fireTestAssumptionFailed",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "wrapIfNotThreadSafe",
        "desc": "(Lorg/junit/runner/notification/RunListener;)Lorg/junit/runner/notification/RunListener;"
      },
      {
        "name": "fireTestFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "fireTestFinished",
        "desc": "(Lorg/junit/runner/Description;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$6",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$7",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunNotifier$SafeNotifier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.RunNotifier$SafeNotifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.runner.notification.RunNotifier",
    "access": 1026,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.StoppedByUserException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runner.notification.SynchronizedRunListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "testRunStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "testFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/notification/RunListener;Ljava/lang/Object;)V"
      },
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "testAssumptionFailure",
        "desc": "(Lorg/junit/runner/notification/Failure;)V"
      },
      {
        "name": "testRunFinished",
        "desc": "(Lorg/junit/runner/Result;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "testIgnored",
        "desc": "(Lorg/junit/runner/Description;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "testFinished",
        "desc": "(Lorg/junit/runner/Description;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.AllTests",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.SuiteMethod"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.BlockJUnit4ClassRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "validateOnlyOneConstructor",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "validateZeroArgConstructor",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "validateTestMethods",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "withBefores",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "withAfters",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "runChild",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "methodBlock",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "validateFields",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "validateNoNonStaticInnerClass",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "createTest",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "testName",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Ljava/lang/String;"
      },
      {
        "name": "rules",
        "desc": "(Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "isIgnored",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Z"
      },
      {
        "name": "computeTestMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "validateInstanceMethods",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "possiblyExpectingExceptions",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "collectInitializationErrors",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "describeChild",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Lorg/junit/runner/Description;"
      },
      {
        "name": "methodInvoker",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "withPotentialTimeout",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "validateConstructor",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getTestRules",
        "desc": "(Ljava/lang/Object;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "org.junit.runners.ParentRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.BlockJUnit4ClassRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.model.ReflectiveCallable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.JUnit4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.MethodSorters",
    "setters": [],
    "getters": [
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;",
        "field": "comparator"
      }
    ],
    "observers": [
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;"
      }
    ],
    "testableMethods": [
      {
        "name": "getComparator",
        "desc": "()Ljava/util/Comparator;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "DEFAULT",
        "JVM",
        "NAME_ASCENDING"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Parameterized",
    "setters": [],
    "getters": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;",
        "field": "runners"
      }
    ],
    "observers": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "org.junit.runners.Suite"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Parameterized$Parameter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runners.Parameterized",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Parameterized$Parameters",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runners.Parameterized",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Parameterized$UseParametersRunnerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runners.Parameterized",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner",
    "setters": [
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V",
        "field": "filteredChildren"
      },
      {
        "name": "sort",
        "desc": "(Lorg/junit/runner/manipulation/Sorter;)V",
        "field": "filteredChildren"
      },
      {
        "name": "setScheduler",
        "desc": "(Lorg/junit/runners/model/RunnerScheduler;)V",
        "field": "scheduler"
      }
    ],
    "getters": [
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;",
        "field": "testClass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;"
      },
      {
        "name": "getRunnerAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable",
      "org.junit.runner.manipulation.Sortable"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runners.model.RunnerScheduler"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.ParentRunner$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Suite",
    "setters": [],
    "getters": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;",
        "field": "runners"
      }
    ],
    "observers": [
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;Ljava/lang/Class;[Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/junit/runners/model/RunnerBuilder;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/RunnerBuilder;[Ljava/lang/Class;)V"
      },
      {
        "name": "getChildren",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "runChild",
        "desc": "(Lorg/junit/runner/Runner;Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "emptySuite",
        "desc": "()Lorg/junit/runner/Runner;"
      },
      {
        "name": "describeChild",
        "desc": "(Lorg/junit/runner/Runner;)Lorg/junit/runner/Description;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.ParentRunner"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.Suite$SuiteClasses",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.junit.runners.Suite",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.Annotatable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.FrameworkField",
    "setters": [],
    "getters": [
      {
        "name": "getField",
        "desc": "()Ljava/lang/reflect/Field;",
        "field": "field"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getField",
        "desc": "()Ljava/lang/reflect/Field;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getField",
        "desc": "()Ljava/lang/reflect/Field;"
      },
      {
        "name": "isShadowedBy",
        "desc": "(Lorg/junit/runners/model/FrameworkField;)Z"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.FrameworkMember"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.FrameworkMember",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isPublic",
        "desc": "()Z"
      },
      {
        "name": "isStatic",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runners.model.Annotatable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.FrameworkMethod",
    "setters": [],
    "getters": [
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "method"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "validatePublicVoidNoArg",
        "desc": "(ZLjava/util/List;)V"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "invokeExplosively",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "validatePublicVoid",
        "desc": "(ZLjava/util/List;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "producesType",
        "desc": "(Ljava/lang/reflect/Type;)Z"
      },
      {
        "name": "validateNoTypeParametersOnArgs",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isShadowedBy",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Z"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "should"
      ]
    },
    "parents": [
      "org.junit.runners.model.FrameworkMember"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.FrameworkMethod$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.model.ReflectiveCallable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.InitializationError",
    "setters": [],
    "getters": [
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;",
        "field": "fErrors"
      }
    ],
    "observers": [
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "getCauses",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.MultipleFailureException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "assertEmpty",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getFailures",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.NoGenericTypeParametersValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "validate",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.RunnerBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.RunnerScheduler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.Statement",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestClass",
    "setters": [],
    "getters": [
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;",
        "field": "clazz"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOnlyConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getAnnotatedFields",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isANonStaticInnerClass",
        "desc": "()Z"
      },
      {
        "name": "isPublic",
        "desc": "()Z"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getAnnotatedFields",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOnlyConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getAnnotatedFieldValues",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isANonStaticInnerClass",
        "desc": "()Z"
      },
      {
        "name": "isPublic",
        "desc": "()Z"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "scanAnnotatedMembers",
        "desc": "(Ljava/util/Map;Ljava/util/Map;)V"
      },
      {
        "name": "getAnnotatedFields",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAnnotatedMethodValues",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "addToAnnotationLists",
        "desc": "(Lorg/junit/runners/model/FrameworkMember;Ljava/util/Map;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.runners.model.Annotatable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestClass$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.runners.model.TestClass",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestClass$FieldComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.junit.runners.model.TestClass",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestClass$MethodComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.junit.runners.model.TestClass",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.model.TestTimedOutException",
    "setters": [],
    "getters": [
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;",
        "field": "timeUnit"
      },
      {
        "name": "getTimeout",
        "desc": "()J",
        "field": "timeout"
      }
    ],
    "observers": [
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getTimeUnit",
        "desc": "()Ljava/util/concurrent/TimeUnit;"
      },
      {
        "name": "<init>",
        "desc": "(JLjava/util/concurrent/TimeUnit;)V"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters",
    "setters": [],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRunnerAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/parameterized/TestWithParameters;)V"
      },
      {
        "name": "classBlock",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "getRunnerAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "validateFields",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "validateConstructor",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "createTest",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "testName",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        ").",
        ".",
        "@Parameter("
      ]
    },
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParametersFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createRunnerForTestWithParameters",
        "desc": "(Lorg/junit/runners/parameterized/TestWithParameters;)Lorg/junit/runner/Runner;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runners.parameterized.ParametersRunnerFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.parameterized.ParametersRunnerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.runners.parameterized.TestWithParameters",
    "setters": [],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;",
        "field": "parameters"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;",
        "field": "testClass"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getTestClass",
        "desc": "()Lorg/junit/runners/model/TestClass;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/junit/runners/model/TestClass;Ljava/util/List;)V"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationValidatorFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createAnnotationValidator",
        "desc": "(Lorg/junit/validator/ValidateWith;)Lorg/junit/validator/AnnotationValidator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateTestClass",
        "desc": "(Lorg/junit/runners/model/TestClass;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.validator.TestClassValidator"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$AnnotatableValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$ClassValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.validator.AnnotationsValidator$AnnotatableValidator"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$FieldValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.validator.AnnotationsValidator$AnnotatableValidator"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.AnnotationsValidator$MethodValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.validator.AnnotationsValidator$AnnotatableValidator"
    ],
    "outerClass": "org.junit.validator.AnnotationsValidator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.PublicClassValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateTestClass",
        "desc": "(Lorg/junit/runners/model/TestClass;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.validator.TestClassValidator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.TestClassValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.junit.validator.ValidateWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.AdditionalAnswers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnsLastArg",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "returnsSecondArg",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "returnsFirstArg",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "delegatesTo",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "returnsArgAt",
        "desc": "(I)Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "returnsElementsOf",
        "desc": "(Ljava/util/Collection;)Lorg/mockito/stubbing/Answer;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.AdditionalMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "lt",
        "desc": "(F)F"
      },
      {
        "name": "gt",
        "desc": "(I)I"
      },
      {
        "name": "lt",
        "desc": "(D)D"
      },
      {
        "name": "aryEq",
        "desc": "([J)[J"
      },
      {
        "name": "aryEq",
        "desc": "([F)[F"
      },
      {
        "name": "lt",
        "desc": "(J)J"
      },
      {
        "name": "and",
        "desc": "(ZZ)Z"
      },
      {
        "name": "aryEq",
        "desc": "([B)[B"
      },
      {
        "name": "or",
        "desc": "(BB)B"
      },
      {
        "name": "and",
        "desc": "(CC)C"
      },
      {
        "name": "leq",
        "desc": "(I)I"
      },
      {
        "name": "or",
        "desc": "(II)I"
      },
      {
        "name": "geq",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "lt",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "find",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "and",
        "desc": "(SS)S"
      },
      {
        "name": "not",
        "desc": "(Z)Z"
      },
      {
        "name": "leq",
        "desc": "(S)S"
      },
      {
        "name": "lt",
        "desc": "(B)B"
      },
      {
        "name": "aryEq",
        "desc": "([Z)[Z"
      },
      {
        "name": "aryEq",
        "desc": "([S)[S"
      },
      {
        "name": "not",
        "desc": "(C)C"
      },
      {
        "name": "and",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "or",
        "desc": "(ZZ)Z"
      },
      {
        "name": "aryEq",
        "desc": "([C)[C"
      },
      {
        "name": "not",
        "desc": "(I)I"
      },
      {
        "name": "geq",
        "desc": "(I)I"
      },
      {
        "name": "and",
        "desc": "(DD)D"
      },
      {
        "name": "eq",
        "desc": "(DD)D"
      },
      {
        "name": "aryEq",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "leq",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "or",
        "desc": "(FF)F"
      },
      {
        "name": "leq",
        "desc": "(B)B"
      },
      {
        "name": "gt",
        "desc": "(S)S"
      },
      {
        "name": "or",
        "desc": "(JJ)J"
      },
      {
        "name": "geq",
        "desc": "(S)S"
      },
      {
        "name": "leq",
        "desc": "(F)F"
      },
      {
        "name": "gt",
        "desc": "(J)J"
      },
      {
        "name": "not",
        "desc": "(S)S"
      },
      {
        "name": "leq",
        "desc": "(D)D"
      },
      {
        "name": "aryEq",
        "desc": "([D)[D"
      },
      {
        "name": "not",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "leq",
        "desc": "(J)J"
      },
      {
        "name": "or",
        "desc": "(SS)S"
      },
      {
        "name": "lt",
        "desc": "(I)I"
      },
      {
        "name": "and",
        "desc": "(II)I"
      },
      {
        "name": "gt",
        "desc": "(B)B"
      },
      {
        "name": "or",
        "desc": "(CC)C"
      },
      {
        "name": "gt",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "gt",
        "desc": "(F)F"
      },
      {
        "name": "gt",
        "desc": "(D)D"
      },
      {
        "name": "cmpEq",
        "desc": "(Ljava/lang/Comparable;)Ljava/lang/Comparable;"
      },
      {
        "name": "geq",
        "desc": "(B)B"
      },
      {
        "name": "not",
        "desc": "(D)D"
      },
      {
        "name": "aryEq",
        "desc": "([I)[I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "geq",
        "desc": "(D)D"
      },
      {
        "name": "not",
        "desc": "(B)B"
      },
      {
        "name": "geq",
        "desc": "(F)F"
      },
      {
        "name": "and",
        "desc": "(BB)B"
      },
      {
        "name": "eq",
        "desc": "(FF)F"
      },
      {
        "name": "and",
        "desc": "(FF)F"
      },
      {
        "name": "not",
        "desc": "(F)F"
      },
      {
        "name": "geq",
        "desc": "(J)J"
      },
      {
        "name": "or",
        "desc": "(DD)D"
      },
      {
        "name": "and",
        "desc": "(JJ)J"
      },
      {
        "name": "not",
        "desc": "(J)J"
      },
      {
        "name": "lt",
        "desc": "(S)S"
      },
      {
        "name": "or",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Answers",
    "setters": [],
    "getters": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;",
        "field": "implementation"
      }
    ],
    "observers": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      }
    ],
    "testableMethods": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "CALLS_REAL_METHODS",
        "RETURNS_DEEP_STUBS",
        "RETURNS_DEFAULTS",
        "RETURNS_MOCKS",
        "RETURNS_SMART_NULLS"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.ArgumentCaptor",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "capture",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "forClass",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/ArgumentCaptor;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.ArgumentMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.hamcrest.BaseMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "willCallRealMethod",
        "desc": "()Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "then",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$Then;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "willDoNothing",
        "desc": "()Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willThrow",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "given",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDStubber;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.Mockito"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$BDDMyOngoingStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$BDDOngoingStubbingImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "willThrow",
        "desc": "([Ljava/lang/Class;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "will",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willCallRealMethod",
        "desc": "()Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willReturn",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willThrow",
        "desc": "([Ljava/lang/Throwable;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "willAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/BDDMockito$BDDMyOngoingStubbing;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/stubbing/OngoingStubbing;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.BDDMockito$BDDMyOngoingStubbing"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$BDDStubber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$BDDStubberImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "given",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "willCallRealMethod",
        "desc": "()Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willNothing",
        "desc": "()Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/stubbing/Stubber;)V"
      },
      {
        "name": "willThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willThrow",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/BDDMockito$BDDStubber;"
      },
      {
        "name": "willReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/BDDMockito$BDDStubber;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.BDDMockito$BDDStubber"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$Then",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.BDDMockito$ThenImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "should",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "should",
        "desc": "(Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.BDDMockito$Then"
    ],
    "outerClass": "org.mockito.BDDMockito",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Captor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.InOrder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Incubating",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.InjectMocks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Matchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "anyString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "longThat",
        "desc": "(Lorg/hamcrest/Matcher;)J"
      },
      {
        "name": "any",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "argThat",
        "desc": "(Lorg/hamcrest/Matcher;)Ljava/lang/Object;"
      },
      {
        "name": "eq",
        "desc": "(Z)Z"
      },
      {
        "name": "isNull",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "anyInt",
        "desc": "()I"
      },
      {
        "name": "anyChar",
        "desc": "()C"
      },
      {
        "name": "anyByte",
        "desc": "()B"
      },
      {
        "name": "eq",
        "desc": "(I)I"
      },
      {
        "name": "anyList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "intThat",
        "desc": "(Lorg/hamcrest/Matcher;)I"
      },
      {
        "name": "anyVararg",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "booleanThat",
        "desc": "(Lorg/hamcrest/Matcher;)Z"
      },
      {
        "name": "anyObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "floatThat",
        "desc": "(Lorg/hamcrest/Matcher;)F"
      },
      {
        "name": "anyCollectionOf",
        "desc": "(Ljava/lang/Class;)Ljava/util/Collection;"
      },
      {
        "name": "charThat",
        "desc": "(Lorg/hamcrest/Matcher;)C"
      },
      {
        "name": "anyDouble",
        "desc": "()D"
      },
      {
        "name": "eq",
        "desc": "(C)C"
      },
      {
        "name": "anyLong",
        "desc": "()J"
      },
      {
        "name": "eq",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "isA",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "isNotNull",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "same",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "anyFloat",
        "desc": "()F"
      },
      {
        "name": "shortThat",
        "desc": "(Lorg/hamcrest/Matcher;)S"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "anyShort",
        "desc": "()S"
      },
      {
        "name": "any",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "anySetOf",
        "desc": "(Ljava/lang/Class;)Ljava/util/Set;"
      },
      {
        "name": "anyCollection",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "isNull",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "anyMap",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "anyMapOf",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;"
      },
      {
        "name": "startsWith",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "byteThat",
        "desc": "(Lorg/hamcrest/Matcher;)B"
      },
      {
        "name": "anySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "eq",
        "desc": "(S)S"
      },
      {
        "name": "refEq",
        "desc": "(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "isNotNull",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "eq",
        "desc": "(F)F"
      },
      {
        "name": "anyBoolean",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "anyListOf",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "eq",
        "desc": "(J)J"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "notNull",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "endsWith",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "doubleThat",
        "desc": "(Lorg/hamcrest/Matcher;)D"
      },
      {
        "name": "eq",
        "desc": "(D)D"
      },
      {
        "name": "notNull",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "eq",
        "desc": "(B)B"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Mock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockSettings",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockingDetails",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Mockito",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "calls",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "verifyZeroInteractions",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "stub",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/DeprecatedOngoingStubbing;"
      },
      {
        "name": "times",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "doAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Lorg/mockito/ReturnValues;)Ljava/lang/Object;"
      },
      {
        "name": "spy",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "reset",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "after",
        "desc": "(I)Lorg/mockito/verification/VerificationAfterDelay;"
      },
      {
        "name": "when",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "timeout",
        "desc": "(J)Lorg/mockito/verification/VerificationWithTimeout;"
      },
      {
        "name": "stubVoid",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "ignoreStubs",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "spy",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "doThrow",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "validateMockitoUsage",
        "desc": "()V"
      },
      {
        "name": "only",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "inOrder",
        "desc": "([Ljava/lang/Object;)Lorg/mockito/InOrder;"
      },
      {
        "name": "doThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Lorg/mockito/stubbing/Answer;)Ljava/lang/Object;"
      },
      {
        "name": "doReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "atLeastOnce",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "atLeast",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "doCallRealMethod",
        "desc": "()Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "withSettings",
        "desc": "()Lorg/mockito/MockSettings;"
      },
      {
        "name": "mockingDetails",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockingDetails;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Lorg/mockito/MockSettings;)Ljava/lang/Object;"
      },
      {
        "name": "debug",
        "desc": "()Lorg/mockito/MockitoDebugger;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "atMost",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "verifyNoMoreInteractions",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "doNothing",
        "desc": "()Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "never",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.Matchers"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockitoAnnotations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "scanDeprecatedWay",
        "desc": "(Lorg/mockito/configuration/AnnotationEngine;Ljava/lang/Object;Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "processAnnotationDeprecatedWay",
        "desc": "(Lorg/mockito/configuration/AnnotationEngine;Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "initMocks",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "throwIfAlreadyAssigned",
        "desc": "(Ljava/lang/reflect/Field;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockitoAnnotations$Mock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "outerClass": "org.mockito.MockitoAnnotations",
    "access": 9737,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.MockitoDebugger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.ReturnValues",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.Spy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.AnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.AnnotationWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "size"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "size"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "size"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "size"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "put",
        "desc": "([Lorg/mockito/asm/AnnotationWriter;ILorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassWriter;ZLorg/mockito/asm/ByteVector;Lorg/mockito/asm/ByteVector;I)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "byte": [
        90,
        91
      ],
      "char": [
        90,
        91
      ],
      "short": [
        90,
        91
      ],
      "int": [
        0,
        1,
        2,
        90,
        91
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Attribute",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLabels",
        "desc": "()[Lorg/mockito/asm/Label;"
      },
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getLabels",
        "desc": "()[Lorg/mockito/asm/Label;"
      },
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "getSize",
        "desc": "(Lorg/mockito/asm/ClassWriter;[BIII)I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/ClassWriter;[BIIILorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "write",
        "desc": "(Lorg/mockito/asm/ClassWriter;[BIII)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "read",
        "desc": "(Lorg/mockito/asm/ClassReader;II[CI[Lorg/mockito/asm/Label;)Lorg/mockito/asm/Attribute;"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ByteVector",
    "setters": [
      {
        "name": "putByte",
        "desc": "(I)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putInt",
        "desc": "(I)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putLong",
        "desc": "(J)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/mockito/asm/ByteVector;",
        "field": "length"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "putByte",
        "desc": "(I)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "putInt",
        "desc": "(I)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "put11",
        "desc": "(II)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "putLong",
        "desc": "(J)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "put12",
        "desc": "(II)Lorg/mockito/asm/ByteVector;"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/mockito/asm/ByteVector;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        64,
        127
      ],
      "char": [
        64
      ],
      "short": [
        8,
        64,
        127,
        2047
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        8,
        64,
        127,
        2047
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ClassAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ClassReader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;[Lorg/mockito/asm/Attribute;I)V"
      },
      {
        "name": "readClass",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([BII)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readConst",
        "desc": "(I[C)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "readUTF8",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "readLabel",
        "desc": "(I[Lorg/mockito/asm/Label;)Lorg/mockito/asm/Label;"
      },
      {
        "name": "copyPool",
        "desc": "(Lorg/mockito/asm/ClassWriter;)V"
      },
      {
        "name": "readUnsignedShort",
        "desc": "(I)I"
      },
      {
        "name": "readInt",
        "desc": "(I)I"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "readLong",
        "desc": "(I)J"
      },
      {
        "name": "getItem",
        "desc": "(I)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "readByte",
        "desc": "(I)I"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;I)V"
      },
      {
        "name": "readShort",
        "desc": "(I)S"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        8,
        46,
        47,
        54,
        59,
        64,
        76,
        91
      ],
      "char": [
        46,
        47,
        54,
        59,
        64,
        76,
        91
      ],
      "short": [
        6,
        8,
        46,
        47,
        54,
        59,
        64,
        76,
        91,
        128,
        132,
        182,
        185,
        247,
        248,
        251,
        255,
        1000,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        2,
        4,
        6,
        8,
        46,
        47,
        54,
        59,
        64,
        76,
        91,
        101,
        128,
        132,
        182,
        185,
        247,
        248,
        251,
        255,
        1000,
        4096,
        131072
      ],
      "double": [
        0.75
      ],
      "str": [
        ".class",
        "<init>",
        "AnnotationDefault",
        "Code",
        "ConstantValue",
        "Deprecated",
        "EnclosingMethod",
        "Exceptions",
        "InnerClasses",
        "LineNumberTable",
        "LocalVariableTable",
        "LocalVariableTypeTable",
        "RuntimeInvisibleAnnotations",
        "RuntimeInvisibleParameterAnnotations",
        "RuntimeVisibleAnnotations",
        "RuntimeVisibleParameterAnnotations",
        "Signature",
        "SourceDebugExtension",
        "SourceFile",
        "StackMap",
        "StackMapTable",
        "Synthetic"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.ClassWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "ianns"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "enclosingMethodOwner"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I",
        "field": "index"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "sourceDebug"
      },
      {
        "name": "newNameType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I",
        "field": "index"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "version"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
        "field": "innerClassesCount"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V",
        "field": "attrs"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "newField",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "newLong",
        "desc": "(J)Lorg/mockito/asm/Item;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newClassItem",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Item;"
      },
      {
        "name": "newNameType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "newDouble",
        "desc": "(D)Lorg/mockito/asm/Item;"
      },
      {
        "name": "addType",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "newMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I"
      },
      {
        "name": "newFloat",
        "desc": "(F)Lorg/mockito/asm/Item;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassReader;I)V"
      },
      {
        "name": "newInteger",
        "desc": "(I)Lorg/mockito/asm/Item;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newMethodItem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/mockito/asm/Item;"
      },
      {
        "name": "getMergedType",
        "desc": "(II)I"
      },
      {
        "name": "newConstItem",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/asm/Item;"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "addUninitializedType",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "newClass",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "newConst",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "newFieldItem",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/Item;"
      },
      {
        "name": "getCommonSuperClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        10,
        14,
        15,
        16,
        32,
        49
      ],
      "char": [
        32,
        49
      ],
      "short": [
        6,
        7,
        8,
        10,
        14,
        15,
        16,
        32,
        49,
        220,
        256,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        14,
        15,
        16,
        32,
        49,
        220,
        256,
        4096,
        65535,
        131072,
        2147483647
      ],
      "double": [
        0.75
      ],
      "str": [
        "Deprecated",
        "EnclosingMethod",
        "Signature",
        "SourceDebugExtension"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Edge",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.FieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.FieldWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "ianns"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V",
        "field": "attrs"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        49
      ],
      "char": [
        49
      ],
      "short": [
        8,
        49,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        2,
        8,
        49,
        4096,
        65535,
        131072
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Frame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "execute",
        "desc": "(IILorg/mockito/asm/ClassWriter;Lorg/mockito/asm/Item;)V"
      },
      {
        "name": "initInputFrame",
        "desc": "(Lorg/mockito/asm/ClassWriter;I[Lorg/mockito/asm/Type;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/ClassWriter;Lorg/mockito/asm/Frame;I)Z"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        10,
        40,
        60,
        68,
        74,
        91
      ],
      "char": [
        40,
        60,
        68,
        74,
        91
      ],
      "short": [
        8,
        10,
        40,
        60,
        68,
        74,
        91,
        183,
        184,
        202
      ],
      "int": [
        -268435456,
        -1048576,
        0,
        1,
        2,
        8,
        10,
        40,
        60,
        68,
        74,
        91,
        183,
        184,
        202,
        262144,
        16777216,
        16777217,
        16777219,
        16777220,
        16777221,
        16777222,
        24117248,
        25165824,
        33554432,
        50331648,
        251658240,
        267386880,
        268435455
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Handler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Item",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "set",
        "desc": "(D)V"
      },
      {
        "name": "isEqualTo",
        "desc": "(Lorg/mockito/asm/Item;)Z"
      },
      {
        "name": "set",
        "desc": "(F)V"
      },
      {
        "name": "set",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "set",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/Item;)V"
      },
      {
        "name": "set",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        3,
        4,
        5,
        6,
        2147483647
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Label",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/MethodWriter;Lorg/mockito/asm/ByteVector;IZ)V"
      },
      {
        "name": "addToSubroutine",
        "desc": "(JI)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "inSameSubroutine",
        "desc": "(Lorg/mockito/asm/Label;)Z"
      },
      {
        "name": "inSubroutine",
        "desc": "(J)Z"
      },
      {
        "name": "resolve",
        "desc": "(Lorg/mockito/asm/MethodWriter;I[B)Z"
      },
      {
        "name": "visitSubroutine",
        "desc": "(Lorg/mockito/asm/Label;JI)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        32
      ],
      "char": [
        32
      ],
      "short": [
        -32768,
        6,
        32,
        128,
        168,
        255,
        256,
        1024,
        32767
      ],
      "int": [
        -32768,
        -1,
        0,
        1,
        2,
        6,
        32,
        128,
        168,
        255,
        256,
        1024,
        32767
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.MethodAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.MethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.MethodWriter",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "ianns"
      },
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "stackSize"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "maxLocals"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "previousFrameOffset"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "ipanns"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "stackSize"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "stackSize"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "stackSize"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "stackSize"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "stackSize"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V",
        "field": "stackSize"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "maxLocals"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V",
        "field": "handlerCount"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V",
        "field": "resize"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V",
        "field": "attrs"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V",
        "field": "lineNumberCount"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "stackSize"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V",
        "field": "localVarCount"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "readInt",
        "desc": "([BI)I"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "getNewOffset",
        "desc": "([I[III)I"
      },
      {
        "name": "readShort",
        "desc": "([BI)S"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZZ)V"
      },
      {
        "name": "readUnsignedShort",
        "desc": "([BI)I"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeShort",
        "desc": "([BII)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Lorg/mockito/asm/ByteVector;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "getNewOffset",
        "desc": "([I[ILorg/mockito/asm/Label;)V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        -2,
        6,
        8,
        16,
        17,
        18,
        20,
        22,
        24,
        28,
        32,
        41,
        49,
        50,
        54,
        55,
        57,
        59,
        63,
        64,
        68,
        74,
        76,
        86,
        91,
        127
      ],
      "char": [
        32,
        41,
        49,
        50,
        54,
        55,
        57,
        59,
        63,
        64,
        68,
        74,
        76,
        86,
        91
      ],
      "short": [
        -32768,
        -1025,
        -128,
        -2,
        6,
        8,
        16,
        17,
        18,
        20,
        22,
        24,
        28,
        32,
        41,
        49,
        50,
        54,
        55,
        57,
        59,
        63,
        64,
        68,
        74,
        76,
        86,
        91,
        127,
        128,
        132,
        166,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        197,
        200,
        201,
        218,
        247,
        252,
        255,
        256,
        512,
        1024,
        4096,
        32767
      ],
      "int": [
        -268435456,
        -32768,
        -1025,
        -128,
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        16,
        17,
        18,
        20,
        22,
        24,
        28,
        32,
        41,
        49,
        50,
        54,
        55,
        57,
        59,
        63,
        64,
        68,
        74,
        76,
        86,
        91,
        127,
        128,
        132,
        166,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        197,
        200,
        201,
        218,
        247,
        248,
        251,
        252,
        255,
        256,
        512,
        1024,
        4096,
        32767,
        65535,
        131072,
        262144,
        1048575,
        16777216,
        16777219,
        16777220,
        24117248,
        25165824,
        267386880,
        2147483647
      ],
      "str": [
        "<init>",
        "Ljava/lang/Synthetic;"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Opcodes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.Type",
    "setters": [],
    "getters": [
      {
        "name": "getSort",
        "desc": "()I",
        "field": "sort"
      }
    ],
    "observers": [
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "getOpcode",
        "desc": "(I)I"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/String;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/reflect/Method;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "getConstructorDescriptor",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getInternalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getMethodDescriptor",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "getMethodDescriptor",
        "desc": "(Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getObjectType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDescriptor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        41,
        46,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "char": [
        41,
        46,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        41,
        46,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        41,
        46,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "str": [
        "double",
        "long"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.AbstractInsnNode",
    "setters": [],
    "getters": [
      {
        "name": "getOpcode",
        "desc": "()I",
        "field": "opcode"
      },
      {
        "name": "getNext",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;",
        "field": "next"
      },
      {
        "name": "getPrevious",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;",
        "field": "prev"
      }
    ],
    "observers": [
      {
        "name": "getOpcode",
        "desc": "()I"
      },
      {
        "name": "getNext",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "getPrevious",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.AnnotationNode",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "values"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "values"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "values"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "values"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.ClassNode",
    "setters": [
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "outerClass"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "sourceFile"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "version"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.asm.tree.MemberNode",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.FieldInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.FieldNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.asm.tree.MemberNode",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.FrameNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.IincInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        132
      ],
      "int": [
        132
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InnerClassNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InsnList",
    "setters": [
      {
        "name": "set",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "last"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)I",
        "field": "cache"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "remove",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/InsnList;)V",
        "field": "size"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V",
        "field": "size"
      }
    ],
    "getters": [
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;",
        "field": "first"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;",
        "field": "last"
      },
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "set",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "get",
        "desc": "(I)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/asm/tree/InsnList;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getFirst",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "remove",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/InsnList;)V"
      },
      {
        "name": "iterator",
        "desc": "(I)Ljava/util/ListIterator;"
      },
      {
        "name": "indexOf",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)I"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "insert",
        "desc": "(Lorg/mockito/asm/tree/InsnList;)V"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "resetLabels",
        "desc": "()V"
      },
      {
        "name": "getLast",
        "desc": "()Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "contains",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)Z"
      },
      {
        "name": "insertBefore",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/InsnList;)V"
      },
      {
        "name": "toArray",
        "desc": "()[Lorg/mockito/asm/tree/AbstractInsnNode;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InsnList$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.asm.tree.InsnList",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InsnList$InsnListIterator",
    "setters": [
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)V",
        "field": "prev"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)V",
        "field": "prev"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "hasPrevious",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.ListIterator"
    ],
    "outerClass": "org.mockito.asm.tree.InsnList",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.InsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.IntInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.JumpInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LabelNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "getLabel",
        "desc": "()Lorg/mockito/asm/Label;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "getLabel",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "resetLabel",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LdcInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "byte": [
        18
      ],
      "short": [
        18
      ],
      "int": [
        18
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LineNumberNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LocalVariableNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/tree/LabelNode;Lorg/mockito/asm/tree/LabelNode;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.LookupSwitchInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/LabelNode;[I[Lorg/mockito/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        171
      ],
      "int": [
        0,
        171
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MemberNode",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "invisibleAnnotations"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V",
        "field": "attrs"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MethodInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MethodNode",
    "setters": [
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "invisibleParameterAnnotations"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "getLabelNode",
        "desc": "(Lorg/mockito/asm/Label;)Lorg/mockito/asm/tree/LabelNode;"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1,
        5,
        1024
      ]
    },
    "parents": [
      "org.mockito.asm.tree.MemberNode",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MethodNode$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.ArrayList"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.MultiANewArrayInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        197
      ],
      "int": [
        197
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.TableSwitchInsnNode",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "<init>",
        "desc": "(IILorg/mockito/asm/tree/LabelNode;[Lorg/mockito/asm/tree/LabelNode;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {
      "short": [
        170
      ],
      "int": [
        0,
        170
      ]
    },
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.TryCatchBlockNode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/LabelNode;Lorg/mockito/asm/tree/LabelNode;Lorg/mockito/asm/tree/LabelNode;Ljava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.TypeInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.VarInsnNode",
    "setters": [
      {
        "name": "setOpcode",
        "desc": "(I)V",
        "field": "opcode"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()I"
      },
      {
        "name": "clone",
        "desc": "(Ljava/util/Map;)Lorg/mockito/asm/tree/AbstractInsnNode;"
      },
      {
        "name": "setOpcode",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.tree.AbstractInsnNode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Analyzer",
    "setters": [
      {
        "name": "analyze",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/tree/MethodNode;)[Lorg/mockito/asm/tree/analysis/Frame;",
        "field": "n"
      }
    ],
    "getters": [
      {
        "name": "getFrames",
        "desc": "()[Lorg/mockito/asm/tree/analysis/Frame;",
        "field": "frames"
      }
    ],
    "observers": [
      {
        "name": "getFrames",
        "desc": "()[Lorg/mockito/asm/tree/analysis/Frame;"
      }
    ],
    "testableMethods": [
      {
        "name": "newFrame",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;)Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "newControlFlowExceptionEdge",
        "desc": "(II)Z"
      },
      {
        "name": "getFrames",
        "desc": "()[Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "analyze",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/tree/MethodNode;)[Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "getHandlers",
        "desc": "(I)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/analysis/Interpreter;)V"
      },
      {
        "name": "newFrame",
        "desc": "(II)Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "newControlFlowEdge",
        "desc": "(II)V"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        13,
        14,
        22,
        24,
        55,
        57
      ],
      "char": [
        55,
        57
      ],
      "short": [
        7,
        8,
        13,
        14,
        22,
        24,
        55,
        57,
        167,
        168,
        169,
        172,
        177,
        191,
        1280
      ],
      "int": [
        0,
        1,
        2,
        7,
        8,
        13,
        14,
        22,
        24,
        55,
        57,
        167,
        168,
        169,
        172,
        177,
        191,
        1280
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.Opcodes"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.AnalyzerException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;Lorg/mockito/asm/tree/analysis/Value;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Exception"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.BasicInterpreter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newValue",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "unaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "binaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "ternaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "copyOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "naryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      }
    ],
    "dictionary": {
      "short": [
        197
      ],
      "int": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        168,
        178,
        187,
        197
      ],
      "str": [
        "[J"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.Opcodes",
      "org.mockito.asm.tree.analysis.Interpreter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.BasicValue",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "isReference",
        "desc": "()Z"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "isReference",
        "desc": "()Z"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        10
      ],
      "short": [
        9,
        10
      ],
      "int": [
        1,
        9,
        10
      ],
      "str": [
        ".",
        "A",
        "java/lang/Object"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.tree.analysis.Value"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.BasicVerifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "unaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "binaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "ternaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "copyOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "naryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "getElementValue",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "isArrayValue",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)Z"
      },
      {
        "name": "isSubTypeOf",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        50
      ],
      "char": [
        50
      ],
      "short": [
        50,
        184,
        197
      ],
      "int": [
        0,
        50,
        184,
        197
      ],
      "str": [
        "[Z"
      ]
    },
    "parents": [
      "org.mockito.asm.tree.analysis.BasicInterpreter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Frame",
    "setters": [
      {
        "name": "init",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;)Lorg/mockito/asm/tree/analysis/Frame;",
        "field": "top"
      },
      {
        "name": "push",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)V",
        "field": "top"
      }
    ],
    "getters": [
      {
        "name": "getStackSize",
        "desc": "()I",
        "field": "top"
      },
      {
        "name": "getLocals",
        "desc": "()I",
        "field": "locals"
      }
    ],
    "observers": [
      {
        "name": "getStackSize",
        "desc": "()I"
      },
      {
        "name": "getLocals",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLocal",
        "desc": "(I)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "getStackSize",
        "desc": "()I"
      },
      {
        "name": "init",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;)Lorg/mockito/asm/tree/analysis/Frame;"
      },
      {
        "name": "clearStack",
        "desc": "()V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setLocal",
        "desc": "(ILorg/mockito/asm/tree/analysis/Value;)V"
      },
      {
        "name": "push",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)V"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;[Z)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;)V"
      },
      {
        "name": "pop",
        "desc": "()Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "getLocals",
        "desc": "()I"
      },
      {
        "name": "getStack",
        "desc": "(I)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Frame;Lorg/mockito/asm/tree/analysis/Interpreter;)Z"
      },
      {
        "name": "execute",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Interpreter;)V"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      }
    ],
    "dictionary": {
      "short": [
        184
      ],
      "int": [
        0,
        1,
        2,
        184
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Interpreter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.SimpleVerifier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newValue",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;Ljava/util/List;Z)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;Z)V"
      },
      {
        "name": "isInterface",
        "desc": "(Lorg/mockito/asm/Type;)Z"
      },
      {
        "name": "getSuperClass",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)Z"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "getElementValue",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "isArrayValue",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;)Z"
      },
      {
        "name": "isSubTypeOf",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Z"
      },
      {
        "name": "getClass",
        "desc": "(Lorg/mockito/asm/Type;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        10
      ],
      "short": [
        9,
        10
      ],
      "int": [
        0,
        1,
        9,
        10
      ],
      "str": [
        "Lnull;"
      ]
    },
    "parents": [
      "org.mockito.asm.tree.analysis.BasicVerifier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.SmallSet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "next",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "union",
        "desc": "(Lorg/mockito/asm/tree/analysis/SmallSet;)Ljava/util/Set;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        4
      ]
    },
    "parents": [
      "java.util.AbstractSet",
      "java.util.Iterator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.SourceInterpreter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newValue",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "unaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "binaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "ternaryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "copyOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "naryOperation",
        "desc": "(Lorg/mockito/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/mockito/asm/tree/analysis/Value;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Value;Lorg/mockito/asm/tree/analysis/Value;)Lorg/mockito/asm/tree/analysis/Value;"
      }
    ],
    "dictionary": {
      "short": [
        197
      ],
      "int": [
        1,
        9,
        10,
        14,
        15,
        18,
        47,
        49,
        97,
        99,
        101,
        103,
        105,
        107,
        109,
        111,
        113,
        115,
        117,
        119,
        121,
        123,
        125,
        127,
        129,
        131,
        133,
        135,
        138,
        140,
        141,
        143,
        178,
        180,
        197
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.Opcodes",
      "org.mockito.asm.tree.analysis.Interpreter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.SourceValue",
    "setters": [],
    "getters": [
      {
        "name": "getSize",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/tree/AbstractInsnNode;)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/util/Set;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.tree.analysis.Value"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Subroutine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/tree/LabelNode;ILorg/mockito/asm/tree/JumpInsnNode;)V"
      },
      {
        "name": "copy",
        "desc": "()Lorg/mockito/asm/tree/analysis/Subroutine;"
      },
      {
        "name": "merge",
        "desc": "(Lorg/mockito/asm/tree/analysis/Subroutine;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.tree.analysis.Value",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifiable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierAbstractVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "appendConstant",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "appendConstant",
        "desc": "(Ljava/lang/StringBuffer;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        41,
        125
      ],
      "char": [
        41,
        125
      ],
      "short": [
        10,
        41,
        125
      ],
      "int": [
        0,
        10,
        41,
        125
      ],
      "str": [
        "\")",
        "Boolean.FALSE",
        "L)",
        "null"
      ]
    },
    "parents": [
      "org.mockito.asm.util.AbstractVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierAnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.asm.util.AbstractVisitor",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintWriter;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "appendAccess",
        "desc": "(I)V"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "createASMifierMethodVisitor",
        "desc": "()Lorg/mockito/asm/util/ASMifierMethodVisitor;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        32,
        46,
        47,
        48,
        64,
        92
      ],
      "char": [
        32,
        46,
        47,
        48,
        64,
        92
      ],
      "short": [
        8,
        16,
        32,
        46,
        47,
        48,
        64,
        92,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384
      ],
      "int": [
        -1,
        0,
        1,
        2,
        4,
        8,
        16,
        32,
        46,
        47,
        48,
        49,
        50,
        64,
        92,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384,
        131072,
        196653,
        262144,
        524288,
        1048576
      ],
      "str": [
        "-debug",
        ".class",
        "cw",
        "cw.visit("
      ]
    },
    "parents": [
      "org.mockito.asm.util.ASMifierAbstractVisitor",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierFieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "fv"
      ]
    },
    "parents": [
      "org.mockito.asm.util.ASMifierAbstractVisitor",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.ASMifierMethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      }
    ],
    "dictionary": {
      "short": [
        188
      ],
      "int": [
        -1,
        0,
        188
      ],
      "str": [
        "mv"
      ]
    },
    "parents": [
      "org.mockito.asm.util.ASMifierAbstractVisitor",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.AbstractVisitor",
    "setters": [],
    "getters": [
      {
        "name": "getText",
        "desc": "()Ljava/util/List;",
        "field": "text"
      }
    ],
    "observers": [
      {
        "name": "getText",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10,
        13,
        16,
        32,
        34,
        44,
        92,
        127
      ],
      "char": [
        32,
        34,
        44,
        92
      ],
      "short": [
        10,
        13,
        16,
        32,
        34,
        44,
        92,
        127,
        256,
        4096
      ],
      "int": [
        0,
        1,
        10,
        13,
        16,
        32,
        34,
        44,
        92,
        127,
        256,
        4096
      ],
      "str": [
        "00",
        "000",
        "\\\"",
        "\\\\",
        "\\n",
        "\\r",
        "\\u"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckAnnotationAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;Z)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckClassAdapter",
    "setters": [
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "outer"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "source"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "start"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "checkAccess",
        "desc": "(II)V"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/asm/ClassReader;ZLjava/io/PrintWriter;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "byte": [
        16,
        59
      ],
      "char": [
        59
      ],
      "short": [
        16,
        59,
        512,
        1024
      ],
      "int": [
        -1,
        0,
        1,
        2,
        4,
        16,
        59,
        512,
        1024,
        100000,
        161329
      ],
      "str": [
        ".class",
        "java/lang/Object",
        "package-info"
      ]
    },
    "parents": [
      "org.mockito.asm.ClassAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckFieldAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/FieldVisitor;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckMethodAdapter",
    "setters": [
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "endCode"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "checkSignedByte",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "checkIdentifier",
        "desc": "(Ljava/lang/String;IILjava/lang/String;)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "checkInternalName",
        "desc": "(Ljava/lang/String;IILjava/lang/String;)V"
      },
      {
        "name": "checkEndMethod",
        "desc": "()V"
      },
      {
        "name": "checkEndCode",
        "desc": "()V"
      },
      {
        "name": "checkSignedShort",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "checkIdentifier",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "checkInternalName",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "checkFrameValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "checkConstant",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "checkMethodSignature",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "checkLabel",
        "desc": "(Lorg/mockito/asm/Label;ZLjava/lang/String;)V"
      },
      {
        "name": "checkDesc",
        "desc": "(Ljava/lang/String;IZ)I"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "checkDesc",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "checkUnsignedShort",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "checkOpcode",
        "desc": "(II)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "checkClassSignature",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "checkMethodIdentifier",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "checkFieldSignature",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "checkMethodDesc",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "checkStartCode",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        11,
        40,
        41,
        42,
        43,
        45,
        46,
        47,
        58,
        59,
        60,
        62,
        76,
        86,
        91,
        94,
        127
      ],
      "char": [
        40,
        41,
        42,
        43,
        45,
        46,
        47,
        58,
        59,
        60,
        62,
        76,
        86,
        91,
        94
      ],
      "short": [
        -32768,
        -128,
        11,
        40,
        41,
        42,
        43,
        45,
        46,
        47,
        58,
        59,
        60,
        62,
        76,
        86,
        91,
        94,
        127,
        187,
        199,
        32767
      ],
      "int": [
        -32768,
        -128,
        -1,
        0,
        1,
        2,
        3,
        4,
        11,
        16,
        17,
        40,
        41,
        42,
        43,
        45,
        46,
        47,
        58,
        59,
        60,
        62,
        76,
        86,
        91,
        94,
        127,
        187,
        199,
        32767,
        65535
      ],
      "str": [
        "<clinit>",
        "<init>",
        "BBBBBBBBBBBBBBBBCCIAADDDDDAAAAAAAAAAAAAAAAAAAABBBBBBBBDDDDDAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBJBBBBBBBBBBBBBBBBBBBBHHHHHHHHHHHHHHHHDKLBBBBBBFFFFGGGGAECEBBEEBBAMHHAA",
        "L[T",
        "ZCBSIFJDL[T",
        "type"
      ]
    },
    "parents": [
      "org.mockito.asm.MethodAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.CheckSignatureAdapter",
    "setters": [
      {
        "name": "visitTypeVariable",
        "desc": "(Ljava/lang/String;)V",
        "field": "state"
      },
      {
        "name": "visitBaseType",
        "desc": "(C)V",
        "field": "state"
      },
      {
        "name": "visitClassType",
        "desc": "(Ljava/lang/String;)V",
        "field": "state"
      },
      {
        "name": "visitFormalTypeParameter",
        "desc": "(Ljava/lang/String;)V",
        "field": "state"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitClassBound",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitParameterType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitTypeArgument",
        "desc": "(C)Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitClassType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitSuperclass",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitReturnType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitBaseType",
        "desc": "(C)V"
      },
      {
        "name": "visitFormalTypeParameter",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInterfaceBound",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitInterface",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitExceptionType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitArrayType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitTypeVariable",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClassType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/signature/SignatureVisitor;)V"
      },
      {
        "name": "visitTypeArgument",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        16,
        23,
        32,
        64,
        86
      ],
      "char": [
        32,
        64,
        86
      ],
      "short": [
        7,
        8,
        16,
        23,
        32,
        64,
        86,
        128,
        256
      ],
      "int": [
        -1,
        1,
        2,
        4,
        7,
        8,
        16,
        23,
        32,
        64,
        86,
        128,
        256
      ],
      "str": [
        "+-=",
        "ZCBSIFJD"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.signature.SignatureVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceAbstractVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        2,
        4,
        5
      ]
    },
    "parents": [
      "org.mockito.asm.util.AbstractVisitor"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceAnnotationVisitor",
    "setters": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "valueNumber"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "valueNumber"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;",
        "field": "valueNumber"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "valueNumber"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "byte": [
        61,
        68,
        70,
        76,
        123
      ],
      "char": [
        61,
        68,
        70,
        76,
        123
      ],
      "short": [
        61,
        68,
        70,
        76,
        123
      ],
      "int": [
        0,
        1,
        61,
        68,
        70,
        76,
        123
      ],
      "str": [
        "(byte)",
        "(char)",
        "(short)",
        ")",
        ".class",
        "}"
      ]
    },
    "parents": [
      "org.mockito.asm.util.TraceAbstractVisitor",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "createTraceFieldVisitor",
        "desc": "()Lorg/mockito/asm/util/TraceFieldVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/io/PrintWriter;)V"
      },
      {
        "name": "main",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintWriter;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "createTraceMethodVisitor",
        "desc": "()Lorg/mockito/asm/util/TraceMethodVisitor;"
      }
    ],
    "dictionary": {
      "byte": [
        -33,
        8,
        10,
        16,
        32,
        47,
        64,
        92
      ],
      "char": [
        32,
        47,
        64,
        92
      ],
      "short": [
        -33,
        8,
        10,
        16,
        32,
        47,
        64,
        92,
        128,
        256,
        512,
        1024,
        2048,
        8192,
        16384
      ],
      "int": [
        -33,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        16,
        32,
        47,
        64,
        92,
        128,
        256,
        512,
        1024,
        2048,
        8192,
        16384,
        131072
      ],
      "str": [
        "-debug",
        ".class",
        "java/lang/Object"
      ]
    },
    "parents": [
      "org.mockito.asm.util.TraceAbstractVisitor",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceFieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.util.TraceAbstractVisitor",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceMethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "appendLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32,
        188
      ],
      "int": [
        -1,
        0,
        2,
        32,
        188
      ],
      "str": [
        "[",
        "default="
      ]
    },
    "parents": [
      "org.mockito.asm.util.TraceAbstractVisitor",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.TraceSignatureVisitor",
    "setters": [
      {
        "name": "visitInnerClassType",
        "desc": "(Ljava/lang/String;)V",
        "field": "argumentStack"
      },
      {
        "name": "visitTypeArgument",
        "desc": "(C)Lorg/mockito/asm/signature/SignatureVisitor;",
        "field": "argumentStack"
      },
      {
        "name": "visitClassType",
        "desc": "(Ljava/lang/String;)V",
        "field": "separator"
      },
      {
        "name": "visitFormalTypeParameter",
        "desc": "(Ljava/lang/String;)V",
        "field": "seenFormalParameter"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDeclaration",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExceptions",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitClassBound",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitParameterType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "visitTypeArgument",
        "desc": "(C)Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitClassType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitSuperclass",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "getDeclaration",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExceptions",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visitReturnType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitBaseType",
        "desc": "(C)V"
      },
      {
        "name": "visitFormalTypeParameter",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInterfaceBound",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitInterface",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitExceptionType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitArrayType",
        "desc": "()Lorg/mockito/asm/signature/SignatureVisitor;"
      },
      {
        "name": "visitTypeVariable",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClassType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visitTypeArgument",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        41,
        43,
        45,
        46,
        47,
        62,
        63
      ],
      "char": [
        41,
        43,
        45,
        46,
        47,
        62,
        63
      ],
      "short": [
        41,
        43,
        45,
        46,
        47,
        62,
        63,
        512
      ],
      "int": [
        0,
        1,
        2,
        41,
        43,
        45,
        46,
        47,
        62,
        63,
        512
      ],
      "str": [
        "",
        "[]",
        "double",
        "java/lang/Object"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.signature.SignatureVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.asm.util.Traceable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanCopier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1,
        2
      ],
      "str": [
        "org.mockito.cglib.beans.BeanCopier"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanCopier$BeanCopierKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanCopier",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanCopier$Generator",
    "setters": [
      {
        "name": "setSource",
        "desc": "(Ljava/lang/Class;)V",
        "field": "source"
      },
      {
        "name": "setUseConverter",
        "desc": "(Z)V",
        "field": "useConverter"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setSource",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setUseConverter",
        "desc": "(Z)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/beans/BeanCopier;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanCopier",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanGenerator",
    "setters": [
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "superclass"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "createClass",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/mockito/cglib/beans/BeanGenerator;Ljava/util/Map;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/mockito/cglib/beans/BeanGenerator;Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "addProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/mockito/cglib/beans/BeanGenerator;[Ljava/beans/PropertyDescriptor;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "\""
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanGenerator$BeanGeneratorKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanGenerator",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMap",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      }
    ],
    "getters": [
      {
        "name": "getBean",
        "desc": "()Ljava/lang/Object;",
        "field": "bean"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBean",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Map"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMap$Generator",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      },
      {
        "name": "setBeanClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "beanClass"
      },
      {
        "name": "setRequire",
        "desc": "(I)V",
        "field": "require"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/beans/BeanMap;"
      },
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setBeanClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setRequire",
        "desc": "(I)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanMap",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMap$Generator$BeanMapKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.beans.BeanMap$Generator",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMapEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "newInstance"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMapEmitter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMapEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BeanMapEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBean",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPropertyTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getGetters",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getSetters",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBean$BulkBeanKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.beans.BulkBean",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBean$Generator",
    "setters": [
      {
        "name": "setGetters",
        "desc": "([Ljava/lang/String;)V",
        "field": "getters"
      },
      {
        "name": "setSetters",
        "desc": "([Ljava/lang/String;)V",
        "field": "setters"
      },
      {
        "name": "setTypes",
        "desc": "([Ljava/lang/Class;)V",
        "field": "types"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setGetters",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "setTypes",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/beans/BulkBean;"
      },
      {
        "name": "setSetters",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.beans.BulkBean",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBeanEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "str": [
        "org.mockito.cglib.beans.BulkBean",
        "org.mockito.cglib.beans.BulkBeanException"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.BulkBeanException",
    "setters": [],
    "getters": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;",
        "field": "cause"
      },
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      }
    ],
    "observers": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;I)V"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.FixedKeySet",
    "setters": [],
    "getters": [
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.util.AbstractSet"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.ImmutableBean",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.beans.ImmutableBean$Generator",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.beans.ImmutableBean",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.AbstractClassGenerator",
    "setters": [
      {
        "name": "setNamingPolicy",
        "desc": "(Lorg/mockito/cglib/core/NamingPolicy;)V",
        "field": "namingPolicy"
      },
      {
        "name": "setUseCache",
        "desc": "(Z)V",
        "field": "useCache"
      },
      {
        "name": "setStrategy",
        "desc": "(Lorg/mockito/cglib/core/GeneratorStrategy;)V",
        "field": "strategy"
      },
      {
        "name": "setAttemptLoad",
        "desc": "(Z)V",
        "field": "attemptLoad"
      },
      {
        "name": "setClassLoader",
        "desc": "(Ljava/lang/ClassLoader;)V",
        "field": "classLoader"
      }
    ],
    "getters": [
      {
        "name": "getStrategy",
        "desc": "()Lorg/mockito/cglib/core/GeneratorStrategy;",
        "field": "strategy"
      },
      {
        "name": "getUseCache",
        "desc": "()Z",
        "field": "useCache"
      },
      {
        "name": "getAttemptLoad",
        "desc": "()Z",
        "field": "attemptLoad"
      },
      {
        "name": "getNamingPolicy",
        "desc": "()Lorg/mockito/cglib/core/NamingPolicy;",
        "field": "namingPolicy"
      }
    ],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getUseCache",
        "desc": "()Z"
      },
      {
        "name": "getAttemptLoad",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStrategy",
        "desc": "()Lorg/mockito/cglib/core/GeneratorStrategy;"
      },
      {
        "name": "getNamingPolicy",
        "desc": "()Lorg/mockito/cglib/core/NamingPolicy;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ClassGenerator"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.AbstractClassGenerator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Predicate"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.AbstractClassGenerator$Source",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.AbstractClassGenerator",
    "access": 12,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Block",
    "setters": [],
    "getters": [
      {
        "name": "getEnd",
        "desc": "()Lorg/mockito/asm/Label;",
        "field": "end"
      },
      {
        "name": "getStart",
        "desc": "()Lorg/mockito/asm/Label;",
        "field": "start"
      },
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;",
        "field": "e"
      }
    ],
    "observers": [
      {
        "name": "getEnd",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getStart",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "testableMethods": [
      {
        "name": "getEnd",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getStart",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "end",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;)V"
      },
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V",
        "field": "cv"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;",
        "field": "rawStaticInit"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V",
        "field": "classInfo"
      }
    ],
    "getters": [
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;",
        "field": "classInfo"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "getStaticHook",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "testableMethods": [
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "getClassType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getFieldInfo",
        "desc": "(Ljava/lang/String;)Lorg/mockito/cglib/core/ClassEmitter$FieldInfo;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "begin_static",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "isFieldDeclared",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "init",
        "desc": "()V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "getStaticHook",
        "desc": "()Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        8
      ],
      "str": [
        "()V",
        ";",
        "CGLIB$STATICHOOK"
      ]
    },
    "parents": [
      "org.mockito.asm.ClassAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter$1",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "val$classType"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/mockito/asm/Type;",
        "field": "val$interfaces"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "val$access"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.ClassInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        177
      ],
      "int": [
        177
      ]
    },
    "parents": [
      "org.mockito.asm.MethodAdapter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStaticHook",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassEmitter$FieldInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.ClassEmitter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassInfo",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassNameReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getClassName",
        "desc": "(Lorg/mockito/asm/ClassReader;)Ljava/lang/String;"
      },
      {
        "name": "getClassInfo",
        "desc": "(Lorg/mockito/asm/ClassReader;)[Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassNameReader$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        0,
        46,
        47
      ]
    },
    "parents": [
      "org.mockito.asm.ClassAdapter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassNameReader$EarlyExitException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "outerClass": "org.mockito.cglib.core.ClassNameReader",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassesKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ClassesKey$Key",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.ClassesKey",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.CodeEmitter",
    "setters": [],
    "getters": [
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/mockito/cglib/core/ClassEmitter;",
        "field": "ce"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/mockito/cglib/core/MethodInfo;",
        "field": "state"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "isStaticHook",
        "desc": "()Z"
      },
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/mockito/cglib/core/ClassEmitter;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/mockito/cglib/core/MethodInfo;"
      }
    ],
    "testableMethods": [
      {
        "name": "pop2",
        "desc": "()V"
      },
      {
        "name": "super_invoke",
        "desc": "()V"
      },
      {
        "name": "checkcast_this",
        "desc": "()V"
      },
      {
        "name": "super_invoke",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "unbox",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "ifnonnull",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "end_method",
        "desc": "()V"
      },
      {
        "name": "aaload",
        "desc": "()V"
      },
      {
        "name": "instance_of_this",
        "desc": "()V"
      },
      {
        "name": "invoke",
        "desc": "(Lorg/mockito/cglib/core/MethodInfo;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "swap",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "super_invoke_constructor",
        "desc": "()V"
      },
      {
        "name": "putstatic",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "make_local",
        "desc": "()Lorg/mockito/cglib/core/Local;"
      },
      {
        "name": "mark",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "push",
        "desc": "(D)V"
      },
      {
        "name": "load_this",
        "desc": "()V"
      },
      {
        "name": "monitorexit",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "invoke_constructor",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "invoke_constructor",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "pop",
        "desc": "()V"
      },
      {
        "name": "invoke_constructor_this",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "dup",
        "desc": "()V"
      },
      {
        "name": "dup2",
        "desc": "()V"
      },
      {
        "name": "mark",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "putfield",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "dup2_x1",
        "desc": "()V"
      },
      {
        "name": "super_getstatic",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "aaload",
        "desc": "(I)V"
      },
      {
        "name": "make_label",
        "desc": "()Lorg/mockito/asm/Label;"
      },
      {
        "name": "getfield",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "zero_or_null",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;)V"
      },
      {
        "name": "push",
        "desc": "(I)V"
      },
      {
        "name": "iinc",
        "desc": "(Lorg/mockito/cglib/core/Local;I)V"
      },
      {
        "name": "emit_field",
        "desc": "(ILorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "throw_exception",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "new_instance",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "unbox_or_zero",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "arraylength",
        "desc": "()V"
      },
      {
        "name": "isStaticHook",
        "desc": "()Z"
      },
      {
        "name": "load_args",
        "desc": "(II)V"
      },
      {
        "name": "super_getfield",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "super_invoke_constructor",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "invoke_virtual",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "aconst_null",
        "desc": "()V"
      },
      {
        "name": "if_cmp",
        "desc": "(Lorg/mockito/asm/Type;ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "process_switch",
        "desc": "([ILorg/mockito/cglib/core/ProcessSwitchCallback;Z)V"
      },
      {
        "name": "ifnull",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "cast_numeric",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "super_putstatic",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "invoke_static",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "process_switch",
        "desc": "([ILorg/mockito/cglib/core/ProcessSwitchCallback;)V"
      },
      {
        "name": "instance_of",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/asm/MethodVisitor;ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "checkcast",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "swap",
        "desc": "()V"
      },
      {
        "name": "array_store",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "dup_x2",
        "desc": "()V"
      },
      {
        "name": "push",
        "desc": "(Z)V"
      },
      {
        "name": "if_jump",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "invoke_virtual_this",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "getstatic",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "invoke_static_this",
        "desc": "(Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "push",
        "desc": "(J)V"
      },
      {
        "name": "array_load",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "push",
        "desc": "(F)V"
      },
      {
        "name": "dup2_x2",
        "desc": "()V"
      },
      {
        "name": "invoke_interface",
        "desc": "(Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "athrow",
        "desc": "()V"
      },
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "begin_block",
        "desc": "()Lorg/mockito/cglib/core/Block;"
      },
      {
        "name": "dup_x1",
        "desc": "()V"
      },
      {
        "name": "box",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "invoke",
        "desc": "(Lorg/mockito/cglib/core/MethodInfo;)V"
      },
      {
        "name": "make_local",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/Local;"
      },
      {
        "name": "create_arg_array",
        "desc": "()V"
      },
      {
        "name": "monitorenter",
        "desc": "()V"
      },
      {
        "name": "math",
        "desc": "(ILorg/mockito/asm/Type;)V"
      },
      {
        "name": "getfield",
        "desc": "(Lorg/mockito/asm/Type;Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "newarray",
        "desc": "(Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "invoke_constructor_this",
        "desc": "()V"
      },
      {
        "name": "load_arg",
        "desc": "(I)V"
      },
      {
        "name": "push",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "putfield",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "goTo",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "newarray",
        "desc": "()V"
      },
      {
        "name": "new_instance_this",
        "desc": "()V"
      },
      {
        "name": "if_icmp",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "store_local",
        "desc": "(Lorg/mockito/cglib/core/Local;)V"
      },
      {
        "name": "load_local",
        "desc": "(Lorg/mockito/cglib/core/Local;)V"
      },
      {
        "name": "catch_exception",
        "desc": "(Lorg/mockito/cglib/core/Block;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "return_value",
        "desc": "()V"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/mockito/cglib/core/MethodInfo;"
      },
      {
        "name": "load_args",
        "desc": "()V"
      },
      {
        "name": "aastore",
        "desc": "()V"
      },
      {
        "name": "not",
        "desc": "()V"
      },
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/mockito/cglib/core/ClassEmitter;"
      },
      {
        "name": "super_putfield",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;)V"
      }
    ],
    "dictionary": {
      "byte": [
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127
      ],
      "char": [
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95
      ],
      "short": [
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127,
        130,
        133,
        134,
        135,
        138,
        141,
        144,
        145,
        146,
        147,
        150,
        165,
        166,
        167,
        172,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        198,
        199,
        32767
      ],
      "int": [
        -1,
        0,
        1,
        2,
        5,
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127,
        130,
        133,
        134,
        135,
        138,
        141,
        144,
        145,
        146,
        147,
        150,
        153,
        154,
        156,
        158,
        165,
        166,
        167,
        172,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        198,
        199,
        32767
      ],
      "long": [
        0,
        1
      ],
      "float": [
        0.0,
        0.5,
        1.0,
        2.0
      ],
      "double": [
        1.0,
        2.0
      ],
      "str": [
        "",
        "<init>",
        "String"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.LocalVariablesSorter"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.CodeEmitter$State",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;",
        "field": "sig"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/mockito/asm/Type;",
        "field": "exceptionTypes"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;",
        "field": "classInfo"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "access"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "getAttribute",
        "desc": "()Lorg/mockito/asm/Attribute;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.core.MethodInfo"
    ],
    "outerClass": "org.mockito.cglib.core.CodeEmitter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.CodeGenerationException",
    "setters": [],
    "getters": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;",
        "field": "cause"
      }
    ],
    "observers": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {
      "str": [
        "-->"
      ]
    },
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.CollectionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "filter",
        "desc": "(Ljava/util/Collection;Lorg/mockito/cglib/core/Predicate;)Ljava/util/Collection;"
      },
      {
        "name": "transform",
        "desc": "(Ljava/util/Collection;Lorg/mockito/cglib/core/Transformer;)Ljava/util/List;"
      },
      {
        "name": "reverse",
        "desc": "(Ljava/util/Map;Ljava/util/Map;)V"
      },
      {
        "name": "getIndexMap",
        "desc": "(Ljava/util/List;)Ljava/util/Map;"
      },
      {
        "name": "bucket",
        "desc": "(Ljava/util/Collection;Lorg/mockito/cglib/core/Transformer;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Constants",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "System",
        "org.mockito.cglib.core.Signature"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.Opcodes"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Converter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Customizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DebuggingClassWriter",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "className"
      }
    ],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;",
        "field": "superName"
      }
    ],
    "observers": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        46,
        47
      ]
    },
    "parents": [
      "org.mockito.asm.ClassWriter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DebuggingClassWriter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        46
      ],
      "str": [
        ".asm",
        ".class"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DefaultGeneratorStrategy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClassWriter",
        "desc": "()Lorg/mockito/asm/ClassWriter;"
      }
    ],
    "testableMethods": [
      {
        "name": "getClassWriter",
        "desc": "()Lorg/mockito/asm/ClassWriter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "transform",
        "desc": "([B)[B"
      },
      {
        "name": "transform",
        "desc": "(Lorg/mockito/cglib/core/ClassGenerator;)Lorg/mockito/cglib/core/ClassGenerator;"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassGenerator;)[B"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.GeneratorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DefaultNamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getClassName",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/mockito/cglib/core/Predicate;)Ljava/lang/String;"
      },
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        2
      ],
      "str": [
        "$",
        "java",
        "org.mockito.cglib.empty.Object"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.NamingPolicy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.DuplicatesPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "push_array",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;[Ljava/lang/Object;)V"
      },
      {
        "name": "push_object",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Ljava/lang/Object;)V"
      },
      {
        "name": "hash_code",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;ILorg/mockito/cglib/core/Customizer;)V"
      },
      {
        "name": "wrap_undeclared_throwable",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/core/Block;[Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "constructor_switch",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Ljava/util/List;Lorg/mockito/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "null_constructor",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;)V"
      },
      {
        "name": "not_equals",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;Lorg/mockito/asm/Label;Lorg/mockito/cglib/core/Customizer;)V"
      },
      {
        "name": "load_method",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/core/MethodInfo;)V"
      },
      {
        "name": "add_properties",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;[Ljava/lang/String;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "factory_method",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/core/Signature;)V"
      },
      {
        "name": "string_switch",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;[Ljava/lang/String;ILorg/mockito/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "getSwitchKeys",
        "desc": "(Ljava/util/Map;)[I"
      },
      {
        "name": "process_arrays",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/ProcessArrayCallback;)V"
      },
      {
        "name": "load_class_this",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;)V"
      },
      {
        "name": "begin_method",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/core/MethodInfo;)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "load_class",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "add_property",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Ljava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "append_string",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/EmitUtils$ArrayDelimiters;Lorg/mockito/cglib/core/Customizer;)V"
      },
      {
        "name": "process_array",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/asm/Type;Lorg/mockito/cglib/core/ProcessArrayCallback;)V"
      },
      {
        "name": "method_switch",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Ljava/util/List;Lorg/mockito/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "begin_method",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/core/MethodInfo;I)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "wrap_throwable",
        "desc": "(Lorg/mockito/cglib/core/Block;Lorg/mockito/asm/Type;)V"
      }
    ],
    "dictionary": {
      "byte": [
        96
      ],
      "char": [
        96
      ],
      "short": [
        96,
        155
      ],
      "int": [
        0,
        1,
        96,
        155
      ],
      "str": [
        "",
        "get",
        "{",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$10",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.EmitUtils$ParameterTyper"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$11",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$12",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$13",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$14",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$15",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$16",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$6",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$7",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$8",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$9",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$ArrayDelimiters",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.EmitUtils",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.EmitUtils$ParameterTyper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.EmitUtils",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.GeneratorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.KeyFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        50,
        51
      ],
      "char": [
        50,
        51
      ],
      "short": [
        50,
        51
      ],
      "int": [
        50,
        51,
        1288102441,
        1768288259
      ],
      "str": [
        "org.mockito.cglib.core.KeyFactory"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.KeyFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Customizer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.KeyFactory$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Customizer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.KeyFactory$Generator",
    "setters": [
      {
        "name": "setCustomizer",
        "desc": "(Lorg/mockito/cglib/core/Customizer;)V",
        "field": "customizer"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "keyInterface"
      },
      {
        "name": "setHashConstant",
        "desc": "(I)V",
        "field": "constant"
      },
      {
        "name": "setHashMultiplier",
        "desc": "(I)V",
        "field": "multiplier"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setCustomizer",
        "desc": "(Lorg/mockito/cglib/core/Customizer;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setHashConstant",
        "desc": "(I)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/core/KeyFactory;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setHashMultiplier",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.core.KeyFactory",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Local",
    "setters": [],
    "getters": [
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/mockito/asm/Type;)V"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.LocalVariablesSorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "newLocal",
        "desc": "(I)I"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/LocalVariablesSorter;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        1,
        2,
        8,
        22,
        24,
        55,
        57
      ]
    },
    "parents": [
      "org.mockito.asm.MethodAdapter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.LocalVariablesSorter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.LocalVariablesSorter",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.LocalVariablesSorter$State",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        40
      ],
      "char": [
        40
      ],
      "short": [
        40
      ],
      "int": [
        40
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.LocalVariablesSorter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.MethodInfo",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.MethodInfoTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "transform",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/mockito/cglib/core/MethodInfoTransformer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.MethodWrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/Object;"
      },
      {
        "name": "createSet",
        "desc": "(Ljava/util/Collection;)Ljava/util/Set;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.MethodWrapper$MethodWrapperKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.core.MethodWrapper",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.NamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ObjectSwitchCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Predicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ProcessArrayCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ProcessSwitchCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findMethod",
        "desc": "(Ljava/lang/String;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "(Ljava/lang/reflect/Member;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getBeanGetters",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "getConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getClassInfo",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "addAllMethods",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "getBeanProperties",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "getSignature",
        "desc": "(Ljava/lang/reflect/Member;)Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "findMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getPropertyMethods",
        "desc": "([Ljava/beans/PropertyDescriptor;ZZ)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "findPackageProtected",
        "desc": "([Ljava/lang/Class;)I"
      },
      {
        "name": "addAllInterfaces",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "getMethodInfo",
        "desc": "(Ljava/lang/reflect/Member;I)Lorg/mockito/cglib/core/MethodInfo;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getMethodInfo",
        "desc": "(Ljava/lang/reflect/Member;)Lorg/mockito/cglib/core/MethodInfo;"
      },
      {
        "name": "findConstructor",
        "desc": "(Ljava/lang/String;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "findConstructor",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "findDeclaredMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getNames",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "defineClass",
        "desc": "(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;"
      },
      {
        "name": "findMethods",
        "desc": "([Ljava/lang/String;[Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "findInterfaceMethod",
        "desc": "(Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getBeanSetters",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getClasses",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Class;"
      },
      {
        "name": "findNewInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        41,
        44
      ],
      "char": [
        41,
        44
      ],
      "short": [
        8,
        41,
        44
      ],
      "int": [
        0,
        1,
        2,
        3,
        8,
        41,
        44
      ],
      "str": [
        "",
        ";",
        "<init>",
        "Z",
        "[]",
        "boolean",
        "newInstance"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils$3",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;",
        "field": "val$sig"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "val$modifiers"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "getAttribute",
        "desc": "()Lorg/mockito/asm/Attribute;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/mockito/cglib/core/ClassInfo;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.MethodInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.ReflectUtils$4",
    "setters": [],
    "getters": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "val$sc"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;",
        "field": "val$type"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.ClassInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.RejectModifierPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Signature",
    "setters": [],
    "getters": [
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "desc"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/mockito/asm/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/mockito/asm/Type;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        40
      ],
      "char": [
        40
      ],
      "short": [
        40
      ],
      "int": [
        0,
        40
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.TinyBitSet",
    "setters": [
      {
        "name": "set",
        "desc": "(I)V",
        "field": "value"
      },
      {
        "name": "clear",
        "desc": "(I)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "cardinality",
        "desc": "()I"
      },
      {
        "name": "length",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "set",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cardinality",
        "desc": "()I"
      },
      {
        "name": "clear",
        "desc": "(I)V"
      },
      {
        "name": "length",
        "desc": "()I"
      },
      {
        "name": "get",
        "desc": "(I)Z"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        -1,
        0,
        1,
        256
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.Transformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.TypeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isConstructor",
        "desc": "(Lorg/mockito/cglib/core/MethodInfo;)Z"
      },
      {
        "name": "getTypes",
        "desc": "([Ljava/lang/Class;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "isAbstract",
        "desc": "(I)Z"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "parseType",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "ICONST",
        "desc": "(I)I"
      },
      {
        "name": "isPrimitive",
        "desc": "(Lorg/mockito/asm/Type;)Z"
      },
      {
        "name": "parseSignature",
        "desc": "(Ljava/lang/String;)Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "parseConstructor",
        "desc": "(Ljava/lang/String;)Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "upperFirst",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "parseConstructor",
        "desc": "([Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "isStatic",
        "desc": "(I)Z"
      },
      {
        "name": "getPackageName",
        "desc": "(Lorg/mockito/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "isArray",
        "desc": "(Lorg/mockito/asm/Type;)Z"
      },
      {
        "name": "add",
        "desc": "([Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getBoxedType",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "isFinal",
        "desc": "(I)Z"
      },
      {
        "name": "isInterface",
        "desc": "(I)Z"
      },
      {
        "name": "fromInternalName",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "FCONST",
        "desc": "(F)I"
      },
      {
        "name": "escapeType",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isPublic",
        "desc": "(I)Z"
      },
      {
        "name": "add",
        "desc": "([Lorg/mockito/asm/Type;Lorg/mockito/asm/Type;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "isProtected",
        "desc": "(I)Z"
      },
      {
        "name": "getClassName",
        "desc": "(Lorg/mockito/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "parseTypes",
        "desc": "(Ljava/lang/String;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getUnboxedType",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "emulateClassGetName",
        "desc": "(Lorg/mockito/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "fromInternalNames",
        "desc": "([Ljava/lang/String;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "LCONST",
        "desc": "(J)I"
      },
      {
        "name": "DCONST",
        "desc": "(D)I"
      },
      {
        "name": "isPrivate",
        "desc": "(I)Z"
      },
      {
        "name": "toInternalNames",
        "desc": "([Lorg/mockito/asm/Type;)[Ljava/lang/String;"
      },
      {
        "name": "getStackSize",
        "desc": "([Lorg/mockito/asm/Type;)I"
      },
      {
        "name": "getComponentType",
        "desc": "(Lorg/mockito/asm/Type;)Lorg/mockito/asm/Type;"
      },
      {
        "name": "isSynthetic",
        "desc": "(I)Z"
      },
      {
        "name": "NEWARRAY",
        "desc": "(Lorg/mockito/asm/Type;)I"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        9,
        11,
        12,
        14,
        16,
        44,
        46
      ],
      "char": [
        44,
        46
      ],
      "short": [
        8,
        9,
        11,
        12,
        14,
        16,
        44,
        46,
        512,
        1024,
        4096
      ],
      "int": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        14,
        16,
        36,
        40,
        41,
        44,
        46,
        47,
        59,
        91,
        512,
        1024,
        4096
      ],
      "long": [
        0,
        1
      ],
      "float": [
        0.0,
        1.0,
        2.0
      ],
      "double": [
        1.0,
        2.0
      ],
      "str": [
        "",
        "<init>",
        "V",
        "[]",
        "java.lang."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.core.VisibilityPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Callback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1536,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackGenerator$Context",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.CallbackGenerator",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackHelper",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getCallbackTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getCallbacks",
        "desc": "()[Lorg/mockito/cglib/proxy/Callback;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackFilter"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.CallbackInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "determineTypes",
        "desc": "([Lorg/mockito/cglib/proxy/Callback;)[Lorg/mockito/asm/Type;"
      },
      {
        "name": "getGenerators",
        "desc": "([Lorg/mockito/asm/Type;)[Lorg/mockito/cglib/proxy/CallbackGenerator;"
      },
      {
        "name": "determineTypes",
        "desc": "([Ljava/lang/Class;)[Lorg/mockito/asm/Type;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7
      ],
      "short": [
        6,
        7
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Dispatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.DispatcherGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer",
    "setters": [
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "superclass"
      },
      {
        "name": "setInterfaces",
        "desc": "([Ljava/lang/Class;)V",
        "field": "interfaces"
      },
      {
        "name": "setSerialVersionUID",
        "desc": "(Ljava/lang/Long;)V",
        "field": "serialVersionUID"
      },
      {
        "name": "setInterceptDuringConstruction",
        "desc": "(Z)V",
        "field": "interceptDuringConstruction"
      },
      {
        "name": "create",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;",
        "field": "classOnly"
      },
      {
        "name": "setCallbackFilter",
        "desc": "(Lorg/mockito/cglib/proxy/CallbackFilter;)V",
        "field": "filter"
      },
      {
        "name": "setCallbacks",
        "desc": "([Lorg/mockito/cglib/proxy/Callback;)V",
        "field": "callbacks"
      },
      {
        "name": "setCallbackTypes",
        "desc": "([Ljava/lang/Class;)V",
        "field": "callbackTypes"
      },
      {
        "name": "setUseFactory",
        "desc": "(Z)V",
        "field": "useFactory"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Lorg/mockito/cglib/proxy/CallbackFilter;[Lorg/mockito/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "setCallbackFilter",
        "desc": "(Lorg/mockito/cglib/proxy/CallbackFilter;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Ljava/util/List;)V"
      },
      {
        "name": "registerStaticCallbacks",
        "desc": "(Ljava/lang/Class;[Lorg/mockito/cglib/proxy/Callback;)V"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;Lorg/mockito/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "setCallbackType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "registerCallbacks",
        "desc": "(Ljava/lang/Class;[Lorg/mockito/cglib/proxy/Callback;)V"
      },
      {
        "name": "setInterfaces",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "setCallback",
        "desc": "(Lorg/mockito/cglib/proxy/Callback;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "setCallbacks",
        "desc": "([Lorg/mockito/cglib/proxy/Callback;)V"
      },
      {
        "name": "setCallbackTypes",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "filterConstructors",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)V"
      },
      {
        "name": "setSerialVersionUID",
        "desc": "(Ljava/lang/Long;)V"
      },
      {
        "name": "setInterceptDuringConstruction",
        "desc": "(Z)V"
      },
      {
        "name": "isEnhanced",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Lorg/mockito/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "createClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "setUseFactory",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        46
      ],
      "char": [
        46
      ],
      "short": [
        8,
        16,
        46
      ],
      "int": [
        0,
        1,
        2,
        8,
        16,
        46
      ],
      "str": [
        "",
        "$",
        "()V",
        "CGLIB$BOUND",
        "CGLIB$SET_STATIC_CALLBACKS",
        "CGLIB$SET_THREAD_CALLBACKS",
        "CGLIB$THREAD_CALLBACKS",
        "getCallback",
        "getCallbacks",
        "newInstance",
        "setCallbacks"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$6",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator$Context"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Enhancer$EnhancerKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.Enhancer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Factory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.FixedValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.FixedValueGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        "org.mockito.cglib.proxy.FixedValue"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.InterfaceMaker",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "add",
        "desc": "(Lorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "java.lang.Object"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.InvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.InvocationHandlerGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        "java.lang.reflect.Method"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.LazyLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.LazyLoaderGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        "CGLIB$LOAD_PRIVATE_",
        "org.mockito.cglib.proxy.LazyLoader"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodInterceptor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodInterceptorGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "generateFindProxy",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "CGLIB$findMethodProxy"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodInterceptorGenerator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodInterceptorGenerator$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodProxy",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;",
        "field": "sig1"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSuperIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getSignature",
        "desc": "()Lorg/mockito/cglib/core/Signature;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/cglib/proxy/MethodProxy;"
      },
      {
        "name": "find",
        "desc": "(Ljava/lang/Class;Lorg/mockito/cglib/core/Signature;)Lorg/mockito/cglib/proxy/MethodProxy;"
      },
      {
        "name": "invokeSuper",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getSuperIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodProxy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.MethodProxy",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodProxy$CreateInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.MethodProxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MethodProxy$FastClassInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.MethodProxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Mixin",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Mixin$Generator",
    "setters": [
      {
        "name": "setStyle",
        "desc": "(I)V",
        "field": "style"
      },
      {
        "name": "setDelegates",
        "desc": "([Ljava/lang/Object;)V",
        "field": "delegates"
      },
      {
        "name": "setClasses",
        "desc": "([Ljava/lang/Class;)V",
        "field": "classes"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setClasses",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setStyle",
        "desc": "(I)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setDelegates",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/proxy/Mixin;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.proxy.Mixin",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Mixin$MixinKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.Mixin",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Mixin$Route",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.proxy.Mixin",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MixinBeanEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.proxy.MixinEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MixinEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;[I)V"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "newInstance",
        "org.mockito.cglib.proxy.Mixin"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.MixinEverythingEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "byte": [
        24
      ],
      "short": [
        24
      ],
      "int": [
        0,
        24
      ]
    },
    "parents": [
      "org.mockito.cglib.proxy.MixinEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.NoOp",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.NoOp$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.NoOp"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.NoOpGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateStatic",
        "desc": "(Lorg/mockito/cglib/core/CodeEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generate",
        "desc": "(Lorg/mockito/cglib/core/ClassEmitter;Lorg/mockito/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Proxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isProxyClass",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/proxy/InvocationHandler;)V"
      },
      {
        "name": "getProxyClass",
        "desc": "(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "getInvocationHandler",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/cglib/proxy/InvocationHandler;"
      },
      {
        "name": "newProxyInstance",
        "desc": "(Ljava/lang/ClassLoader;[Ljava/lang/Class;Lorg/mockito/cglib/proxy/InvocationHandler;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Proxy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "equals",
        "hashCode",
        "java.lang.Object",
        "toString"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.Proxy$ProxyImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.proxy.Proxy"
    ],
    "outerClass": "org.mockito.cglib.proxy.Proxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.ProxyRefDispatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.proxy.UndeclaredThrowableException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getUndeclaredThrowable",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [
      {
        "name": "getUndeclaredThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.CodeGenerationException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.ConstructorDelegate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.ConstructorDelegate$ConstructorKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.reflect.ConstructorDelegate",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.ConstructorDelegate$Generator",
    "setters": [
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "targetClass"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/reflect/ConstructorDelegate;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        "org.mockito.cglib.reflect.ConstructorDelegate"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.reflect.ConstructorDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClass",
    "setters": [],
    "getters": [
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClass$Generator",
    "setters": [
      {
        "name": "setType",
        "desc": "(Ljava/lang/Class;)V",
        "field": "type"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/reflect/FastClass;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.reflect.FastClass",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        0,
        1,
        100
      ],
      "str": [
        "getIndex"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastClassEmitter$GetIndexCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "org.mockito.cglib.reflect.FastClassEmitter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastConstructor",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getJavaConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/reflect/FastClass;Ljava/lang/reflect/Constructor;)V"
      },
      {
        "name": "newInstance",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getJavaConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.reflect.FastMember"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastMember",
    "setters": [],
    "getters": [
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.FastMethod",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "testableMethods": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/reflect/FastClass;Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.reflect.FastMember"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MethodDelegate",
    "setters": [],
    "getters": [
      {
        "name": "getTarget",
        "desc": "()Ljava/lang/Object;",
        "field": "target"
      }
    ],
    "observers": [
      {
        "name": "getTarget",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MethodDelegate$Generator",
    "setters": [
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "targetClass"
      },
      {
        "name": "setMethodName",
        "desc": "(Ljava/lang/String;)V",
        "field": "methodName"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Object;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setMethodName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/reflect/MethodDelegate;"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "expected",
        "newInstance",
        "org.mockito.cglib.reflect.MethodDelegate"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.reflect.MethodDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MethodDelegate$MethodDelegateKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.reflect.MethodDelegate",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MulticastDelegate",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTargets",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Cloneable"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MulticastDelegate$Generator",
    "setters": [
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/reflect/MulticastDelegate;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "add",
        "addHelper",
        "newInstance",
        "org.mockito.cglib.reflect.MulticastDelegate"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.reflect.MulticastDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.reflect.MulticastDelegate$Generator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractClassFilterTransformer",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.transform.AbstractClassTransformer"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractClassLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFlags",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        ":"
      ]
    },
    "parents": [
      "java.lang.ClassLoader"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractClassLoader$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractClassTransformer",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V",
        "field": "cv"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.ClassAdapter",
      "org.mockito.cglib.transform.ClassTransformer"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractProcessTask",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFiles",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.tools.ant.Task"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AbstractTransformTask",
    "setters": [
      {
        "name": "setVerbose",
        "desc": "(Z)V",
        "field": "verbose"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getFlags",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -889275714,
        -1,
        0,
        1
      ],
      "long": [
        -889275714,
        1347093252
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.AbstractProcessTask"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.AnnotationVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;Lorg/mockito/asm/AnnotationVisitor;)V"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getInstance",
        "desc": "(Lorg/mockito/asm/AnnotationVisitor;Lorg/mockito/asm/AnnotationVisitor;)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassEmitterTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.ClassEmitter",
      "org.mockito.cglib.transform.ClassTransformer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassFilterTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/transform/ClassFilter;Lorg/mockito/cglib/transform/ClassTransformer;)V"
      },
      {
        "name": "accept",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        46,
        47
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.AbstractClassFilterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassReaderGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassReader;[Lorg/mockito/asm/Attribute;I)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassReader;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassTransformerChain",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "([Lorg/mockito/cglib/transform/ClassTransformer;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.AbstractClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassTransformerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassTransformerTee",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V",
        "field": "cv"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.asm.ClassAdapter",
      "org.mockito.cglib.transform.ClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.ClassVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/mockito/asm/FieldVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.FieldVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/FieldVisitor;Lorg/mockito/asm/FieldVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.MethodFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.MethodFilterTransformer",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V",
        "field": "direct"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/mockito/asm/MethodVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/transform/MethodFilter;Lorg/mockito/cglib/transform/ClassTransformer;)V"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.transform.AbstractClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.MethodVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/mockito/asm/Label;[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/mockito/asm/Label;[I[Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/MethodVisitor;Lorg/mockito/asm/MethodVisitor;)V"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;I)V"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/mockito/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Lorg/mockito/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/mockito/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/mockito/asm/Attribute;)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/mockito/asm/Label;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.TransformingClassGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/core/ClassGenerator;Lorg/mockito/cglib/transform/ClassTransformer;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.TransformingClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getGenerator",
        "desc": "(Lorg/mockito/asm/ClassReader;)Lorg/mockito/cglib/core/ClassGenerator;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;Lorg/mockito/cglib/transform/ClassFilter;Lorg/mockito/cglib/transform/ClassTransformerFactory;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.transform.AbstractClassLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AbstractInterceptFieldCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "readDouble",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;D)D"
      },
      {
        "name": "readShort",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;S)S"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeFloat",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;FF)F"
      },
      {
        "name": "readByte",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;B)B"
      },
      {
        "name": "readFloat",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;F)F"
      },
      {
        "name": "readObject",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "writeDouble",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;DD)D"
      },
      {
        "name": "readInt",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;I)I"
      },
      {
        "name": "readBoolean",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Z)Z"
      },
      {
        "name": "writeLong",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;JJ)J"
      },
      {
        "name": "writeObject",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "readLong",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;J)J"
      },
      {
        "name": "writeChar",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;CC)C"
      },
      {
        "name": "writeInt",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;II)I"
      },
      {
        "name": "readChar",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;C)C"
      },
      {
        "name": "writeByte",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;BB)B"
      },
      {
        "name": "writeShort",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;SS)S"
      },
      {
        "name": "writeBoolean",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;ZZ)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.transform.impl.InterceptFieldCallback"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AccessFieldTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/transform/impl/AccessFieldTransformer$Callback;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "get"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AccessFieldTransformer$Callback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.transform.impl.AccessFieldTransformer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddDelegateTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;Ljava/lang/Class;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "<init>"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddDelegateTransformer$1",
    "setters": [
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "transformInit"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        183
      ],
      "int": [
        0,
        1,
        183
      ],
      "str": [
        "$CGLIB_DELEGATE"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddInitTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "<init>"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddInitTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        177
      ],
      "int": [
        177
      ]
    },
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddPropertyTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;[Lorg/mockito/asm/Type;)V"
      },
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.AddStaticInitTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "init",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer",
    "setters": [
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V",
        "field": "access"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "CGLIB$FIELD_TYPES"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.FieldProviderTransformer$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldEnabled",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/mockito/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/transform/impl/InterceptFieldFilter;)V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/mockito/asm/Type;[Lorg/mockito/asm/Type;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        9,
        10
      ],
      "str": [
        "$cglib_read_",
        "$cglib_write_",
        "(",
        "()",
        ")V",
        "getInterceptFieldCallback",
        "org.mockito.cglib.transform.impl.InterceptFieldEnabled",
        "setInterceptFieldCallback"
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.InterceptFieldTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        180,
        181
      ]
    },
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.UndeclaredThrowableStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "transform",
        "desc": "(Lorg/mockito/cglib/core/ClassGenerator;)Lorg/mockito/cglib/core/ClassGenerator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.DefaultGeneratorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.UndeclaredThrowableStrategy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        36
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.transform.MethodFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.UndeclaredThrowableTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/mockito/cglib/core/Signature;[Lorg/mockito/asm/Type;)Lorg/mockito/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.transform.impl.UndeclaredThrowableTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.util.SorterTemplate"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$ByteComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$ComparatorComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Object;Ljava/util/Comparator;)V"
      },
      {
        "name": "compare",
        "desc": "(II)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$Comparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$DoubleComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([D)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$FloatComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([F)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$Generator",
    "setters": [
      {
        "name": "setArrays",
        "desc": "([Ljava/lang/Object;)V",
        "field": "arrays"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/util/ParallelSorter;"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setArrays",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$IntComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([I)V"
      },
      {
        "name": "compare",
        "desc": "(II)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$LongComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([J)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$ObjectComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorter$ShortComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([S)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.mockito.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.ParallelSorterEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "Object[]",
        "newInstance"
      ]
    },
    "parents": [
      "org.mockito.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.SorterTemplate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        7,
        12
      ],
      "short": [
        7,
        12
      ],
      "int": [
        1,
        2,
        7,
        12
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.StringSwitcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.StringSwitcher$Generator",
    "setters": [
      {
        "name": "setStrings",
        "desc": "([Ljava/lang/String;)V",
        "field": "strings"
      },
      {
        "name": "setInts",
        "desc": "([I)V",
        "field": "ints"
      },
      {
        "name": "setFixedInput",
        "desc": "(Z)V",
        "field": "fixedInput"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "setFixedInput",
        "desc": "(Z)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setStrings",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "create",
        "desc": "()Lorg/mockito/cglib/util/StringSwitcher;"
      },
      {
        "name": "setInts",
        "desc": "([I)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/mockito/asm/ClassVisitor;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.mockito.cglib.util.StringSwitcher",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.StringSwitcher$Generator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.cglib.util.StringSwitcher$StringSwitcherKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.cglib.util.StringSwitcher",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.configuration.AnnotationEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.configuration.DefaultMockitoConfiguration",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAnnotationEngine",
        "desc": "()Lorg/mockito/configuration/AnnotationEngine;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getReturnValues",
        "desc": "()Lorg/mockito/ReturnValues;"
      }
    ],
    "testableMethods": [
      {
        "name": "enableClassCache",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cleansStackTrace",
        "desc": "()Z"
      },
      {
        "name": "getAnnotationEngine",
        "desc": "()Lorg/mockito/configuration/AnnotationEngine;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getReturnValues",
        "desc": "()Lorg/mockito/ReturnValues;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.IMockitoConfiguration"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.configuration.IMockitoConfiguration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.Discrepancy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(II)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.reporting.Discrepancy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.Pluralizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.reporting.Pluralizer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.PrintableInvocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.Reporter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "argumentsAreDifferent",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "nullPassedToWhenMethod",
        "desc": "()V"
      },
      {
        "name": "tooLittleActualInvocations",
        "desc": "(Lorg/mockito/internal/reporting/Discrepancy;Lorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "notAMockPassedToVerifyNoMoreInteractions",
        "desc": "()V"
      },
      {
        "name": "tooManyActualInvocations",
        "desc": "(IILorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "tooManyActualInvocationsInOrder",
        "desc": "(IILorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "cannotInitializeForSpyAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
      },
      {
        "name": "delegatedMethodHasWrongReturnType",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "serializableWontWorkForObjectsThatDontImplementSerializable",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "cannotCallAbstractRealMethod",
        "desc": "()V"
      },
      {
        "name": "mocksHaveToBePassedWhenCreatingInOrder",
        "desc": "()V"
      },
      {
        "name": "invalidArgumentPositionRangeAtInvocationTime",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;ZI)I"
      },
      {
        "name": "noMoreInteractionsWanted",
        "desc": "(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V"
      },
      {
        "name": "incorrectUseOfApi",
        "desc": "()V"
      },
      {
        "name": "unfinishedStubbing",
        "desc": "(Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "tooLittleActualInvocationsInOrder",
        "desc": "(Lorg/mockito/internal/reporting/Discrepancy;Lorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "notAMockPassedToWhenMethod",
        "desc": "()V"
      },
      {
        "name": "invocationListenersRequiresAtLeastOneListener",
        "desc": "()V"
      },
      {
        "name": "wantedButNotInvoked",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;Ljava/util/List;)V"
      },
      {
        "name": "invalidArgumentRangeAtIdentityAnswerCreationTime",
        "desc": "()V"
      },
      {
        "name": "cannotMockFinalClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "noArgumentValueWasCaptured",
        "desc": "()V"
      },
      {
        "name": "unsupportedCombinationOfAnnotations",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "neverWantedButInvoked",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "cannotInitializeForInjectMocksAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
      },
      {
        "name": "extraInterfacesRequiresAtLeastOneInterface",
        "desc": "()V"
      },
      {
        "name": "notAMockPassedToVerify",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "wrongTypeOfReturnValue",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "nullPassedWhenCreatingInOrder",
        "desc": "()V"
      },
      {
        "name": "missingMethodInvocation",
        "desc": "()V"
      },
      {
        "name": "usingConstructorWithFancySerializable",
        "desc": "(Lorg/mockito/mock/SerializableMode;)V"
      },
      {
        "name": "extraInterfacesDoesNotAcceptNullParameters",
        "desc": "()V"
      },
      {
        "name": "moreThanOneAnnotationNotAllowed",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "invalidUseOfMatchers",
        "desc": "(ILjava/util/List;)V"
      },
      {
        "name": "invocationListenerThrewException",
        "desc": "(Lorg/mockito/listeners/InvocationListener;Ljava/lang/Throwable;)V"
      },
      {
        "name": "reportNoSubMatchersFound",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "incorrectUseOfAdditionalMatchers",
        "desc": "(Ljava/lang/String;ILjava/util/Collection;)V"
      },
      {
        "name": "notAMockPassedWhenCreatingInOrder",
        "desc": "()V"
      },
      {
        "name": "stubPassedToVerify",
        "desc": "()V"
      },
      {
        "name": "cannotVerifyToString",
        "desc": "()V"
      },
      {
        "name": "smartNullPointerException",
        "desc": "(Ljava/lang/String;Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "nullPassedToVerify",
        "desc": "()V"
      },
      {
        "name": "inOrderRequiresFamiliarMock",
        "desc": "()V"
      },
      {
        "name": "checkedExceptionInvalid",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "extraInterfacesAcceptsOnlyInterfaces",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "mockedTypeIsInconsistentWithSpiedInstanceType",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "cannotStubWithNullThrowable",
        "desc": "()V"
      },
      {
        "name": "unfinishedVerificationException",
        "desc": "(Lorg/mockito/invocation/Location;)V"
      },
      {
        "name": "wantedAtMostX",
        "desc": "(II)V"
      },
      {
        "name": "extraInterfacesCannotContainMockedType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "onlyVoidMethodsCanBeSetToDoNothing",
        "desc": "()V"
      },
      {
        "name": "wantedButNotInvoked",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;)V"
      },
      {
        "name": "mockedTypeIsInconsistentWithDelegatedInstanceType",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "delegatedMethodDoesNotExistOnDelegate",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "noMoreInteractionsWantedInOrder",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "cannotStubVoidMethodWithAReturnValue",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "atMostAndNeverShouldNotBeUsedWithTimeout",
        "desc": "()V"
      },
      {
        "name": "mocksHaveToBePassedToVerifyNoMoreInteractions",
        "desc": "()V"
      },
      {
        "name": "cannotInjectDependency",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Exception;)V"
      },
      {
        "name": "invocationListenerDoesNotAcceptNullParameters",
        "desc": "()V"
      },
      {
        "name": "spyAndDelegateAreMutuallyExclusive",
        "desc": "()V"
      },
      {
        "name": "defaultAnswerDoesNotAcceptNullParameter",
        "desc": "()V"
      },
      {
        "name": "fieldInitialisationThrewException",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Throwable;)V"
      },
      {
        "name": "wrongTypeOfArgumentToReturn",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;Ljava/lang/String;Ljava/lang/Class;I)V"
      },
      {
        "name": "nullPassedToVerifyNoMoreInteractions",
        "desc": "()V"
      },
      {
        "name": "wantedButNotInvokedInOrder",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;Lorg/mockito/invocation/DescribedInvocation;)V"
      },
      {
        "name": "misplacedArgumentMatcher",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "str": [
        "",
        "'",
        "()",
        ")",
        ":",
        "returned."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.base.MockitoAssertionError",
    "setters": [],
    "getters": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;",
        "field": "unfilteredStackTrace"
      }
    ],
    "observers": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.AssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.base.MockitoException",
    "setters": [],
    "getters": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;",
        "field": "unfilteredStackTrace"
      }
    ],
    "observers": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.base.MockitoSerializationIssue",
    "setters": [],
    "getters": [
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;",
        "field": "unfilteredStackTrace"
      }
    ],
    "observers": [
      {
        "name": "getStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "testableMethods": [
      {
        "name": "getStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.ObjectStreamException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.FriendlyReminderException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.InvalidUseOfMatchersException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.MockitoConfigurationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.NotAMockException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.NullInsteadOfMockException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.UnfinishedVerificationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.misusing.WrongTypeOfReturnValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.stacktrace.StackTraceCleaner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.ArgumentsAreDifferent",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.NeverWantedButInvoked",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.NoInteractionsWanted",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.SmartNullPointerException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.TooLittleActualInvocations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.TooManyActualInvocations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.VerificationInOrderFailure",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.WantedButNotInvoked",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoAssertionError"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
    "setters": [],
    "getters": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;",
        "field": "message"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;",
        "field": "unfilteredStackTrace"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getUnfilteredStackTrace",
        "desc": "()[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "junit.framework.ComparisonFailure"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.exceptions.verification.junit.JUnitTool",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasJUnit",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createArgumentsAreDifferentException",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.InOrderImpl",
    "setters": [],
    "getters": [
      {
        "name": "getMocksToBeVerifiedInOrder",
        "desc": "()Ljava/util/List;",
        "field": "mocksToBeVerifiedInOrder"
      }
    ],
    "observers": [
      {
        "name": "getMocksToBeVerifiedInOrder",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMocksToBeVerifiedInOrder",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "verifyNoMoreInteractions",
        "desc": "()V"
      },
      {
        "name": "isVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      },
      {
        "name": "markVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.InOrder",
      "org.mockito.internal.verification.api.InOrderContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.InternalMockHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.MockHandler"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.MockitoCore",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLastInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;"
      }
    ],
    "testableMethods": [
      {
        "name": "inOrder",
        "desc": "([Ljava/lang/Object;)Lorg/mockito/InOrder;"
      },
      {
        "name": "verifyNoMoreInteractionsInOrder",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "stub",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/DeprecatedOngoingStubbing;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "stub",
        "desc": "()Lorg/mockito/internal/progress/IOngoingStubbing;"
      },
      {
        "name": "doAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "verify",
        "desc": "(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;"
      },
      {
        "name": "isTypeMockable",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "reset",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "mockingDetails",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockingDetails;"
      },
      {
        "name": "when",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "mock",
        "desc": "(Ljava/lang/Class;Lorg/mockito/MockSettings;)Ljava/lang/Object;"
      },
      {
        "name": "stubVoid",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "ignoreStubs",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "verifyNoMoreInteractions",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "getLastInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "validateMockitoUsage",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.CaptorAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "process",
        "desc": "(Lorg/mockito/Captor;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.ClassPathLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "loadConfiguration",
        "desc": "()Lorg/mockito/configuration/IMockitoConfiguration;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.DefaultAnnotationEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createMockFor",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "throwIfAlreadyAssigned",
        "desc": "(Ljava/lang/reflect/Field;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.AnnotationEngine"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.DefaultAnnotationEngine$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.DefaultInjectionEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "injectMocksOnFields",
        "desc": "(Ljava/util/Set;Ljava/util/Set;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.FieldAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.GlobalConfiguration",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getIt",
        "desc": "()Lorg/mockito/configuration/IMockitoConfiguration;"
      },
      {
        "name": "getAnnotationEngine",
        "desc": "()Lorg/mockito/configuration/AnnotationEngine;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getReturnValues",
        "desc": "()Lorg/mockito/ReturnValues;"
      }
    ],
    "testableMethods": [
      {
        "name": "getIt",
        "desc": "()Lorg/mockito/configuration/IMockitoConfiguration;"
      },
      {
        "name": "enableClassCache",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cleansStackTrace",
        "desc": "()Z"
      },
      {
        "name": "getAnnotationEngine",
        "desc": "()Lorg/mockito/configuration/AnnotationEngine;"
      },
      {
        "name": "validate",
        "desc": "()V"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getReturnValues",
        "desc": "()Lorg/mockito/ReturnValues;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.IMockitoConfiguration",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.InjectingAnnotationEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createMockFor",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "injectMocks",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.AnnotationEngine"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.MockAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Lorg/mockito/Mock;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.MockitoAnnotationsMockAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Lorg/mockito/MockitoAnnotations$Mock;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.SpyAnnotationEngine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createMockFor",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "assertNoIncompatibleAnnotations",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Field;[Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'."
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.configuration.AnnotationEngine"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.ConstructorInjection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "processInjection",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/util/Set;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/util/reflection/FieldInitializer$ConstructorArgumentResolver;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.configuration.injection.MockInjectionStrategy"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "resolveTypeInstances",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver"
    ],
    "outerClass": "org.mockito.internal.configuration.injection.ConstructorInjection",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "onFields",
        "desc": "(Ljava/util/Set;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "onField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjection$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.configuration.injection.MockInjection",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "withMocks",
        "desc": "(Ljava/util/Set;)Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "tryConstructorInjection",
        "desc": "()Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "tryPropertyOrFieldInjection",
        "desc": "()Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "handleSpyAnnotation",
        "desc": "()Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;"
      },
      {
        "name": "apply",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "fieldOwner",
        "fields",
        "mocks"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.configuration.injection.MockInjection",
    "access": 9,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjectionStrategy",
    "setters": [
      {
        "name": "thenTry",
        "desc": "(Lorg/mockito/internal/configuration/injection/MockInjectionStrategy;)Lorg/mockito/internal/configuration/injection/MockInjectionStrategy;",
        "field": "nextStrategy"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.configuration.injection.MockInjectionStrategy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "processInjection",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/util/Set;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.internal.configuration.injection.MockInjectionStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$FieldTypeAndNameComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/reflect/Field;)I"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "processInjection",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/util/Set;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.internal.configuration.injection.MockInjectionStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "filterCandidate",
        "desc": "(Ljava/util/Collection;Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/filter/OngoingInjecter;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.MockCandidateFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.OngoingInjecter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.OngoingInjecter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.MockCandidateFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/configuration/injection/filter/MockCandidateFilter;)V"
      },
      {
        "name": "filterCandidate",
        "desc": "(Ljava/util/Collection;Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/filter/OngoingInjecter;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.MockCandidateFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.OngoingInjecter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/configuration/injection/filter/MockCandidateFilter;)V"
      },
      {
        "name": "filterCandidate",
        "desc": "(Ljava/util/Collection;Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/filter/OngoingInjecter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.configuration.injection.filter.MockCandidateFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addTo",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "assertNoAnnotations",
        "desc": "(Ljava/lang/reflect/Field;[Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.injection.scanner.MockScanner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addPreparedMocks",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isEnabled",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.plugins.PluginSwitch"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.PluginFileReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "readPluginClass",
        "desc": "(Ljava/io/InputStream;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        35
      ],
      "char": [
        35
      ],
      "short": [
        35
      ],
      "int": [
        -1,
        35
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.PluginFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findPluginClass",
        "desc": "(Ljava/lang/Iterable;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/plugins/PluginSwitch;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.PluginLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "loadPlugin",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "loadImpl",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/plugins/PluginSwitch;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.PluginRegistry",
    "setters": [],
    "getters": [
      {
        "name": "getStackTraceCleanerProvider",
        "desc": "()Lorg/mockito/plugins/StackTraceCleanerProvider;",
        "field": "stackTraceCleanerProvider"
      },
      {
        "name": "getMockMaker",
        "desc": "()Lorg/mockito/plugins/MockMaker;",
        "field": "mockMaker"
      }
    ],
    "observers": [
      {
        "name": "getStackTraceCleanerProvider",
        "desc": "()Lorg/mockito/plugins/StackTraceCleanerProvider;"
      },
      {
        "name": "getMockMaker",
        "desc": "()Lorg/mockito/plugins/MockMaker;"
      }
    ],
    "testableMethods": [
      {
        "name": "getStackTraceCleanerProvider",
        "desc": "()Lorg/mockito/plugins/StackTraceCleanerProvider;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMockMaker",
        "desc": "()Lorg/mockito/plugins/MockMaker;"
      }
    ],
    "dictionary": {
      "str": [
        "org.mockito.internal.creation.cglib.CglibMockMaker",
        "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.configuration.plugins.Plugins",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getStackTraceCleanerProvider",
        "desc": "()Lorg/mockito/plugins/StackTraceCleanerProvider;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMockMaker",
        "desc": "()Lorg/mockito/plugins/MockMaker;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.DelegatingMethod",
    "setters": [],
    "getters": [
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "method"
      }
    ],
    "observers": [
      {
        "name": "isVarArgs",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "isVarArgs",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1,
        1024
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.MockitoMethod"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.MockSettingsImpl",
    "setters": [
      {
        "name": "spiedInstance",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockSettings;",
        "field": "spiedInstance"
      },
      {
        "name": "serializable",
        "desc": "(Lorg/mockito/mock/SerializableMode;)Lorg/mockito/MockSettings;",
        "field": "serializableMode"
      },
      {
        "name": "defaultAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/MockSettings;",
        "field": "defaultAnswer"
      },
      {
        "name": "name",
        "desc": "(Ljava/lang/String;)Lorg/mockito/MockSettings;",
        "field": "name"
      },
      {
        "name": "extraInterfaces",
        "desc": "([Ljava/lang/Class;)Lorg/mockito/MockSettings;",
        "field": "extraInterfaces"
      },
      {
        "name": "outerInstance",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockSettings;",
        "field": "outerClassInstance"
      }
    ],
    "getters": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;",
        "field": "extraInterfaces"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z",
        "field": "stubOnly"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z",
        "field": "useConstructor"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;",
        "field": "mockName"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;",
        "field": "typeToMock"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;",
        "field": "invocationListeners"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;",
        "field": "spiedInstance"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;",
        "field": "defaultAnswer"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;",
        "field": "outerClassInstance"
      }
    ],
    "observers": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "hasInvocationListeners",
        "desc": "()Z"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "serializable",
        "desc": "()Lorg/mockito/MockSettings;"
      }
    ],
    "testableMethods": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "spiedInstance",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "invocationListeners",
        "desc": "([Lorg/mockito/listeners/InvocationListener;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "verboseLogging",
        "desc": "()Lorg/mockito/MockSettings;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "defaultAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;"
      },
      {
        "name": "confirm",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "name",
        "desc": "(Ljava/lang/String;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "hasInvocationListeners",
        "desc": "()Z"
      },
      {
        "name": "serializable",
        "desc": "()Lorg/mockito/MockSettings;"
      },
      {
        "name": "useConstructor",
        "desc": "()Lorg/mockito/MockSettings;"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z"
      },
      {
        "name": "serializable",
        "desc": "(Lorg/mockito/mock/SerializableMode;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "extraInterfaces",
        "desc": "([Ljava/lang/Class;)Lorg/mockito/MockSettings;"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "stubOnly",
        "desc": "()Lorg/mockito/internal/creation/MockSettingsImpl;"
      },
      {
        "name": "outerInstance",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/MockSettings;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.mockito.internal.creation.settings.CreationSettings",
      "org.mockito.MockSettings",
      "org.mockito.mock.MockCreationSettings"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "writeReplace",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isWriteReplace",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "enableSerializationAcrossJVM",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "'",
        "writeReplace"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$AcrossJVMMockSerializationProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$AcrossJVMMockitoMockSerializable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$MockitoMockObjectInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resolveClass",
        "desc": "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/Class;Ljava/util/Set;)V"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2,
        3
      ],
      "str": [
        "",
        "MockitoProxyMarker",
        "name"
      ]
    },
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$MockitoMockObjectOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.ObjectOutputStream"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.CGLIBHacker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setMockitoNamingPolicy",
        "desc": "(Lorg/mockito/cglib/proxy/MethodProxy;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.CglibMockMaker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resetMock",
        "desc": "(Ljava/lang/Object;Lorg/mockito/invocation/MockHandler;Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "createMock",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;Lorg/mockito/invocation/MockHandler;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getHandler",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/invocation/MockHandler;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.plugins.MockMaker"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "imposterise",
        "desc": "(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;Ljava/util/Collection;)Ljava/lang/Object;"
      },
      {
        "name": "setConstructorsAccessible",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "imposterise",
        "desc": "(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/creation/instance/Instantiator;)V"
      },
      {
        "name": "createProxyClass",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7
      ],
      "short": [
        6,
        7
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "str": [
        "",
        "'",
        "null"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.creation.cglib.MockitoNamingPolicy"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.CallbackFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.proxy.Enhancer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.creation.cglib.ClassImposterizer",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/proxy/MethodProxy;)V"
      },
      {
        "name": "invokeSuper",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.creation.util.MockitoMethodProxy"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.MethodInterceptorFilter",
    "setters": [],
    "getters": [
      {
        "name": "getHandler",
        "desc": "()Lorg/mockito/invocation/MockHandler;",
        "field": "handler"
      }
    ],
    "observers": [
      {
        "name": "getHandler",
        "desc": "()Lorg/mockito/invocation/MockHandler;"
      }
    ],
    "testableMethods": [
      {
        "name": "createMockitoMethodProxy",
        "desc": "(Lorg/mockito/cglib/proxy/MethodProxy;)Lorg/mockito/internal/creation/util/MockitoMethodProxy;"
      },
      {
        "name": "createMockitoMethod",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/mockito/internal/invocation/MockitoMethod;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/InternalMockHandler;Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "getHandler",
        "desc": "()Lorg/mockito/invocation/MockHandler;"
      },
      {
        "name": "intercept",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.MethodInterceptor",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.MockitoNamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.cglib.core.DefaultNamingPolicy"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.SerializableMockitoMethodProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/cglib/proxy/MethodProxy;)V"
      },
      {
        "name": "invokeSuper",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "c1",
        "c2"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.creation.util.MockitoMethodProxy",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.cglib.SerializableNoOp",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.cglib.proxy.NoOp",
      "java.io.Serializable"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.ConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.creation.instance.Instantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.InstantationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.exceptions.base.MockitoException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.InstantiatorProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getInstantiator",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)Lorg/mockito/internal/creation/instance/Instantiator;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.instance.ObjenesisInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.creation.instance.Instantiator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.settings.CreationSettings",
    "setters": [
      {
        "name": "setMockName",
        "desc": "(Lorg/mockito/mock/MockName;)Lorg/mockito/internal/creation/settings/CreationSettings;",
        "field": "mockName"
      },
      {
        "name": "setExtraInterfaces",
        "desc": "(Ljava/util/Set;)Lorg/mockito/internal/creation/settings/CreationSettings;",
        "field": "extraInterfaces"
      },
      {
        "name": "setTypeToMock",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/internal/creation/settings/CreationSettings;",
        "field": "typeToMock"
      }
    ],
    "getters": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;",
        "field": "extraInterfaces"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z",
        "field": "stubOnly"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z",
        "field": "useConstructor"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;",
        "field": "mockName"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;",
        "field": "typeToMock"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;",
        "field": "invocationListeners"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;",
        "field": "spiedInstance"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;",
        "field": "defaultAnswer"
      },
      {
        "name": "getSerializableMode",
        "desc": "()Lorg/mockito/mock/SerializableMode;",
        "field": "serializableMode"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;",
        "field": "outerClassInstance"
      }
    ],
    "observers": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "isSerializable",
        "desc": "()Z"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getSerializableMode",
        "desc": "()Lorg/mockito/mock/SerializableMode;"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getExtraInterfaces",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMockName",
        "desc": "()Lorg/mockito/mock/MockName;"
      },
      {
        "name": "setMockName",
        "desc": "(Lorg/mockito/mock/MockName;)Lorg/mockito/internal/creation/settings/CreationSettings;"
      },
      {
        "name": "isSerializable",
        "desc": "()Z"
      },
      {
        "name": "getInvocationListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getDefaultAnswer",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      },
      {
        "name": "getSerializableMode",
        "desc": "()Lorg/mockito/mock/SerializableMode;"
      },
      {
        "name": "setExtraInterfaces",
        "desc": "(Ljava/util/Set;)Lorg/mockito/internal/creation/settings/CreationSettings;"
      },
      {
        "name": "setTypeToMock",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/internal/creation/settings/CreationSettings;"
      },
      {
        "name": "isStubOnly",
        "desc": "()Z"
      },
      {
        "name": "isUsingConstructor",
        "desc": "()Z"
      },
      {
        "name": "getTypeToMock",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getSpiedInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getOuterClassInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/creation/settings/CreationSettings;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.mock.MockCreationSettings",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.util.MockitoMethodProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.creation.util.SearchingClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "findClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "combineLoadersOf",
        "desc": "([Ljava/lang/Class;)Ljava/lang/ClassLoader;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2
      ]
    },
    "parents": [
      "java.lang.ClassLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.FindingsListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.Localized",
    "setters": [],
    "getters": [
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;",
        "field": "object"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;",
        "field": "location"
      }
    ],
    "observers": [
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.LocationImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/exceptions/stacktrace/StackTraceFilter;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.Location",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.LoggingListener",
    "setters": [],
    "getters": [
      {
        "name": "isWarnAboutUnstubbed",
        "desc": "()Z",
        "field": "warnAboutUnstubbed"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/mockito/internal/util/MockitoLogger;",
        "field": "logger"
      }
    ],
    "observers": [
      {
        "name": "isWarnAboutUnstubbed",
        "desc": "()Z"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/mockito/internal/util/MockitoLogger;"
      }
    ],
    "testableMethods": [
      {
        "name": "isWarnAboutUnstubbed",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(ZLorg/mockito/internal/util/MockitoLogger;)V"
      },
      {
        "name": "foundStubCalledWithDifferentArgs",
        "desc": "(Lorg/mockito/invocation/Invocation;Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "foundUnstubbed",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "foundUnusedStub",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/mockito/internal/util/MockitoLogger;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.debugging.FindingsListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.MockitoDebuggerImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "printInvocations",
        "desc": "([Ljava/lang/Object;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "********************************"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.MockitoDebugger"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.VerboseMockInvocationLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "reportInvocation",
        "desc": "(Lorg/mockito/listeners/MethodInvocationReport;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/PrintStream;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "\"",
        ")"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.listeners.InvocationListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.WarningsCollector",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getWarnings",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getWarnings",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.WarningsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "find",
        "desc": "(Lorg/mockito/internal/debugging/FindingsListener;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.debugging.WarningsPrinterImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ZLorg/mockito/internal/debugging/WarningsFinder;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Ljava/util/List;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Ljava/util/List;)V"
      },
      {
        "name": "print",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "print",
        "desc": "(Lorg/mockito/internal/util/MockitoLogger;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.MockitoLimitations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.VerificationAwareInvocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.DescribedInvocation"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "filter",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isOut",
        "desc": "(Ljava/lang/StackTraceElement;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "$$EnhancerByMockitoWithCGLIB$$",
        "org.mockito.",
        "org.mockito.internal.runners.",
        "org.mockito.runners."
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.exceptions.stacktrace.StackTraceCleaner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getStackTraceCleaner",
        "desc": "(Lorg/mockito/exceptions/stacktrace/StackTraceCleaner;)Lorg/mockito/exceptions/stacktrace/StackTraceCleaner;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.plugins.StackTraceCleanerProvider"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.stacktrace.StackTraceFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "filter",
        "desc": "([Ljava/lang/StackTraceElement;Z)[Ljava/lang/StackTraceElement;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.exceptions.util.ScenarioPrinter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "(Ljava/util/List;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "[?]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.handler.InvocationNotifierHandler",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      }
    ],
    "testableMethods": [
      {
        "name": "handle",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;"
      },
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "voidMethodStubbable",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/InternalMockHandler;Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "setAnswersForStubbing",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.MockHandler",
      "org.mockito.internal.InternalMockHandler"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.handler.MockHandlerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)Lorg/mockito/internal/InternalMockHandler;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.handler.MockHandlerImpl",
    "setters": [],
    "getters": [
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;",
        "field": "mockSettings"
      },
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;",
        "field": "invocationContainerImpl"
      }
    ],
    "observers": [
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "handle",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;"
      },
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "voidMethodStubbable",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "setAnswersForStubbing",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.InternalMockHandler"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.handler.NullResultGuardian",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      }
    ],
    "testableMethods": [
      {
        "name": "handle",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;"
      },
      {
        "name": "getInvocationContainer",
        "desc": "()Lorg/mockito/internal/stubbing/InvocationContainer;"
      },
      {
        "name": "getMockSettings",
        "desc": "()Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "voidMethodStubbable",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "setAnswersForStubbing",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/InternalMockHandler;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.InternalMockHandler"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.AbstractAwareMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.ArgumentsComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "argumentsMatch",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;[Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "argumentsMatch",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/invocation/Invocation;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.ArgumentsProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "expandVarArgs",
        "desc": "(Z[Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "argumentsToMatchers",
        "desc": "([Ljava/lang/Object;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.CapturesArgumensFromInvocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationImpl",
    "setters": [
      {
        "name": "markStubbed",
        "desc": "(Lorg/mockito/invocation/StubInfo;)V",
        "field": "stubInfo"
      }
    ],
    "getters": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;",
        "field": "mock"
      },
      {
        "name": "getRawArguments",
        "desc": "()[Ljava/lang/Object;",
        "field": "rawArguments"
      },
      {
        "name": "getSequenceNumber",
        "desc": "()I",
        "field": "sequenceNumber"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;",
        "field": "location"
      },
      {
        "name": "getArguments",
        "desc": "()[Ljava/lang/Object;",
        "field": "arguments"
      },
      {
        "name": "isIgnoredForVerification",
        "desc": "()Z",
        "field": "isIgnoredForVerification"
      }
    ],
    "observers": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRawArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getSequenceNumber",
        "desc": "()I"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "getArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isVerified",
        "desc": "()Z"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isIgnoredForVerification",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSequenceNumber",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isVerified",
        "desc": "()Z"
      },
      {
        "name": "getArgumentAt",
        "desc": "(ILjava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "ignoreForVerification",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "markStubbed",
        "desc": "(Lorg/mockito/invocation/StubInfo;)V"
      },
      {
        "name": "getRawArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "markVerified",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/mockito/internal/invocation/MockitoMethod;[Ljava/lang/Object;ILorg/mockito/internal/invocation/realmethod/RealMethod;)V"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "stubInfo",
        "desc": "()Lorg/mockito/invocation/StubInfo;"
      },
      {
        "name": "callRealMethod",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isIgnoredForVerification",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.Invocation",
      "org.mockito.internal.exceptions.VerificationAwareInvocation"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationMarker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "markVerified",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/CapturesArgumensFromInvocation;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "markVerifiedInOrder",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/CapturesArgumensFromInvocation;Lorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "markVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;Lorg/mockito/internal/invocation/CapturesArgumensFromInvocation;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationMatcher",
    "setters": [],
    "getters": [
      {
        "name": "getMatchers",
        "desc": "()Ljava/util/List;",
        "field": "matchers"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;",
        "field": "invocation"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "getMatchers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "testableMethods": [
      {
        "name": "createFrom",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V"
      },
      {
        "name": "hasSameMethod",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "getMatchers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "matches",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "captureArgumentsFrom",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "hasSimilarMethod",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.DescribedInvocation",
      "org.mockito.internal.invocation.CapturesArgumensFromInvocation",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findFirstUnverified",
        "desc": "(Ljava/util/List;Ljava/lang/Object;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "findMatchingChunk",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;ILorg/mockito/internal/verification/api/InOrderContext;)Ljava/util/List;"
      },
      {
        "name": "findFirstUnverified",
        "desc": "(Ljava/util/List;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "getLastLocation",
        "desc": "(Ljava/util/List;)Lorg/mockito/invocation/Location;"
      },
      {
        "name": "findPreviousVerifiedInOrder",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/verification/api/InOrderContext;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "findInvocations",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "findFirstUnverifiedInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/InOrderContext;Ljava/util/List;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "findSimilarInvocation",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Lorg/mockito/invocation/Invocation;"
      },
      {
        "name": "findAllMatchingUnverifiedChunks",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/internal/verification/api/InOrderContext;)Ljava/util/List;"
      },
      {
        "name": "findFirstMatchingUnverifiedInvocation",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/internal/verification/api/InOrderContext;)Lorg/mockito/invocation/Invocation;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationsFinder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.invocation.InvocationsFinder",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "org.mockito.internal.invocation.InvocationsFinder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "org.mockito.internal.invocation.InvocationsFinder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.MatchersBinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "bindMatchers",
        "desc": "(Lorg/mockito/internal/progress/ArgumentMatcherStorage;Lorg/mockito/invocation/Invocation;)Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.MockitoMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.AbstractAwareMethod"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.SerializableMethod",
    "setters": [],
    "getters": [
      {
        "name": "isVarArgs",
        "desc": "()Z",
        "field": "isVarArgs"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;",
        "field": "returnType"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "methodName"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;",
        "field": "parameterTypes"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;",
        "field": "exceptionTypes"
      },
      {
        "name": "isAbstract",
        "desc": "()Z",
        "field": "isAbstract"
      }
    ],
    "observers": [
      {
        "name": "isVarArgs",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "isVarArgs",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1,
        1024
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable",
      "org.mockito.internal.invocation.MockitoMethod"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.StubInfoImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;)V"
      },
      {
        "name": "stubbedAt",
        "desc": "()Lorg/mockito/invocation/Location;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.StubInfo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.UnusedStubsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "find",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.AllInvocationsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "find",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.AllInvocationsFinder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.invocation.finder.AllInvocationsFinder",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.AllInvocationsFinder$SequenceNumberComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.mockito.internal.invocation.finder.AllInvocationsFinder",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "find",
        "desc": "(Ljava/util/List;)Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/realmethod/RealMethod;)V"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/creation/util/MockitoMethodProxy;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.realmethod.RealMethod",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.realmethod.DefaultRealMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/creation/util/MockitoMethodProxy;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.realmethod.RealMethod",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.invocation.realmethod.RealMethod",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.FriendlyExceptionMaker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/junit/JUnitDetecter;)V"
      },
      {
        "name": "createArgumentsAreDifferentException",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.JUnitDetecter",
    "setters": [],
    "getters": [
      {
        "name": "hasJUnit",
        "desc": "()Z",
        "field": "hasJUnit"
      }
    ],
    "observers": [
      {
        "name": "hasJUnit",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "hasJUnit",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "junit.framework.ComparisonFailure"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.JUnitRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.JUnitRule$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.junit.JUnitTool",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "hasJUnit",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createArgumentsAreDifferentException",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.listeners.CollectCreatedMocks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "mockingStarted",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.listeners.MockingStartedListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.listeners.MockingProgressListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.listeners.MockingStartedListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.listeners.MockingProgressListener"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.listeners.NotifiedMethodInvocationReport",
    "setters": [],
    "getters": [
      {
        "name": "getReturnedValue",
        "desc": "()Ljava/lang/Object;",
        "field": "returnedValue"
      },
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;",
        "field": "throwable"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/DescribedInvocation;",
        "field": "invocation"
      }
    ],
    "observers": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getLocationOfStubbing",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnedValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/DescribedInvocation;"
      }
    ],
    "testableMethods": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;Ljava/lang/Object;)V"
      },
      {
        "name": "getLocationOfStubbing",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getReturnedValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "threwException",
        "desc": "()Z"
      },
      {
        "name": "getInvocation",
        "desc": "()Lorg/mockito/invocation/DescribedInvocation;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.listeners.MethodInvocationReport"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.And",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Any",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "<any>"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.AnyVararg",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.VarargMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.ArrayEquals",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createObjectArray",
        "desc": "(Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "org.mockito.internal.matchers.Equals"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.CapturesArguments",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.CapturingMatcher",
    "setters": [],
    "getters": [
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;",
        "field": "arguments"
      }
    ],
    "observers": [
      {
        "name": "getLastValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLastValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "captureFrom",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getAllValues",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.CapturesArguments",
      "org.mockito.internal.matchers.VarargMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.CompareEqual",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.CompareTo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Contains",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.ContainsExtraTypeInformation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.EndsWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Equality",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "areArrayLengthsEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "areArraysEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "areArrayElementsEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "isArray",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "areEqual",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Equals",
    "setters": [],
    "getters": [
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/Object;",
        "field": "wanted"
      }
    ],
    "observers": [
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "typeMatches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "describe",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "withExtraTypeInfo",
        "desc": "()Lorg/hamcrest/SelfDescribing;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "\""
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.ContainsExtraTypeInformation",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Equals$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.SelfDescribing"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.EqualsWithDelta",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Number;Ljava/lang/Number;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Find",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.GreaterOrEqual",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.GreaterThan",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.InstanceOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.LessOrEqual",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.LessThan",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "matchResult",
        "desc": "(I)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Comparable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.matchers.CompareTo",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.LocalizedMatcher",
    "setters": [],
    "getters": [
      {
        "name": "getActualMatcher",
        "desc": "()Lorg/hamcrest/Matcher;",
        "field": "actualMatcher"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;",
        "field": "location"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActualMatcher",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      }
    ],
    "testableMethods": [
      {
        "name": "_dont_implement_Matcher___instead_extend_BaseMatcher_",
        "desc": "()V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "getActualMatcher",
        "desc": "()Lorg/hamcrest/Matcher;"
      },
      {
        "name": "getLocation",
        "desc": "()Lorg/mockito/invocation/Location;"
      },
      {
        "name": "typeMatches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "captureFrom",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "withExtraTypeInfo",
        "desc": "()Lorg/hamcrest/SelfDescribing;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.hamcrest.Matcher",
      "org.mockito.internal.matchers.ContainsExtraTypeInformation",
      "org.mockito.internal.matchers.CapturesArguments",
      "org.mockito.internal.matchers.MatcherDecorator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.MatcherDecorator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.MatchersPrinter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getArgumentsLine",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;"
      },
      {
        "name": "getArgumentsBlock",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Matches",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Not",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.NotNull",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "notNull()"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Null",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "isNull()"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Or",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.Same",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "\"",
        "'",
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.StartsWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "\")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.VarargCapturingMatcher",
    "setters": [],
    "getters": [
      {
        "name": "getAllVarargs",
        "desc": "()Ljava/util/List;",
        "field": "arguments"
      }
    ],
    "observers": [
      {
        "name": "getLastVarargs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getAllVarargs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getLastVarargs",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "captureFrom",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getAllVarargs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.CapturesArguments",
      "org.mockito.internal.matchers.VarargMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.VarargMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
    "setters": [
      {
        "name": "append",
        "desc": "(II)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "appendSuper",
        "desc": "(Z)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;",
        "field": "isEquals"
      }
    ],
    "getters": [
      {
        "name": "isEquals",
        "desc": "()Z",
        "field": "isEquals"
      }
    ],
    "observers": [
      {
        "name": "isEquals",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "append",
        "desc": "([S[S)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;)Z"
      },
      {
        "name": "append",
        "desc": "(BB)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "setEquals",
        "desc": "(Z)V"
      },
      {
        "name": "appendSuper",
        "desc": "(Z)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([B[B)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(II)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)Z"
      },
      {
        "name": "append",
        "desc": "(FF)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([Z[Z)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(CC)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(SS)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([I[I)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([J[J)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Z)Z"
      },
      {
        "name": "isEquals",
        "desc": "()Z"
      },
      {
        "name": "append",
        "desc": "(JJ)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(ZZ)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "(DD)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([D[D)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([C[C)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "append",
        "desc": "([F[F)Lorg/mockito/internal/matchers/apachecommons/EqualsBuilder;"
      },
      {
        "name": "reflectionEquals",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        -1,
        0,
        1,
        36
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.matchers.apachecommons.ReflectionEquals",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "describeTo",
        "desc": "(Lorg/hamcrest/Description;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;[Ljava/lang/String;)V"
      },
      {
        "name": "matches",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.mockito.ArgumentMatcher",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.ArgumentMatcherStorage",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.ArgumentMatcherStorageImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "reportMatcher",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;"
      },
      {
        "name": "reportOr",
        "desc": "()Lorg/mockito/internal/progress/HandyReturnValues;"
      },
      {
        "name": "pullLocalizedMatchers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "reportAnd",
        "desc": "()Lorg/mockito/internal/progress/HandyReturnValues;"
      },
      {
        "name": "validateState",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "reportNot",
        "desc": "()Lorg/mockito/internal/progress/HandyReturnValues;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "And(?)",
        "Not(?)",
        "Or(?)"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.ArgumentMatcherStorage"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.HandyReturnValues",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnMap",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "returnNull",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "returnFalse",
        "desc": "()Z"
      },
      {
        "name": "returnString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "returnSet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "returnZero",
        "desc": "()B"
      },
      {
        "name": "returnChar",
        "desc": "()C"
      },
      {
        "name": "returnFor",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "returnList",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "returnFor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.IOngoingStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.MockingProgress",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.MockingProgressImpl",
    "setters": [
      {
        "name": "setListener",
        "desc": "(Lorg/mockito/internal/listeners/MockingProgressListener;)V",
        "field": "listener"
      },
      {
        "name": "stubbingCompleted",
        "desc": "(Lorg/mockito/invocation/Invocation;)V",
        "field": "stubbingInProgress"
      },
      {
        "name": "verificationStarted",
        "desc": "(Lorg/mockito/verification/VerificationMode;)V",
        "field": "verificationMode"
      },
      {
        "name": "reportOngoingStubbing",
        "desc": "(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
        "field": "iOngoingStubbing"
      }
    ],
    "getters": [
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
        "field": "argumentMatcherStorage"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;"
      }
    ],
    "testableMethods": [
      {
        "name": "setListener",
        "desc": "(Lorg/mockito/internal/listeners/MockingProgressListener;)V"
      },
      {
        "name": "verificationStarted",
        "desc": "(Lorg/mockito/verification/VerificationMode;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reportOngoingStubbing",
        "desc": "(Lorg/mockito/internal/progress/IOngoingStubbing;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "resetOngoingStubbing",
        "desc": "()V"
      },
      {
        "name": "pullOngoingStubbing",
        "desc": "()Lorg/mockito/internal/progress/IOngoingStubbing;"
      },
      {
        "name": "pullVerificationMode",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "mockingStarted",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)V"
      },
      {
        "name": "stubbingStarted",
        "desc": "()V"
      },
      {
        "name": "validateState",
        "desc": "()V"
      },
      {
        "name": "stubbingCompleted",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.MockingProgress"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.SequenceNumber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "next",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.progress.ThreadSafeMockingProgress",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;"
      }
    ],
    "testableMethods": [
      {
        "name": "setListener",
        "desc": "(Lorg/mockito/internal/listeners/MockingProgressListener;)V"
      },
      {
        "name": "verificationStarted",
        "desc": "(Lorg/mockito/verification/VerificationMode;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reportOngoingStubbing",
        "desc": "(Lorg/mockito/internal/progress/IOngoingStubbing;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "threadSafely",
        "desc": "()Lorg/mockito/internal/progress/MockingProgress;"
      },
      {
        "name": "resetOngoingStubbing",
        "desc": "()V"
      },
      {
        "name": "pullOngoingStubbing",
        "desc": "()Lorg/mockito/internal/progress/IOngoingStubbing;"
      },
      {
        "name": "pullVerificationMode",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "mockingStarted",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)V"
      },
      {
        "name": "stubbingStarted",
        "desc": "()V"
      },
      {
        "name": "validateState",
        "desc": "()V"
      },
      {
        "name": "stubbingCompleted",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "getArgumentMatcherStorage",
        "desc": "()Lorg/mockito/internal/progress/ArgumentMatcherStorage;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.MockingProgress",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.reporting.Discrepancy",
    "setters": [],
    "getters": [
      {
        "name": "getWantedCount",
        "desc": "()I",
        "field": "wantedCount"
      },
      {
        "name": "getActualCount",
        "desc": "()I",
        "field": "actualCount"
      }
    ],
    "observers": [
      {
        "name": "getPluralizedWantedCount",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWantedCount",
        "desc": "()I"
      },
      {
        "name": "getActualCount",
        "desc": "()I"
      },
      {
        "name": "getPluralizedActualCount",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getPluralizedWantedCount",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWantedCount",
        "desc": "()I"
      },
      {
        "name": "getActualCount",
        "desc": "()I"
      },
      {
        "name": "getPluralizedActualCount",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.reporting.Pluralizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "pluralize",
        "desc": "(I)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.reporting.PrintSettings",
    "setters": [
      {
        "name": "setMatchersToBeDescribedWithExtraTypeInfo",
        "desc": "([Ljava/lang/Integer;)V",
        "field": "withTypeInfo"
      },
      {
        "name": "setMultiline",
        "desc": "(Z)V",
        "field": "multiline"
      }
    ],
    "getters": [
      {
        "name": "isMultiline",
        "desc": "()Z",
        "field": "multiline"
      }
    ],
    "observers": [
      {
        "name": "isMultiline",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "print",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)Ljava/lang/String;"
      },
      {
        "name": "extraTypeInfoFor",
        "desc": "(I)Z"
      },
      {
        "name": "print",
        "desc": "(Ljava/util/List;Lorg/mockito/invocation/Invocation;)Ljava/lang/String;"
      },
      {
        "name": "setMultiline",
        "desc": "(Z)V"
      },
      {
        "name": "verboseMatchers",
        "desc": "([Ljava/lang/Integer;)Lorg/mockito/internal/reporting/PrintSettings;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setMatchersToBeDescribedWithExtraTypeInfo",
        "desc": "([Ljava/lang/Integer;)V"
      },
      {
        "name": "print",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/String;"
      },
      {
        "name": "isMultiline",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        45
      ],
      "char": [
        45
      ],
      "short": [
        45
      ],
      "int": [
        45
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.reporting.SmartPrinter",
    "setters": [],
    "getters": [
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;",
        "field": "actual"
      },
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/String;",
        "field": "wanted"
      }
    ],
    "observers": [
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getActual",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWanted",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/invocation/Invocation;[Ljava/lang/Integer;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.JUnit44RunnerImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.runners.RunnerImpl"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.JUnit44RunnerImpl$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.JUnit4ClassRunner"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.runners.RunnerImpl"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.RunnerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/internal/runners/RunnerImpl;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/runners/util/RunnerProvider;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.RunnerImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.runner.manipulation.Filterable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.util.FrameworkUsageValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "testFinished",
        "desc": "(Lorg/junit/runner/Description;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.util.RunnerProvider",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isJUnit45OrHigherAvailable",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isJUnit45OrHigherAvailable",
        "desc": "()Z"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Lorg/mockito/internal/runners/RunnerImpl;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.runners.util.TestMethodsFinder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasTestMethods",
        "desc": "(Ljava/lang/Class;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.BaseStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.OngoingStubbing",
      "org.mockito.stubbing.DeprecatedOngoingStubbing"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.ConsecutiveStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "then",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V"
      },
      {
        "name": "thenAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "toAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/DeprecatedOngoingStubbing;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.stubbing.BaseStubbing"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.InvocationContainer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.InvocationContainerImpl",
    "setters": [
      {
        "name": "setInvocationForPotentialStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
        "field": "invocationForStubbing"
      },
      {
        "name": "resetInvocationForPotentialStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
        "field": "invocationForStubbing"
      },
      {
        "name": "setMethodForStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
        "field": "invocationForStubbing"
      }
    ],
    "getters": [
      {
        "name": "getInvocationForStubbing",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;",
        "field": "invocationForStubbing"
      },
      {
        "name": "getStubbedInvocations",
        "desc": "()Ljava/util/List;",
        "field": "stubbed"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInvocations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getInvocationForStubbing",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "hasInvocationForPotentialStubbing",
        "desc": "()Z"
      },
      {
        "name": "hasAnswersForStubbing",
        "desc": "()Z"
      },
      {
        "name": "getStubbedInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "addAnswerForVoidMethod",
        "desc": "(Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/progress/MockingProgress;Lorg/mockito/mock/MockCreationSettings;)V"
      },
      {
        "name": "resetInvocationForPotentialStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "findAnswerFor",
        "desc": "(Lorg/mockito/invocation/Invocation;)Lorg/mockito/internal/stubbing/StubbedInvocationMatcher;"
      },
      {
        "name": "setAnswersForStubbing",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getInvocationForStubbing",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "hasInvocationForPotentialStubbing",
        "desc": "()Z"
      },
      {
        "name": "addAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "addConsecutiveAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "hasAnswersForStubbing",
        "desc": "()Z"
      },
      {
        "name": "setInvocationForPotentialStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "invokedMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getInvocations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "setMethodForStubbing",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "getStubbedInvocations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "addAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;Z)V"
      },
      {
        "name": "answerTo",
        "desc": "(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.stubbing.InvocationContainer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.OngoingStubbingImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRegisteredInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "then",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V"
      },
      {
        "name": "getRegisteredInvocations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "thenAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;"
      },
      {
        "name": "toAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/DeprecatedOngoingStubbing;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.stubbing.BaseStubbing"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.StubbedInvocationMatcher",
    "setters": [
      {
        "name": "markStubUsed",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;)V",
        "field": "usedAt"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      },
      {
        "name": "wasUsed",
        "desc": "()Z"
      },
      {
        "name": "addAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)V"
      },
      {
        "name": "markStubUsed",
        "desc": "(Lorg/mockito/invocation/DescribedInvocation;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.mockito.internal.invocation.InvocationMatcher",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.StubberImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "doThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "doReturn",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "doAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "when",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "doNothing",
        "desc": "()Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "doThrow",
        "desc": "(Ljava/lang/Class;)Lorg/mockito/stubbing/Stubber;"
      },
      {
        "name": "doCallRealMethod",
        "desc": "()Lorg/mockito/stubbing/Stubber;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Stubber"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.VoidMethodStubbableImpl",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "on",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "on",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V"
      },
      {
        "name": "toAnswer",
        "desc": "(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "toThrow",
        "desc": "(Ljava/lang/Throwable;)Lorg/mockito/stubbing/VoidMethodStubbable;"
      },
      {
        "name": "toReturn",
        "desc": "()Lorg/mockito/stubbing/VoidMethodStubbable;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.VoidMethodStubbable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.AnswerReturnValuesAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/ReturnValues;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.AnswersValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validate",
        "desc": "(Lorg/mockito/stubbing/Answer;Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "null"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.CallsRealMethods",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ClonesArguments",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.DoesNothing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.MethodInfo",
    "setters": [],
    "getters": [
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "method"
      }
    ],
    "observers": [
      {
        "name": "isVoid",
        "desc": "()Z"
      },
      {
        "name": "isDeclaredOnInterface",
        "desc": "()Z"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isVoid",
        "desc": "()Z"
      },
      {
        "name": "isDeclaredOnInterface",
        "desc": "()Z"
      },
      {
        "name": "isValidException",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "returnsPrimitive",
        "desc": "()Z"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "isValidReturnType",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "printMethodReturnType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        0,
        1024
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.invocation.AbstractAwareMethod"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.Returns",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "printReturnType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "returnsNull",
        "desc": "()Z"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ReturnsArgumentAt",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "wantedArgumentPosition",
        "desc": "()I"
      },
      {
        "name": "returnedTypeOnSignature",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Class;"
      },
      {
        "name": "validateIndexWithinInvocationRange",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ReturnsElementsOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Collection;)V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ThrowsException",
    "setters": [],
    "getters": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;",
        "field": "throwable"
      }
    ],
    "observers": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [
      {
        "name": "getThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.answers.ThrowsExceptionClass",
    "setters": [],
    "getters": [
      {
        "name": "getThrowableClass",
        "desc": "()Ljava/lang/Class;",
        "field": "throwableClass"
      }
    ],
    "observers": [
      {
        "name": "getThrowableClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getThrowableClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.Answers",
    "setters": [],
    "getters": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;",
        "field": "implementation"
      }
    ],
    "observers": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      }
    ],
    "testableMethods": [
      {
        "name": "get",
        "desc": "()Lorg/mockito/stubbing/Answer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "CALLS_REAL_METHODS",
        "RETURNS_DEEP_STUBS",
        "RETURNS_DEFAULTS",
        "RETURNS_MOCKS",
        "RETURNS_SMART_NULLS"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "actualParameterizedType",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport;"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "outerClass": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$LazyHolder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
      "java.io.Serializable"
    ],
    "outerClass": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnValueFor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnValueFor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "returnValueFor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "answer",
        "desc": "(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.stubbing.Answer"
    ],
    "outerClass": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.Checks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "checkItemsNotNull",
        "desc": "(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/Iterable;"
      },
      {
        "name": "checkNotNull",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.ConsoleMockitoLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "log",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.MockitoLogger"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.Decamelizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "decamelizeMatcher",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "([A-Z\\d][^A-Z\\d]*)",
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.DefaultMockingDetails",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isSpy",
        "desc": "()Z"
      },
      {
        "name": "getInvocations",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "isMock",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isSpy",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/mockito/internal/util/MockUtil;)V"
      },
      {
        "name": "getInvocations",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "isMock",
        "desc": "()Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.MockingDetails"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.MockCreationValidator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "validateSerializable",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateConstructorUse",
        "desc": "(ZLorg/mockito/mock/SerializableMode;)V"
      },
      {
        "name": "validateExtraInterfaces",
        "desc": "(Ljava/lang/Class;Ljava/util/Collection;)V"
      },
      {
        "name": "validateType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "validateDelegatedInstance",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      },
      {
        "name": "validateMockedType",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.MockNameImpl",
    "setters": [],
    "getters": [
      {
        "name": "isDefault",
        "desc": "()Z",
        "field": "defaultName"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "mockName"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isDefault",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)V"
      },
      {
        "name": "isDefault",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.mock.MockName",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.MockUtil",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "maybeRedefineMockName",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)V"
      },
      {
        "name": "getMockHandler",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/internal/InternalMockHandler;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createMock",
        "desc": "(Lorg/mockito/mock/MockCreationSettings;)Ljava/lang/Object;"
      },
      {
        "name": "getMockSettings",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/mock/MockCreationSettings;"
      },
      {
        "name": "isTypeMockable",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getMockName",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/mock/MockName;"
      },
      {
        "name": "isMock",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "resetMock",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "isSpy",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.MockitoLogger",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.ObjectMethodsGuru",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isToString",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "isEqualsMethod",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "isHashCodeMethod",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      },
      {
        "name": "isToString",
        "desc": "(Lorg/mockito/internal/invocation/MockitoMethod;)Z"
      },
      {
        "name": "isCompareToMethod",
        "desc": "(Ljava/lang/reflect/Method;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "compareTo",
        "equals",
        "hashCode",
        "toString"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.Primitives",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isPrimitiveOrWrapper",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "defaultValueForPrimitiveOrWrapper",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "primitiveTypeOf",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "double": [
        1.0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.RemoveFirstLine",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.SimpleMockitoLogger",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLoggedInfo",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getLoggedInfo",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "log",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.util.ConsoleMockitoLogger"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.StringJoiner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "join",
        "desc": "([Ljava/lang/Object;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.Timer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isCounting",
        "desc": "()Z"
      },
      {
        "name": "start",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(J)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.ArrayUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isEmpty",
        "desc": "([Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper",
    "setters": [],
    "getters": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;",
        "field": "mockInstance"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "HashCodeAndEqualsMockWrapper{mockInstance="
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "clone",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toArray",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "of",
        "desc": "([Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "toArray",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "addAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "removeAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "retainAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Iterable;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;"
      },
      {
        "name": "containsAll",
        "desc": "(Ljava/util/Collection;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "WRONG"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Set"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "next",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.IdentitySet",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.Iterables",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "toIterable",
        "desc": "(Ljava/util/Enumeration;)Ljava/lang/Iterable;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.ListUtil",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "filter",
        "desc": "(Ljava/util/Collection;Lorg/mockito/internal/util/collections/ListUtil$Filter;)Ljava/util/LinkedList;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.ListUtil$Filter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.util.collections.ListUtil",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.collections.Sets",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.io.IOUtil",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "close",
        "desc": "(Ljava/io/Closeable;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeText",
        "desc": "(Ljava/lang/String;Ljava/io/File;)V"
      },
      {
        "name": "readLines",
        "desc": "(Ljava/io/InputStream;)Ljava/util/Collection;"
      },
      {
        "name": "closeQuietly",
        "desc": "(Ljava/io/Closeable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.junit.JUnitFailureHacker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "appendWarnings",
        "desc": "(Lorg/junit/runner/notification/Failure;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "",
        "fThrownException"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.AccessibilityChanger",
    "setters": [
      {
        "name": "enableAccess",
        "desc": "(Ljava/lang/reflect/AccessibleObject;)V",
        "field": "wasAccessible"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "enableAccess",
        "desc": "(Ljava/lang/reflect/AccessibleObject;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "safelyDisableAccess",
        "desc": "(Ljava/lang/reflect/AccessibleObject;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.BeanPropertySetter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'",
        "set"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Constructors",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldCopier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "copyValue",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializationReport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "fieldWasInitializedUsingContructorArgs",
        "desc": "()Z"
      },
      {
        "name": "fieldInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "fieldWasInitialized",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;ZZ)V"
      },
      {
        "name": "fieldClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "initialize",
        "desc": "()Lorg/mockito/internal/util/reflection/FieldInitializationReport;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;Lorg/mockito/internal/util/reflection/FieldInitializer$ConstructorArgumentResolver;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.util.reflection.FieldInitializer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.util.reflection.FieldInitializer",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "instantiate",
        "desc": "()Lorg/mockito/internal/util/reflection/FieldInitializationReport;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator"
    ],
    "outerClass": "org.mockito.internal.util.reflection.FieldInitializer",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "instantiate",
        "desc": "()Lorg/mockito/internal/util/reflection/FieldInitializationReport;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;Lorg/mockito/internal/util/reflection/FieldInitializer$ConstructorArgumentResolver;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator"
    ],
    "outerClass": "org.mockito.internal.util.reflection.FieldInitializer",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "isNull",
        "desc": "()Z"
      },
      {
        "name": "read",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.FieldSetter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Fields",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Fields$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Fields$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Fields$InstanceFields",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assignedValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "instanceFields",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/mockito/internal/util/collections/ListUtil$Filter;)Lorg/mockito/internal/util/reflection/Fields$InstanceFields;"
      },
      {
        "name": "notNull",
        "desc": "()Lorg/mockito/internal/util/reflection/Fields$InstanceFields;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/util/List;)V"
      },
      {
        "name": "names",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.util.reflection.Fields",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMaster",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getGenericType",
        "desc": "(Ljava/lang/reflect/Field;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "type"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.Type"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/TypeVariable;)V"
      },
      {
        "name": "firstBound",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "typeVariable",
        "desc": "()Ljava/lang/reflect/TypeVariable;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "interfaceBounds",
        "desc": "()[Ljava/lang/reflect/Type;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "org.mockito.internal.util.reflection.GenericMetadataSupport"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/WildcardType;)V"
      },
      {
        "name": "firstBound",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "wildCard",
        "desc": "()Ljava/lang/reflect/WildcardType;"
      },
      {
        "name": "interfaceBounds",
        "desc": "()[Ljava/lang/reflect/Type;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType"
    ],
    "outerClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.InstanceField",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isNull",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "annotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "jdkField",
        "desc": "()Ljava/lang/reflect/Field;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "isNull",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Object;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "read",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "name",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAnnotatedBy",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "field",
        "instance"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.LenientCopyTool",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "copyToMock",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "copyToRealObject",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.util.reflection.Whitebox",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getInternalState",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setInternalState",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.AtLeast",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "verifyInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationDataInOrder;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.VerificationInOrderMode",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.AtMost",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.Calls",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "verifyInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationDataInOrder;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode",
      "org.mockito.internal.verification.api.VerificationInOrderMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.DefaultRegisteredInvocations",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAll",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "removeLast",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAll",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.RegisteredInvocations",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.DefaultRegisteredInvocations$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.mockito.internal.verification.DefaultRegisteredInvocations",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.util.collections.ListUtil$Filter"
    ],
    "outerClass": "org.mockito.internal.verification.DefaultRegisteredInvocations",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.InOrderContextImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;)Z"
      },
      {
        "name": "markVerified",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.InOrderContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.InOrderWrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationInOrderMode;Lorg/mockito/internal/InOrderImpl;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.MockAwareVerificationMode",
    "setters": [],
    "getters": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;",
        "field": "mock"
      }
    ],
    "observers": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMock",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.NoMoreInteractions",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "verifyInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationDataInOrder;)V"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode",
      "org.mockito.internal.verification.api.VerificationInOrderMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.Only",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.RegisteredInvocations",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.SingleRegisteredInvocation",
    "setters": [
      {
        "name": "add",
        "desc": "(Lorg/mockito/invocation/Invocation;)V",
        "field": "invocation"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getAll",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "removeLast",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getAll",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "add",
        "desc": "(Lorg/mockito/invocation/Invocation;)V"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.RegisteredInvocations",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.Times",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "verifyInOrder",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationDataInOrder;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.VerificationInOrderMode",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.VerificationDataImpl",
    "setters": [],
    "getters": [
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;",
        "field": "wanted"
      }
    ],
    "observers": [
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/stubbing/InvocationContainer;Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.VerificationData"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.VerificationModeFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "only",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "calls",
        "desc": "(I)Lorg/mockito/internal/verification/Calls;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "noMoreInteractions",
        "desc": "()Lorg/mockito/internal/verification/NoMoreInteractions;"
      },
      {
        "name": "atMost",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "times",
        "desc": "(I)Lorg/mockito/internal/verification/Times;"
      },
      {
        "name": "atLeastOnce",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "atLeast",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.VerificationOverTimeImpl",
    "setters": [],
    "getters": [
      {
        "name": "getDuration",
        "desc": "()J",
        "field": "durationMillis"
      },
      {
        "name": "getPollingPeriod",
        "desc": "()J",
        "field": "pollingPeriodMillis"
      },
      {
        "name": "getDelegate",
        "desc": "()Lorg/mockito/verification/VerificationMode;",
        "field": "delegate"
      }
    ],
    "observers": [
      {
        "name": "getDuration",
        "desc": "()J"
      },
      {
        "name": "getDelegate",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "getPollingPeriod",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getDuration",
        "desc": "()J"
      },
      {
        "name": "verify",
        "desc": "(Lorg/mockito/internal/verification/api/VerificationData;)V"
      },
      {
        "name": "canRecoverFromFailure",
        "desc": "(Lorg/mockito/verification/VerificationMode;)Z"
      },
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;Z)V"
      },
      {
        "name": "getDelegate",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "getPollingPeriod",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;ZLorg/mockito/internal/util/Timer;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.InOrderContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.VerificationData",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.VerificationDataInOrder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.VerificationDataInOrderImpl",
    "setters": [],
    "getters": [
      {
        "name": "getOrderingContext",
        "desc": "()Lorg/mockito/internal/verification/api/InOrderContext;",
        "field": "inOrder"
      },
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;",
        "field": "wanted"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;",
        "field": "allInvocations"
      }
    ],
    "observers": [
      {
        "name": "getOrderingContext",
        "desc": "()Lorg/mockito/internal/verification/api/InOrderContext;"
      },
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "getOrderingContext",
        "desc": "()Lorg/mockito/internal/verification/api/InOrderContext;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/verification/api/InOrderContext;Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "getWanted",
        "desc": "()Lorg/mockito/internal/invocation/InvocationMatcher;"
      },
      {
        "name": "getAllInvocations",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.verification.api.VerificationDataInOrder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.api.VerificationInOrderMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getSuspiciouslyNotMatchingArgsIndexes",
        "desc": "(Ljava/util/List;[Ljava/lang/Object;)[Ljava/lang/Integer;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "null"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.AtLeastDiscrepancy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPluralizedWantedCount",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getPluralizedWantedCount",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.reporting.Discrepancy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsInOrderChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/verification/api/InOrderContext;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.MissingInvocationChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.MissingInvocationInOrderChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/verification/VerificationMode;Lorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.NonGreedyNumberOfInvocationsInOrderChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;ILorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;Lorg/mockito/internal/invocation/InvocationMarker;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/exceptions/Reporter;Lorg/mockito/internal/invocation/InvocationsFinder;)V"
      },
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "check",
        "desc": "(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;ILorg/mockito/internal/verification/api/InOrderContext;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.DescribedInvocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.exceptions.PrintableInvocation"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.Invocation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.invocation.InvocationOnMock",
      "org.mockito.invocation.DescribedInvocation"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.InvocationOnMock",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.Location",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.MockHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.invocation.StubInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.junit.MockitoJUnit",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "rule",
        "desc": "()Lorg/mockito/junit/MockitoRule;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.junit.MockitoJUnitRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.MethodRule",
      "org.mockito.junit.MockitoRule"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.junit.MockitoRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.MethodRule"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.listeners.InvocationListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.listeners.MethodInvocationReport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.mock.MockCreationSettings",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.mock.MockName",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.mock.SerializableMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "ACROSS_CLASSLOADERS",
        "BASIC",
        "NONE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.plugins.MockMaker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.plugins.PluginSwitch",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.plugins.StackTraceCleanerProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/util/MockitoLogger;Lorg/mockito/internal/runners/RunnerImpl;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1",
    "setters": [
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V",
        "field": "warningsCollector"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.MockitoJUnit44Runner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.runners.MockitoJUnitRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.MockitoJUnitRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.VerboseMockitoJUnitRunner",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/mockito/internal/runners/RunnerImpl;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "filter",
        "desc": "(Lorg/junit/runner/manipulation/Filter;)V"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runner.Runner",
      "org.junit.runner.manipulation.Filterable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.runners.VerboseMockitoJUnitRunner$1",
    "setters": [
      {
        "name": "testStarted",
        "desc": "(Lorg/junit/runner/Description;)V",
        "field": "warningsCollector"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runner.notification.RunListener"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.Answer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.DeprecatedOngoingStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.IOngoingStubbing"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.OngoingStubbing",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.internal.progress.IOngoingStubbing"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.Stubber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.VoidMethodStubbable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.stubbing.answers.ReturnsElementsOf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Collection;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.mockito.internal.stubbing.answers.ReturnsElementsOf"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.After",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "copySelfWithNewVerificationMode",
        "desc": "(Lorg/mockito/verification/VerificationMode;)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;)V"
      },
      {
        "name": "<init>",
        "desc": "(JLorg/mockito/verification/VerificationMode;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        10
      ]
    },
    "parents": [
      "org.mockito.verification.VerificationWrapper",
      "org.mockito.verification.VerificationAfterDelay"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.Timeout",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;Lorg/mockito/internal/util/Timer;)V"
      },
      {
        "name": "copySelfWithNewVerificationMode",
        "desc": "(Lorg/mockito/verification/VerificationMode;)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "atMost",
        "desc": "(I)Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "<init>",
        "desc": "(JJLorg/mockito/verification/VerificationMode;)V"
      },
      {
        "name": "never",
        "desc": "()Lorg/mockito/verification/VerificationMode;"
      },
      {
        "name": "<init>",
        "desc": "(JLorg/mockito/verification/VerificationMode;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "long": [
        10
      ]
    },
    "parents": [
      "org.mockito.verification.VerificationWrapper",
      "org.mockito.verification.VerificationWithTimeout"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.VerificationAfterDelay",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.VerificationMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.VerificationWithTimeout",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.mockito.verification.VerificationWrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.mockito.verification.VerificationMode"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.Objenesis",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisBase",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/objenesis/strategy/InstantiatorStrategy;)V"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/objenesis/strategy/InstantiatorStrategy;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.Objenesis"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getSerializableObjectInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "newSerializableInstance",
        "desc": "(Ljava/lang/Class;)Ljava/io/Serializable;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.objenesis.ObjenesisBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.ObjenesisStd",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.objenesis.ObjenesisBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.ObjectInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.SerializationInstantiatorHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getNonSerializableSuperClass",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.android.Android10Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.android.Android17Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.android.Android18Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.android.AndroidSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.AccessibleInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.objenesis.instantiator.basic.ConstructorInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.ConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.FailingInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.NewInstanceInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.NullInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator$MockStream",
    "setters": [
      {
        "name": "read",
        "desc": "([BII)I",
        "field": "pointer"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "available",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        5
      ]
    },
    "parents": [
      "java.io.InputStream"
    ],
    "outerClass": "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.basic.ObjectStreamClassInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.gcj.GCJInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.objenesis.instantiator.gcj.GCJInstantiatorBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.gcj.GCJInstantiatorBase",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.gcj.GCJInstantiatorBase$DummyStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "outerClass": "org.objenesis.instantiator.gcj.GCJInstantiatorBase",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.gcj.GCJSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.objenesis.instantiator.gcj.GCJInstantiatorBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.perc.PercInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.perc.PercSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.sun.SunReflectionFactoryHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newConstructorForSerialization",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"
      }
    ],
    "dictionary": {
      "str": [
        "sun.reflect.ReflectionFactory"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.sun.SunReflectionFactorySerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.instantiator.sun.UnsafeFactoryInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.BaseInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.objenesis.strategy.InstantiatorStrategy"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.InstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.PlatformDescription",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isThisJVM",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "Dalvik",
        "java.vm.name"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.SerializingInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "str": [
        "Dalvik",
        "OpenJDK",
        "PERC"
      ]
    },
    "parents": [
      "org.objenesis.strategy.BaseInstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.SingleInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.objenesis.strategy.InstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.objenesis.strategy.StdInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        17
      ],
      "short": [
        10,
        17
      ],
      "int": [
        10,
        17
      ],
      "str": [
        "1.4",
        "BEA",
        "Dalvik",
        "OpenJDK",
        "PERC",
        "R",
        "R25.1",
        "R25.2"
      ]
    },
    "parents": [
      "org.objenesis.strategy.BaseInstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.AnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.AnnotationWriter",
    "setters": [
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "numElementValuePairs"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "numElementValuePairs"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "numElementValuePairs"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "numElementValuePairs"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "putParameterAnnotations",
        "desc": "(I[Lorg/springframework/asm/AnnotationWriter;ILorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "computeParameterAnnotationsSize",
        "desc": "(Ljava/lang/String;[Lorg/springframework/asm/AnnotationWriter;I)I"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "computeAnnotationsSize",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "putAnnotations",
        "desc": "(ILorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/SymbolTable;ZLorg/springframework/asm/ByteVector;Lorg/springframework/asm/AnnotationWriter;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/SymbolTable;Lorg/springframework/asm/ByteVector;Lorg/springframework/asm/AnnotationWriter;)V"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "byte": [
        90,
        91
      ],
      "char": [
        90,
        91
      ],
      "short": [
        90,
        91
      ],
      "int": [
        -1,
        0,
        1,
        2,
        90,
        91,
        458752
      ]
    },
    "parents": [
      "org.springframework.asm.AnnotationVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Attribute",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "getLabels",
        "desc": "()[Lorg/springframework/asm/Label;"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isUnknown",
        "desc": "()Z"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/springframework/asm/SymbolTable;Lorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "putAttributes",
        "desc": "(Lorg/springframework/asm/SymbolTable;[BIIILorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "getLabels",
        "desc": "()[Lorg/springframework/asm/Label;"
      },
      {
        "name": "read",
        "desc": "(Lorg/springframework/asm/ClassReader;II[CI[Lorg/springframework/asm/Label;)Lorg/springframework/asm/Attribute;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "computeAttributesSize",
        "desc": "(Lorg/springframework/asm/SymbolTable;)I"
      },
      {
        "name": "isCodeAttribute",
        "desc": "()Z"
      },
      {
        "name": "computeAttributesSize",
        "desc": "(Lorg/springframework/asm/SymbolTable;[BIII)I"
      },
      {
        "name": "write",
        "desc": "(Lorg/springframework/asm/ClassWriter;[BIII)Lorg/springframework/asm/ByteVector;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Attribute$Set",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toArray",
        "desc": "()[Lorg/springframework/asm/Attribute;"
      }
    ],
    "testableMethods": [
      {
        "name": "toArray",
        "desc": "()[Lorg/springframework/asm/Attribute;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addAttributes",
        "desc": "(Lorg/springframework/asm/Attribute;)V"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        1,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.asm.Attribute",
    "access": 24,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.ByteVector",
    "setters": [
      {
        "name": "putLong",
        "desc": "(J)Lorg/springframework/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByte",
        "desc": "(I)Lorg/springframework/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putInt",
        "desc": "(I)Lorg/springframework/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/springframework/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/springframework/asm/ByteVector;",
        "field": "length"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/ByteVector;",
        "field": "length"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "putLong",
        "desc": "(J)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "put122",
        "desc": "(III)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "put112",
        "desc": "(III)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "putByteArray",
        "desc": "([BII)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "put11",
        "desc": "(II)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "put12",
        "desc": "(II)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "putUTF8",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "encodeUtf8",
        "desc": "(Ljava/lang/String;II)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "putByte",
        "desc": "(I)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "putInt",
        "desc": "(I)Lorg/springframework/asm/ByteVector;"
      },
      {
        "name": "putShort",
        "desc": "(I)Lorg/springframework/asm/ByteVector;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        64,
        127
      ],
      "char": [
        64
      ],
      "short": [
        8,
        64,
        127,
        2047
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        64,
        127,
        2047,
        65535
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.ClassReader",
    "setters": [],
    "getters": [
      {
        "name": "getMaxStringLength",
        "desc": "()I",
        "field": "maxStringLength"
      }
    ],
    "observers": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMaxStringLength",
        "desc": "()I"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getFirstAttributeOffset",
        "desc": "()I"
      },
      {
        "name": "getItemCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([BII)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/springframework/asm/ClassVisitor;I)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/springframework/asm/ClassVisitor;[Lorg/springframework/asm/Attribute;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "readConst",
        "desc": "(I[C)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "getItemCount",
        "desc": "()I"
      },
      {
        "name": "readUTF8",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "readInt",
        "desc": "(I)I"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "([BIZ)V"
      },
      {
        "name": "getMaxStringLength",
        "desc": "()I"
      },
      {
        "name": "readLong",
        "desc": "(I)J"
      },
      {
        "name": "getItem",
        "desc": "(I)I"
      },
      {
        "name": "readLabel",
        "desc": "(I[Lorg/springframework/asm/Label;)Lorg/springframework/asm/Label;"
      },
      {
        "name": "readClass",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "readUnsignedShort",
        "desc": "(I)I"
      },
      {
        "name": "readModule",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "readUtf",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "readPackage",
        "desc": "(I[C)Ljava/lang/String;"
      },
      {
        "name": "getFirstAttributeOffset",
        "desc": "()I"
      },
      {
        "name": "readByte",
        "desc": "(I)I"
      },
      {
        "name": "readShort",
        "desc": "(I)S"
      }
    ],
    "dictionary": {
      "byte": [
        -2,
        6,
        8,
        11,
        24,
        56,
        59,
        64,
        65,
        66,
        67,
        76,
        91
      ],
      "char": [
        56,
        59,
        64,
        65,
        66,
        67,
        76,
        91
      ],
      "short": [
        -2,
        6,
        8,
        11,
        24,
        56,
        59,
        64,
        65,
        66,
        67,
        76,
        91,
        128,
        132,
        167,
        168,
        182,
        185,
        187,
        192,
        218,
        224,
        247,
        248,
        251,
        255,
        256,
        4096
      ],
      "int": [
        -2,
        -1,
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        11,
        21,
        22,
        23,
        24,
        25,
        54,
        55,
        56,
        57,
        58,
        59,
        64,
        65,
        66,
        67,
        76,
        91,
        101,
        128,
        132,
        167,
        168,
        169,
        182,
        185,
        187,
        192,
        218,
        224,
        247,
        248,
        251,
        255,
        256,
        4096,
        131072
      ],
      "str": [
        "<init>",
        "AnnotationDefault",
        "BootstrapMethods",
        "Code",
        "ConstantValue",
        "Deprecated",
        "EnclosingMethod",
        "Exceptions",
        "InnerClasses",
        "LineNumberTable",
        "LocalVariableTable",
        "LocalVariableTypeTable",
        "MethodParameters",
        "Module",
        "ModuleMainClass",
        "ModulePackages",
        "NestHost",
        "NestMembers",
        "RuntimeInvisibleAnnotations",
        "RuntimeInvisibleParameterAnnotations",
        "RuntimeInvisibleTypeAnnotations",
        "RuntimeVisibleAnnotations",
        "RuntimeVisibleParameterAnnotations",
        "RuntimeVisibleTypeAnnotations",
        "Signature",
        "SourceDebugExtension",
        "SourceFile",
        "StackMap",
        "StackMapTable",
        "Synthetic"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.ClassTooLargeException",
    "setters": [],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I",
        "field": "constantPoolCount"
      }
    ],
    "observers": [
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.IndexOutOfBoundsException"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.ClassVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.ClassWriter",
    "setters": [
      {
        "name": "visitNestMember",
        "desc": "(Ljava/lang/String;)V",
        "field": "numberOfNestMemberClasses"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "enclosingClassIndex"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "debugExtension"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;",
        "field": "lastField"
      },
      {
        "name": "visitModule",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Lorg/springframework/asm/ModuleVisitor;",
        "field": "moduleWriter"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;",
        "field": "lastMethod"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "version"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
        "field": "numberOfInnerClasses"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitNestHost",
        "desc": "(Ljava/lang/String;)V",
        "field": "nestHostClassIndex"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "visitNestMember",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "newField",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newNameType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"
      },
      {
        "name": "newHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I"
      },
      {
        "name": "newPackage",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "newMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "newHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "newModule",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;"
      },
      {
        "name": "visitModule",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)Lorg/springframework/asm/ModuleVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassReader;I)V"
      },
      {
        "name": "newMethodType",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "newUTF8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "newClass",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "newConst",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "newConstantDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)I"
      },
      {
        "name": "visitNestHost",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "newInvokeDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)I"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "getCommonSuperClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        49,
        51
      ],
      "char": [
        49,
        51
      ],
      "short": [
        9,
        49,
        51,
        4096
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        9,
        49,
        51,
        4096,
        65535,
        131072,
        458752,
        2147483647
      ],
      "str": [
        "InnerClasses",
        "Signature",
        "Synthetic"
      ]
    },
    "parents": [
      "org.springframework.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.ConstantDynamic",
    "setters": [],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;",
        "field": "bootstrapMethodArguments"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      },
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/springframework/asm/Handle;",
        "field": "bootstrapMethod"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/springframework/asm/Handle;"
      },
      {
        "name": "getBootstrapMethodArgumentCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getBootstrapMethodArgument",
        "desc": "(I)Ljava/lang/Object;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethodArgumentsUnsafe",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBootstrapMethod",
        "desc": "()Lorg/springframework/asm/Handle;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getBootstrapMethodArgumentCount",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        68,
        74
      ],
      "char": [
        68,
        74
      ],
      "short": [
        68,
        74
      ],
      "int": [
        0,
        1,
        68,
        74
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Constants",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.asm.Opcodes"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Context",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.CurrentFrame",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "execute",
        "desc": "(IILorg/springframework/asm/Symbol;Lorg/springframework/asm/SymbolTable;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.asm.Frame"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Edge",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILorg/springframework/asm/Label;Lorg/springframework/asm/Edge;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.FieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.FieldWriter",
    "setters": [
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "computeFieldInfoSize",
        "desc": "()I"
      },
      {
        "name": "putFieldInfo",
        "desc": "(Lorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V"
      },
      {
        "name": "collectAttributePrototypes",
        "desc": "(Lorg/springframework/asm/Attribute$Set;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        49
      ],
      "char": [
        49
      ],
      "short": [
        8,
        49,
        4096
      ],
      "int": [
        0,
        8,
        49,
        4096,
        131072,
        458752
      ]
    },
    "parents": [
      "org.springframework.asm.FieldVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Frame",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInputStackSize",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "copyFrom",
        "desc": "(Lorg/springframework/asm/Frame;)V"
      },
      {
        "name": "putAbstractType",
        "desc": "(Lorg/springframework/asm/SymbolTable;ILorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "setInputFrameFromApiFormat",
        "desc": "(Lorg/springframework/asm/SymbolTable;I[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "execute",
        "desc": "(IILorg/springframework/asm/Symbol;Lorg/springframework/asm/SymbolTable;)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/springframework/asm/MethodWriter;)V"
      },
      {
        "name": "getAbstractTypeFromInternalName",
        "desc": "(Lorg/springframework/asm/SymbolTable;Ljava/lang/String;)I"
      },
      {
        "name": "getInputStackSize",
        "desc": "()I"
      },
      {
        "name": "merge",
        "desc": "(Lorg/springframework/asm/SymbolTable;Lorg/springframework/asm/Frame;I)Z"
      },
      {
        "name": "setInputFrameFromDescriptor",
        "desc": "(Lorg/springframework/asm/SymbolTable;ILjava/lang/String;I)V"
      },
      {
        "name": "getAbstractTypeFromApiFormat",
        "desc": "(Lorg/springframework/asm/SymbolTable;Ljava/lang/Object;)I"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        10,
        28,
        40,
        60,
        68,
        74,
        91
      ],
      "char": [
        40,
        60,
        68,
        74,
        91
      ],
      "short": [
        8,
        10,
        28,
        40,
        60,
        68,
        74,
        91,
        183,
        184
      ],
      "int": [
        -268435456,
        -16777216,
        0,
        1,
        2,
        8,
        10,
        28,
        40,
        60,
        68,
        74,
        91,
        183,
        184,
        262144,
        1048575,
        1048576,
        16777216,
        16777217,
        16777219,
        16777220,
        16777221,
        16777222,
        33554432,
        50331648,
        67108864,
        83886080,
        251658240,
        268435455,
        285212676
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Handle",
    "setters": [],
    "getters": [
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      },
      {
        "name": "isInterface",
        "desc": "()Z",
        "field": "isInterface"
      },
      {
        "name": "getTag",
        "desc": "()I",
        "field": "tag"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;",
        "field": "owner"
      }
    ],
    "observers": [
      {
        "name": "getTag",
        "desc": "()I"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getTag",
        "desc": "()I"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "getDesc",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getOwner",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        9
      ],
      "short": [
        9
      ],
      "int": [
        0,
        1,
        9
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Handler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getExceptionTableLength",
        "desc": "(Lorg/springframework/asm/Handler;)I"
      },
      {
        "name": "getExceptionTableSize",
        "desc": "(Lorg/springframework/asm/Handler;)I"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/Handler;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;ILjava/lang/String;)V"
      },
      {
        "name": "removeRange",
        "desc": "(Lorg/springframework/asm/Handler;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)Lorg/springframework/asm/Handler;"
      },
      {
        "name": "putExceptionTable",
        "desc": "(Lorg/springframework/asm/Handler;Lorg/springframework/asm/ByteVector;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Label",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCanonicalInstance",
        "desc": "()Lorg/springframework/asm/Label;"
      }
    ],
    "testableMethods": [
      {
        "name": "addSubroutineRetSuccessors",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "getOffset",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "markSubroutine",
        "desc": "(S)V"
      },
      {
        "name": "getCanonicalInstance",
        "desc": "()Lorg/springframework/asm/Label;"
      },
      {
        "name": "resolve",
        "desc": "([BI)Z"
      },
      {
        "name": "addLineNumber",
        "desc": "(I)V"
      },
      {
        "name": "put",
        "desc": "(Lorg/springframework/asm/ByteVector;IZ)V"
      },
      {
        "name": "accept",
        "desc": "(Lorg/springframework/asm/MethodVisitor;Z)V"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        16,
        64
      ],
      "char": [
        64
      ],
      "short": [
        -32768,
        6,
        16,
        64,
        198,
        255,
        32767
      ],
      "int": [
        -268435456,
        -32768,
        -1,
        0,
        1,
        2,
        4,
        6,
        16,
        64,
        198,
        255,
        32767,
        268435455,
        268435456
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.MethodTooLargeException",
    "setters": [],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "descriptor"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;",
        "field": "methodName"
      },
      {
        "name": "getCodeSize",
        "desc": "()I",
        "field": "codeSize"
      }
    ],
    "observers": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCodeSize",
        "desc": "()I"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCodeSize",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "."
      ]
    },
    "parents": [
      "java.lang.IndexOutOfBoundsException"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.MethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        11
      ],
      "short": [
        11,
        185
      ],
      "int": [
        0,
        1,
        11,
        185,
        262144,
        327680,
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.MethodWriter",
    "setters": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/springframework/asm/Label;)V",
        "field": "hasAsmInstructions"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V",
        "field": "previousFrameOffset"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V",
        "field": "parametersCount"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V",
        "field": "invisibleAnnotableParameterCount"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V",
        "field": "firstAttribute"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/springframework/asm/Label;)V",
        "field": "lineNumberTableLength"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/springframework/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V",
        "field": "maxStack"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V",
        "field": "lastHandler"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleParameterAnnotations"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V",
        "field": "localVariableTableLength"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;[Lorg/springframework/asm/Label;[Lorg/springframework/asm/Label;[ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastCodeRuntimeInvisibleTypeAnnotation"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V",
        "field": "lastBytecodeOffset"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;",
        "field": "lastRuntimeInvisibleAnnotation"
      }
    ],
    "getters": [
      {
        "name": "hasAsmInstructions",
        "desc": "()Z",
        "field": "hasAsmInstructions"
      }
    ],
    "observers": [
      {
        "name": "hasAsmInstructions",
        "desc": "()Z"
      },
      {
        "name": "hasFrames",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitAnnotableParameterCount",
        "desc": "(IZ)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "putMethodInfo",
        "desc": "(Lorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "hasAsmInstructions",
        "desc": "()Z"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "canCopyMethodAttributes",
        "desc": "(Lorg/springframework/asm/ClassReader;IIZZIII)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V"
      },
      {
        "name": "collectAttributePrototypes",
        "desc": "(Lorg/springframework/asm/Attribute$Set;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/springframework/asm/Label;)V"
      },
      {
        "name": "computeMethodInfoSize",
        "desc": "()I"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAbstractType",
        "desc": "(II)V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/springframework/asm/Label;)V"
      },
      {
        "name": "hasFrames",
        "desc": "()Z"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;[Lorg/springframework/asm/Label;[Lorg/springframework/asm/Label;[ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitFrameStart",
        "desc": "(III)I"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitFrameEnd",
        "desc": "()V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      }
    ],
    "dictionary": {
      "byte": [
        -128,
        6,
        8,
        10,
        16,
        17,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127
      ],
      "char": [
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74
      ],
      "short": [
        -32768,
        -128,
        6,
        8,
        10,
        16,
        17,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        198,
        200,
        201,
        202,
        220,
        247,
        255,
        256,
        4096
      ],
      "int": [
        -32768,
        -128,
        -1,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        16,
        17,
        22,
        24,
        32,
        49,
        50,
        54,
        55,
        57,
        63,
        64,
        68,
        74,
        127,
        167,
        168,
        169,
        172,
        177,
        184,
        185,
        187,
        188,
        191,
        198,
        200,
        201,
        202,
        220,
        247,
        248,
        251,
        252,
        255,
        256,
        4096,
        65535,
        131072,
        262144,
        458752,
        2147483647
      ],
      "str": [
        "<init>",
        "RuntimeInvisibleParameterAnnotations",
        "RuntimeVisibleParameterAnnotations"
      ]
    },
    "parents": [
      "org.springframework.asm.MethodVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.ModuleVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        393216,
        458752
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.ModuleWriter",
    "setters": [
      {
        "name": "visitExport",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V",
        "field": "exportsCount"
      },
      {
        "name": "visitMainClass",
        "desc": "(Ljava/lang/String;)V",
        "field": "mainClassIndex"
      },
      {
        "name": "visitRequire",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)V",
        "field": "requiresCount"
      },
      {
        "name": "visitOpen",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V",
        "field": "opensCount"
      },
      {
        "name": "visitPackage",
        "desc": "(Ljava/lang/String;)V",
        "field": "packageCount"
      },
      {
        "name": "visitUse",
        "desc": "(Ljava/lang/String;)V",
        "field": "usesCount"
      },
      {
        "name": "visitProvide",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "providesCount"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getAttributeCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "putAttributes",
        "desc": "(Lorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "computeAttributesSize",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/SymbolTable;III)V"
      },
      {
        "name": "visitExport",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V"
      },
      {
        "name": "visitMainClass",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "visitRequire",
        "desc": "(Ljava/lang/String;ILjava/lang/String;)V"
      },
      {
        "name": "visitOpen",
        "desc": "(Ljava/lang/String;I[Ljava/lang/String;)V"
      },
      {
        "name": "visitPackage",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitUse",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "visitProvide",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        458752
      ]
    },
    "parents": [
      "org.springframework.asm.ModuleVisitor"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Opcodes",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        5,
        6
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.SpringAsmInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Symbol",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.SymbolTable",
    "setters": [],
    "getters": [
      {
        "name": "getSource",
        "desc": "()Lorg/springframework/asm/ClassReader;",
        "field": "sourceClassReader"
      },
      {
        "name": "getMajorVersion",
        "desc": "()I",
        "field": "majorVersion"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I",
        "field": "constantPoolCount"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      }
    ],
    "observers": [
      {
        "name": "getMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSource",
        "desc": "()Lorg/springframework/asm/ClassReader;"
      },
      {
        "name": "getConstantPoolLength",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "addConstantInvokeDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "getSource",
        "desc": "()Lorg/springframework/asm/ClassReader;"
      },
      {
        "name": "addType",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "getConstantPoolLength",
        "desc": "()I"
      },
      {
        "name": "addConstantClass",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addBootstrapMethod",
        "desc": "(Lorg/springframework/asm/Handle;[Ljava/lang/Object;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addConstantDouble",
        "desc": "(D)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "setMajorVersionAndClassName",
        "desc": "(ILjava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassWriter;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassWriter;Lorg/springframework/asm/ClassReader;)V"
      },
      {
        "name": "addConstantDynamic",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addConstantPackage",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "putBootstrapMethods",
        "desc": "(Lorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "addConstantUtf8",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "addConstantInteger",
        "desc": "(I)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "getConstantPoolCount",
        "desc": "()I"
      },
      {
        "name": "addConstantFieldref",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addConstantString",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addConstantLong",
        "desc": "(J)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "getType",
        "desc": "(I)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addConstantModule",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addConstantNameAndType",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      },
      {
        "name": "addConstantMethodHandle",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addConstantMethodref",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "getMajorVersion",
        "desc": "()I"
      },
      {
        "name": "addConstantFloat",
        "desc": "(F)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addUninitializedType",
        "desc": "(Ljava/lang/String;I)I"
      },
      {
        "name": "putConstantPool",
        "desc": "(Lorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "addMergedType",
        "desc": "(II)I"
      },
      {
        "name": "computeBootstrapMethodsSize",
        "desc": "()I"
      },
      {
        "name": "addConstantMethodType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Symbol;"
      },
      {
        "name": "addConstant",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/asm/Symbol;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        10,
        11,
        12,
        15,
        16,
        64
      ],
      "char": [
        64
      ],
      "short": [
        6,
        10,
        11,
        12,
        15,
        16,
        64,
        128,
        129,
        130,
        256
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10,
        11,
        12,
        15,
        16,
        64,
        128,
        129,
        130,
        256,
        2147483647
      ],
      "long": [
        0
      ],
      "str": [
        "BootstrapMethods"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.SymbolTable$Entry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "org.springframework.asm.Symbol"
    ],
    "outerClass": "org.springframework.asm.SymbolTable",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.Type",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMethodType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getConstructorDescriptor",
        "desc": "(Ljava/lang/reflect/Constructor;)Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "getMethodDescriptor",
        "desc": "(Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/String;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "(Ljava/lang/reflect/Method;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getMethodType",
        "desc": "(Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOpcode",
        "desc": "(I)I"
      },
      {
        "name": "getArgumentsAndReturnSizes",
        "desc": "()I"
      },
      {
        "name": "getDimensions",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getInternalName",
        "desc": "(Ljava/lang/Class;)Ljava/lang/String;"
      },
      {
        "name": "getMethodDescriptor",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getReturnType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getElementType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getInternalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getObjectType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/reflect/Constructor;)Lorg/springframework/asm/Type;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "char": [
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91
      ],
      "short": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91,
        172
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        21,
        40,
        41,
        46,
        47,
        54,
        59,
        66,
        67,
        68,
        70,
        73,
        74,
        76,
        79,
        83,
        86,
        90,
        91,
        172
      ],
      "str": [
        "VZCBSIFJD",
        "double"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.TypePath",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLength",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "put",
        "desc": "(Lorg/springframework/asm/TypePath;Lorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "<init>",
        "desc": "([BI)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLength",
        "desc": "()I"
      },
      {
        "name": "getStep",
        "desc": "(I)I"
      },
      {
        "name": "getStepArgument",
        "desc": "(I)I"
      },
      {
        "name": "fromString",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/TypePath;"
      }
    ],
    "dictionary": {
      "byte": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "char": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "short": [
        42,
        46,
        48,
        57,
        59,
        91
      ],
      "int": [
        0,
        2,
        42,
        46,
        48,
        57,
        59,
        91
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.asm.TypeReference",
    "setters": [],
    "getters": [
      {
        "name": "getValue",
        "desc": "()I",
        "field": "targetTypeAndInfo"
      }
    ],
    "observers": [
      {
        "name": "getTypeParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getExceptionIndex",
        "desc": "()I"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "getFormalParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getValue",
        "desc": "()I"
      },
      {
        "name": "getTypeArgumentIndex",
        "desc": "()I"
      },
      {
        "name": "getTryCatchBlockIndex",
        "desc": "()I"
      },
      {
        "name": "getTypeParameterBoundIndex",
        "desc": "()I"
      },
      {
        "name": "getSuperTypeIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "newSuperTypeReference",
        "desc": "(I)Lorg/springframework/asm/TypeReference;"
      },
      {
        "name": "getExceptionIndex",
        "desc": "()I"
      },
      {
        "name": "newTypeReference",
        "desc": "(I)Lorg/springframework/asm/TypeReference;"
      },
      {
        "name": "getFormalParameterIndex",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "getTryCatchBlockIndex",
        "desc": "()I"
      },
      {
        "name": "getTypeParameterBoundIndex",
        "desc": "()I"
      },
      {
        "name": "getTypeParameterIndex",
        "desc": "()I"
      },
      {
        "name": "newFormalParameterReference",
        "desc": "(I)Lorg/springframework/asm/TypeReference;"
      },
      {
        "name": "getSort",
        "desc": "()I"
      },
      {
        "name": "newTypeArgumentReference",
        "desc": "(II)Lorg/springframework/asm/TypeReference;"
      },
      {
        "name": "getValue",
        "desc": "()I"
      },
      {
        "name": "newTryCatchReference",
        "desc": "(I)Lorg/springframework/asm/TypeReference;"
      },
      {
        "name": "putTarget",
        "desc": "(ILorg/springframework/asm/ByteVector;)V"
      },
      {
        "name": "newTypeParameterReference",
        "desc": "(II)Lorg/springframework/asm/TypeReference;"
      },
      {
        "name": "newExceptionReference",
        "desc": "(I)Lorg/springframework/asm/TypeReference;"
      },
      {
        "name": "getTypeArgumentIndex",
        "desc": "()I"
      },
      {
        "name": "newTypeParameterBoundReference",
        "desc": "(III)Lorg/springframework/asm/TypeReference;"
      },
      {
        "name": "getSuperTypeIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        24
      ],
      "short": [
        8,
        16,
        24
      ],
      "int": [
        8,
        16,
        24,
        65535,
        268435456,
        369098752,
        385875968,
        1107296256
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.SpringCglibInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanCopier",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1,
        2
      ],
      "str": [
        "org.springframework.cglib.beans.BeanCopier"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanCopier$BeanCopierKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.beans.BeanCopier",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanCopier$Generator",
    "setters": [
      {
        "name": "setSource",
        "desc": "(Ljava/lang/Class;)V",
        "field": "source"
      },
      {
        "name": "setUseConverter",
        "desc": "(Z)V",
        "field": "useConverter"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "setSource",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setUseConverter",
        "desc": "(Z)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/beans/BeanCopier;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.beans.BeanCopier",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanGenerator",
    "setters": [
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "superclass"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/springframework/cglib/beans/BeanGenerator;Ljava/util/Map;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/springframework/cglib/beans/BeanGenerator;[Ljava/beans/PropertyDescriptor;)V"
      },
      {
        "name": "addProperties",
        "desc": "(Lorg/springframework/cglib/beans/BeanGenerator;Ljava/lang/Class;)V"
      },
      {
        "name": "addProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "createClass",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "\""
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanGenerator$BeanGeneratorKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.beans.BeanGenerator",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanMap",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      }
    ],
    "getters": [
      {
        "name": "getBean",
        "desc": "()Ljava/lang/Object;",
        "field": "bean"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBean",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Map"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanMap$Generator",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      },
      {
        "name": "setBeanClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "beanClass"
      },
      {
        "name": "setRequire",
        "desc": "(I)V",
        "field": "require"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/beans/BeanMap;"
      },
      {
        "name": "setBeanClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setRequire",
        "desc": "(I)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.beans.BeanMap",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanMap$Generator$BeanMapKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.beans.BeanMap$Generator",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanMapEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "newInstance"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanMapEmitter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanMapEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BeanMapEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BulkBean",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPropertyTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getGetters",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getSetters",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BulkBean$BulkBeanKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.beans.BulkBean",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BulkBean$Generator",
    "setters": [
      {
        "name": "setGetters",
        "desc": "([Ljava/lang/String;)V",
        "field": "getters"
      },
      {
        "name": "setSetters",
        "desc": "([Ljava/lang/String;)V",
        "field": "setters"
      },
      {
        "name": "setTypes",
        "desc": "([Ljava/lang/Class;)V",
        "field": "types"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "setGetters",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "setTypes",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/beans/BulkBean;"
      },
      {
        "name": "setSetters",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.beans.BulkBean",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BulkBeanEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "str": [
        "org.springframework.cglib.beans.BulkBeanException"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.BulkBeanException",
    "setters": [],
    "getters": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;",
        "field": "cause"
      },
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      }
    ],
    "observers": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;I)V"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.FixedKeySet",
    "setters": [],
    "getters": [
      {
        "name": "size",
        "desc": "()I",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.util.AbstractSet"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.ImmutableBean",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.beans.ImmutableBean$Generator",
    "setters": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V",
        "field": "bean"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "setBean",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.beans.ImmutableBean",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.AbstractClassGenerator",
    "setters": [
      {
        "name": "setUseCache",
        "desc": "(Z)V",
        "field": "useCache"
      },
      {
        "name": "setStrategy",
        "desc": "(Lorg/springframework/cglib/core/GeneratorStrategy;)V",
        "field": "strategy"
      },
      {
        "name": "setContextClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "contextClass"
      },
      {
        "name": "setClassLoader",
        "desc": "(Ljava/lang/ClassLoader;)V",
        "field": "classLoader"
      },
      {
        "name": "setNamingPolicy",
        "desc": "(Lorg/springframework/cglib/core/NamingPolicy;)V",
        "field": "namingPolicy"
      },
      {
        "name": "setAttemptLoad",
        "desc": "(Z)V",
        "field": "attemptLoad"
      }
    ],
    "getters": [
      {
        "name": "getNamingPolicy",
        "desc": "()Lorg/springframework/cglib/core/NamingPolicy;",
        "field": "namingPolicy"
      },
      {
        "name": "getUseCache",
        "desc": "()Z",
        "field": "useCache"
      },
      {
        "name": "getAttemptLoad",
        "desc": "()Z",
        "field": "attemptLoad"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getStrategy",
        "desc": "()Lorg/springframework/cglib/core/GeneratorStrategy;",
        "field": "strategy"
      }
    ],
    "observers": [
      {
        "name": "getNamingPolicy",
        "desc": "()Lorg/springframework/cglib/core/NamingPolicy;"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getUseCache",
        "desc": "()Z"
      },
      {
        "name": "getAttemptLoad",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStrategy",
        "desc": "()Lorg/springframework/cglib/core/GeneratorStrategy;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ClassGenerator"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData",
    "setters": [],
    "getters": [
      {
        "name": "getUniqueNamePredicate",
        "desc": "()Lorg/springframework/cglib/core/Predicate;",
        "field": "uniqueNamePredicate"
      }
    ],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getUniqueNamePredicate",
        "desc": "()Lorg/springframework/cglib/core/Predicate;"
      }
    ],
    "testableMethods": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "reserveName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "get",
        "desc": "(Lorg/springframework/cglib/core/AbstractClassGenerator;Z)Ljava/lang/Object;"
      },
      {
        "name": "getUniqueNamePredicate",
        "desc": "()Lorg/springframework/cglib/core/Predicate;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.core.AbstractClassGenerator",
    "access": 12,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Predicate"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.internal.Function"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.internal.Function"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.AbstractClassGenerator$Source",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.core.AbstractClassGenerator",
    "access": 12,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.AsmApi",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "value",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.Block",
    "setters": [],
    "getters": [
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/springframework/cglib/core/CodeEmitter;",
        "field": "e"
      },
      {
        "name": "getEnd",
        "desc": "()Lorg/springframework/asm/Label;",
        "field": "end"
      },
      {
        "name": "getStart",
        "desc": "()Lorg/springframework/asm/Label;",
        "field": "start"
      }
    ],
    "observers": [
      {
        "name": "getStart",
        "desc": "()Lorg/springframework/asm/Label;"
      },
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "getEnd",
        "desc": "()Lorg/springframework/asm/Label;"
      }
    ],
    "testableMethods": [
      {
        "name": "getStart",
        "desc": "()Lorg/springframework/asm/Label;"
      },
      {
        "name": "getCodeEmitter",
        "desc": "()Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "getEnd",
        "desc": "()Lorg/springframework/asm/Label;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;)V"
      },
      {
        "name": "end",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassEmitter",
    "setters": [
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V",
        "field": "classInfo"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V",
        "field": "cv"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;",
        "field": "rawStaticInit"
      }
    ],
    "getters": [
      {
        "name": "getClassInfo",
        "desc": "()Lorg/springframework/cglib/core/ClassInfo;",
        "field": "classInfo"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getStaticHook",
        "desc": "()Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "getClassType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/springframework/cglib/core/ClassInfo;"
      }
    ],
    "testableMethods": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "getClassType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/springframework/cglib/core/ClassInfo;"
      },
      {
        "name": "getStaticHook",
        "desc": "()Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "getAccess",
        "desc": "()I"
      },
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "begin_static",
        "desc": "()Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "isFieldDeclared",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "init",
        "desc": "()V"
      },
      {
        "name": "getFieldInfo",
        "desc": "(Ljava/lang/String;)Lorg/springframework/cglib/core/ClassEmitter$FieldInfo;"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        8
      ],
      "str": [
        "()V",
        ";",
        "CGLIB$STATICHOOK"
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassEmitter$1",
    "setters": [],
    "getters": [
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/springframework/asm/Type;",
        "field": "val$interfaces"
      },
      {
        "name": "getType",
        "desc": "()Lorg/springframework/asm/Type;",
        "field": "val$classType"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "val$access"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.ClassInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        177
      ],
      "int": [
        177
      ]
    },
    "parents": [
      "org.springframework.asm.MethodVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isStaticHook",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassEmitter$FieldInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.core.ClassEmitter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassInfo",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassNameReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getClassInfo",
        "desc": "(Lorg/springframework/asm/ClassReader;)[Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "(Lorg/springframework/asm/ClassReader;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassNameReader$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        0,
        46,
        47
      ]
    },
    "parents": [
      "org.springframework.asm.ClassVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassNameReader$EarlyExitException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "outerClass": "org.springframework.cglib.core.ClassNameReader",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassesKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ClassesKey$Key",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.core.ClassesKey",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.CodeEmitter",
    "setters": [],
    "getters": [
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/springframework/cglib/core/ClassEmitter;",
        "field": "ce"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/springframework/cglib/core/MethodInfo;",
        "field": "state"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/springframework/cglib/core/MethodInfo;"
      },
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/springframework/cglib/core/ClassEmitter;"
      },
      {
        "name": "isStaticHook",
        "desc": "()Z"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/springframework/asm/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "store_local",
        "desc": "(Lorg/springframework/cglib/core/Local;)V"
      },
      {
        "name": "invoke_static_this",
        "desc": "(Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "getfield",
        "desc": "(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "pop2",
        "desc": "()V"
      },
      {
        "name": "invoke_constructor",
        "desc": "(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "super_invoke",
        "desc": "()V"
      },
      {
        "name": "checkcast_this",
        "desc": "()V"
      },
      {
        "name": "cast_numeric",
        "desc": "(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "invoke",
        "desc": "(Lorg/springframework/cglib/core/MethodInfo;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "end_method",
        "desc": "()V"
      },
      {
        "name": "aaload",
        "desc": "()V"
      },
      {
        "name": "make_local",
        "desc": "()Lorg/springframework/cglib/core/Local;"
      },
      {
        "name": "instance_of_this",
        "desc": "()V"
      },
      {
        "name": "super_invoke_constructor",
        "desc": "()V"
      },
      {
        "name": "mark",
        "desc": "()Lorg/springframework/asm/Label;"
      },
      {
        "name": "math",
        "desc": "(ILorg/springframework/asm/Type;)V"
      },
      {
        "name": "push",
        "desc": "(D)V"
      },
      {
        "name": "load_this",
        "desc": "()V"
      },
      {
        "name": "monitorexit",
        "desc": "()V"
      },
      {
        "name": "super_getfield",
        "desc": "(Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "pop",
        "desc": "()V"
      },
      {
        "name": "dup",
        "desc": "()V"
      },
      {
        "name": "dup2",
        "desc": "()V"
      },
      {
        "name": "catch_exception",
        "desc": "(Lorg/springframework/cglib/core/Block;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "load_local",
        "desc": "(Lorg/springframework/cglib/core/Local;)V"
      },
      {
        "name": "newarray",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "dup2_x1",
        "desc": "()V"
      },
      {
        "name": "if_cmp",
        "desc": "(Lorg/springframework/asm/Type;ILorg/springframework/asm/Label;)V"
      },
      {
        "name": "ifnull",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "aaload",
        "desc": "(I)V"
      },
      {
        "name": "getfield",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "throw_exception",
        "desc": "(Lorg/springframework/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "invoke_constructor",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "super_invoke_constructor",
        "desc": "(Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "push",
        "desc": "(I)V"
      },
      {
        "name": "arraylength",
        "desc": "()V"
      },
      {
        "name": "isStaticHook",
        "desc": "()Z"
      },
      {
        "name": "load_args",
        "desc": "(II)V"
      },
      {
        "name": "swap",
        "desc": "(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "unbox",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "aconst_null",
        "desc": "()V"
      },
      {
        "name": "invoke",
        "desc": "(Lorg/springframework/cglib/core/MethodInfo;)V"
      },
      {
        "name": "if_jump",
        "desc": "(ILorg/springframework/asm/Label;)V"
      },
      {
        "name": "putfield",
        "desc": "(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "getMethodInfo",
        "desc": "()Lorg/springframework/cglib/core/MethodInfo;"
      },
      {
        "name": "getClassEmitter",
        "desc": "()Lorg/springframework/cglib/core/ClassEmitter;"
      },
      {
        "name": "ifnonnull",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "begin_block",
        "desc": "()Lorg/springframework/cglib/core/Block;"
      },
      {
        "name": "swap",
        "desc": "()V"
      },
      {
        "name": "checkcast",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "dup_x2",
        "desc": "()V"
      },
      {
        "name": "push",
        "desc": "(Z)V"
      },
      {
        "name": "instance_of",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "invoke_virtual",
        "desc": "(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/asm/MethodVisitor;ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "array_store",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "new_instance",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "push",
        "desc": "(J)V"
      },
      {
        "name": "emit_field",
        "desc": "(ILorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "push",
        "desc": "(F)V"
      },
      {
        "name": "mark",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "unbox_or_zero",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "make_local",
        "desc": "(Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/Local;"
      },
      {
        "name": "array_load",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "invoke_static",
        "desc": "(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "dup2_x2",
        "desc": "()V"
      },
      {
        "name": "super_getstatic",
        "desc": "(Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "super_invoke",
        "desc": "(Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "process_switch",
        "desc": "([ILorg/springframework/cglib/core/ProcessSwitchCallback;Z)V"
      },
      {
        "name": "athrow",
        "desc": "()V"
      },
      {
        "name": "super_putstatic",
        "desc": "(Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "invoke_interface",
        "desc": "(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "dup_x1",
        "desc": "()V"
      },
      {
        "name": "box",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "super_putfield",
        "desc": "(Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "if_icmp",
        "desc": "(ILorg/springframework/asm/Label;)V"
      },
      {
        "name": "create_arg_array",
        "desc": "()V"
      },
      {
        "name": "monitorenter",
        "desc": "()V"
      },
      {
        "name": "invoke_constructor_this",
        "desc": "()V"
      },
      {
        "name": "load_arg",
        "desc": "(I)V"
      },
      {
        "name": "zero_or_null",
        "desc": "(Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "push",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "putfield",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "newarray",
        "desc": "()V"
      },
      {
        "name": "new_instance_this",
        "desc": "()V"
      },
      {
        "name": "process_switch",
        "desc": "([ILorg/springframework/cglib/core/ProcessSwitchCallback;)V"
      },
      {
        "name": "getstatic",
        "desc": "(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "return_value",
        "desc": "()V"
      },
      {
        "name": "invoke_virtual_this",
        "desc": "(Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "invoke_constructor_this",
        "desc": "(Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "load_args",
        "desc": "()V"
      },
      {
        "name": "goTo",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "aastore",
        "desc": "()V"
      },
      {
        "name": "not",
        "desc": "()V"
      },
      {
        "name": "iinc",
        "desc": "(Lorg/springframework/cglib/core/Local;I)V"
      },
      {
        "name": "putstatic",
        "desc": "(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "make_label",
        "desc": "()Lorg/springframework/asm/Label;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;)V"
      }
    ],
    "dictionary": {
      "byte": [
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127
      ],
      "char": [
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95
      ],
      "short": [
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127,
        130,
        133,
        134,
        135,
        138,
        141,
        144,
        145,
        146,
        147,
        150,
        165,
        166,
        167,
        172,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        198,
        199,
        32767
      ],
      "int": [
        -1,
        0,
        1,
        2,
        5,
        16,
        17,
        21,
        25,
        46,
        50,
        54,
        79,
        83,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        127,
        130,
        133,
        134,
        135,
        138,
        141,
        144,
        145,
        146,
        147,
        150,
        153,
        154,
        156,
        158,
        165,
        166,
        167,
        172,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        187,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        198,
        199,
        32767
      ],
      "long": [
        0,
        1
      ],
      "float": [
        0.0,
        0.5,
        1.0,
        2.0
      ],
      "double": [
        1.0,
        2.0
      ],
      "str": [
        "<init>",
        "String"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.LocalVariablesSorter"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.CodeEmitter$State",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;",
        "field": "sig"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/springframework/asm/Type;",
        "field": "exceptionTypes"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/springframework/cglib/core/ClassInfo;",
        "field": "classInfo"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "access"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "getAttribute",
        "desc": "()Lorg/springframework/asm/Attribute;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/springframework/cglib/core/ClassInfo;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.cglib.core.MethodInfo"
    ],
    "outerClass": "org.springframework.cglib.core.CodeEmitter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.CodeGenerationException",
    "setters": [],
    "getters": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;",
        "field": "cause"
      }
    ],
    "observers": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [
      {
        "name": "getCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {
      "str": [
        "-->"
      ]
    },
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.CollectionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "reverse",
        "desc": "(Ljava/util/Map;Ljava/util/Map;)V"
      },
      {
        "name": "filter",
        "desc": "(Ljava/util/Collection;Lorg/springframework/cglib/core/Predicate;)Ljava/util/Collection;"
      },
      {
        "name": "getIndexMap",
        "desc": "(Ljava/util/List;)Ljava/util/Map;"
      },
      {
        "name": "bucket",
        "desc": "(Ljava/util/Collection;Lorg/springframework/cglib/core/Transformer;)Ljava/util/Map;"
      },
      {
        "name": "transform",
        "desc": "(Ljava/util/Collection;Lorg/springframework/cglib/core/Transformer;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.Constants",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "org.springframework.cglib.core.Signature"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.asm.Opcodes"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.Converter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.Customizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.KeyFactoryCustomizer"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.DebuggingClassWriter",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "className"
      }
    ],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;",
        "field": "superName"
      }
    ],
    "observers": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        46,
        47
      ]
    },
    "parents": [
      "org.springframework.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.DebuggingClassWriter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        46
      ],
      "str": [
        ".asm",
        ".class"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.DefaultGeneratorStrategy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClassVisitor",
        "desc": "()Lorg/springframework/cglib/core/DebuggingClassWriter;"
      },
      {
        "name": "getClassWriter",
        "desc": "()Lorg/springframework/asm/ClassWriter;"
      }
    ],
    "testableMethods": [
      {
        "name": "generate",
        "desc": "(Lorg/springframework/cglib/core/ClassGenerator;)[B"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "transform",
        "desc": "([B)[B"
      },
      {
        "name": "transform",
        "desc": "(Lorg/springframework/cglib/core/ClassGenerator;)Lorg/springframework/cglib/core/ClassGenerator;"
      },
      {
        "name": "getClassVisitor",
        "desc": "()Lorg/springframework/cglib/core/DebuggingClassWriter;"
      },
      {
        "name": "getClassWriter",
        "desc": "()Lorg/springframework/asm/ClassWriter;"
      }
    ],
    "dictionary": {
      "int": [
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.GeneratorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.DefaultNamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getClassName",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;"
      },
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        2
      ],
      "str": [
        "$",
        "$$",
        "java",
        "org.springframework.cglib.empty.Object",
        "org.springframework.cglib.test.stressHashCodes"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.NamingPolicy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.DuplicatesPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.DuplicatesPredicate$UnnecessaryBridgeFinder",
    "setters": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;",
        "field": "currentMethodSig"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.asm.ClassVisitor"
    ],
    "outerClass": "org.springframework.cglib.core.DuplicatesPredicate",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.DuplicatesPredicate$UnnecessaryBridgeFinder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        183
      ],
      "int": [
        183
      ]
    },
    "parents": [
      "org.springframework.asm.MethodVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "factory_method",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/Signature;)V"
      },
      {
        "name": "load_class_this",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;)V"
      },
      {
        "name": "null_constructor",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;)V"
      },
      {
        "name": "hash_code",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;ILorg/springframework/cglib/core/Customizer;)V"
      },
      {
        "name": "append_string",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V"
      },
      {
        "name": "string_switch",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;[Ljava/lang/String;ILorg/springframework/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "load_class",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "not_equals",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/Customizer;)V"
      },
      {
        "name": "append_string",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/Customizer;)V"
      },
      {
        "name": "push_object",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Ljava/lang/Object;)V"
      },
      {
        "name": "wrap_undeclared_throwable",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/Block;[Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "begin_method",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/MethodInfo;I)Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "begin_method",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/MethodInfo;)Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "constructor_switch",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "wrap_throwable",
        "desc": "(Lorg/springframework/cglib/core/Block;Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "method_switch",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;)V"
      },
      {
        "name": "getSwitchKeys",
        "desc": "(Ljava/util/Map;)[I"
      },
      {
        "name": "add_properties",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;[Ljava/lang/String;[Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "process_array",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/ProcessArrayCallback;)V"
      },
      {
        "name": "hash_code",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;ILorg/springframework/cglib/core/internal/CustomizerRegistry;)V"
      },
      {
        "name": "load_method",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/MethodInfo;)V"
      },
      {
        "name": "push_array",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;[Ljava/lang/Object;)V"
      },
      {
        "name": "process_arrays",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/ProcessArrayCallback;)V"
      },
      {
        "name": "add_property",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Ljava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "not_equals",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V"
      }
    ],
    "dictionary": {
      "byte": [
        96
      ],
      "char": [
        96
      ],
      "short": [
        96,
        155
      ],
      "int": [
        0,
        1,
        96,
        155
      ],
      "str": [
        "",
        "get",
        "{",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$10",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.EmitUtils$ParameterTyper"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$11",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$12",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$13",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$14",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$15",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$16",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$6",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$7",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$8",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$9",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$ArrayDelimiters",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.core.EmitUtils",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.EmitUtils$ParameterTyper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.core.EmitUtils",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.FieldTypeCustomizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.KeyFactoryCustomizer"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.GeneratorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.HashCodeCustomizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.KeyFactoryCustomizer"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.KeyFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        50,
        51
      ],
      "char": [
        50,
        51
      ],
      "short": [
        50,
        51
      ],
      "int": [
        50,
        51,
        1288102441,
        1768288259
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.KeyFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Customizer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.KeyFactory$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.FieldTypeCustomizer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.KeyFactory$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.HashCodeCustomizer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.KeyFactory$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Customizer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.KeyFactory$Generator",
    "setters": [
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "keyInterface"
      },
      {
        "name": "setCustomizer",
        "desc": "(Lorg/springframework/cglib/core/Customizer;)V",
        "field": "customizers"
      },
      {
        "name": "setHashConstant",
        "desc": "(I)V",
        "field": "constant"
      },
      {
        "name": "setHashMultiplier",
        "desc": "(I)V",
        "field": "multiplier"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/core/KeyFactory;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "addCustomizer",
        "desc": "(Lorg/springframework/cglib/core/KeyFactoryCustomizer;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setHashMultiplier",
        "desc": "(I)V"
      },
      {
        "name": "getCustomizers",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "setCustomizer",
        "desc": "(Lorg/springframework/cglib/core/Customizer;)V"
      },
      {
        "name": "setHashConstant",
        "desc": "(I)V"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.core.KeyFactory",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.KeyFactoryCustomizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.Local",
    "setters": [],
    "getters": [
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      },
      {
        "name": "getType",
        "desc": "()Lorg/springframework/asm/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getIndex",
        "desc": "()I"
      },
      {
        "name": "getType",
        "desc": "()Lorg/springframework/asm/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(ILorg/springframework/asm/Type;)V"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      },
      {
        "name": "getType",
        "desc": "()Lorg/springframework/asm/Type;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.LocalVariablesSorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "newLocal",
        "desc": "(I)I"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/lang/String;Lorg/springframework/asm/MethodVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/core/LocalVariablesSorter;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        1,
        2,
        8,
        22,
        24,
        55,
        57
      ]
    },
    "parents": [
      "org.springframework.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.LocalVariablesSorter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.LocalVariablesSorter$State",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        40
      ],
      "char": [
        40
      ],
      "short": [
        40
      ],
      "int": [
        40
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.core.LocalVariablesSorter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.MethodInfo",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.MethodInfoTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "transform",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/springframework/cglib/core/MethodInfoTransformer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.MethodWrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "create",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/Object;"
      },
      {
        "name": "createSet",
        "desc": "(Ljava/util/Collection;)Ljava/util/Set;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.core.MethodWrapper",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.NamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ObjectSwitchCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.Predicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ProcessArrayCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ProcessSwitchCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ReflectUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findMethod",
        "desc": "(Ljava/lang/String;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getBeanGetters",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "getMethodInfo",
        "desc": "(Ljava/lang/reflect/Member;I)Lorg/springframework/cglib/core/MethodInfo;"
      },
      {
        "name": "getConstructor",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "addAllMethods",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "getClassInfo",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/cglib/core/ClassInfo;"
      },
      {
        "name": "getBeanProperties",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "findMethod",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getPropertyMethods",
        "desc": "([Ljava/beans/PropertyDescriptor;ZZ)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "findPackageProtected",
        "desc": "([Ljava/lang/Class;)I"
      },
      {
        "name": "addAllInterfaces",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "defineClass",
        "desc": "(Ljava/lang/String;[BLjava/lang/ClassLoader;Ljava/security/ProtectionDomain;Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "getMethodInfo",
        "desc": "(Ljava/lang/reflect/Member;)Lorg/springframework/cglib/core/MethodInfo;"
      },
      {
        "name": "findConstructor",
        "desc": "(Ljava/lang/String;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "findConstructor",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "findDeclaredMethod",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "(Ljava/lang/Class;)Ljava/security/ProtectionDomain;"
      },
      {
        "name": "getNames",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "defineClass",
        "desc": "(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;"
      },
      {
        "name": "defineClass",
        "desc": "(Ljava/lang/String;[BLjava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;"
      },
      {
        "name": "findMethods",
        "desc": "([Ljava/lang/String;[Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "(Ljava/lang/reflect/Member;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getSignature",
        "desc": "(Ljava/lang/reflect/Member;)Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "findInterfaceMethod",
        "desc": "(Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "getBeanSetters",
        "desc": "(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getClasses",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Class;"
      },
      {
        "name": "findNewInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        41,
        44
      ],
      "char": [
        41,
        44
      ],
      "short": [
        8,
        41,
        44
      ],
      "int": [
        0,
        1,
        2,
        4,
        8,
        41,
        44
      ],
      "str": [
        "",
        "<init>",
        "Z",
        "[]",
        "boolean",
        "newInstance"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ReflectUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedExceptionAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ReflectUtils$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedExceptionAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ReflectUtils$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedExceptionAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ReflectUtils$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        24
      ],
      "short": [
        24
      ],
      "int": [
        0,
        24
      ],
      "str": [
        "finalize"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedExceptionAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ReflectUtils$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ReflectUtils$6",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;",
        "field": "val$sig"
      },
      {
        "name": "getModifiers",
        "desc": "()I",
        "field": "val$modifiers"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "getAttribute",
        "desc": "()Lorg/springframework/asm/Attribute;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getClassInfo",
        "desc": "()Lorg/springframework/cglib/core/ClassInfo;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.MethodInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.ReflectUtils$7",
    "setters": [],
    "getters": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/springframework/asm/Type;",
        "field": "val$sc"
      },
      {
        "name": "getType",
        "desc": "()Lorg/springframework/asm/Type;",
        "field": "val$type"
      }
    ],
    "observers": [
      {
        "name": "getSuperType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.ClassInfo"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.RejectModifierPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.Signature",
    "setters": [],
    "getters": [
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;",
        "field": "desc"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/springframework/asm/Type;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getReturnType",
        "desc": "()Lorg/springframework/asm/Type;"
      },
      {
        "name": "getDescriptor",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getArgumentTypes",
        "desc": "()[Lorg/springframework/asm/Type;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        40
      ],
      "char": [
        40
      ],
      "short": [
        40
      ],
      "int": [
        0,
        40
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.SpringNamingPolicy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getTag",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.DefaultNamingPolicy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.TinyBitSet",
    "setters": [
      {
        "name": "set",
        "desc": "(I)V",
        "field": "value"
      },
      {
        "name": "clear",
        "desc": "(I)V",
        "field": "value"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "cardinality",
        "desc": "()I"
      },
      {
        "name": "length",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "set",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "cardinality",
        "desc": "()I"
      },
      {
        "name": "clear",
        "desc": "(I)V"
      },
      {
        "name": "length",
        "desc": "()I"
      },
      {
        "name": "get",
        "desc": "(I)Z"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        -1,
        0,
        1,
        256
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.Transformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.TypeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getComponentType",
        "desc": "(Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "isAbstract",
        "desc": "(I)Z"
      },
      {
        "name": "add",
        "desc": "([Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "toInternalNames",
        "desc": "([Lorg/springframework/asm/Type;)[Ljava/lang/String;"
      },
      {
        "name": "isPrimitive",
        "desc": "(Lorg/springframework/asm/Type;)Z"
      },
      {
        "name": "ICONST",
        "desc": "(I)I"
      },
      {
        "name": "add",
        "desc": "([Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "upperFirst",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getBoxedType",
        "desc": "(Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "isStatic",
        "desc": "(I)Z"
      },
      {
        "name": "isFinal",
        "desc": "(I)Z"
      },
      {
        "name": "isInterface",
        "desc": "(I)Z"
      },
      {
        "name": "parseType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "isConstructor",
        "desc": "(Lorg/springframework/cglib/core/MethodInfo;)Z"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "FCONST",
        "desc": "(F)I"
      },
      {
        "name": "escapeType",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isPublic",
        "desc": "(I)Z"
      },
      {
        "name": "parseTypes",
        "desc": "(Ljava/lang/String;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "isProtected",
        "desc": "(I)Z"
      },
      {
        "name": "getTypes",
        "desc": "([Ljava/lang/Class;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "emulateClassGetName",
        "desc": "(Lorg/springframework/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "NEWARRAY",
        "desc": "(Lorg/springframework/asm/Type;)I"
      },
      {
        "name": "fromInternalName",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "isBridge",
        "desc": "(I)Z"
      },
      {
        "name": "getUnboxedType",
        "desc": "(Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;"
      },
      {
        "name": "getPackageName",
        "desc": "(Lorg/springframework/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "getStackSize",
        "desc": "([Lorg/springframework/asm/Type;)I"
      },
      {
        "name": "parseConstructor",
        "desc": "([Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "getPackageName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getClassName",
        "desc": "(Lorg/springframework/asm/Type;)Ljava/lang/String;"
      },
      {
        "name": "fromInternalNames",
        "desc": "([Ljava/lang/String;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "LCONST",
        "desc": "(J)I"
      },
      {
        "name": "DCONST",
        "desc": "(D)I"
      },
      {
        "name": "isPrivate",
        "desc": "(I)Z"
      },
      {
        "name": "parseSignature",
        "desc": "(Ljava/lang/String;)Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "parseConstructor",
        "desc": "(Ljava/lang/String;)Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "isArray",
        "desc": "(Lorg/springframework/asm/Type;)Z"
      },
      {
        "name": "isSynthetic",
        "desc": "(I)Z"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        9,
        11,
        12,
        14,
        16,
        44,
        46,
        64
      ],
      "char": [
        44,
        46,
        64
      ],
      "short": [
        8,
        9,
        11,
        12,
        14,
        16,
        44,
        46,
        64,
        512,
        1024,
        4096
      ],
      "int": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        14,
        16,
        36,
        40,
        41,
        44,
        46,
        47,
        59,
        64,
        91,
        512,
        1024,
        4096
      ],
      "long": [
        0,
        1
      ],
      "float": [
        0.0,
        1.0,
        2.0
      ],
      "double": [
        1.0,
        2.0
      ],
      "str": [
        "",
        "<init>",
        "V",
        "[]",
        "java.lang."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.VisibilityPredicate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Predicate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.WeakCacheKey",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.ref.WeakReference"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.internal.CustomizerRegistry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Class;)Ljava/util/List;"
      },
      {
        "name": "add",
        "desc": "(Lorg/springframework/cglib/core/KeyFactoryCustomizer;)V"
      },
      {
        "name": "singleton",
        "desc": "(Lorg/springframework/cglib/core/Customizer;)Lorg/springframework/cglib/core/internal/CustomizerRegistry;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.internal.Function",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.internal.LoadingCache",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "identity",
        "desc": "()Lorg/springframework/cglib/core/internal/Function;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/core/internal/Function;Lorg/springframework/cglib/core/internal/Function;)V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "createEntry",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.internal.LoadingCache$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.internal.Function"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.core.internal.LoadingCache$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Callable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.BridgeMethodResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "resolveAll",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.BridgeMethodResolver$BridgedFinder",
    "setters": [
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;",
        "field": "currentMethod"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.asm.ClassVisitor"
    ],
    "outerClass": "org.springframework.cglib.proxy.BridgeMethodResolver",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.BridgeMethodResolver$BridgedFinder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        183
      ],
      "int": [
        183
      ]
    },
    "parents": [
      "org.springframework.asm.MethodVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Callback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.CallbackFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.CallbackGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1536,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.CallbackGenerator$Context",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.proxy.CallbackGenerator",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.CallbackHelper",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getCallbacks",
        "desc": "()[Lorg/springframework/cglib/proxy/Callback;"
      },
      {
        "name": "getCallbackTypes",
        "desc": "()[Ljava/lang/Class;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackFilter"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.CallbackInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "determineTypes",
        "desc": "([Ljava/lang/Class;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "getGenerators",
        "desc": "([Lorg/springframework/asm/Type;)[Lorg/springframework/cglib/proxy/CallbackGenerator;"
      },
      {
        "name": "determineTypes",
        "desc": "([Lorg/springframework/cglib/proxy/Callback;)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "determineTypes",
        "desc": "([Ljava/lang/Class;Z)[Lorg/springframework/asm/Type;"
      },
      {
        "name": "determineTypes",
        "desc": "([Lorg/springframework/cglib/proxy/Callback;Z)[Lorg/springframework/asm/Type;"
      }
    ],
    "dictionary": {
      "byte": [
        6,
        7
      ],
      "short": [
        6,
        7
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Dispatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.DispatcherGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generate",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "generateStatic",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer",
    "setters": [
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "superclass"
      },
      {
        "name": "setInterfaces",
        "desc": "([Ljava/lang/Class;)V",
        "field": "interfaces"
      },
      {
        "name": "setSerialVersionUID",
        "desc": "(Ljava/lang/Long;)V",
        "field": "serialVersionUID"
      },
      {
        "name": "setCallbacks",
        "desc": "([Lorg/springframework/cglib/proxy/Callback;)V",
        "field": "callbacks"
      },
      {
        "name": "setInterceptDuringConstruction",
        "desc": "(Z)V",
        "field": "interceptDuringConstruction"
      },
      {
        "name": "create",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;",
        "field": "classOnly"
      },
      {
        "name": "setCallbackTypes",
        "desc": "([Ljava/lang/Class;)V",
        "field": "callbackTypes"
      },
      {
        "name": "setCallbackFilter",
        "desc": "(Lorg/springframework/cglib/proxy/CallbackFilter;)V",
        "field": "filter"
      },
      {
        "name": "setUseFactory",
        "desc": "(Z)V",
        "field": "useFactory"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setCallback",
        "desc": "(Lorg/springframework/cglib/proxy/Callback;)V"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setSuperclass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Ljava/util/List;)V"
      },
      {
        "name": "registerStaticCallbacks",
        "desc": "(Ljava/lang/Class;[Lorg/springframework/cglib/proxy/Callback;)V"
      },
      {
        "name": "setCallbackFilter",
        "desc": "(Lorg/springframework/cglib/proxy/CallbackFilter;)V"
      },
      {
        "name": "setCallbackType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "setInterfaces",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "registerCallbacks",
        "desc": "(Ljava/lang/Class;[Lorg/springframework/cglib/proxy/Callback;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "setCallbackTypes",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "wrapCachedClass",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "generate",
        "desc": "(Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;)Ljava/lang/Class;"
      },
      {
        "name": "filterConstructors",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)V"
      },
      {
        "name": "unwrapCachedValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "setSerialVersionUID",
        "desc": "(Ljava/lang/Long;)V"
      },
      {
        "name": "setCallbacks",
        "desc": "([Lorg/springframework/cglib/proxy/Callback;)V"
      },
      {
        "name": "setInterceptDuringConstruction",
        "desc": "(Z)V"
      },
      {
        "name": "isEnhanced",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "createClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Lorg/springframework/cglib/proxy/CallbackFilter;[Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;"
      },
      {
        "name": "setUseFactory",
        "desc": "(Z)V"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        9,
        16
      ],
      "short": [
        8,
        9,
        16
      ],
      "int": [
        0,
        1,
        2,
        8,
        9,
        16
      ],
      "str": [
        "",
        "$",
        "()V",
        "CGLIB$FACTORY_DATA",
        "CGLIB$SET_STATIC_CALLBACKS",
        "CGLIB$SET_THREAD_CALLBACKS",
        "CGLIB$THREAD_CALLBACKS",
        "getCallback",
        "getCallbacks",
        "newInstance",
        "setCallbacks"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer$6",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackGenerator$Context"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer$EnhancerFactoryData",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;Z)V"
      },
      {
        "name": "newInstance",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Object;[Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        "CGLIB$SET_THREAD_CALLBACKS"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.proxy.Enhancer",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Enhancer$EnhancerKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.proxy.Enhancer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Factory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.FixedValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.FixedValueGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generate",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generateStatic",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.InterfaceMaker",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "add",
        "desc": "(Lorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)V"
      },
      {
        "name": "create",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "java.lang.Object"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.InvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.InvocationHandlerGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generate",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generateStatic",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.LazyLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.LazyLoaderGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generate",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generateStatic",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "str": [
        "CGLIB$LOAD_PRIVATE_",
        "org.springframework.cglib.proxy.LazyLoader"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MethodInterceptor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MethodInterceptorGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generate",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "generateFindProxy",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generateStatic",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "str": [
        "CGLIB$findMethodProxy"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MethodInterceptorGenerator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MethodInterceptorGenerator$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MethodProxy",
    "setters": [],
    "getters": [
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;",
        "field": "sig1"
      }
    ],
    "observers": [
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSuperIndex",
        "desc": "()I"
      },
      {
        "name": "getFastClass",
        "desc": "()Lorg/springframework/cglib/reflect/FastClass;"
      },
      {
        "name": "getSuperFastClass",
        "desc": "()Lorg/springframework/cglib/reflect/FastClass;"
      }
    ],
    "testableMethods": [
      {
        "name": "getSignature",
        "desc": "()Lorg/springframework/cglib/core/Signature;"
      },
      {
        "name": "getSuperName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "create",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cglib/proxy/MethodProxy;"
      },
      {
        "name": "find",
        "desc": "(Ljava/lang/Class;Lorg/springframework/cglib/core/Signature;)Lorg/springframework/cglib/proxy/MethodProxy;"
      },
      {
        "name": "invokeSuper",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getSuperIndex",
        "desc": "()I"
      },
      {
        "name": "getFastClass",
        "desc": "()Lorg/springframework/cglib/reflect/FastClass;"
      },
      {
        "name": "getSuperFastClass",
        "desc": "()Lorg/springframework/cglib/reflect/FastClass;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MethodProxy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MethodProxy$CreateInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.proxy.MethodProxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MethodProxy$FastClassInfo",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.proxy.MethodProxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Mixin",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Mixin$Generator",
    "setters": [
      {
        "name": "setStyle",
        "desc": "(I)V",
        "field": "style"
      },
      {
        "name": "setDelegates",
        "desc": "([Ljava/lang/Object;)V",
        "field": "delegates"
      },
      {
        "name": "setClasses",
        "desc": "([Ljava/lang/Class;)V",
        "field": "classes"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "setClasses",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setStyle",
        "desc": "(I)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setDelegates",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/proxy/Mixin;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ")"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.proxy.Mixin",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Mixin$MixinKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.proxy.Mixin",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Mixin$Route",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.proxy.Mixin",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MixinBeanEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.proxy.MixinEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MixinEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;[I)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "short": [
        128
      ],
      "int": [
        0,
        1,
        128
      ],
      "str": [
        "newInstance",
        "org.springframework.cglib.proxy.Mixin"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.MixinEverythingEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Class;)V"
      },
      {
        "name": "getMethods",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/reflect/Method;"
      },
      {
        "name": "getInterfaces",
        "desc": "([Ljava/lang/Class;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "byte": [
        24
      ],
      "short": [
        24
      ],
      "int": [
        0,
        24
      ]
    },
    "parents": [
      "org.springframework.cglib.proxy.MixinEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.NoOp",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.NoOp$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.NoOp"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.NoOpGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generate",
        "desc": "(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "generateStatic",
        "desc": "(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackGenerator"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Proxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isProxyClass",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getInvocationHandler",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/cglib/proxy/InvocationHandler;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/proxy/InvocationHandler;)V"
      },
      {
        "name": "getProxyClass",
        "desc": "(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "newProxyInstance",
        "desc": "(Ljava/lang/ClassLoader;[Ljava/lang/Class;Lorg/springframework/cglib/proxy/InvocationHandler;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Proxy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "equals",
        "hashCode",
        "java.lang.Object",
        "toString"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.CallbackFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.Proxy$ProxyImpl",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.proxy.Proxy"
    ],
    "outerClass": "org.springframework.cglib.proxy.Proxy",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.ProxyRefDispatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.proxy.Callback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.proxy.UndeclaredThrowableException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getUndeclaredThrowable",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [
      {
        "name": "getUndeclaredThrowable",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.CodeGenerationException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.ConstructorDelegate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.ConstructorDelegate$ConstructorKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.reflect.ConstructorDelegate",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.ConstructorDelegate$Generator",
    "setters": [
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "targetClass"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/reflect/ConstructorDelegate;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "str": [
        "org.springframework.cglib.reflect.ConstructorDelegate"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.reflect.ConstructorDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastClass",
    "setters": [],
    "getters": [
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getJavaClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastClass$Generator",
    "setters": [
      {
        "name": "setType",
        "desc": "(Ljava/lang/Class;)V",
        "field": "type"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "setType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/reflect/FastClass;"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.reflect.FastClass",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastClassEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;Ljava/lang/String;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        0,
        1,
        100
      ],
      "str": [
        "getIndex"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastClassEmitter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastClassEmitter$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.Transformer"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastClassEmitter$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastClassEmitter$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastClassEmitter$GetIndexCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "org.springframework.cglib.reflect.FastClassEmitter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastConstructor",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getJavaConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "newInstance",
        "desc": "([Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getJavaConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/reflect/FastClass;Ljava/lang/reflect/Constructor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.reflect.FastMember"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastMember",
    "setters": [],
    "getters": [
      {
        "name": "getIndex",
        "desc": "()I",
        "field": "index"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getIndex",
        "desc": "()I"
      },
      {
        "name": "getModifiers",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.FastMethod",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "testableMethods": [
      {
        "name": "getReturnType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/reflect/FastClass;Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getParameterTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getExceptionTypes",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getJavaMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.cglib.reflect.FastMember"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.MethodDelegate",
    "setters": [],
    "getters": [
      {
        "name": "getTarget",
        "desc": "()Ljava/lang/Object;",
        "field": "target"
      }
    ],
    "observers": [
      {
        "name": "getTarget",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.MethodDelegate$Generator",
    "setters": [
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "targetClass"
      },
      {
        "name": "setMethodName",
        "desc": "(Ljava/lang/String;)V",
        "field": "methodName"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Object;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "setMethodName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/reflect/MethodDelegate;"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "setTarget",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "short": [
        128
      ],
      "int": [
        0,
        1,
        128
      ],
      "str": [
        "",
        "expected",
        "newInstance",
        "org.springframework.cglib.reflect.MethodDelegate"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.reflect.MethodDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.MethodDelegate$MethodDelegateKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.reflect.MethodDelegate",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.MulticastDelegate",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTargets",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Cloneable"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.MulticastDelegate$Generator",
    "setters": [
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V",
        "field": "iface"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setInterface",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/reflect/MulticastDelegate;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getProtectionDomain",
        "desc": "()Ljava/security/ProtectionDomain;"
      }
    ],
    "dictionary": {
      "short": [
        128
      ],
      "int": [
        0,
        1,
        128
      ],
      "str": [
        "add",
        "addHelper",
        "newInstance",
        "org.springframework.cglib.reflect.MulticastDelegate"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.reflect.MulticastDelegate",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.reflect.MulticastDelegate$Generator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessArrayCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.AbstractClassFilterTransformer",
    "setters": [
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "target"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.transform.AbstractClassTransformer"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.AbstractClassLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFlags",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        2
      ],
      "str": [
        ":"
      ]
    },
    "parents": [
      "java.lang.ClassLoader"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.AbstractClassLoader$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.security.PrivilegedAction"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.AbstractClassTransformer",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V",
        "field": "cv"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.transform.ClassTransformer"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.AbstractProcessTask",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFiles",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.apache.tools.ant.Task"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.AbstractTransformTask",
    "setters": [
      {
        "name": "setVerbose",
        "desc": "(Z)V",
        "field": "verbose"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getFlags",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -889275714,
        -1,
        0,
        1,
        2
      ],
      "long": [
        -889275714,
        1347093252
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.AbstractProcessTask"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.AnnotationVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/AnnotationVisitor;Lorg/springframework/asm/AnnotationVisitor;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnum",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getInstance",
        "desc": "(Lorg/springframework/asm/AnnotationVisitor;Lorg/springframework/asm/AnnotationVisitor;)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitArray",
        "desc": "(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.asm.AnnotationVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassEmitterTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.ClassEmitter"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassFilterTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "accept",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/transform/ClassFilter;Lorg/springframework/cglib/transform/ClassTransformer;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        47
      ],
      "char": [
        46,
        47
      ],
      "short": [
        46,
        47
      ],
      "int": [
        46,
        47
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.AbstractClassFilterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassReaderGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassReader;[Lorg/springframework/asm/Attribute;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassReader;I)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.asm.ClassVisitor"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassTransformerChain",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Lorg/springframework/cglib/transform/ClassTransformer;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setTarget",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.AbstractClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassTransformerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassTransformerTee",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V",
        "field": "cv"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setTarget",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.transform.ClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.ClassVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.asm.ClassVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.FieldVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/FieldVisitor;Lorg/springframework/asm/FieldVisitor;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.asm.FieldVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.MethodFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.MethodFilterTransformer",
    "setters": [
      {
        "name": "setTarget",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V",
        "field": "direct"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setTarget",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/transform/MethodFilter;Lorg/springframework/cglib/transform/ClassTransformer;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.transform.AbstractClassTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.MethodVisitorTee",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitMultiANewArrayInsn",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitLabel",
        "desc": "(Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "visitVarInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitFrame",
        "desc": "(II[Ljava/lang/Object;I[Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/asm/MethodVisitor;)V"
      },
      {
        "name": "visitCode",
        "desc": "()V"
      },
      {
        "name": "visitParameter",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "visitTryCatchAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitAnnotationDefault",
        "desc": "()Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitIntInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitIincInsn",
        "desc": "(II)V"
      },
      {
        "name": "visitLookupSwitchInsn",
        "desc": "(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V"
      },
      {
        "name": "visitInsn",
        "desc": "(I)V"
      },
      {
        "name": "visitLineNumber",
        "desc": "(ILorg/springframework/asm/Label;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitJumpInsn",
        "desc": "(ILorg/springframework/asm/Label;)V"
      },
      {
        "name": "visitMaxs",
        "desc": "(II)V"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeInsn",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "visitFieldInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitLdcInsn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "visitTryCatchBlock",
        "desc": "(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V"
      },
      {
        "name": "visitTypeAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitParameterAnnotation",
        "desc": "(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V"
      },
      {
        "name": "visitLocalVariableAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;[Lorg/springframework/asm/Label;[Lorg/springframework/asm/Label;[ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitInvokeDynamicInsn",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V"
      },
      {
        "name": "visitInsnAnnotation",
        "desc": "(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "visitTableSwitchInsn",
        "desc": "(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.asm.MethodVisitor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.TransformingClassGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/core/ClassGenerator;Lorg/springframework/cglib/transform/ClassTransformer;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ClassGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.TransformingClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;Lorg/springframework/cglib/transform/ClassFilter;Lorg/springframework/cglib/transform/ClassTransformerFactory;)V"
      },
      {
        "name": "getGenerator",
        "desc": "(Lorg/springframework/asm/ClassReader;)Lorg/springframework/cglib/core/ClassGenerator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.transform.AbstractClassLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "readDouble",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;D)D"
      },
      {
        "name": "readShort",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;S)S"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeFloat",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;FF)F"
      },
      {
        "name": "readByte",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;B)B"
      },
      {
        "name": "readFloat",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;F)F"
      },
      {
        "name": "readObject",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "writeDouble",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;DD)D"
      },
      {
        "name": "readInt",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;I)I"
      },
      {
        "name": "readBoolean",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Z)Z"
      },
      {
        "name": "writeLong",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;JJ)J"
      },
      {
        "name": "writeObject",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "readLong",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;J)J"
      },
      {
        "name": "writeChar",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;CC)C"
      },
      {
        "name": "writeInt",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;II)I"
      },
      {
        "name": "readChar",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;C)C"
      },
      {
        "name": "writeByte",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;BB)B"
      },
      {
        "name": "writeShort",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;SS)S"
      },
      {
        "name": "writeBoolean",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;ZZ)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.transform.impl.InterceptFieldCallback"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AccessFieldTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/transform/impl/AccessFieldTransformer$Callback;)V"
      },
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "get"
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AccessFieldTransformer$Callback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.transform.impl.AccessFieldTransformer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AddDelegateTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;Ljava/lang/Class;)V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "<init>"
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AddDelegateTransformer$1",
    "setters": [
      {
        "name": "visitMethodInsn",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
        "field": "transformInit"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        183
      ],
      "int": [
        0,
        1,
        183
      ],
      "str": [
        "$CGLIB_DELEGATE"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AddInitTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "<init>"
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AddInitTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        177
      ],
      "int": [
        177
      ]
    },
    "parents": [
      "org.springframework.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AddPropertyTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;[Lorg/springframework/asm/Type;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.AddStaticInitTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "init",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.FieldProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.FieldProviderTransformer",
    "setters": [
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V",
        "field": "access"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "end_class",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "CGLIB$FIELD_TYPES"
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.FieldProviderTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.FieldProviderTransformer$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ProcessSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.FieldProviderTransformer$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.FieldProviderTransformer$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.InterceptFieldCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.InterceptFieldEnabled",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.InterceptFieldFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.InterceptFieldTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/cglib/transform/impl/InterceptFieldFilter;)V"
      },
      {
        "name": "begin_class",
        "desc": "(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;"
      },
      {
        "name": "declare_field",
        "desc": "(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        9,
        10
      ],
      "str": [
        "$cglib_read_",
        "$cglib_write_",
        "(",
        "()",
        ")V",
        "getInterceptFieldCallback",
        "org.springframework.cglib.transform.impl.InterceptFieldEnabled",
        "setInterceptFieldCallback"
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.InterceptFieldTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        180,
        181
      ]
    },
    "parents": [
      "org.springframework.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.UndeclaredThrowableStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "transform",
        "desc": "(Lorg/springframework/cglib/core/ClassGenerator;)Lorg/springframework/cglib/core/ClassGenerator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.DefaultGeneratorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.UndeclaredThrowableStrategy$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        36
      ],
      "char": [
        36
      ],
      "short": [
        36
      ],
      "int": [
        36
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.transform.MethodFilter"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.UndeclaredThrowableTransformer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "begin_method",
        "desc": "(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.cglib.transform.ClassEmitterTransformer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.transform.impl.UndeclaredThrowableTransformer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.cglib.core.CodeEmitter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.cglib.util.SorterTemplate"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$ByteComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$ComparatorComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Object;Ljava/util/Comparator;)V"
      },
      {
        "name": "compare",
        "desc": "(II)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$Comparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$DoubleComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([D)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$FloatComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([F)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$Generator",
    "setters": [
      {
        "name": "setArrays",
        "desc": "([Ljava/lang/Object;)V",
        "field": "arrays"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/util/ParallelSorter;"
      },
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setArrays",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$IntComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([I)V"
      },
      {
        "name": "compare",
        "desc": "(II)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$LongComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([J)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$ObjectComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorter$ShortComparer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(II)I"
      },
      {
        "name": "<init>",
        "desc": "([S)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.util.ParallelSorter$Comparer"
    ],
    "outerClass": "org.springframework.cglib.util.ParallelSorter",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.ParallelSorterEmitter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/asm/ClassVisitor;Ljava/lang/String;[Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "Object[]",
        "newInstance"
      ]
    },
    "parents": [
      "org.springframework.cglib.core.ClassEmitter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.SorterTemplate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        7,
        12
      ],
      "short": [
        7,
        12
      ],
      "int": [
        1,
        2,
        7,
        12
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.StringSwitcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.StringSwitcher$Generator",
    "setters": [
      {
        "name": "setStrings",
        "desc": "([Ljava/lang/String;)V",
        "field": "strings"
      },
      {
        "name": "setInts",
        "desc": "([I)V",
        "field": "ints"
      },
      {
        "name": "setFixedInput",
        "desc": "(Z)V",
        "field": "fixedInput"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "generateClass",
        "desc": "(Lorg/springframework/asm/ClassVisitor;)V"
      },
      {
        "name": "setFixedInput",
        "desc": "(Z)V"
      },
      {
        "name": "create",
        "desc": "()Lorg/springframework/cglib/util/StringSwitcher;"
      },
      {
        "name": "nextInstance",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setStrings",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "getDefaultClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "setInts",
        "desc": "([I)V"
      },
      {
        "name": "firstInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.springframework.cglib.core.AbstractClassGenerator"
    ],
    "outerClass": "org.springframework.cglib.util.StringSwitcher",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.StringSwitcher$Generator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.cglib.core.ObjectSwitchCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.cglib.util.StringSwitcher$StringSwitcherKey",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.cglib.util.StringSwitcher",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.AliasRegistry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.AttributeAccessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.AttributeAccessorSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.AttributeAccessor",
      "java.io.Serializable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.BridgeMethodResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findBridgedMethod",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "isBridgeMethodFor",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;)Z"
      },
      {
        "name": "isVisibilityBridgeMethodPair",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.CollectionFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createCollection",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/util/Collection;"
      },
      {
        "name": "createMap",
        "desc": "(Ljava/lang/Class;I)Ljava/util/Map;"
      },
      {
        "name": "isApproximableMapType",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "createApproximateMap",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Map;"
      },
      {
        "name": "createCollection",
        "desc": "(Ljava/lang/Class;I)Ljava/util/Collection;"
      },
      {
        "name": "createApproximateCollection",
        "desc": "(Ljava/lang/Object;I)Ljava/util/Collection;"
      },
      {
        "name": "isApproximableCollectionType",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "createStringAdaptingProperties",
        "desc": "()Ljava/util/Properties;"
      },
      {
        "name": "createMap",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/util/Map;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.CollectionFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.Properties"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ConfigurableObjectInputStream",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFallbackClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "resolveClass",
        "desc": "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;"
      },
      {
        "name": "resolveFallbackIfPossible",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassNotFoundException;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/ClassLoader;Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "resolveProxyClass",
        "desc": "([Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "getFallbackClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.Constants",
    "setters": [],
    "getters": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getFieldCache",
        "desc": "()Ljava/util/Map;",
        "field": "fieldCache"
      }
    ],
    "observers": [
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getFieldCache",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "propertyToConstantNamePrefix",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "asNumber",
        "desc": "(Ljava/lang/String;)Ljava/lang/Number;"
      },
      {
        "name": "getFieldCache",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getValuesForSuffix",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "toCode",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "asString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getValuesForProperty",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "asObject",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "toCodeForSuffix",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getNamesForSuffix",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "toCodeForProperty",
        "desc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getNamesForProperty",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "getNames",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "getValues",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.Constants$ConstantException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.IllegalArgumentException"
    ],
    "outerClass": "org.springframework.core.Constants",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.Conventions",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getVariableNameForReturnType",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/String;"
      },
      {
        "name": "getVariableNameForReturnType",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "getVariableName",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "getVariableNameForParameter",
        "desc": "(Lorg/springframework/core/MethodParameter;)Ljava/lang/String;"
      },
      {
        "name": "getQualifiedAttributeName",
        "desc": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getVariableNameForReturnType",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "attributeNameToPropertyName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        36,
        45
      ],
      "char": [
        36,
        45
      ],
      "short": [
        36,
        45
      ],
      "int": [
        -1,
        0,
        1,
        36,
        45
      ],
      "str": [
        "",
        "-"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.DecoratingClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        8
      ]
    },
    "parents": [
      "java.lang.ClassLoader"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.DecoratingProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.DefaultParameterNameDiscoverer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.PrioritizedParameterNameDiscoverer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ExceptionDepthComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "findClosestMatch",
        "desc": "(Ljava/util/Collection;Ljava/lang/Throwable;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.GenericTypeResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resolveReturnTypeArgument",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "resolveType",
        "desc": "(Ljava/lang/reflect/Type;Ljava/util/Map;)Ljava/lang/Class;"
      },
      {
        "name": "resolveType",
        "desc": "(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "getTypeVariableMap",
        "desc": "(Ljava/lang/Class;)Ljava/util/Map;"
      },
      {
        "name": "resolveParameterType",
        "desc": "(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "resolveTypeArguments",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "resolveReturnType",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "resolveTypeArgument",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.GenericTypeResolver$TypeVariableMapVariableResolver",
    "setters": [],
    "getters": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;",
        "field": "typeVariableMap"
      }
    ],
    "observers": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.ResolvableType$VariableResolver"
    ],
    "outerClass": "org.springframework.core.GenericTypeResolver",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.GraalDetector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.InfrastructureProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.KotlinDetector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "kotlin.reflect.full.KClasses"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.KotlinReflectionParameterNameDiscoverer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getParameterNames",
        "desc": "(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;"
      },
      {
        "name": "getParameterNames",
        "desc": "(Ljava/lang/reflect/Method;)[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.ParameterNameDiscoverer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.LocalVariableTableParameterNameDiscoverer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getParameterNames",
        "desc": "(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;"
      },
      {
        "name": "getParameterNames",
        "desc": "(Ljava/lang/reflect/Method;)[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        32
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.ParameterNameDiscoverer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor",
    "setters": [
      {
        "name": "visitLocalVariable",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V",
        "field": "hasLvtInfo"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        458752
      ],
      "str": [
        "<init>"
      ]
    },
    "parents": [
      "org.springframework.asm.MethodVisitor"
    ],
    "outerClass": "org.springframework.core.LocalVariableTableParameterNameDiscoverer",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        8,
        64
      ],
      "char": [
        64
      ],
      "short": [
        8,
        64,
        4096
      ],
      "int": [
        8,
        64,
        4096,
        458752
      ],
      "str": [
        "<clinit>"
      ]
    },
    "parents": [
      "org.springframework.asm.ClassVisitor"
    ],
    "outerClass": "org.springframework.core.LocalVariableTableParameterNameDiscoverer",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.MethodClassKey",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Class;)V"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/springframework/core/MethodClassKey;)I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.MethodIntrospector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "selectMethods",
        "desc": "(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodFilter;)Ljava/util/Set;"
      },
      {
        "name": "selectInvocableMethod",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;"
      },
      {
        "name": "selectMethods",
        "desc": "(Ljava/lang/Class;Lorg/springframework/core/MethodIntrospector$MetadataLookup;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.MethodIntrospector$MetadataLookup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.MethodIntrospector",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.MethodParameter",
    "setters": [
      {
        "name": "initParameterNameDiscovery",
        "desc": "(Lorg/springframework/core/ParameterNameDiscoverer;)V",
        "field": "parameterNameDiscoverer"
      }
    ],
    "getters": [
      {
        "name": "getParameterIndex",
        "desc": "()I",
        "field": "parameterIndex"
      },
      {
        "name": "getNestingLevel",
        "desc": "()I",
        "field": "nestingLevel"
      },
      {
        "name": "getAnnotatedElement",
        "desc": "()Ljava/lang/reflect/AnnotatedElement;",
        "field": "executable"
      },
      {
        "name": "getMember",
        "desc": "()Ljava/lang/reflect/Member;",
        "field": "executable"
      },
      {
        "name": "getExecutable",
        "desc": "()Ljava/lang/reflect/Executable;",
        "field": "executable"
      }
    ],
    "observers": [
      {
        "name": "getParameter",
        "desc": "()Ljava/lang/reflect/Parameter;"
      },
      {
        "name": "getTypeIndexForCurrentLevel",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getGenericParameterType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotatedElement",
        "desc": "()Ljava/lang/reflect/AnnotatedElement;"
      },
      {
        "name": "getNestedGenericParameterType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getNestedParameterType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getNestingLevel",
        "desc": "()I"
      },
      {
        "name": "getParameterAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getExecutable",
        "desc": "()Ljava/lang/reflect/Executable;"
      },
      {
        "name": "isOptional",
        "desc": "()Z"
      },
      {
        "name": "getMethodAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getContainingClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getParameterType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getParameterName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getMember",
        "desc": "()Ljava/lang/reflect/Member;"
      },
      {
        "name": "hasParameterAnnotations",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getParameter",
        "desc": "()Ljava/lang/reflect/Parameter;"
      },
      {
        "name": "forParameter",
        "desc": "(Ljava/lang/reflect/Parameter;)Lorg/springframework/core/MethodParameter;"
      },
      {
        "name": "clone",
        "desc": "()Lorg/springframework/core/MethodParameter;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/MethodParameter;)V"
      },
      {
        "name": "getAnnotatedElement",
        "desc": "()Ljava/lang/reflect/AnnotatedElement;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;I)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "nestedIfOptional",
        "desc": "()Lorg/springframework/core/MethodParameter;"
      },
      {
        "name": "getNestedParameterType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getExecutable",
        "desc": "()Ljava/lang/reflect/Executable;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Constructor;II)V"
      },
      {
        "name": "hasParameterAnnotation",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "getContainingClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;II)V"
      },
      {
        "name": "setContainingClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "findParameterIndex",
        "desc": "(Ljava/lang/reflect/Parameter;)I"
      },
      {
        "name": "increaseNestingLevel",
        "desc": "()V"
      },
      {
        "name": "getParameterName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "forExecutable",
        "desc": "(Ljava/lang/reflect/Executable;I)Lorg/springframework/core/MethodParameter;"
      },
      {
        "name": "hasMethodAnnotation",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "adaptAnnotation",
        "desc": "(Ljava/lang/annotation/Annotation;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "setParameterType",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "hasParameterAnnotations",
        "desc": "()Z"
      },
      {
        "name": "decreaseNestingLevel",
        "desc": "()V"
      },
      {
        "name": "getParameterAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getTypeIndexForCurrentLevel",
        "desc": "()Ljava/lang/Integer;"
      },
      {
        "name": "getGenericParameterType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTypeIndexForLevel",
        "desc": "(I)Ljava/lang/Integer;"
      },
      {
        "name": "getMethodAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "forMethodOrConstructor",
        "desc": "(Ljava/lang/Object;I)Lorg/springframework/core/MethodParameter;"
      },
      {
        "name": "getNestedGenericParameterType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getConstructor",
        "desc": "()Ljava/lang/reflect/Constructor;"
      },
      {
        "name": "getNestingLevel",
        "desc": "()I"
      },
      {
        "name": "setTypeIndexForCurrentLevel",
        "desc": "(I)V"
      },
      {
        "name": "getParameterAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "isOptional",
        "desc": "()Z"
      },
      {
        "name": "getMethodAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getParameterIndex",
        "desc": "()I"
      },
      {
        "name": "getParameterType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "nested",
        "desc": "()Lorg/springframework/core/MethodParameter;"
      },
      {
        "name": "initParameterNameDiscovery",
        "desc": "(Lorg/springframework/core/ParameterNameDiscoverer;)V"
      },
      {
        "name": "adaptAnnotationArray",
        "desc": "([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getMember",
        "desc": "()Ljava/lang/reflect/Member;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Constructor;I)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        2,
        4
      ],
      "str": [
        "Nullable"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.MethodParameter$KotlinDelegate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.MethodParameter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.NamedInheritableThreadLocal",
    "setters": [],
    "getters": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.InheritableThreadLocal"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.NamedThreadLocal",
    "setters": [],
    "getters": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.ThreadLocal"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.NestedCheckedException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMostSpecificCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRootCause",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Exception"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.NestedExceptionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        64
      ],
      "char": [
        64
      ],
      "short": [
        64
      ],
      "int": [
        64
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.NestedIOException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.io.IOException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.NestedRuntimeException",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getMostSpecificCause",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRootCause",
        "desc": "()Ljava/lang/Throwable;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.OrderComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getOrder",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "getPriority",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Integer;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "sort",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "findOrder",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Integer;"
      },
      {
        "name": "withSourceProvider",
        "desc": "(Lorg/springframework/core/OrderComparator$OrderSourceProvider;)Ljava/util/Comparator;"
      },
      {
        "name": "sort",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "sortIfNecessary",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.OrderComparator$OrderSourceProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.OrderComparator",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.Ordered",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.OverridingClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "isEligibleForOverriding",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "loadClassForOverriding",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "openStreamForClass",
        "desc": "(Ljava/lang/String;)Ljava/io/InputStream;"
      },
      {
        "name": "loadClass",
        "desc": "(Ljava/lang/String;Z)Ljava/lang/Class;"
      },
      {
        "name": "loadClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "loadBytesForClass",
        "desc": "(Ljava/lang/String;)[B"
      },
      {
        "name": "transformIfNecessary",
        "desc": "(Ljava/lang/String;[B)[B"
      }
    ],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        0,
        6
      ],
      "str": [
        "]",
        "net.sf.cglib.",
        "org.aspectj."
      ]
    },
    "parents": [
      "org.springframework.core.DecoratingClassLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ParameterNameDiscoverer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ParameterizedTypeReference",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "type"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ParameterizedTypeReference$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.ParameterizedTypeReference"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.PrioritizedParameterNameDiscoverer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addDiscoverer",
        "desc": "(Lorg/springframework/core/ParameterNameDiscoverer;)V"
      },
      {
        "name": "getParameterNames",
        "desc": "(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;"
      },
      {
        "name": "getParameterNames",
        "desc": "(Ljava/lang/reflect/Method;)[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.ParameterNameDiscoverer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.PriorityOrdered",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.Ordered"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveAdapter",
    "setters": [],
    "getters": [
      {
        "name": "getDescriptor",
        "desc": "()Lorg/springframework/core/ReactiveTypeDescriptor;",
        "field": "descriptor"
      }
    ],
    "observers": [
      {
        "name": "isNoValue",
        "desc": "()Z"
      },
      {
        "name": "getDescriptor",
        "desc": "()Lorg/springframework/core/ReactiveTypeDescriptor;"
      },
      {
        "name": "getReactiveType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "isMultiValue",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isNoValue",
        "desc": "()Z"
      },
      {
        "name": "supportsEmpty",
        "desc": "()Z"
      },
      {
        "name": "getDescriptor",
        "desc": "()Lorg/springframework/core/ReactiveTypeDescriptor;"
      },
      {
        "name": "getReactiveType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toPublisher",
        "desc": "(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;"
      },
      {
        "name": "fromPublisher",
        "desc": "(Lorg/reactivestreams/Publisher;)Ljava/lang/Object;"
      },
      {
        "name": "isMultiValue",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveAdapterRegistry",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasAdapters",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "registerReactiveType",
        "desc": "(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V"
      },
      {
        "name": "getSharedInstance",
        "desc": "()Lorg/springframework/core/ReactiveAdapterRegistry;"
      },
      {
        "name": "getAdapter",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/ReactiveAdapter;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasAdapters",
        "desc": "()Z"
      },
      {
        "name": "getAdapter",
        "desc": "(Ljava/lang/Class;Ljava/lang/Object;)Lorg/springframework/core/ReactiveAdapter;"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        0,
        1,
        32
      ],
      "str": [
        "io.reactivex.Flowable",
        "java.util.concurrent.Flow.Publisher",
        "reactor.core.publisher.Flux",
        "rx.Observable",
        "rx.RxReactiveStreams"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveAdapterRegistry$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveAdapterRegistry$ReactorAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.ReactiveAdapter"
    ],
    "outerClass": "org.springframework.core.ReactiveAdapterRegistry",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveAdapterRegistry$ReactorJdkFlowAdapterRegistrar",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.ReactiveAdapterRegistry",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveAdapterRegistry$ReactorRegistrar",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.ReactiveAdapterRegistry",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveAdapterRegistry$RxJava1Registrar",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.ReactiveAdapterRegistry",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveAdapterRegistry$RxJava2Registrar",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.ReactiveAdapterRegistry",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ReactiveTypeDescriptor",
    "setters": [],
    "getters": [
      {
        "name": "isNoValue",
        "desc": "()Z",
        "field": "noValue"
      },
      {
        "name": "getReactiveType",
        "desc": "()Ljava/lang/Class;",
        "field": "reactiveType"
      },
      {
        "name": "isMultiValue",
        "desc": "()Z",
        "field": "multiValue"
      }
    ],
    "observers": [
      {
        "name": "isNoValue",
        "desc": "()Z"
      },
      {
        "name": "getEmptyValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getReactiveType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "isMultiValue",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "multiValue",
        "desc": "(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;"
      },
      {
        "name": "isNoValue",
        "desc": "()Z"
      },
      {
        "name": "getEmptyValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "supportsEmpty",
        "desc": "()Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "singleRequiredValue",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/ReactiveTypeDescriptor;"
      },
      {
        "name": "noValue",
        "desc": "(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;"
      },
      {
        "name": "getReactiveType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "isMultiValue",
        "desc": "()Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "singleOptionalValue",
        "desc": "(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRawClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getGenerics",
        "desc": "()[Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getComponentType",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getSuperType",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "hasGenerics",
        "desc": "()Z"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isEntirelyUnresolvable",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "asCollection",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getInterfaces",
        "desc": "()[Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forMethodParameter",
        "desc": "(Ljava/lang/reflect/Method;I)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forMethodParameter",
        "desc": "(Lorg/springframework/core/MethodParameter;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forType",
        "desc": "(Ljava/lang/reflect/Type;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forInstance",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "resolveMethodParameter",
        "desc": "(Lorg/springframework/core/MethodParameter;)V"
      },
      {
        "name": "toClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "forClass",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forClassWithGenerics",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "asVariableResolver",
        "desc": "()Lorg/springframework/core/ResolvableType$VariableResolver;"
      },
      {
        "name": "forField",
        "desc": "(Ljava/lang/reflect/Field;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getNested",
        "desc": "(ILjava/util/Map;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "resolveType",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forType",
        "desc": "(Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "isInstance",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "hasUnresolvableGenerics",
        "desc": "()Z"
      },
      {
        "name": "getComponentType",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forMethodParameter",
        "desc": "(Lorg/springframework/core/MethodParameter;Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forType",
        "desc": "(Ljava/lang/reflect/Type;Lorg/springframework/core/ResolvableType$VariableResolver;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "forType",
        "desc": "(Ljava/lang/reflect/Type;Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;Lorg/springframework/core/ResolvableType$VariableResolver;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "hasGenerics",
        "desc": "()Z"
      },
      {
        "name": "forMethodParameter",
        "desc": "(Ljava/lang/reflect/Method;ILjava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forConstructorParameter",
        "desc": "(Ljava/lang/reflect/Constructor;ILjava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forClassWithGenerics",
        "desc": "(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "resolveGenerics",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "forClass",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "as",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "clearCache",
        "desc": "()V"
      },
      {
        "name": "getGeneric",
        "desc": "([I)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getGenerics",
        "desc": "()[Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forField",
        "desc": "(Ljava/lang/reflect/Field;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forMethodParameter",
        "desc": "(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forField",
        "desc": "(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forMethodReturnType",
        "desc": "(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "resolveGeneric",
        "desc": "([I)Ljava/lang/Class;"
      },
      {
        "name": "resolveGenerics",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "forRawClass",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "asMap",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getRawClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getSuperType",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "resolve",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "forConstructorParameter",
        "desc": "(Ljava/lang/reflect/Constructor;I)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forMethodReturnType",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "isAssignableFrom",
        "desc": "(Lorg/springframework/core/ResolvableType;)Z"
      },
      {
        "name": "forField",
        "desc": "(Ljava/lang/reflect/Field;ILjava/lang/Class;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "isArray",
        "desc": "()Z"
      },
      {
        "name": "resolve",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "forField",
        "desc": "(Ljava/lang/reflect/Field;I)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "forArrayComponent",
        "desc": "(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "forType",
        "desc": "(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getNested",
        "desc": "(I)Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isEntirelyUnresolvable",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        -1,
        0,
        1,
        2,
        256
      ],
      "str": [
        "?"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getGenerics",
        "desc": "()[Lorg/springframework/core/ResolvableType;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.ResolvableType"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType$DefaultVariableResolver",
    "setters": [],
    "getters": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;",
        "field": "this$0"
      }
    ],
    "observers": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.ResolvableType$VariableResolver"
    ],
    "outerClass": "org.springframework.core.ResolvableType",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType$EmptyType",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "readResolve",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "readResolve",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.Type",
      "java.io.Serializable"
    ],
    "outerClass": "org.springframework.core.ResolvableType",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType$SyntheticParameterizedType",
    "setters": [],
    "getters": [
      {
        "name": "getActualTypeArguments",
        "desc": "()[Ljava/lang/reflect/Type;",
        "field": "typeArguments"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;",
        "field": "rawType"
      }
    ],
    "observers": [
      {
        "name": "getOwnerType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRawType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getTypeName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getActualTypeArguments",
        "desc": "()[Ljava/lang/reflect/Type;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.ParameterizedType",
      "java.io.Serializable"
    ],
    "outerClass": "org.springframework.core.ResolvableType",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType$TypeVariablesVariableResolver",
    "setters": [],
    "getters": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;",
        "field": "generics"
      }
    ],
    "observers": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.ResolvableType$VariableResolver"
    ],
    "outerClass": "org.springframework.core.ResolvableType",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType$VariableResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "outerClass": "org.springframework.core.ResolvableType",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType$WildcardBounds",
    "setters": [],
    "getters": [
      {
        "name": "getBounds",
        "desc": "()[Lorg/springframework/core/ResolvableType;",
        "field": "bounds"
      }
    ],
    "observers": [
      {
        "name": "getBounds",
        "desc": "()[Lorg/springframework/core/ResolvableType;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.ResolvableType",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableType$WildcardBounds$Kind",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "LOWER",
        "UPPER"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.core.ResolvableType$WildcardBounds",
    "access": 16408,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.ResolvableTypeProvider",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SerializableTypeWrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "unwrap",
        "desc": "(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "forTypeProvider",
        "desc": "(Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "forField",
        "desc": "(Ljava/lang/reflect/Field;)Ljava/lang/reflect/Type;"
      },
      {
        "name": "forMethodParameter",
        "desc": "(Lorg/springframework/core/MethodParameter;)Ljava/lang/reflect/Type;"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        0,
        2,
        3,
        256
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SerializableTypeWrapper$FieldTypeProvider",
    "setters": [],
    "getters": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;",
        "field": "field"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Field;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.SerializableTypeWrapper$TypeProvider"
    ],
    "outerClass": "org.springframework.core.SerializableTypeWrapper",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;Ljava/lang/reflect/Method;I)V"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.SerializableTypeWrapper$TypeProvider"
    ],
    "outerClass": "org.springframework.core.SerializableTypeWrapper",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SerializableTypeWrapper$MethodParameterTypeProvider",
    "setters": [],
    "getters": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;",
        "field": "methodParameter"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/MethodParameter;)V"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/reflect/Type;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.SerializableTypeWrapper$TypeProvider"
    ],
    "outerClass": "org.springframework.core.SerializableTypeWrapper",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.SerializableTypeWrapper",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SerializableTypeWrapper$TypeProvider",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "outerClass": "org.springframework.core.SerializableTypeWrapper",
    "access": 1544,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SerializableTypeWrapper$TypeProxyInvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ],
      "str": [
        "equals",
        "getTypeProvider",
        "hashCode"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.InvocationHandler",
      "java.io.Serializable"
    ],
    "outerClass": "org.springframework.core.SerializableTypeWrapper",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SimpleAliasRegistry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "registerAlias",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getAliases",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "checkForAliasCircle",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hasAlias",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "isAlias",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "allowAliasOverriding",
        "desc": "()Z"
      },
      {
        "name": "removeAlias",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "resolveAliases",
        "desc": "(Lorg/springframework/util/StringValueResolver;)V"
      },
      {
        "name": "canonicalName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        16
      ],
      "str": [
        "'."
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.AliasRegistry"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SmartClassLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SpringProperties",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getFlag",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "setProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "setFlag",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.SpringVersion",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.StandardReflectionParameterNameDiscoverer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getParameterNames",
        "desc": "(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;"
      },
      {
        "name": "getParameterNames",
        "desc": "(Ljava/lang/reflect/Method;)[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.ParameterNameDiscoverer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AbstractAliasAwareAnnotationAttributeExtractor",
    "setters": [],
    "getters": [
      {
        "name": "getAnnotatedElement",
        "desc": "()Ljava/lang/Object;",
        "field": "annotatedElement"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;",
        "field": "source"
      },
      {
        "name": "getAnnotationType",
        "desc": "()Ljava/lang/Class;",
        "field": "annotationType"
      }
    ],
    "observers": [
      {
        "name": "getAnnotationType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotatedElement",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6
      ],
      "short": [
        6
      ],
      "int": [
        6
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.annotation.AnnotationAttributeExtractor"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AliasFor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils$1",
    "setters": [],
    "getters": [
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;",
        "field": "val$annotations"
      },
      {
        "name": "getDeclaredAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;",
        "field": "val$annotations"
      }
    ],
    "observers": [
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getDeclaredAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.AnnotatedElement"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.annotation.AnnotatedElementUtils$SimpleAnnotationProcessor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.annotation.AnnotatedElementUtils$SimpleAnnotationProcessor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.annotation.AnnotatedElementUtils$SimpleAnnotationProcessor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils$AlwaysTrueBooleanAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "process",
        "desc": "(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/annotation/Annotation;I)Ljava/lang/Boolean;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.annotation.AnnotatedElementUtils$SimpleAnnotationProcessor"
    ],
    "outerClass": "org.springframework.core.annotation.AnnotatedElementUtils",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor",
    "setters": [],
    "getters": [
      {
        "name": "getAggregatedResults",
        "desc": "()Ljava/util/List;",
        "field": "aggregatedResults"
      }
    ],
    "observers": [
      {
        "name": "getAggregatedResults",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "aggregates",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "value"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.annotation.AnnotatedElementUtils$Processor"
    ],
    "outerClass": "org.springframework.core.annotation.AnnotatedElementUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils$Processor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.annotation.AnnotatedElementUtils",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotatedElementUtils$SimpleAnnotationProcessor",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAggregatedResults",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "aggregates",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.annotation.AnnotatedElementUtils$Processor"
    ],
    "outerClass": "org.springframework.core.annotation.AnnotatedElementUtils",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationAttributeExtractor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1536,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationAttributes",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getNumber",
        "desc": "(Ljava/lang/String;)Ljava/lang/Number;"
      },
      {
        "name": "fromMap",
        "desc": "(Ljava/util/Map;)Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotationArray",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/annotation/AnnotationAttributes;)V"
      },
      {
        "name": "getString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "annotationType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotationArray",
        "desc": "(Ljava/lang/String;)[Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "putIfAbsent",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getBoolean",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getEnum",
        "desc": "(Ljava/lang/String;)Ljava/lang/Enum;"
      },
      {
        "name": "getStringArray",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "getClassArray",
        "desc": "(Ljava/lang/String;)[Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2,
        3
      ],
      "str": [
        "unknown",
        "{"
      ]
    },
    "parents": [
      "java.util.LinkedHashMap"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationAwareOrderComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getPriority",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Integer;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "sort",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "findOrder",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Integer;"
      },
      {
        "name": "sort",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "sortIfNecessary",
        "desc": "(Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.springframework.core.OrderComparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationConfigurationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.NestedRuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        0,
        1,
        5,
        256
      ],
      "str": [
        "annotationType",
        "java",
        "java.lang.",
        "java.lang.annotation",
        "org.springframework.lang."
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationUtils$AliasDescriptor",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAttributeAliasNames",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        3
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.annotation.AnnotationUtils",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationUtils$AnnotationCacheKey",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable"
    ],
    "outerClass": "org.springframework.core.annotation.AnnotationUtils",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationUtils$AnnotationCollector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.annotation.AnnotationUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.AnnotationUtils$DefaultValueHolder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.annotation.AnnotationUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.DefaultAnnotationAttributeExtractor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getRawAttributeValue",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/annotation/Annotation;Ljava/lang/Object;)V"
      },
      {
        "name": "getRawAttributeValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.annotation.AbstractAliasAwareAnnotationAttributeExtractor"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.MapAnnotationAttributeExtractor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/reflect/AnnotatedElement;)V"
      },
      {
        "name": "getRawAttributeValue",
        "desc": "(Ljava/lang/reflect/Method;)Ljava/lang/Object;"
      },
      {
        "name": "getRawAttributeValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.core.annotation.AbstractAliasAwareAnnotationAttributeExtractor"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.Order",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.OrderUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        64
      ],
      "char": [
        64
      ],
      "short": [
        64
      ],
      "int": [
        64
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.SynthesizedAnnotation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.SynthesizedAnnotationInvocationHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/annotation/AnnotationAttributeExtractor;)V"
      },
      {
        "name": "invoke",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        1,
        8
      ],
      "str": [
        "@"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.InvocationHandler"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.annotation.SynthesizingMethodParameter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;II)V"
      },
      {
        "name": "forExecutable",
        "desc": "(Ljava/lang/reflect/Executable;I)Lorg/springframework/core/annotation/SynthesizingMethodParameter;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;I)V"
      },
      {
        "name": "adaptAnnotationArray",
        "desc": "([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/annotation/SynthesizingMethodParameter;)V"
      },
      {
        "name": "adaptAnnotation",
        "desc": "(Ljava/lang/annotation/Annotation;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "clone",
        "desc": "()Lorg/springframework/core/annotation/SynthesizingMethodParameter;"
      },
      {
        "name": "forParameter",
        "desc": "(Ljava/lang/reflect/Parameter;)Lorg/springframework/core/annotation/SynthesizingMethodParameter;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Constructor;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Constructor;II)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.MethodParameter"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.AbstractDataBufferDecoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.codec.AbstractDecoder"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.AbstractDecoder",
    "setters": [
      {
        "name": "setLogger",
        "desc": "(Lorg/apache/commons/logging/Log;)V",
        "field": "logger"
      }
    ],
    "getters": [
      {
        "name": "getDecodableMimeTypes",
        "desc": "()Ljava/util/List;",
        "field": "decodableMimeTypes"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/apache/commons/logging/Log;",
        "field": "logger"
      }
    ],
    "observers": [
      {
        "name": "getDecodableMimeTypes",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/apache/commons/logging/Log;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.codec.Decoder"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.AbstractEncoder",
    "setters": [
      {
        "name": "setLogger",
        "desc": "(Lorg/apache/commons/logging/Log;)V",
        "field": "logger"
      }
    ],
    "getters": [
      {
        "name": "getEncodableMimeTypes",
        "desc": "()Ljava/util/List;",
        "field": "encodableMimeTypes"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/apache/commons/logging/Log;",
        "field": "logger"
      }
    ],
    "observers": [
      {
        "name": "getEncodableMimeTypes",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getLogger",
        "desc": "()Lorg/apache/commons/logging/Log;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.codec.Encoder"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.AbstractSingleValueEncoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.codec.AbstractEncoder"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.ByteArrayDecoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "canDecode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "decodeDataBuffer",
        "desc": "(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)[B"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractDataBufferDecoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.ByteArrayEncoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "encode",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "canEncode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractEncoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.ByteBufferDecoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "canDecode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "decodeDataBuffer",
        "desc": "(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/nio/ByteBuffer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractDataBufferDecoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.ByteBufferEncoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "encode",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "canEncode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractEncoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.CharSequenceEncoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "textPlainOnly",
        "desc": "()Lorg/springframework/core/codec/CharSequenceEncoder;"
      },
      {
        "name": "allMimeTypes",
        "desc": "()Lorg/springframework/core/codec/CharSequenceEncoder;"
      },
      {
        "name": "encode",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "canEncode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "plain",
        "text"
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractEncoder"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.CodecException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.NestedRuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.DataBufferDecoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "canDecode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "decode",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "decodeDataBuffer",
        "desc": "(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractDataBufferDecoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.DataBufferEncoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "encode",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "canEncode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractEncoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.Decoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.DecodingException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.codec.CodecException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.Encoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.EncodingException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.codec.CodecException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.Hints",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "'",
        ".PREFIX",
        ".SUPPRESS_LOGGING"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.ResourceDecoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "canDecode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "decodeDataBuffer",
        "desc": "(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "decode",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractDataBufferDecoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.ResourceEncoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "canEncode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      },
      {
        "name": "encode",
        "desc": "(Lorg/springframework/core/io/Resource;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      }
    ],
    "dictionary": {
      "short": [
        4096
      ],
      "int": [
        0,
        1,
        4096
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractSingleValueEncoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.ResourceRegionEncoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "encode",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "canEncode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      }
    ],
    "dictionary": {
      "short": [
        4096
      ],
      "int": [
        0,
        1,
        4096
      ],
      "str": [
        ".boundaryString"
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractEncoder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.codec.StringDecoder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "allMimeTypes",
        "desc": "()Lorg/springframework/core/codec/StringDecoder;"
      },
      {
        "name": "decodeDataBuffer",
        "desc": "(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/String;"
      },
      {
        "name": "canDecode",
        "desc": "(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z"
      },
      {
        "name": "allMimeTypes",
        "desc": "(Ljava/util/List;Z)Lorg/springframework/core/codec/StringDecoder;"
      },
      {
        "name": "textPlainOnly",
        "desc": "()Lorg/springframework/core/codec/StringDecoder;"
      },
      {
        "name": "textPlainOnly",
        "desc": "(Ljava/util/List;Z)Lorg/springframework/core/codec/StringDecoder;"
      },
      {
        "name": "decode",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "allMimeTypes",
        "desc": "(Z)Lorg/springframework/core/codec/StringDecoder;"
      },
      {
        "name": "textPlainOnly",
        "desc": "(Z)Lorg/springframework/core/codec/StringDecoder;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "plain",
        "text"
      ]
    },
    "parents": [
      "org.springframework.core.codec.AbstractDataBufferDecoder"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.ConversionException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.NestedRuntimeException"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.ConversionFailedException",
    "setters": [],
    "getters": [
      {
        "name": "getTargetType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;",
        "field": "targetType"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      },
      {
        "name": "getSourceType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;",
        "field": "sourceType"
      }
    ],
    "observers": [
      {
        "name": "getTargetType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getSourceType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getTargetType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getSourceType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      }
    ],
    "dictionary": {
      "str": [
        "'"
      ]
    },
    "parents": [
      "org.springframework.core.convert.ConversionException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.ConversionService",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.ConverterNotFoundException",
    "setters": [],
    "getters": [
      {
        "name": "getSourceType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;",
        "field": "sourceType"
      },
      {
        "name": "getTargetType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;",
        "field": "targetType"
      }
    ],
    "observers": [
      {
        "name": "getTargetType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getSourceType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      }
    ],
    "testableMethods": [
      {
        "name": "getTargetType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V"
      },
      {
        "name": "getSourceType",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      }
    ],
    "dictionary": {
      "str": [
        "]"
      ]
    },
    "parents": [
      "org.springframework.core.convert.ConversionException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.Property",
    "setters": [],
    "getters": [
      {
        "name": "getMethodParameter",
        "desc": "()Lorg/springframework/core/MethodParameter;",
        "field": "methodParameter"
      },
      {
        "name": "getWriteMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "writeMethod"
      },
      {
        "name": "getObjectType",
        "desc": "()Ljava/lang/Class;",
        "field": "objectType"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getReadMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "readMethod"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getMethodParameter",
        "desc": "()Lorg/springframework/core/MethodParameter;"
      },
      {
        "name": "getObjectType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReadMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getWriteMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getMethodParameter",
        "desc": "()Lorg/springframework/core/MethodParameter;"
      },
      {
        "name": "getObjectType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReadMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/String;)V"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getWriteMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "str": [
        "get",
        "is",
        "set"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.TypeDescriptor",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;",
        "field": "type"
      },
      {
        "name": "getResolvableType",
        "desc": "()Lorg/springframework/core/ResolvableType;",
        "field": "resolvableType"
      }
    ],
    "observers": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getObjectType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isArray",
        "desc": "()Z"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "isCollection",
        "desc": "()Z"
      },
      {
        "name": "getMapKeyTypeDescriptor",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "isMap",
        "desc": "()Z"
      },
      {
        "name": "getMapValueTypeDescriptor",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getElementTypeDescriptor",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "isPrimitive",
        "desc": "()Z"
      },
      {
        "name": "getResolvableType",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "array",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/MethodParameter;)V"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "nested",
        "desc": "(Ljava/lang/reflect/Field;I)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getMapKeyTypeDescriptor",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "isMap",
        "desc": "()Z"
      },
      {
        "name": "forObject",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "hasAnnotation",
        "desc": "(Ljava/lang/Class;)Z"
      },
      {
        "name": "narrow",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "isAssignableTo",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "isPrimitive",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/Property;)V"
      },
      {
        "name": "getMapValueTypeDescriptor",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "elementTypeDescriptor",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "upcast",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getObjectType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "nested",
        "desc": "(Lorg/springframework/core/MethodParameter;I)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "isArray",
        "desc": "()Z"
      },
      {
        "name": "map",
        "desc": "(Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "isCollection",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V"
      },
      {
        "name": "nested",
        "desc": "(Lorg/springframework/core/convert/Property;I)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "valueOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Field;)V"
      },
      {
        "name": "getMapKeyTypeDescriptor",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "collection",
        "desc": "(Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getMapValueTypeDescriptor",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getElementTypeDescriptor",
        "desc": "()Lorg/springframework/core/convert/TypeDescriptor;"
      },
      {
        "name": "getResolvableType",
        "desc": "()Lorg/springframework/core/ResolvableType;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        -1,
        0,
        1,
        32
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.TypeDescriptor$AnnotatedElementAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "getDeclaredAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.AnnotatedElement",
      "java.io.Serializable"
    ],
    "outerClass": "org.springframework.core.convert.TypeDescriptor",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.ConditionalConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.ConditionalGenericConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.GenericConverter",
      "org.springframework.core.convert.converter.ConditionalConverter"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.Converter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.ConverterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.ConverterRegistry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.ConvertingComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/converter/Converter;)V"
      },
      {
        "name": "mapEntryKeys",
        "desc": "(Ljava/util/Comparator;)Lorg/springframework/core/convert/converter/ConvertingComparator;"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Comparator;Lorg/springframework/core/convert/converter/Converter;)V"
      },
      {
        "name": "mapEntryValues",
        "desc": "(Ljava/util/Comparator;)Lorg/springframework/core/convert/converter/ConvertingComparator;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Comparator;Lorg/springframework/core/convert/ConversionService;Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.ConvertingComparator$ConversionServiceConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "outerClass": "org.springframework.core.convert.converter.ConvertingComparator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.GenericConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "setters": [],
    "getters": [
      {
        "name": "getSourceType",
        "desc": "()Ljava/lang/Class;",
        "field": "sourceType"
      },
      {
        "name": "getTargetType",
        "desc": "()Ljava/lang/Class;",
        "field": "targetType"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSourceType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getTargetType",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSourceType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getTargetType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.convert.converter.GenericConverter",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.AbstractConditionalEnumConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalConverter"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ArrayToArrayConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ArrayToCollectionConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ArrayToObjectConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ArrayToStringConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ByteBufferConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        4
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.CharacterToNumberFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getConverter",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConverterFactory"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "outerClass": "org.springframework.core.convert.support.CharacterToNumberFactory",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.CollectionToArrayConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.CollectionToCollectionConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.CollectionToObjectConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.CollectionToStringConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ConfigurableConversionService",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.ConversionService",
      "org.springframework.core.convert.converter.ConverterRegistry"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ConversionServiceFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "registerConverters",
        "desc": "(Ljava/util/Set;Lorg/springframework/core/convert/converter/ConverterRegistry;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ConversionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ConvertingPropertyEditorAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAsText",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getAsText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setAsText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;Lorg/springframework/core/convert/TypeDescriptor;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.beans.PropertyEditorSupport"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.DefaultConversionService",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addDefaultConverters",
        "desc": "(Lorg/springframework/core/convert/converter/ConverterRegistry;)V"
      },
      {
        "name": "getSharedInstance",
        "desc": "()Lorg/springframework/core/convert/ConversionService;"
      },
      {
        "name": "addCollectionConverters",
        "desc": "(Lorg/springframework/core/convert/converter/ConverterRegistry;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.convert.support.GenericConversionService"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.EnumToIntegerConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Ljava/lang/Enum;)Ljava/lang/Integer;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.convert.support.AbstractConditionalEnumConverter",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.EnumToStringConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Enum;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.convert.support.AbstractConditionalEnumConverter",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.FallbackObjectToStringConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.GenericConversionService",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "canConvert",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "removeConvertible",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)V"
      },
      {
        "name": "getConverter",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;"
      },
      {
        "name": "canBypassConvert",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getDefaultConverter",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;"
      },
      {
        "name": "addConverterFactory",
        "desc": "(Lorg/springframework/core/convert/converter/ConverterFactory;)V"
      },
      {
        "name": "convertNullSource",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      },
      {
        "name": "addConverter",
        "desc": "(Lorg/springframework/core/convert/converter/GenericConverter;)V"
      },
      {
        "name": "addConverter",
        "desc": "(Lorg/springframework/core/convert/converter/Converter;)V"
      },
      {
        "name": "addConverter",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/core/convert/converter/Converter;)V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      },
      {
        "name": "canConvert",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        64
      ],
      "char": [
        64
      ],
      "short": [
        64
      ],
      "int": [
        0,
        1,
        2,
        64
      ],
      "str": [
        "NO_MATCH",
        "NO_OP",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.support.ConfigurableConversionService"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.GenericConversionService$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.GenericConversionService$ConverterAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "outerClass": "org.springframework.core.convert.support.GenericConversionService",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable"
    ],
    "outerClass": "org.springframework.core.convert.support.GenericConversionService",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "outerClass": "org.springframework.core.convert.support.GenericConversionService",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.GenericConversionService$Converters",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        20,
        36
      ],
      "char": [
        36
      ],
      "short": [
        20,
        36
      ],
      "int": [
        0,
        20,
        36
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.convert.support.GenericConversionService",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.GenericConversionService$ConvertersForPair",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.convert.support.GenericConversionService",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.GenericConversionService$NoOpConverter",
    "setters": [],
    "getters": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.GenericConverter"
    ],
    "outerClass": "org.springframework.core.convert.support.GenericConversionService",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.IdToEntityConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        -1,
        0,
        1,
        46
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.IntegerToEnumConverterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getConverter",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConverterFactory"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.IntegerToEnumConverterFactory$IntegerToEnum",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "outerClass": "org.springframework.core.convert.support.IntegerToEnumConverterFactory",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.MapToMapConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.MapToMapConverter$MapEntry",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.convert.support.MapToMapConverter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.NumberToCharacterConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Number;)Ljava/lang/Character;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.NumberToNumberConverterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getConverter",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConverterFactory",
      "org.springframework.core.convert.converter.ConditionalConverter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "outerClass": "org.springframework.core.convert.support.NumberToNumberConverterFactory",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ObjectToArrayConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ObjectToCollectionConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ObjectToObjectConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "hasConversionMethodOrConstructor",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Z"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        0,
        2,
        32
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ObjectToOptionalConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        4
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ObjectToOptionalConverter$GenericTypeDescriptor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.core.convert.TypeDescriptor"
    ],
    "outerClass": "org.springframework.core.convert.support.ObjectToOptionalConverter",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ObjectToStringConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.PropertiesToStringConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/util/Properties;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        256
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StreamConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matchesToStream",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "matchesFromStream",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToArrayConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToBooleanConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      }
    ],
    "dictionary": {
      "int": [
        4
      ],
      "str": [
        "'",
        "0",
        "1",
        "false",
        "no",
        "off",
        "on",
        "true",
        "yes"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToCharacterConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/String;)Ljava/lang/Character;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToCharsetConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/String;)Ljava/nio/charset/Charset;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToCollectionConverter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/convert/ConversionService;)V"
      },
      {
        "name": "getConvertibleTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "matches",
        "desc": "(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConditionalGenericConverter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToCurrencyConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Ljava/lang/String;)Ljava/util/Currency;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToEnumConverterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getConverter",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConverterFactory"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "outerClass": "org.springframework.core.convert.support.StringToEnumConverterFactory",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToLocaleConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Ljava/lang/String;)Ljava/util/Locale;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToNumberConverterFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getConverter",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.ConverterFactory"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "outerClass": "org.springframework.core.convert.support.StringToNumberConverterFactory",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToPropertiesConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Ljava/lang/String;)Ljava/util/Properties;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToTimeZoneConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Ljava/lang/String;)Ljava/util/TimeZone;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.StringToUUIDConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/String;)Ljava/util/UUID;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ZoneIdToTimeZoneConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Ljava/time/ZoneId;)Ljava/util/TimeZone;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.convert.support.ZonedDateTimeToCalendarConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "convert",
        "desc": "(Ljava/time/ZonedDateTime;)Ljava/util/Calendar;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.AbstractEnvironment",
    "setters": [],
    "getters": [
      {
        "name": "getPropertySources",
        "desc": "()Lorg/springframework/core/env/MutablePropertySources;",
        "field": "propertySources"
      }
    ],
    "observers": [
      {
        "name": "getConversionService",
        "desc": "()Lorg/springframework/core/convert/support/ConfigurableConversionService;"
      },
      {
        "name": "getActiveProfiles",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getPropertySources",
        "desc": "()Lorg/springframework/core/env/MutablePropertySources;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReservedDefaultProfiles",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getSystemProperties",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getSystemEnvironment",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getDefaultProfiles",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        33
      ],
      "char": [
        33
      ],
      "short": [
        33
      ],
      "int": [
        0,
        1,
        33
      ],
      "str": [
        "default",
        "spring.getenv.ignore",
        "spring.profiles.active",
        "spring.profiles.default"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.env.ConfigurableEnvironment"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.AbstractEnvironment$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.ReadOnlySystemAttributesMap"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.AbstractEnvironment$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.ReadOnlySystemAttributesMap"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.AbstractPropertyResolver",
    "setters": [
      {
        "name": "setConversionService",
        "desc": "(Lorg/springframework/core/convert/support/ConfigurableConversionService;)V",
        "field": "conversionService"
      },
      {
        "name": "setIgnoreUnresolvableNestedPlaceholders",
        "desc": "(Z)V",
        "field": "ignoreUnresolvableNestedPlaceholders"
      },
      {
        "name": "resolveRequiredPlaceholders",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;",
        "field": "strictHelper"
      },
      {
        "name": "setValueSeparator",
        "desc": "(Ljava/lang/String;)V",
        "field": "valueSeparator"
      },
      {
        "name": "resolvePlaceholders",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;",
        "field": "nonStrictHelper"
      },
      {
        "name": "setPlaceholderPrefix",
        "desc": "(Ljava/lang/String;)V",
        "field": "placeholderPrefix"
      },
      {
        "name": "setPlaceholderSuffix",
        "desc": "(Ljava/lang/String;)V",
        "field": "placeholderSuffix"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getConversionService",
        "desc": "()Lorg/springframework/core/convert/support/ConfigurableConversionService;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "${",
        ":",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.env.ConfigurablePropertyResolver"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.CommandLineArgs",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOptionNames",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getNonOptionArgs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "addOptionArg",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "containsOption",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "addNonOptionArg",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getOptionNames",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getOptionValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "getNonOptionArgs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.CommandLinePropertySource",
    "setters": [
      {
        "name": "setNonOptionArgsPropertyName",
        "desc": "(Ljava/lang/String;)V",
        "field": "nonOptionArgsPropertyName"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "commandLineArgs",
        "nonOptionArgs"
      ]
    },
    "parents": [
      "org.springframework.core.env.EnumerablePropertySource"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.CompositePropertySource",
    "setters": [],
    "getters": [
      {
        "name": "getPropertySources",
        "desc": "()Ljava/util/Collection;",
        "field": "propertySources"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPropertyNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getPropertySources",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPropertyNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getPropertySources",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "addPropertySource",
        "desc": "(Lorg/springframework/core/env/PropertySource;)V"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "addFirstPropertySource",
        "desc": "(Lorg/springframework/core/env/PropertySource;)V"
      },
      {
        "name": "containsProperty",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.EnumerablePropertySource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.ConfigurableEnvironment",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.env.Environment",
      "org.springframework.core.env.ConfigurablePropertyResolver"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.ConfigurablePropertyResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.env.PropertyResolver"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.EnumerablePropertySource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.PropertySource"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.Environment",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.env.PropertyResolver"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.EnvironmentCapable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.JOptCommandLinePropertySource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPropertyNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getNonOptionArgs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljoptsimple/OptionSet;)V"
      },
      {
        "name": "getPropertyNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "containsOption",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljoptsimple/OptionSet;)V"
      },
      {
        "name": "getOptionValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "getNonOptionArgs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.CommandLinePropertySource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.MapPropertySource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPropertyNames",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Map;)V"
      },
      {
        "name": "getPropertyNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "containsProperty",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.EnumerablePropertySource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.MissingRequiredPropertiesException",
    "setters": [],
    "getters": [
      {
        "name": "getMissingRequiredProperties",
        "desc": "()Ljava/util/Set;",
        "field": "missingRequiredProperties"
      }
    ],
    "observers": [
      {
        "name": "getMissingRequiredProperties",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMissingRequiredProperties",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addMissingRequiredProperty",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.IllegalStateException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.MutablePropertySources",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "stream",
        "desc": "()Ljava/util/stream/Stream;"
      },
      {
        "name": "spliterator",
        "desc": "()Ljava/util/Spliterator;"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "removeIfPresent",
        "desc": "(Lorg/springframework/core/env/PropertySource;)V"
      },
      {
        "name": "addFirst",
        "desc": "(Lorg/springframework/core/env/PropertySource;)V"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "spliterator",
        "desc": "()Ljava/util/Spliterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;"
      },
      {
        "name": "addAfter",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V"
      },
      {
        "name": "assertLegalRelativeAddition",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V"
      },
      {
        "name": "stream",
        "desc": "()Ljava/util/stream/Stream;"
      },
      {
        "name": "precedenceOf",
        "desc": "(Lorg/springframework/core/env/PropertySource;)I"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "addBefore",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/env/PropertySources;)V"
      },
      {
        "name": "addLast",
        "desc": "(Lorg/springframework/core/env/PropertySource;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.env.PropertySources"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.Profiles",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.ProfilesParser",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "parse",
        "desc": "([Ljava/lang/String;)Lorg/springframework/core/env/Profiles;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        2,
        3,
        33,
        38,
        40,
        41,
        124
      ],
      "str": [
        "!",
        "&",
        "(",
        "()&|!",
        ")",
        "|"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.ProfilesParser$Operator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "AND",
        "OR"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.core.env.ProfilesParser",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.ProfilesParser$ParsedProfiles",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.env.Profiles"
    ],
    "outerClass": "org.springframework.core.env.ProfilesParser",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.PropertiesPropertySource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Properties;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.MapPropertySource"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.PropertyResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.PropertyResolverExtensionsKt",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "get",
        "desc": "(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.PropertySource",
    "setters": [],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;",
        "field": "source"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.PropertySource$ComparisonPropertySource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSource",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "containsProperty",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.PropertySource$StubPropertySource"
    ],
    "outerClass": "org.springframework.core.env.PropertySource",
    "access": 8,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.PropertySource$StubPropertySource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.PropertySource"
    ],
    "outerClass": "org.springframework.core.env.PropertySource",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.PropertySources",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "stream",
        "desc": "()Ljava/util/stream/Stream;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Iterable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.PropertySourcesPropertyResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "logKeyFound",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;Ljava/lang/Object;)V"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getPropertyAsRawString",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/env/PropertySources;)V"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "containsProperty",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.AbstractPropertyResolver"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.ReadOnlySystemAttributesMap",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Map"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.SimpleCommandLineArgsParser",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "parse",
        "desc": "([Ljava/lang/String;)Lorg/springframework/core/env/CommandLineArgs;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "--",
        "="
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.SimpleCommandLinePropertySource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPropertyNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getNonOptionArgs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "getPropertyNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "containsOption",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "getOptionValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "getNonOptionArgs",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.CommandLinePropertySource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.StandardEnvironment",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "customizePropertySources",
        "desc": "(Lorg/springframework/core/env/MutablePropertySources;)V"
      }
    ],
    "dictionary": {
      "str": [
        "systemEnvironment",
        "systemProperties"
      ]
    },
    "parents": [
      "org.springframework.core.env.AbstractEnvironment"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.env.SystemEnvironmentPropertySource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isSecurityManagerPresent",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Map;)V"
      },
      {
        "name": "isSecurityManagerPresent",
        "desc": "()Z"
      },
      {
        "name": "resolvePropertyName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "containsProperty",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        45,
        46,
        95
      ],
      "char": [
        45,
        46,
        95
      ],
      "short": [
        45,
        46,
        95
      ],
      "int": [
        45,
        46,
        95
      ]
    },
    "parents": [
      "org.springframework.core.env.MapPropertySource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.AbstractFileResolvingResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getFileForLastModifiedCheck",
        "desc": "()Ljava/io/File;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "short": [
        200,
        404
      ],
      "int": [
        0,
        1,
        200,
        404
      ],
      "long": [
        0
      ],
      "str": [
        "HEAD",
        "file",
        "vfs"
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractResource"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.AbstractFileResolvingResource$VfsResourceDelegate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.io.AbstractFileResolvingResource",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.AbstractResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "isFile",
        "desc": "()Z"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isOpen",
        "desc": "()Z"
      },
      {
        "name": "getFileForLastModifiedCheck",
        "desc": "()Ljava/io/File;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        -1,
        256
      ],
      "long": [
        0
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.Resource"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.ByteArrayResource",
    "setters": [],
    "getters": [
      {
        "name": "getByteArray",
        "desc": "()[B",
        "field": "byteArray"
      }
    ],
    "observers": [
      {
        "name": "getByteArray",
        "desc": "()[B"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getByteArray",
        "desc": "()[B"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "exists",
        "desc": "()Z"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      },
      {
        "name": "<init>",
        "desc": "([BLjava/lang/String;)V"
      },
      {
        "name": "contentLength",
        "desc": "()J"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.ClassPathResource",
    "setters": [],
    "getters": [
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;",
        "field": "path"
      }
    ],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "exists",
        "desc": "()Z"
      },
      {
        "name": "resolveURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "createRelative",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Class;)V"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        47
      ],
      "char": [
        47
      ],
      "short": [
        47
      ],
      "int": [
        1,
        47
      ],
      "str": [
        "/"
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractFileResolvingResource"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.ClassRelativeResourceLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getResourceByPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.io.DefaultResourceLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.ClassRelativeResourceLoader$ClassRelativeContextResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPathWithinContext",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.io.ClassPathResource",
      "org.springframework.core.io.ContextResource"
    ],
    "outerClass": "org.springframework.core.io.ClassRelativeResourceLoader",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.ContextResource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.Resource"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.DefaultResourceLoader",
    "setters": [
      {
        "name": "setClassLoader",
        "desc": "(Ljava/lang/ClassLoader;)V",
        "field": "classLoader"
      }
    ],
    "getters": [
      {
        "name": "getProtocolResolvers",
        "desc": "()Ljava/util/Collection;",
        "field": "protocolResolvers"
      }
    ],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getProtocolResolvers",
        "desc": "()Ljava/util/Collection;"
      }
    ],
    "testableMethods": [
      {
        "name": "getResourceByPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setClassLoader",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getResource",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "addProtocolResolver",
        "desc": "(Lorg/springframework/core/io/ProtocolResolver;)V"
      },
      {
        "name": "clearResourceCaches",
        "desc": "()V"
      },
      {
        "name": "getProtocolResolvers",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "getResourceCache",
        "desc": "(Ljava/lang/Class;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "int": [
        4
      ],
      "str": [
        "/",
        "classpath:"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.ResourceLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPathWithinContext",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "createRelative",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "getPathWithinContext",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.io.ClassPathResource",
      "org.springframework.core.io.ContextResource"
    ],
    "outerClass": "org.springframework.core.io.DefaultResourceLoader",
    "access": 12,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.DescriptiveResource",
    "setters": [],
    "getters": [
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;",
        "field": "description"
      }
    ],
    "observers": [
      {
        "name": "isReadable",
        "desc": "()Z"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "isReadable",
        "desc": "()Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "exists",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.FileSystemResource",
    "setters": [],
    "getters": [
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;",
        "field": "path"
      }
    ],
    "observers": [
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getOutputStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "isFile",
        "desc": "()Z"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "exists",
        "desc": "()Z"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isWritable",
        "desc": "()Z"
      },
      {
        "name": "getOutputStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "isFile",
        "desc": "()Z"
      },
      {
        "name": "writableChannel",
        "desc": "()Ljava/nio/channels/WritableByteChannel;"
      },
      {
        "name": "contentLength",
        "desc": "()J"
      },
      {
        "name": "createRelative",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "readableChannel",
        "desc": "()Ljava/nio/channels/ReadableByteChannel;"
      },
      {
        "name": "isReadable",
        "desc": "()Z"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "lastModified",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/nio/file/Path;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/nio/file/FileSystem;Ljava/lang/String;)V"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractResource",
      "org.springframework.core.io.WritableResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.FileSystemResourceLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getResourceByPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "/"
      ]
    },
    "parents": [
      "org.springframework.core.io.DefaultResourceLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.FileSystemResourceLoader$FileSystemContextResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getPathWithinContext",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.io.FileSystemResource",
      "org.springframework.core.io.ContextResource"
    ],
    "outerClass": "org.springframework.core.io.FileSystemResourceLoader",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.FileUrlResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getOutputStream",
        "desc": "()Ljava/io/OutputStream;"
      }
    ],
    "testableMethods": [
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isWritable",
        "desc": "()Z"
      },
      {
        "name": "getOutputStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "writableChannel",
        "desc": "()Ljava/nio/channels/WritableByteChannel;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/net/URL;)V"
      },
      {
        "name": "createRelative",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "/",
        "file"
      ]
    },
    "parents": [
      "org.springframework.core.io.UrlResource",
      "org.springframework.core.io.WritableResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.InputStreamResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isOpen",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "exists",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Ljava/lang/String;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isOpen",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.InputStreamSource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.PathResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isReadable",
        "desc": "()Z"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "isWritable",
        "desc": "()Z"
      },
      {
        "name": "getOutputStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "isFile",
        "desc": "()Z"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "exists",
        "desc": "()Z"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isWritable",
        "desc": "()Z"
      },
      {
        "name": "getOutputStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "isFile",
        "desc": "()Z"
      },
      {
        "name": "writableChannel",
        "desc": "()Ljava/nio/channels/WritableByteChannel;"
      },
      {
        "name": "contentLength",
        "desc": "()J"
      },
      {
        "name": "createRelative",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "readableChannel",
        "desc": "()Ljava/nio/channels/ReadableByteChannel;"
      },
      {
        "name": "isReadable",
        "desc": "()Z"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "lastModified",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/nio/file/Path;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/net/URI;)V"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractResource",
      "org.springframework.core.io.WritableResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.ProtocolResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.Resource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isFile",
        "desc": "()Z"
      },
      {
        "name": "isOpen",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.InputStreamSource"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.ResourceEditor",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAsText",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getAsText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setAsText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "resolvePath",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.beans.PropertyEditorSupport"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.ResourceLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.UrlResource",
    "setters": [],
    "getters": [
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;",
        "field": "url"
      }
    ],
    "observers": [
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "isFile",
        "desc": "()Z"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "isFile",
        "desc": "()Z"
      },
      {
        "name": "createRelative",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/net/URI;)V"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/net/URL;)V"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "/"
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractFileResolvingResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.VfsResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isReadable",
        "desc": "()Z"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "exists",
        "desc": "()Z"
      },
      {
        "name": "getFile",
        "desc": "()Ljava/io/File;"
      },
      {
        "name": "contentLength",
        "desc": "()J"
      },
      {
        "name": "createRelative",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "isReadable",
        "desc": "()Z"
      },
      {
        "name": "lastModified",
        "desc": "()J"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getURL",
        "desc": "()Ljava/net/URL;"
      },
      {
        "name": "getDescription",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "getFilename",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        ".",
        "/"
      ]
    },
    "parents": [
      "org.springframework.core.io.AbstractResource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.VfsUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.WritableResource",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isWritable",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.Resource"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DataBuffer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DataBufferFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DataBufferUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DataBufferUtils$AsynchronousFileChannelReadCompletionHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.nio.channels.CompletionHandler"
    ],
    "outerClass": "org.springframework.core.io.buffer.DataBufferUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DataBufferUtils$AsynchronousFileChannelWriteCompletionHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        1
      ]
    },
    "parents": [
      "reactor.core.publisher.BaseSubscriber",
      "java.nio.channels.CompletionHandler"
    ],
    "outerClass": "org.springframework.core.io.buffer.DataBufferUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DataBufferUtils$ReadableByteChannelGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.function.Consumer"
    ],
    "outerClass": "org.springframework.core.io.buffer.DataBufferUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DataBufferUtils$WritableByteChannelSubscriber",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        1
      ]
    },
    "parents": [
      "reactor.core.publisher.BaseSubscriber"
    ],
    "outerClass": "org.springframework.core.io.buffer.DataBufferUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "setters": [
      {
        "name": "read",
        "desc": "([BII)Lorg/springframework/core/io/buffer/DefaultDataBuffer;",
        "field": "readPosition"
      },
      {
        "name": "write",
        "desc": "(B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;",
        "field": "writePosition"
      },
      {
        "name": "write",
        "desc": "([BII)Lorg/springframework/core/io/buffer/DefaultDataBuffer;",
        "field": "writePosition"
      },
      {
        "name": "writePosition",
        "desc": "(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;",
        "field": "writePosition"
      },
      {
        "name": "readPosition",
        "desc": "(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;",
        "field": "readPosition"
      }
    ],
    "getters": [
      {
        "name": "getNativeBuffer",
        "desc": "()Ljava/nio/ByteBuffer;",
        "field": "byteBuffer"
      }
    ],
    "observers": [
      {
        "name": "readPosition",
        "desc": "()I"
      },
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "getNativeBuffer",
        "desc": "()Ljava/nio/ByteBuffer;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "factory",
        "desc": "()Lorg/springframework/core/io/buffer/DefaultDataBufferFactory;"
      }
    ],
    "testableMethods": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "writableByteCount",
        "desc": "()I"
      },
      {
        "name": "asInputStream",
        "desc": "(Z)Ljava/io/InputStream;"
      },
      {
        "name": "readPosition",
        "desc": "(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/util/function/IntPredicate;I)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/util/function/IntPredicate;I)I"
      },
      {
        "name": "writePosition",
        "desc": "(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "readPosition",
        "desc": "()I"
      },
      {
        "name": "read",
        "desc": "([BII)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "read",
        "desc": "([B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "getNativeBuffer",
        "desc": "()Ljava/nio/ByteBuffer;"
      },
      {
        "name": "readableByteCount",
        "desc": "()I"
      },
      {
        "name": "getByte",
        "desc": "(I)B"
      },
      {
        "name": "factory",
        "desc": "()Lorg/springframework/core/io/buffer/DefaultDataBufferFactory;"
      },
      {
        "name": "asOutputStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "asInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "writePosition",
        "desc": "()I"
      },
      {
        "name": "write",
        "desc": "([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "slice",
        "desc": "(II)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "asByteBuffer",
        "desc": "(II)Ljava/nio/ByteBuffer;"
      },
      {
        "name": "fromFilledByteBuffer",
        "desc": "(Lorg/springframework/core/io/buffer/DefaultDataBufferFactory;Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "write",
        "desc": "([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "asByteBuffer",
        "desc": "()Ljava/nio/ByteBuffer;"
      },
      {
        "name": "capacity",
        "desc": "(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "write",
        "desc": "(B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "write",
        "desc": "([B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "write",
        "desc": "([BII)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "read",
        "desc": "()B"
      },
      {
        "name": "fromEmptyByteBuffer",
        "desc": "(Lorg/springframework/core/io/buffer/DefaultDataBufferFactory;Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      }
    ],
    "dictionary": {
      "byte": [
        64
      ],
      "char": [
        64
      ],
      "short": [
        64
      ],
      "int": [
        0,
        1,
        64,
        4194304,
        2143289343
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.buffer.DataBuffer"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DefaultDataBuffer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DefaultDataBuffer$DefaultDataBufferInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.InputStream"
    ],
    "outerClass": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DefaultDataBuffer$DefaultDataBufferOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.OutputStream"
    ],
    "outerClass": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DefaultDataBuffer$SlicedDefaultDataBuffer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.io.buffer.DefaultDataBuffer"
    ],
    "outerClass": "org.springframework.core.io.buffer.DefaultDataBuffer",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.DefaultDataBufferFactory",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "wrap",
        "desc": "([B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "allocateBuffer",
        "desc": "()Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "join",
        "desc": "(Ljava/util/List;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "wrap",
        "desc": "(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "(ZI)V"
      },
      {
        "name": "allocateBuffer",
        "desc": "(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        0,
        1,
        256
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.buffer.DataBufferFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.NettyDataBuffer",
    "setters": [],
    "getters": [
      {
        "name": "getNativeBuffer",
        "desc": "()Lio/netty/buffer/ByteBuf;",
        "field": "byteBuf"
      }
    ],
    "observers": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "getNativeBuffer",
        "desc": "()Lio/netty/buffer/ByteBuf;"
      },
      {
        "name": "factory",
        "desc": "()Lorg/springframework/core/io/buffer/NettyDataBufferFactory;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "writableByteCount",
        "desc": "()I"
      },
      {
        "name": "capacity",
        "desc": "(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "asInputStream",
        "desc": "(Z)Ljava/io/InputStream;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/util/function/IntPredicate;I)I"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/util/function/IntPredicate;I)I"
      },
      {
        "name": "write",
        "desc": "([B)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "readPosition",
        "desc": "()I"
      },
      {
        "name": "getNativeBuffer",
        "desc": "()Lio/netty/buffer/ByteBuf;"
      },
      {
        "name": "readableByteCount",
        "desc": "()I"
      },
      {
        "name": "getByte",
        "desc": "(I)B"
      },
      {
        "name": "<init>",
        "desc": "(Lio/netty/buffer/ByteBuf;Lorg/springframework/core/io/buffer/NettyDataBufferFactory;)V"
      },
      {
        "name": "read",
        "desc": "([B)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "asOutputStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "asInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "writePosition",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "read",
        "desc": "([BII)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "asByteBuffer",
        "desc": "(II)Ljava/nio/ByteBuffer;"
      },
      {
        "name": "slice",
        "desc": "(II)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "write",
        "desc": "([BII)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "asByteBuffer",
        "desc": "()Ljava/nio/ByteBuffer;"
      },
      {
        "name": "isAllocated",
        "desc": "()Z"
      },
      {
        "name": "factory",
        "desc": "()Lorg/springframework/core/io/buffer/NettyDataBufferFactory;"
      },
      {
        "name": "readPosition",
        "desc": "(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "write",
        "desc": "([Lio/netty/buffer/ByteBuf;)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "retain",
        "desc": "()Lorg/springframework/core/io/buffer/PooledDataBuffer;"
      },
      {
        "name": "release",
        "desc": "()Z"
      },
      {
        "name": "write",
        "desc": "(B)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "writePosition",
        "desc": "(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "read",
        "desc": "()B"
      },
      {
        "name": "write",
        "desc": "([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.buffer.PooledDataBuffer"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.NettyDataBufferFactory",
    "setters": [],
    "getters": [
      {
        "name": "getByteBufAllocator",
        "desc": "()Lio/netty/buffer/ByteBufAllocator;",
        "field": "byteBufAllocator"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getByteBufAllocator",
        "desc": "()Lio/netty/buffer/ByteBufAllocator;"
      }
    ],
    "testableMethods": [
      {
        "name": "wrap",
        "desc": "(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "toByteBuf",
        "desc": "(Lorg/springframework/core/io/buffer/DataBuffer;)Lio/netty/buffer/ByteBuf;"
      },
      {
        "name": "allocateBuffer",
        "desc": "()Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "allocateBuffer",
        "desc": "(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getByteBufAllocator",
        "desc": "()Lio/netty/buffer/ByteBufAllocator;"
      },
      {
        "name": "<init>",
        "desc": "(Lio/netty/buffer/ByteBufAllocator;)V"
      },
      {
        "name": "wrap",
        "desc": "(Lio/netty/buffer/ByteBuf;)Lorg/springframework/core/io/buffer/NettyDataBuffer;"
      },
      {
        "name": "join",
        "desc": "(Ljava/util/List;)Lorg/springframework/core/io/buffer/DataBuffer;"
      },
      {
        "name": "wrap",
        "desc": "([B)Lorg/springframework/core/io/buffer/DataBuffer;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.buffer.DataBufferFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.buffer.PooledDataBuffer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.buffer.DataBuffer"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.DefaultPropertySourceFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createPropertySource",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/io/support/EncodedResource;)Lorg/springframework/core/env/PropertySource;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.support.PropertySourceFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.EncodedResource",
    "setters": [],
    "getters": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "encoding"
      },
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;",
        "field": "charset"
      },
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;",
        "field": "resource"
      }
    ],
    "observers": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getReader",
        "desc": "()Ljava/io/Reader;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/Resource;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/Resource;Ljava/lang/String;)V"
      },
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/Resource;)V"
      },
      {
        "name": "requiresReader",
        "desc": "()Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getReader",
        "desc": "()Ljava/io/Reader;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.InputStreamSource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.LocalizedResourceHelper",
    "setters": [
      {
        "name": "setSeparator",
        "desc": "(Ljava/lang/String;)V",
        "field": "separator"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setSeparator",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "findLocalizedResource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/ResourceLoader;)V"
      }
    ],
    "dictionary": {
      "str": [
        "_"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
    "setters": [
      {
        "name": "setPathMatcher",
        "desc": "(Lorg/springframework/util/PathMatcher;)V",
        "field": "pathMatcher"
      }
    ],
    "getters": [
      {
        "name": "getPathMatcher",
        "desc": "()Lorg/springframework/util/PathMatcher;",
        "field": "pathMatcher"
      },
      {
        "name": "getResourceLoader",
        "desc": "()Lorg/springframework/core/io/ResourceLoader;",
        "field": "resourceLoader"
      }
    ],
    "observers": [
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getPathMatcher",
        "desc": "()Lorg/springframework/util/PathMatcher;"
      },
      {
        "name": "getResourceLoader",
        "desc": "()Lorg/springframework/core/io/ResourceLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "getResources",
        "desc": "(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "resolveRootDirResource",
        "desc": "(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "findPathMatchingResources",
        "desc": "(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "setPathMatcher",
        "desc": "(Lorg/springframework/util/PathMatcher;)V"
      },
      {
        "name": "doFindMatchingFileSystemResources",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "doFindPathMatchingFileResources",
        "desc": "(Lorg/springframework/core/io/Resource;Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "doFindAllClassPathResources",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "addAllClassLoaderJarRoots",
        "desc": "(Ljava/lang/ClassLoader;Ljava/util/Set;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "findAllClassPathResources",
        "desc": "(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "addClassPathManifestEntries",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "doFindPathMatchingJarResources",
        "desc": "(Lorg/springframework/core/io/Resource;Ljava/net/URL;Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "getJarFile",
        "desc": "(Ljava/lang/String;)Ljava/util/jar/JarFile;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getResourceLoader",
        "desc": "()Lorg/springframework/core/io/ResourceLoader;"
      },
      {
        "name": "determineRootDir",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getPathMatcher",
        "desc": "()Lorg/springframework/util/PathMatcher;"
      },
      {
        "name": "retrieveMatchingFiles",
        "desc": "(Ljava/io/File;Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "listDirectory",
        "desc": "(Ljava/io/File;)[Ljava/io/File;"
      },
      {
        "name": "isJarResource",
        "desc": "(Lorg/springframework/core/io/Resource;)Z"
      },
      {
        "name": "getResource",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "doRetrieveMatchingFiles",
        "desc": "(Ljava/lang/String;Ljava/io/File;Ljava/util/Set;)V"
      },
      {
        "name": "convertClassLoaderURL",
        "desc": "(Ljava/net/URL;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/ResourceLoader;)V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        58
      ],
      "char": [
        58
      ],
      "short": [
        8,
        16,
        58
      ],
      "int": [
        -1,
        0,
        1,
        8,
        16,
        58
      ],
      "str": [
        "",
        "!/",
        "*/",
        "/",
        "]",
        "bundle",
        "classpath*:",
        "file:",
        "jar:",
        "jar:file:",
        "vfs",
        "war:"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.support.ResourcePatternResolver"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor",
    "setters": [],
    "getters": [
      {
        "name": "getResources",
        "desc": "()Ljava/util/Set;",
        "field": "resources"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAttributes",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getResources",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "/",
        "equals",
        "getAttributes",
        "hashCode",
        "toString",
        "visit"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.InvocationHandler"
    ],
    "outerClass": "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "setters": [
      {
        "name": "setLocation",
        "desc": "(Lorg/springframework/core/io/Resource;)V",
        "field": "locations"
      },
      {
        "name": "setIgnoreResourceNotFound",
        "desc": "(Z)V",
        "field": "ignoreResourceNotFound"
      },
      {
        "name": "setPropertiesPersister",
        "desc": "(Lorg/springframework/util/PropertiesPersister;)V",
        "field": "propertiesPersister"
      },
      {
        "name": "setFileEncoding",
        "desc": "(Ljava/lang/String;)V",
        "field": "fileEncoding"
      },
      {
        "name": "setProperties",
        "desc": "(Ljava/util/Properties;)V",
        "field": "localProperties"
      },
      {
        "name": "setPropertiesArray",
        "desc": "([Ljava/util/Properties;)V",
        "field": "localProperties"
      },
      {
        "name": "setLocalOverride",
        "desc": "(Z)V",
        "field": "localOverride"
      },
      {
        "name": "setLocations",
        "desc": "([Lorg/springframework/core/io/Resource;)V",
        "field": "locations"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.PropertiesLoaderUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        ".xml"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.PropertySourceFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.ResourceArrayPropertyEditor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setAsText",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/core/env/PropertyResolver;)V"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "resolvePath",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/core/env/PropertyResolver;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.beans.PropertyEditorSupport"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.ResourcePatternResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.io.ResourceLoader"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.ResourcePatternUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "classpath*:"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.ResourcePropertySource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "withResourceName",
        "desc": "()Lorg/springframework/core/io/support/ResourcePropertySource;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/io/support/EncodedResource;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/Resource;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/io/Resource;)V"
      },
      {
        "name": "withName",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/support/ResourcePropertySource;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/support/EncodedResource;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.PropertiesPropertySource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.ResourceRegion",
    "setters": [],
    "getters": [
      {
        "name": "getCount",
        "desc": "()J",
        "field": "count"
      },
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;",
        "field": "resource"
      },
      {
        "name": "getPosition",
        "desc": "()J",
        "field": "position"
      }
    ],
    "observers": [
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "getPosition",
        "desc": "()J"
      },
      {
        "name": "getCount",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "getPosition",
        "desc": "()J"
      },
      {
        "name": "getCount",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/Resource;JJ)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.SpringFactoriesLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "loadFactoryNames",
        "desc": "(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/List;"
      },
      {
        "name": "loadFactories",
        "desc": "(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/List;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "META-INF/spring.factories",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.io.support.VfsPatternUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.core.io.VfsUtils"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.log.CompositeLog",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "isFatalEnabled",
        "desc": "()Z"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "warn",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "fatal",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "warn",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "isDebugEnabled",
        "desc": "()Z"
      },
      {
        "name": "isErrorEnabled",
        "desc": "()Z"
      },
      {
        "name": "isFatalEnabled",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "info",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "error",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "isTraceEnabled",
        "desc": "()Z"
      },
      {
        "name": "trace",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "debug",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "isWarnEnabled",
        "desc": "()Z"
      },
      {
        "name": "fatal",
        "desc": "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
      },
      {
        "name": "isInfoEnabled",
        "desc": "()Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.apache.commons.logging.Log"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.log.LogDelegateFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getCompositeLog",
        "desc": "(Lorg/apache/commons/logging/Log;Lorg/apache/commons/logging/Log;[Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;"
      },
      {
        "name": "getHiddenLog",
        "desc": "(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;"
      }
    ],
    "dictionary": {
      "int": [
        2
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.log.LogFormatUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        100
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.serializer.DefaultDeserializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "deserialize",
        "desc": "(Ljava/io/InputStream;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.serializer.Deserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.serializer.DefaultSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "serialize",
        "desc": "(Ljava/lang/Object;Ljava/io/OutputStream;)V"
      }
    ],
    "dictionary": {
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.serializer.Serializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.serializer.Deserializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.serializer.Serializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.serializer.support.DeserializingConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/serializer/Deserializer;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "convert",
        "desc": "([B)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "str": [
        "?"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.serializer.support.SerializationDelegate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/serializer/Serializer;Lorg/springframework/core/serializer/Deserializer;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "deserialize",
        "desc": "(Ljava/io/InputStream;)Ljava/lang/Object;"
      },
      {
        "name": "serialize",
        "desc": "(Ljava/lang/Object;Ljava/io/OutputStream;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.serializer.Serializer",
      "org.springframework.core.serializer.Deserializer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.serializer.support.SerializationFailedException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.NestedRuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.serializer.support.SerializingConverter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/serializer/Serializer;)V"
      },
      {
        "name": "convert",
        "desc": "(Ljava/lang/Object;)[B"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        1024
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.convert.converter.Converter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.style.DefaultToStringStyler",
    "setters": [],
    "getters": [
      {
        "name": "getValueStyler",
        "desc": "()Lorg/springframework/core/style/ValueStyler;",
        "field": "valueStyler"
      }
    ],
    "observers": [
      {
        "name": "getValueStyler",
        "desc": "()Lorg/springframework/core/style/ValueStyler;"
      }
    ],
    "testableMethods": [
      {
        "name": "styleStart",
        "desc": "(Ljava/lang/StringBuilder;Ljava/lang/Object;)V"
      },
      {
        "name": "styleFieldSeparator",
        "desc": "(Ljava/lang/StringBuilder;)V"
      },
      {
        "name": "getValueStyler",
        "desc": "()Lorg/springframework/core/style/ValueStyler;"
      },
      {
        "name": "styleFieldStart",
        "desc": "(Ljava/lang/StringBuilder;Ljava/lang/String;)V"
      },
      {
        "name": "styleValue",
        "desc": "(Ljava/lang/StringBuilder;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/style/ValueStyler;)V"
      },
      {
        "name": "styleEnd",
        "desc": "(Ljava/lang/StringBuilder;Ljava/lang/Object;)V"
      },
      {
        "name": "styleFieldEnd",
        "desc": "(Ljava/lang/StringBuilder;Ljava/lang/String;)V"
      },
      {
        "name": "styleField",
        "desc": "(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "byte": [
        32,
        44,
        93
      ],
      "char": [
        32,
        44,
        93
      ],
      "short": [
        32,
        44,
        93
      ],
      "int": [
        32,
        44,
        93
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.style.ToStringStyler"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.style.DefaultValueStyler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "style",
        "desc": "(Ljava/lang/Object;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16,
        32
      ],
      "char": [
        32
      ],
      "short": [
        8,
        16,
        32
      ],
      "int": [
        0,
        1,
        8,
        16,
        32
      ],
      "str": [
        "'",
        "[null]",
        "list"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.style.ValueStyler"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.style.StylerUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.style.ToStringCreator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "append",
        "desc": "(Ljava/lang/String;B)Lorg/springframework/core/style/ToStringCreator;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/core/style/ToStringCreator;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/style/ToStringStyler;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/core/style/ToStringCreator;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Lorg/springframework/core/style/ValueStyler;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;F)Lorg/springframework/core/style/ToStringCreator;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;J)Lorg/springframework/core/style/ToStringCreator;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/core/style/ToStringCreator;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;I)Lorg/springframework/core/style/ToStringCreator;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;S)Lorg/springframework/core/style/ToStringCreator;"
      },
      {
        "name": "append",
        "desc": "(Ljava/lang/String;D)Lorg/springframework/core/style/ToStringCreator;"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        1,
        256
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.style.ToStringStyler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.style.ValueStyler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.task.AsyncTaskExecutor"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.AsyncTaskExecutor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.task.TaskExecutor"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.SimpleAsyncTaskExecutor",
    "setters": [
      {
        "name": "setThreadFactory",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)V",
        "field": "threadFactory"
      },
      {
        "name": "setTaskDecorator",
        "desc": "(Lorg/springframework/core/task/TaskDecorator;)V",
        "field": "taskDecorator"
      }
    ],
    "getters": [
      {
        "name": "getThreadFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;",
        "field": "threadFactory"
      }
    ],
    "observers": [
      {
        "name": "getThreadFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;"
      },
      {
        "name": "getConcurrencyLimit",
        "desc": "()I"
      },
      {
        "name": "isThrottleActive",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)V"
      },
      {
        "name": "isThrottleActive",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setConcurrencyLimit",
        "desc": "(I)V"
      },
      {
        "name": "submitListenable",
        "desc": "(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;"
      },
      {
        "name": "execute",
        "desc": "(Ljava/lang/Runnable;J)V"
      },
      {
        "name": "submit",
        "desc": "(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"
      },
      {
        "name": "submitListenable",
        "desc": "(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;"
      },
      {
        "name": "getThreadFactory",
        "desc": "()Ljava/util/concurrent/ThreadFactory;"
      },
      {
        "name": "getConcurrencyLimit",
        "desc": "()I"
      },
      {
        "name": "doExecute",
        "desc": "(Ljava/lang/Runnable;)V"
      },
      {
        "name": "setThreadFactory",
        "desc": "(Ljava/util/concurrent/ThreadFactory;)V"
      },
      {
        "name": "setTaskDecorator",
        "desc": "(Lorg/springframework/core/task/TaskDecorator;)V"
      },
      {
        "name": "submit",
        "desc": "(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "execute",
        "desc": "(Ljava/lang/Runnable;)V"
      }
    ],
    "dictionary": {
      "long": [
        0,
        9223372036854775807
      ]
    },
    "parents": [
      "org.springframework.util.CustomizableThreadCreator",
      "org.springframework.core.task.AsyncListenableTaskExecutor",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.SimpleAsyncTaskExecutor$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.SimpleAsyncTaskExecutor$ConcurrencyThrottleAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.ConcurrencyThrottleSupport"
    ],
    "outerClass": "org.springframework.core.task.SimpleAsyncTaskExecutor",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.SimpleAsyncTaskExecutor$ConcurrencyThrottlingRunnable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "org.springframework.core.task.SimpleAsyncTaskExecutor",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.SyncTaskExecutor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "execute",
        "desc": "(Ljava/lang/Runnable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.task.TaskExecutor",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.TaskDecorator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.TaskExecutor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Executor"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.TaskRejectedException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.util.concurrent.RejectedExecutionException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.TaskTimeoutException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.task.TaskRejectedException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.support.ConcurrentExecutorAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/task/TaskExecutor;)V"
      },
      {
        "name": "execute",
        "desc": "(Ljava/lang/Runnable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Executor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.support.ExecutorServiceAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isTerminated",
        "desc": "()Z"
      },
      {
        "name": "isShutdown",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "awaitTermination",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Z"
      },
      {
        "name": "isTerminated",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/task/TaskExecutor;)V"
      },
      {
        "name": "shutdown",
        "desc": "()V"
      },
      {
        "name": "isShutdown",
        "desc": "()Z"
      },
      {
        "name": "execute",
        "desc": "(Ljava/lang/Runnable;)V"
      },
      {
        "name": "shutdownNow",
        "desc": "()Ljava/util/List;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.util.concurrent.AbstractExecutorService"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.task.support.TaskExecutorAdapter",
    "setters": [
      {
        "name": "setTaskDecorator",
        "desc": "(Lorg/springframework/core/task/TaskDecorator;)V",
        "field": "taskDecorator"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "doExecute",
        "desc": "(Ljava/util/concurrent/Executor;Lorg/springframework/core/task/TaskDecorator;Ljava/lang/Runnable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/Executor;)V"
      },
      {
        "name": "setTaskDecorator",
        "desc": "(Lorg/springframework/core/task/TaskDecorator;)V"
      },
      {
        "name": "submit",
        "desc": "(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;"
      },
      {
        "name": "submitListenable",
        "desc": "(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;"
      },
      {
        "name": "execute",
        "desc": "(Ljava/lang/Runnable;J)V"
      },
      {
        "name": "execute",
        "desc": "(Ljava/lang/Runnable;)V"
      },
      {
        "name": "submit",
        "desc": "(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"
      },
      {
        "name": "submitListenable",
        "desc": "(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.task.AsyncListenableTaskExecutor"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.AnnotatedTypeMetadata",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.AnnotationMetadata",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.ClassMetadata",
      "org.springframework.core.type.AnnotatedTypeMetadata"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.ClassMetadata",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.MethodMetadata",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.AnnotatedTypeMetadata"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.StandardAnnotationMetadata",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAnnotationTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getMetaAnnotationTypes",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "getAllAnnotationAttributes",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getAnnotationTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "hasAnnotation",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "(Ljava/lang/String;Z)Ljava/util/Map;"
      },
      {
        "name": "hasAnnotatedMethods",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "hasMetaAnnotation",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "isAnnotated",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getAllAnnotationAttributes",
        "desc": "(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "(Ljava/lang/String;)Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        4
      ]
    },
    "parents": [
      "org.springframework.core.type.StandardClassMetadata",
      "org.springframework.core.type.AnnotationMetadata"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.StandardClassMetadata",
    "setters": [],
    "getters": [
      {
        "name": "getIntrospectedClass",
        "desc": "()Ljava/lang/Class;",
        "field": "introspectedClass"
      }
    ],
    "observers": [
      {
        "name": "isConcrete",
        "desc": "()Z"
      },
      {
        "name": "isAnnotation",
        "desc": "()Z"
      },
      {
        "name": "hasSuperClass",
        "desc": "()Z"
      },
      {
        "name": "getSuperClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "getMemberClassNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "hasEnclosingClass",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEnclosingClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaceNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "isFinal",
        "desc": "()Z"
      },
      {
        "name": "getIntrospectedClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "isIndependent",
        "desc": "()Z"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isConcrete",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "isAnnotation",
        "desc": "()Z"
      },
      {
        "name": "hasSuperClass",
        "desc": "()Z"
      },
      {
        "name": "getSuperClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "getMemberClassNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "hasEnclosingClass",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEnclosingClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaceNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "isFinal",
        "desc": "()Z"
      },
      {
        "name": "getIntrospectedClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "isIndependent",
        "desc": "()Z"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        4
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.ClassMetadata"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.StandardMethodMetadata",
    "setters": [],
    "getters": [
      {
        "name": "getIntrospectedMethod",
        "desc": "()Ljava/lang/reflect/Method;",
        "field": "introspectedMethod"
      }
    ],
    "observers": [
      {
        "name": "isOverridable",
        "desc": "()Z"
      },
      {
        "name": "getDeclaringClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFinal",
        "desc": "()Z"
      },
      {
        "name": "getIntrospectedMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getReturnTypeName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      },
      {
        "name": "isStatic",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getDeclaringClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAllAnnotationAttributes",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReturnTypeName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "(Ljava/lang/String;Z)Ljava/util/Map;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "isOverridable",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/reflect/Method;Z)V"
      },
      {
        "name": "isFinal",
        "desc": "()Z"
      },
      {
        "name": "isAnnotated",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getAllAnnotationAttributes",
        "desc": "(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getIntrospectedMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "(Ljava/lang/String;)Ljava/util/Map;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      },
      {
        "name": "isStatic",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.MethodMetadata"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.springframework.asm.AnnotationVisitor"
    ],
    "access": 1056,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/springframework/util/MultiValueMap;Ljava/util/Map;Ljava/lang/ClassLoader;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor",
    "setters": [],
    "getters": [
      {
        "name": "getAnnotationTypes",
        "desc": "()Ljava/util/Set;",
        "field": "annotationSet"
      }
    ],
    "observers": [
      {
        "name": "getAnnotationTypes",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMetaAnnotationTypes",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getAllAnnotationAttributes",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getAnnotationTypes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "hasAnnotation",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"
      },
      {
        "name": "getAnnotatedMethods",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "hasAnnotatedMethods",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "hasMetaAnnotation",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "isAnnotated",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getAllAnnotationAttributes",
        "desc": "(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      }
    ],
    "dictionary": {
      "byte": [
        64
      ],
      "char": [
        64
      ],
      "short": [
        64
      ],
      "int": [
        4,
        64
      ]
    },
    "parents": [
      "org.springframework.core.type.classreading.ClassMetadataReadingVisitor",
      "org.springframework.core.type.AnnotationMetadata"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.AnnotationReadingVisitorUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "value"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.CachingMetadataReaderFactory",
    "setters": [
      {
        "name": "setCacheLimit",
        "desc": "(I)V",
        "field": "metadataReaderCache"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getCacheLimit",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "setCacheLimit",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getMetadataReader",
        "desc": "(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/type/classreading/MetadataReader;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getCacheLimit",
        "desc": "()I"
      },
      {
        "name": "clearCache",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/ResourceLoader;)V"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        256
      ]
    },
    "parents": [
      "org.springframework.core.type.classreading.SimpleMetadataReaderFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.CachingMetadataReaderFactory$LocalResourceCache",
    "setters": [
      {
        "name": "setCacheLimit",
        "desc": "(I)V",
        "field": "cacheLimit"
      }
    ],
    "getters": [
      {
        "name": "getCacheLimit",
        "desc": "()I",
        "field": "cacheLimit"
      }
    ],
    "observers": [
      {
        "name": "getCacheLimit",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ],
      "float": [
        0.75
      ]
    },
    "parents": [
      "java.util.LinkedHashMap"
    ],
    "outerClass": "org.springframework.core.type.classreading.CachingMetadataReaderFactory",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.ClassMetadataReadingVisitor",
    "setters": [
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
        "field": "enclosingClassName"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "enclosingClassName"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V",
        "field": "className"
      }
    ],
    "getters": [
      {
        "name": "isAnnotation",
        "desc": "()Z",
        "field": "isAnnotation"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;",
        "field": "className"
      },
      {
        "name": "getSuperClassName",
        "desc": "()Ljava/lang/String;",
        "field": "superClassName"
      },
      {
        "name": "getEnclosingClassName",
        "desc": "()Ljava/lang/String;",
        "field": "enclosingClassName"
      },
      {
        "name": "getInterfaceNames",
        "desc": "()[Ljava/lang/String;",
        "field": "interfaces"
      },
      {
        "name": "isInterface",
        "desc": "()Z",
        "field": "isInterface"
      },
      {
        "name": "isFinal",
        "desc": "()Z",
        "field": "isFinal"
      },
      {
        "name": "isAbstract",
        "desc": "()Z",
        "field": "isAbstract"
      }
    ],
    "observers": [
      {
        "name": "isConcrete",
        "desc": "()Z"
      },
      {
        "name": "isAnnotation",
        "desc": "()Z"
      },
      {
        "name": "hasSuperClass",
        "desc": "()Z"
      },
      {
        "name": "getSuperClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "getMemberClassNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "hasEnclosingClass",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEnclosingClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaceNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "isFinal",
        "desc": "()Z"
      },
      {
        "name": "isIndependent",
        "desc": "()Z"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isConcrete",
        "desc": "()Z"
      },
      {
        "name": "visitOuterClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "isAnnotation",
        "desc": "()Z"
      },
      {
        "name": "hasSuperClass",
        "desc": "()Z"
      },
      {
        "name": "getSuperClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "visitSource",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "isInterface",
        "desc": "()Z"
      },
      {
        "name": "visitField",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;"
      },
      {
        "name": "getMemberClassNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "visitMethod",
        "desc": "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"
      },
      {
        "name": "hasEnclosingClass",
        "desc": "()Z"
      },
      {
        "name": "getClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "visit",
        "desc": "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "getEnclosingClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInterfaceNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "visitInnerClass",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"
      },
      {
        "name": "isFinal",
        "desc": "()Z"
      },
      {
        "name": "visitAttribute",
        "desc": "(Lorg/springframework/asm/Attribute;)V"
      },
      {
        "name": "isIndependent",
        "desc": "()Z"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16
      ],
      "short": [
        8,
        16,
        512,
        1024,
        8192
      ],
      "int": [
        0,
        1,
        4,
        8,
        16,
        512,
        1024,
        8192,
        458752
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "org.springframework.asm.ClassVisitor",
      "org.springframework.core.type.ClassMetadata"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.ClassMetadataReadingVisitor$EmptyAnnotationVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.springframework.asm.AnnotationVisitor"
    ],
    "outerClass": "org.springframework.core.type.classreading.ClassMetadataReadingVisitor",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.ClassMetadataReadingVisitor$EmptyFieldVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.springframework.asm.FieldVisitor"
    ],
    "outerClass": "org.springframework.core.type.classreading.ClassMetadataReadingVisitor",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.ClassMetadataReadingVisitor$EmptyMethodVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        458752
      ]
    },
    "parents": [
      "org.springframework.asm.MethodVisitor"
    ],
    "outerClass": "org.springframework.core.type.classreading.ClassMetadataReadingVisitor",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.MetadataReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.MethodMetadataReadingVisitor",
    "setters": [],
    "getters": [
      {
        "name": "getReturnTypeName",
        "desc": "()Ljava/lang/String;",
        "field": "returnTypeName"
      },
      {
        "name": "getDeclaringClassName",
        "desc": "()Ljava/lang/String;",
        "field": "declaringClassName"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;",
        "field": "methodName"
      }
    ],
    "observers": [
      {
        "name": "isOverridable",
        "desc": "()Z"
      },
      {
        "name": "getDeclaringClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isFinal",
        "desc": "()Z"
      },
      {
        "name": "getReturnTypeName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      },
      {
        "name": "isStatic",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getAllAnnotationAttributes",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getDeclaringClassName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/Set;)V"
      },
      {
        "name": "getReturnTypeName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isOverridable",
        "desc": "()Z"
      },
      {
        "name": "isFinal",
        "desc": "()Z"
      },
      {
        "name": "isAnnotated",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getAllAnnotationAttributes",
        "desc": "(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "isAbstract",
        "desc": "()Z"
      },
      {
        "name": "isStatic",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16
      ],
      "short": [
        8,
        16,
        1024
      ],
      "int": [
        2,
        4,
        8,
        16,
        1024,
        458752
      ]
    },
    "parents": [
      "org.springframework.asm.MethodVisitor",
      "org.springframework.core.type.MethodMetadata"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.RecursiveAnnotationArrayVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "visitAnnotation",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/annotation/AnnotationAttributes;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "visit",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "visitEnd",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/annotation/AnnotationAttributes;Ljava/lang/ClassLoader;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.SimpleMetadataReader",
    "setters": [],
    "getters": [
      {
        "name": "getAnnotationMetadata",
        "desc": "()Lorg/springframework/core/type/AnnotationMetadata;",
        "field": "annotationMetadata"
      },
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;",
        "field": "resource"
      },
      {
        "name": "getClassMetadata",
        "desc": "()Lorg/springframework/core/type/ClassMetadata;",
        "field": "classMetadata"
      }
    ],
    "observers": [
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "getAnnotationMetadata",
        "desc": "()Lorg/springframework/core/type/AnnotationMetadata;"
      },
      {
        "name": "getClassMetadata",
        "desc": "()Lorg/springframework/core/type/ClassMetadata;"
      }
    ],
    "testableMethods": [
      {
        "name": "getResource",
        "desc": "()Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/Resource;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getAnnotationMetadata",
        "desc": "()Lorg/springframework/core/type/AnnotationMetadata;"
      },
      {
        "name": "getClassMetadata",
        "desc": "()Lorg/springframework/core/type/ClassMetadata;"
      }
    ],
    "dictionary": {
      "int": [
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.classreading.MetadataReader"
    ],
    "access": 48,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.classreading.SimpleMetadataReaderFactory",
    "setters": [],
    "getters": [
      {
        "name": "getResourceLoader",
        "desc": "()Lorg/springframework/core/io/ResourceLoader;",
        "field": "resourceLoader"
      }
    ],
    "observers": [
      {
        "name": "getResourceLoader",
        "desc": "()Lorg/springframework/core/io/ResourceLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "getMetadataReader",
        "desc": "(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/type/classreading/MetadataReader;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getResourceLoader",
        "desc": "()Lorg/springframework/core/io/ResourceLoader;"
      },
      {
        "name": "getMetadataReader",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/type/classreading/MetadataReader;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/ResourceLoader;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        -1,
        1,
        46
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.classreading.MetadataReaderFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.filter.AbstractClassTestingTypeFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.filter.TypeFilter"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.filter.TypeFilter"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.filter.AnnotationTypeFilter",
    "setters": [],
    "getters": [
      {
        "name": "getAnnotationType",
        "desc": "()Ljava/lang/Class;",
        "field": "annotationType"
      }
    ],
    "observers": [
      {
        "name": "getAnnotationType",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Z)V"
      },
      {
        "name": "matchSelf",
        "desc": "(Lorg/springframework/core/type/classreading/MetadataReader;)Z"
      },
      {
        "name": "getAnnotationType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;ZZ)V"
      },
      {
        "name": "hasAnnotation",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "matchSuperClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "matchInterface",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "java"
      ]
    },
    "parents": [
      "org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.filter.AspectJTypeFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/ClassLoader;)V"
      },
      {
        "name": "match",
        "desc": "(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.core.type.filter.TypeFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.filter.AssignableTypeFilter",
    "setters": [],
    "getters": [
      {
        "name": "getTargetType",
        "desc": "()Ljava/lang/Class;",
        "field": "targetType"
      }
    ],
    "observers": [
      {
        "name": "getTargetType",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "matchTargetType",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "matchClassName",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getTargetType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "matchSuperClass",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      },
      {
        "name": "matchInterface",
        "desc": "(Ljava/lang/String;)Ljava/lang/Boolean;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "java"
      ]
    },
    "parents": [
      "org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.filter.RegexPatternTypeFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/regex/Pattern;)V"
      },
      {
        "name": "match",
        "desc": "(Lorg/springframework/core/type/ClassMetadata;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.type.filter.AbstractClassTestingTypeFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.core.type.filter.TypeFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.lang.NonNull",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.lang.NonNullApi",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.lang.NonNullFields",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.lang.Nullable",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.lang.UsesJava7",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.lang.UsesJava8",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.lang.UsesSunHttpServer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.lang.UsesSunMisc",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.env.MockEnvironment",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "withProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/mock/env/MockEnvironment;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.core.env.AbstractEnvironment"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.env.MockPropertySource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Properties;)V"
      },
      {
        "name": "withProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/mock/env/MockPropertySource;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Properties;)V"
      }
    ],
    "dictionary": {
      "str": [
        "mockProperties"
      ]
    },
    "parents": [
      "org.springframework.core.env.PropertiesPropertySource"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.MockHttpInputMessage",
    "setters": [],
    "getters": [
      {
        "name": "getBody",
        "desc": "()Ljava/io/InputStream;",
        "field": "body"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;",
        "field": "headers"
      }
    ],
    "observers": [
      {
        "name": "getBody",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      }
    ],
    "testableMethods": [
      {
        "name": "getBody",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "<init>",
        "desc": "([B)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.http.HttpInputMessage"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.MockHttpOutputMessage",
    "setters": [],
    "getters": [
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;",
        "field": "headers"
      },
      {
        "name": "getBody",
        "desc": "()Ljava/io/OutputStream;",
        "field": "body"
      }
    ],
    "observers": [
      {
        "name": "getBodyAsString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBody",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getBodyAsBytes",
        "desc": "()[B"
      }
    ],
    "testableMethods": [
      {
        "name": "getBodyAsString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBody",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "getBodyAsString",
        "desc": "(Ljava/nio/charset/Charset;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getBodyAsBytes",
        "desc": "()[B"
      }
    ],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        1024
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.http.HttpOutputMessage"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.client.MockAsyncClientHttpRequest",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V"
      },
      {
        "name": "executeAsync",
        "desc": "()Lorg/springframework/util/concurrent/ListenableFuture;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.mock.http.client.MockClientHttpRequest",
      "org.springframework.http.client.AsyncClientHttpRequest"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.client.MockClientHttpRequest",
    "setters": [
      {
        "name": "setURI",
        "desc": "(Ljava/net/URI;)V",
        "field": "uri"
      },
      {
        "name": "setResponse",
        "desc": "(Lorg/springframework/http/client/ClientHttpResponse;)V",
        "field": "clientHttpResponse"
      },
      {
        "name": "setMethod",
        "desc": "(Lorg/springframework/http/HttpMethod;)V",
        "field": "httpMethod"
      }
    ],
    "getters": [
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;",
        "field": "uri"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;",
        "field": "httpMethod"
      },
      {
        "name": "isExecuted",
        "desc": "()Z",
        "field": "executed"
      }
    ],
    "observers": [
      {
        "name": "getMethodValue",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "isExecuted",
        "desc": "()Z"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMethodValue",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setURI",
        "desc": "(Ljava/net/URI;)V"
      },
      {
        "name": "execute",
        "desc": "()Lorg/springframework/http/client/ClientHttpResponse;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "setResponse",
        "desc": "(Lorg/springframework/http/client/ClientHttpResponse;)V"
      },
      {
        "name": "isExecuted",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "setMethod",
        "desc": "(Lorg/springframework/http/HttpMethod;)V"
      },
      {
        "name": "executeInternal",
        "desc": "()Lorg/springframework/http/client/ClientHttpResponse;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "/"
      ]
    },
    "parents": [
      "org.springframework.mock.http.MockHttpOutputMessage",
      "org.springframework.http.client.ClientHttpRequest"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.client.MockClientHttpResponse",
    "setters": [],
    "getters": [
      {
        "name": "getStatusCode",
        "desc": "()Lorg/springframework/http/HttpStatus;",
        "field": "status"
      }
    ],
    "observers": [
      {
        "name": "getStatusText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStatusCode",
        "desc": "()Lorg/springframework/http/HttpStatus;"
      },
      {
        "name": "getRawStatusCode",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getStatusText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "getStatusCode",
        "desc": "()Lorg/springframework/http/HttpStatus;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;Lorg/springframework/http/HttpStatus;)V"
      },
      {
        "name": "getRawStatusCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "([BLorg/springframework/http/HttpStatus;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.mock.http.MockHttpInputMessage",
      "org.springframework.http.client.ClientHttpResponse"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.client.reactive.MockClientHttpRequest",
    "setters": [
      {
        "name": "setWriteHandler",
        "desc": "(Ljava/util/function/Function;)V",
        "field": "writeHandler"
      }
    ],
    "getters": [
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;",
        "field": "body"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;",
        "field": "url"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;",
        "field": "httpMethod"
      }
    ],
    "observers": [
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      },
      {
        "name": "getBodyAsString",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      }
    ],
    "testableMethods": [
      {
        "name": "setWriteHandler",
        "desc": "(Ljava/util/function/Function;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "bufferFactory",
        "desc": "()Lorg/springframework/core/io/buffer/DataBufferFactory;"
      },
      {
        "name": "writeAndFlushWith",
        "desc": "(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;"
      },
      {
        "name": "setComplete",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "applyCookies",
        "desc": "()V"
      },
      {
        "name": "writeWith",
        "desc": "(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      },
      {
        "name": "getBodyAsString",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getURI",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "applyHeaders",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "Cookie"
      ]
    },
    "parents": [
      "org.springframework.http.client.reactive.AbstractClientHttpRequest"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.client.reactive.MockClientHttpResponse",
    "setters": [
      {
        "name": "setBody",
        "desc": "(Lorg/reactivestreams/Publisher;)V",
        "field": "body"
      },
      {
        "name": "setBody",
        "desc": "(Ljava/lang/String;Ljava/nio/charset/Charset;)V",
        "field": "body"
      }
    ],
    "getters": [
      {
        "name": "getStatusCode",
        "desc": "()Lorg/springframework/http/HttpStatus;",
        "field": "status"
      },
      {
        "name": "getCookies",
        "desc": "()Lorg/springframework/util/MultiValueMap;",
        "field": "cookies"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;",
        "field": "body"
      }
    ],
    "observers": [
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getStatusCode",
        "desc": "()Lorg/springframework/http/HttpStatus;"
      },
      {
        "name": "getCookies",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      },
      {
        "name": "getBodyAsString",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getRawStatusCode",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "setBody",
        "desc": "(Lorg/reactivestreams/Publisher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/HttpStatus;)V"
      },
      {
        "name": "setBody",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getStatusCode",
        "desc": "()Lorg/springframework/http/HttpStatus;"
      },
      {
        "name": "getCookies",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      },
      {
        "name": "getBodyAsString",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getRawStatusCode",
        "desc": "()I"
      },
      {
        "name": "setBody",
        "desc": "(Ljava/lang/String;Ljava/nio/charset/Charset;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "Set-Cookie"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.http.client.reactive.ClientHttpResponse"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.server.reactive.MockServerHttpRequest",
    "setters": [],
    "getters": [
      {
        "name": "getRemoteAddress",
        "desc": "()Ljava/net/InetSocketAddress;",
        "field": "remoteAddress"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;",
        "field": "body"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;",
        "field": "httpMethod"
      }
    ],
    "observers": [
      {
        "name": "getRemoteAddress",
        "desc": "()Ljava/net/InetSocketAddress;"
      },
      {
        "name": "getMethodValue",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      }
    ],
    "testableMethods": [
      {
        "name": "getMethodValue",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "method",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;"
      },
      {
        "name": "delete",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;"
      },
      {
        "name": "post",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;"
      },
      {
        "name": "getRemoteAddress",
        "desc": "()Ljava/net/InetSocketAddress;"
      },
      {
        "name": "initSslInfo",
        "desc": "()Lorg/springframework/http/server/reactive/SslInfo;"
      },
      {
        "name": "initCookies",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "patch",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;"
      },
      {
        "name": "method",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      },
      {
        "name": "getNativeRequest",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "head",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;"
      },
      {
        "name": "options",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.http.server.reactive.AbstractServerHttpRequest"
    ],
    "access": 49,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.server.reactive.MockServerHttpRequest$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.server.reactive.MockServerHttpRequest$BaseBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.mock.http.server.reactive.MockServerHttpRequest",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.server.reactive.MockServerHttpRequest$BodyBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.mock.http.server.reactive.MockServerHttpRequest$BaseBuilder"
    ],
    "outerClass": "org.springframework.mock.http.server.reactive.MockServerHttpRequest",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.server.reactive.MockServerHttpRequest$DefaultBodyBuilder",
    "setters": [
      {
        "name": "contextPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;",
        "field": "contextPath"
      },
      {
        "name": "remoteAddress",
        "desc": "(Ljava/net/InetSocketAddress;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;",
        "field": "remoteAddress"
      },
      {
        "name": "sslInfo",
        "desc": "(Lorg/springframework/http/server/reactive/SslInfo;)V",
        "field": "sslInfo"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "Cookie"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.mock.http.server.reactive.MockServerHttpRequest$BodyBuilder"
    ],
    "outerClass": "org.springframework.mock.http.server.reactive.MockServerHttpRequest",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.http.server.reactive.MockServerHttpResponse",
    "setters": [
      {
        "name": "setWriteHandler",
        "desc": "(Ljava/util/function/Function;)V",
        "field": "body"
      }
    ],
    "getters": [
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;",
        "field": "body"
      }
    ],
    "observers": [
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      },
      {
        "name": "getBodyAsString",
        "desc": "()Lreactor/core/publisher/Mono;"
      }
    ],
    "testableMethods": [
      {
        "name": "applyStatusCode",
        "desc": "()V"
      },
      {
        "name": "setWriteHandler",
        "desc": "(Ljava/util/function/Function;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "writeAndFlushWithInternal",
        "desc": "(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;"
      },
      {
        "name": "applyCookies",
        "desc": "()V"
      },
      {
        "name": "setComplete",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      },
      {
        "name": "getBodyAsString",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getNativeResponse",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "writeWithInternal",
        "desc": "(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;"
      },
      {
        "name": "applyHeaders",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "Set-Cookie"
      ]
    },
    "parents": [
      "org.springframework.http.server.reactive.AbstractServerHttpResponse"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.jndi.ExpectedLookupTemplate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addObject",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "lookup",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        16
      ]
    },
    "parents": [
      "org.springframework.jndi.JndiTemplate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.jndi.SimpleNamingContext",
    "setters": [],
    "getters": [
      {
        "name": "getEnvironment",
        "desc": "()Ljava/util/Hashtable;",
        "field": "environment"
      }
    ],
    "observers": [
      {
        "name": "getEnvironment",
        "desc": "()Ljava/util/Hashtable;"
      },
      {
        "name": "getNameInNamespace",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "composeName",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Hashtable;Ljava/util/Hashtable;)V"
      },
      {
        "name": "lookupLink",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "bind",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getNameParser",
        "desc": "(Ljavax/naming/Name;)Ljavax/naming/NameParser;"
      },
      {
        "name": "rebind",
        "desc": "(Ljavax/naming/Name;Ljava/lang/Object;)V"
      },
      {
        "name": "unbind",
        "desc": "(Ljavax/naming/Name;)V"
      },
      {
        "name": "rename",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getNameParser",
        "desc": "(Ljava/lang/String;)Ljavax/naming/NameParser;"
      },
      {
        "name": "rename",
        "desc": "(Ljavax/naming/Name;Ljavax/naming/Name;)V"
      },
      {
        "name": "createSubcontext",
        "desc": "(Ljava/lang/String;)Ljavax/naming/Context;"
      },
      {
        "name": "lookupLink",
        "desc": "(Ljavax/naming/Name;)Ljava/lang/Object;"
      },
      {
        "name": "lookup",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "addToEnvironment",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "composeName",
        "desc": "(Ljavax/naming/Name;Ljavax/naming/Name;)Ljavax/naming/Name;"
      },
      {
        "name": "getEnvironment",
        "desc": "()Ljava/util/Hashtable;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "listBindings",
        "desc": "(Ljava/lang/String;)Ljavax/naming/NamingEnumeration;"
      },
      {
        "name": "getNameInNamespace",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "list",
        "desc": "(Ljava/lang/String;)Ljavax/naming/NamingEnumeration;"
      },
      {
        "name": "destroySubcontext",
        "desc": "(Ljavax/naming/Name;)V"
      },
      {
        "name": "listBindings",
        "desc": "(Ljavax/naming/Name;)Ljavax/naming/NamingEnumeration;"
      },
      {
        "name": "list",
        "desc": "(Ljavax/naming/Name;)Ljavax/naming/NamingEnumeration;"
      },
      {
        "name": "unbind",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "bind",
        "desc": "(Ljavax/naming/Name;Ljava/lang/Object;)V"
      },
      {
        "name": "removeFromEnvironment",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "rebind",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "createSubcontext",
        "desc": "(Ljavax/naming/Name;)Ljavax/naming/Context;"
      },
      {
        "name": "lookup",
        "desc": "(Ljavax/naming/Name;)Ljava/lang/Object;"
      },
      {
        "name": "destroySubcontext",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "str": [
        "",
        ",",
        "/",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.naming.Context"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.jndi.SimpleNamingContext$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.jndi.SimpleNamingContext$AbstractNamingEnumeration",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "next",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hasMoreElements",
        "desc": "()Z"
      },
      {
        "name": "hasMore",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        47
      ],
      "char": [
        47
      ],
      "short": [
        47
      ],
      "int": [
        -1,
        47
      ],
      "str": [
        "",
        "/",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.naming.NamingEnumeration"
    ],
    "outerClass": "org.springframework.mock.jndi.SimpleNamingContext",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.jndi.SimpleNamingContext$BindingEnumeration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.mock.jndi.SimpleNamingContext$AbstractNamingEnumeration"
    ],
    "outerClass": "org.springframework.mock.jndi.SimpleNamingContext",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.jndi.SimpleNamingContext$NameClassPairEnumeration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.mock.jndi.SimpleNamingContext$AbstractNamingEnumeration"
    ],
    "outerClass": "org.springframework.mock.jndi.SimpleNamingContext",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.jndi.SimpleNamingContextBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "bind",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "activate",
        "desc": "()V"
      },
      {
        "name": "deactivate",
        "desc": "()V"
      },
      {
        "name": "createInitialContextFactory",
        "desc": "(Ljava/util/Hashtable;)Ljavax/naming/spi/InitialContextFactory;"
      },
      {
        "name": "emptyActivatedContextBuilder",
        "desc": "()Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;"
      },
      {
        "name": "getCurrentContextBuilder",
        "desc": "()Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.naming.spi.InitialContextFactoryBuilder"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.DelegatingServletInputStream",
    "setters": [],
    "getters": [
      {
        "name": "getSourceStream",
        "desc": "()Ljava/io/InputStream;",
        "field": "sourceStream"
      },
      {
        "name": "isFinished",
        "desc": "()Z",
        "field": "finished"
      }
    ],
    "observers": [
      {
        "name": "available",
        "desc": "()I"
      },
      {
        "name": "isFinished",
        "desc": "()Z"
      },
      {
        "name": "isReady",
        "desc": "()Z"
      },
      {
        "name": "getSourceStream",
        "desc": "()Ljava/io/InputStream;"
      }
    ],
    "testableMethods": [
      {
        "name": "available",
        "desc": "()I"
      },
      {
        "name": "isFinished",
        "desc": "()Z"
      },
      {
        "name": "isReady",
        "desc": "()Z"
      },
      {
        "name": "read",
        "desc": "()I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/InputStream;)V"
      },
      {
        "name": "getSourceStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "setReadListener",
        "desc": "(Ljavax/servlet/ReadListener;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "javax.servlet.ServletInputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.DelegatingServletOutputStream",
    "setters": [],
    "getters": [
      {
        "name": "getTargetStream",
        "desc": "()Ljava/io/OutputStream;",
        "field": "targetStream"
      }
    ],
    "observers": [
      {
        "name": "getTargetStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "isReady",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getTargetStream",
        "desc": "()Ljava/io/OutputStream;"
      },
      {
        "name": "isReady",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "setWriteListener",
        "desc": "(Ljavax/servlet/WriteListener;)V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "javax.servlet.ServletOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.HeaderValueHolder",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getStringValue",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStringValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "getStringValue",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addValueArray",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStringValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getByName",
        "desc": "(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/mock/web/HeaderValueHolder;"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getValues",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "addValue",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "addValues",
        "desc": "(Ljava/util/Collection;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockAsyncContext",
    "setters": [
      {
        "name": "setTimeout",
        "desc": "(J)V",
        "field": "timeout"
      },
      {
        "name": "dispatch",
        "desc": "(Ljavax/servlet/ServletContext;Ljava/lang/String;)V",
        "field": "dispatchedPath"
      }
    ],
    "getters": [
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;",
        "field": "request"
      },
      {
        "name": "getDispatchedPath",
        "desc": "()Ljava/lang/String;",
        "field": "dispatchedPath"
      },
      {
        "name": "getTimeout",
        "desc": "()J",
        "field": "timeout"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;",
        "field": "response"
      },
      {
        "name": "getListeners",
        "desc": "()Ljava/util/List;",
        "field": "listeners"
      }
    ],
    "observers": [
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;"
      },
      {
        "name": "getDispatchedPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hasOriginalRequestAndResponse",
        "desc": "()Z"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "getListeners",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "dispatch",
        "desc": "(Ljavax/servlet/ServletContext;Ljava/lang/String;)V"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;"
      },
      {
        "name": "dispatch",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V"
      },
      {
        "name": "getTimeout",
        "desc": "()J"
      },
      {
        "name": "addListener",
        "desc": "(Ljavax/servlet/AsyncListener;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V"
      },
      {
        "name": "getListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;"
      },
      {
        "name": "setTimeout",
        "desc": "(J)V"
      },
      {
        "name": "dispatch",
        "desc": "()V"
      },
      {
        "name": "addListener",
        "desc": "(Ljavax/servlet/AsyncListener;)V"
      },
      {
        "name": "addDispatchHandler",
        "desc": "(Ljava/lang/Runnable;)V"
      },
      {
        "name": "start",
        "desc": "(Ljava/lang/Runnable;)V"
      },
      {
        "name": "getDispatchedPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hasOriginalRequestAndResponse",
        "desc": "()Z"
      },
      {
        "name": "complete",
        "desc": "()V"
      },
      {
        "name": "createListener",
        "desc": "(Ljava/lang/Class;)Ljavax/servlet/AsyncListener;"
      }
    ],
    "dictionary": {
      "long": [
        10000
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.AsyncContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockBodyContent",
    "setters": [],
    "getters": [
      {
        "name": "getString",
        "desc": "()Ljava/lang/String;",
        "field": "content"
      }
    ],
    "observers": [
      {
        "name": "getString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRemaining",
        "desc": "()I"
      },
      {
        "name": "getReader",
        "desc": "()Ljava/io/Reader;"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "clearBuffer",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "([C)V"
      },
      {
        "name": "newLine",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "(J)V"
      },
      {
        "name": "print",
        "desc": "(I)V"
      },
      {
        "name": "println",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "println",
        "desc": "(F)V"
      },
      {
        "name": "println",
        "desc": "(C)V"
      },
      {
        "name": "println",
        "desc": "(D)V"
      },
      {
        "name": "getString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRemaining",
        "desc": "()I"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "(Z)V"
      },
      {
        "name": "print",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeOut",
        "desc": "(Ljava/io/Writer;)V"
      },
      {
        "name": "println",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/io/Writer;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "println",
        "desc": "(I)V"
      },
      {
        "name": "getReader",
        "desc": "()Ljava/io/Reader;"
      },
      {
        "name": "println",
        "desc": "(J)V"
      },
      {
        "name": "print",
        "desc": "(D)V"
      },
      {
        "name": "print",
        "desc": "(C)V"
      },
      {
        "name": "print",
        "desc": "(F)V"
      },
      {
        "name": "println",
        "desc": "([C)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;Ljava/io/Writer;)V"
      },
      {
        "name": "println",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "println",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "javax.servlet.jsp.tagext.BodyContent"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockCookie",
    "setters": [
      {
        "name": "setSameSite",
        "desc": "(Ljava/lang/String;)V",
        "field": "sameSite"
      }
    ],
    "getters": [
      {
        "name": "getSameSite",
        "desc": "()Ljava/lang/String;",
        "field": "sameSite"
      }
    ],
    "observers": [
      {
        "name": "getSameSite",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/String;)Lorg/springframework/mock/web/MockCookie;"
      },
      {
        "name": "setSameSite",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSameSite",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "=",
        "Domain",
        "HttpOnly",
        "Max-Age",
        "Path",
        "SameSite",
        "Secure",
        "\\s*=\\s*"
      ]
    },
    "parents": [
      "javax.servlet.http.Cookie"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockExpressionEvaluator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/jsp/PageContext;)V"
      },
      {
        "name": "evaluate",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;Ljavax/servlet/jsp/el/VariableResolver;Ljavax/servlet/jsp/el/FunctionMapper;)Ljava/lang/Object;"
      },
      {
        "name": "parseExpression",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;Ljavax/servlet/jsp/el/FunctionMapper;)Ljavax/servlet/jsp/el/Expression;"
      },
      {
        "name": "doEvaluate",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;Ljavax/servlet/jsp/el/FunctionMapper;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "javax.servlet.jsp.el.ExpressionEvaluator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockExpressionEvaluator$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "javax.servlet.jsp.el.Expression"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockFilterChain",
    "setters": [
      {
        "name": "doFilter",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V",
        "field": "request"
      }
    ],
    "getters": [
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;",
        "field": "request"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;",
        "field": "response"
      }
    ],
    "observers": [
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;"
      }
    ],
    "testableMethods": [
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "doFilter",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/Servlet;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/Servlet;[Ljavax/servlet/Filter;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.FilterChain"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockFilterChain$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockFilterChain$ServletFilterProxy",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "javax.servlet.Filter"
    ],
    "outerClass": "org.springframework.mock.web.MockFilterChain",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockFilterConfig",
    "setters": [],
    "getters": [
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;",
        "field": "servletContext"
      },
      {
        "name": "getFilterName",
        "desc": "()Ljava/lang/String;",
        "field": "filterName"
      }
    ],
    "observers": [
      {
        "name": "getInitParameterNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getFilterName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      }
    ],
    "testableMethods": [
      {
        "name": "getInitParameterNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getFilterName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addInitParameter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;Ljava/lang/String;)V"
      },
      {
        "name": "getInitParameter",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.FilterConfig"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockHttpServletRequest",
    "setters": [
      {
        "name": "startAsync",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;",
        "field": "asyncStarted"
      },
      {
        "name": "setRequestedSessionIdFromCookie",
        "desc": "(Z)V",
        "field": "requestedSessionIdFromCookie"
      },
      {
        "name": "setContentType",
        "desc": "(Ljava/lang/String;)V",
        "field": "contentType"
      },
      {
        "name": "setRequestedSessionIdFromURL",
        "desc": "(Z)V",
        "field": "requestedSessionIdFromURL"
      },
      {
        "name": "setContent",
        "desc": "([B)V",
        "field": "content"
      },
      {
        "name": "setCookies",
        "desc": "([Ljavax/servlet/http/Cookie;)V",
        "field": "cookies"
      },
      {
        "name": "setQueryString",
        "desc": "(Ljava/lang/String;)V",
        "field": "queryString"
      },
      {
        "name": "setAsyncStarted",
        "desc": "(Z)V",
        "field": "asyncStarted"
      },
      {
        "name": "setContextPath",
        "desc": "(Ljava/lang/String;)V",
        "field": "contextPath"
      },
      {
        "name": "setSession",
        "desc": "(Ljavax/servlet/http/HttpSession;)V",
        "field": "session"
      },
      {
        "name": "setServletPath",
        "desc": "(Ljava/lang/String;)V",
        "field": "servletPath"
      },
      {
        "name": "setServerPort",
        "desc": "(I)V",
        "field": "serverPort"
      },
      {
        "name": "setRemotePort",
        "desc": "(I)V",
        "field": "remotePort"
      },
      {
        "name": "setRemoteHost",
        "desc": "(Ljava/lang/String;)V",
        "field": "remoteHost"
      },
      {
        "name": "setRequestedSessionIdValid",
        "desc": "(Z)V",
        "field": "requestedSessionIdValid"
      },
      {
        "name": "setRemoteAddr",
        "desc": "(Ljava/lang/String;)V",
        "field": "remoteAddr"
      },
      {
        "name": "setAsyncSupported",
        "desc": "(Z)V",
        "field": "asyncSupported"
      },
      {
        "name": "setAsyncContext",
        "desc": "(Lorg/springframework/mock/web/MockAsyncContext;)V",
        "field": "asyncContext"
      },
      {
        "name": "setLocalName",
        "desc": "(Ljava/lang/String;)V",
        "field": "localName"
      },
      {
        "name": "setCharacterEncoding",
        "desc": "(Ljava/lang/String;)V",
        "field": "characterEncoding"
      },
      {
        "name": "setRemoteUser",
        "desc": "(Ljava/lang/String;)V",
        "field": "remoteUser"
      },
      {
        "name": "setRequestURI",
        "desc": "(Ljava/lang/String;)V",
        "field": "requestURI"
      },
      {
        "name": "setRequestedSessionId",
        "desc": "(Ljava/lang/String;)V",
        "field": "requestedSessionId"
      },
      {
        "name": "setDispatcherType",
        "desc": "(Ljavax/servlet/DispatcherType;)V",
        "field": "dispatcherType"
      },
      {
        "name": "setSecure",
        "desc": "(Z)V",
        "field": "secure"
      },
      {
        "name": "setScheme",
        "desc": "(Ljava/lang/String;)V",
        "field": "scheme"
      },
      {
        "name": "setServerName",
        "desc": "(Ljava/lang/String;)V",
        "field": "serverName"
      },
      {
        "name": "setPathInfo",
        "desc": "(Ljava/lang/String;)V",
        "field": "pathInfo"
      },
      {
        "name": "setLocalPort",
        "desc": "(I)V",
        "field": "localPort"
      },
      {
        "name": "setAuthType",
        "desc": "(Ljava/lang/String;)V",
        "field": "authType"
      },
      {
        "name": "setLocalAddr",
        "desc": "(Ljava/lang/String;)V",
        "field": "localAddr"
      },
      {
        "name": "setProtocol",
        "desc": "(Ljava/lang/String;)V",
        "field": "protocol"
      },
      {
        "name": "setMethod",
        "desc": "(Ljava/lang/String;)V",
        "field": "method"
      },
      {
        "name": "setUserPrincipal",
        "desc": "(Ljava/security/Principal;)V",
        "field": "userPrincipal"
      }
    ],
    "getters": [
      {
        "name": "isRequestedSessionIdFromURL",
        "desc": "()Z",
        "field": "requestedSessionIdFromURL"
      },
      {
        "name": "getPathInfo",
        "desc": "()Ljava/lang/String;",
        "field": "pathInfo"
      },
      {
        "name": "getDispatcherType",
        "desc": "()Ljavax/servlet/DispatcherType;",
        "field": "dispatcherType"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;",
        "field": "servletContext"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/String;",
        "field": "method"
      },
      {
        "name": "getQueryString",
        "desc": "()Ljava/lang/String;",
        "field": "queryString"
      },
      {
        "name": "getRemoteUser",
        "desc": "()Ljava/lang/String;",
        "field": "remoteUser"
      },
      {
        "name": "getUserPrincipal",
        "desc": "()Ljava/security/Principal;",
        "field": "userPrincipal"
      },
      {
        "name": "isAsyncStarted",
        "desc": "()Z",
        "field": "asyncStarted"
      },
      {
        "name": "getCookies",
        "desc": "()[Ljavax/servlet/http/Cookie;",
        "field": "cookies"
      },
      {
        "name": "getLocalAddr",
        "desc": "()Ljava/lang/String;",
        "field": "localAddr"
      },
      {
        "name": "getAsyncContext",
        "desc": "()Ljavax/servlet/AsyncContext;",
        "field": "asyncContext"
      },
      {
        "name": "isActive",
        "desc": "()Z",
        "field": "active"
      },
      {
        "name": "getRemotePort",
        "desc": "()I",
        "field": "remotePort"
      },
      {
        "name": "getRemoteHost",
        "desc": "()Ljava/lang/String;",
        "field": "remoteHost"
      },
      {
        "name": "getRequestedSessionId",
        "desc": "()Ljava/lang/String;",
        "field": "requestedSessionId"
      },
      {
        "name": "getServletPath",
        "desc": "()Ljava/lang/String;",
        "field": "servletPath"
      },
      {
        "name": "getLocalName",
        "desc": "()Ljava/lang/String;",
        "field": "localName"
      },
      {
        "name": "getAuthType",
        "desc": "()Ljava/lang/String;",
        "field": "authType"
      },
      {
        "name": "isAsyncSupported",
        "desc": "()Z",
        "field": "asyncSupported"
      },
      {
        "name": "getCharacterEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "characterEncoding"
      },
      {
        "name": "getRequestURI",
        "desc": "()Ljava/lang/String;",
        "field": "requestURI"
      },
      {
        "name": "getContentAsByteArray",
        "desc": "()[B",
        "field": "content"
      },
      {
        "name": "getScheme",
        "desc": "()Ljava/lang/String;",
        "field": "scheme"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;",
        "field": "contentType"
      },
      {
        "name": "getLocalPort",
        "desc": "()I",
        "field": "localPort"
      },
      {
        "name": "getRemoteAddr",
        "desc": "()Ljava/lang/String;",
        "field": "remoteAddr"
      },
      {
        "name": "getContextPath",
        "desc": "()Ljava/lang/String;",
        "field": "contextPath"
      },
      {
        "name": "isRequestedSessionIdValid",
        "desc": "()Z",
        "field": "requestedSessionIdValid"
      },
      {
        "name": "isRequestedSessionIdFromCookie",
        "desc": "()Z",
        "field": "requestedSessionIdFromCookie"
      },
      {
        "name": "getProtocol",
        "desc": "()Ljava/lang/String;",
        "field": "protocol"
      }
    ],
    "observers": [
      {
        "name": "isRequestedSessionIdFromURL",
        "desc": "()Z"
      },
      {
        "name": "isRequestedSessionIdFromUrl",
        "desc": "()Z"
      },
      {
        "name": "getDispatcherType",
        "desc": "()Ljavax/servlet/DispatcherType;"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReader",
        "desc": "()Ljava/io/BufferedReader;"
      },
      {
        "name": "getQueryString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRemoteUser",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getUserPrincipal",
        "desc": "()Ljava/security/Principal;"
      },
      {
        "name": "getCookies",
        "desc": "()[Ljavax/servlet/http/Cookie;"
      },
      {
        "name": "getLocalAddr",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentAsString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRemoteHost",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getAuthType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRequestURL",
        "desc": "()Ljava/lang/StringBuffer;"
      },
      {
        "name": "isAsyncSupported",
        "desc": "()Z"
      },
      {
        "name": "getRequestURI",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPathTranslated",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getScheme",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocalPort",
        "desc": "()I"
      },
      {
        "name": "getProtocol",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentLength",
        "desc": "()I"
      },
      {
        "name": "getPathInfo",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentLengthLong",
        "desc": "()J"
      },
      {
        "name": "getServerPort",
        "desc": "()I"
      },
      {
        "name": "getLocales",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getParameterNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "isAsyncStarted",
        "desc": "()Z"
      },
      {
        "name": "getAsyncContext",
        "desc": "()Ljavax/servlet/AsyncContext;"
      },
      {
        "name": "isActive",
        "desc": "()Z"
      },
      {
        "name": "getRemotePort",
        "desc": "()I"
      },
      {
        "name": "getRequestedSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getServletPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getServerName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParts",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "getHeaderNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getCharacterEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParameterMap",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getContentAsByteArray",
        "desc": "()[B"
      },
      {
        "name": "getRemoteAddr",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljavax/servlet/ServletInputStream;"
      },
      {
        "name": "getContextPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isRequestedSessionIdValid",
        "desc": "()Z"
      },
      {
        "name": "getAttributeNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getSession",
        "desc": "()Ljavax/servlet/http/HttpSession;"
      },
      {
        "name": "isRequestedSessionIdFromCookie",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "setRequestedSessionIdFromCookie",
        "desc": "(Z)V"
      },
      {
        "name": "removeParameter",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getMethod",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getReader",
        "desc": "()Ljava/io/BufferedReader;"
      },
      {
        "name": "setServerPort",
        "desc": "(I)V"
      },
      {
        "name": "setRemotePort",
        "desc": "(I)V"
      },
      {
        "name": "getCookies",
        "desc": "()[Ljavax/servlet/http/Cookie;"
      },
      {
        "name": "addPart",
        "desc": "(Ljavax/servlet/http/Part;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getLocalAddr",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentAsString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setAsyncContext",
        "desc": "(Lorg/springframework/mock/web/MockAsyncContext;)V"
      },
      {
        "name": "setLocalName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getRemoteHost",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "setParameter",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "clearAttributes",
        "desc": "()V"
      },
      {
        "name": "isAsyncSupported",
        "desc": "()Z"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "getSession",
        "desc": "(Z)Ljavax/servlet/http/HttpSession;"
      },
      {
        "name": "getLocalPort",
        "desc": "()I"
      },
      {
        "name": "setPreferredLocales",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "setProtocol",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setMethod",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "login",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getContentLength",
        "desc": "()I"
      },
      {
        "name": "getRealPath",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "addUserRole",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getPathInfo",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentLengthLong",
        "desc": "()J"
      },
      {
        "name": "setContentType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setCookies",
        "desc": "([Ljavax/servlet/http/Cookie;)V"
      },
      {
        "name": "getParameterNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "isAsyncStarted",
        "desc": "()Z"
      },
      {
        "name": "getDateHeader",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "setRequestedSessionIdValid",
        "desc": "(Z)V"
      },
      {
        "name": "setAsyncSupported",
        "desc": "(Z)V"
      },
      {
        "name": "isActive",
        "desc": "()Z"
      },
      {
        "name": "getRemotePort",
        "desc": "()I"
      },
      {
        "name": "getServletPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParts",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "addPreferredLocale",
        "desc": "(Ljava/util/Locale;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;)V"
      },
      {
        "name": "getHeaderNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getCharacterEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "invalidate",
        "desc": "()V"
      },
      {
        "name": "addParameter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "authenticate",
        "desc": "(Ljavax/servlet/http/HttpServletResponse;)Z"
      },
      {
        "name": "getParameterMap",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "changeSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentAsByteArray",
        "desc": "()[B"
      },
      {
        "name": "getRemoteAddr",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljavax/servlet/ServletInputStream;"
      },
      {
        "name": "getContextPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isRequestedSessionIdValid",
        "desc": "()Z"
      },
      {
        "name": "setLocalAddr",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isRequestedSessionIdFromURL",
        "desc": "()Z"
      },
      {
        "name": "isRequestedSessionIdFromUrl",
        "desc": "()Z"
      },
      {
        "name": "getDispatcherType",
        "desc": "()Ljavax/servlet/DispatcherType;"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "setQueryString",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "logout",
        "desc": "()V"
      },
      {
        "name": "setAsyncStarted",
        "desc": "(Z)V"
      },
      {
        "name": "setContextPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getQueryString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRemoteUser",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getHeaders",
        "desc": "(Ljava/lang/String;)Ljava/util/Enumeration;"
      },
      {
        "name": "getUserPrincipal",
        "desc": "()Ljava/security/Principal;"
      },
      {
        "name": "getIntHeader",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "upgrade",
        "desc": "(Ljava/lang/Class;)Ljavax/servlet/http/HttpUpgradeHandler;"
      },
      {
        "name": "setRemoteAddr",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setCharacterEncoding",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "removeAllParameters",
        "desc": "()V"
      },
      {
        "name": "setParameter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getAuthType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setDispatcherType",
        "desc": "(Ljavax/servlet/DispatcherType;)V"
      },
      {
        "name": "getRequestURL",
        "desc": "()Ljava/lang/StringBuffer;"
      },
      {
        "name": "setSecure",
        "desc": "(Z)V"
      },
      {
        "name": "getParameter",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getRequestDispatcher",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;"
      },
      {
        "name": "getRequestURI",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPathTranslated",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setScheme",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getScheme",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setServerName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setPathInfo",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "isUserInRole",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setLocalPort",
        "desc": "(I)V"
      },
      {
        "name": "setAuthType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getAttribute",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getHeader",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getProtocol",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setUserPrincipal",
        "desc": "(Ljava/security/Principal;)V"
      },
      {
        "name": "startAsync",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;"
      },
      {
        "name": "getServerPort",
        "desc": "()I"
      },
      {
        "name": "setRequestedSessionIdFromURL",
        "desc": "(Z)V"
      },
      {
        "name": "setContent",
        "desc": "([B)V"
      },
      {
        "name": "getLocales",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "addHeader",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "setSession",
        "desc": "(Ljavax/servlet/http/HttpSession;)V"
      },
      {
        "name": "setServletPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "addParameter",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)V"
      },
      {
        "name": "startAsync",
        "desc": "()Ljavax/servlet/AsyncContext;"
      },
      {
        "name": "setRemoteHost",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getAsyncContext",
        "desc": "()Ljavax/servlet/AsyncContext;"
      },
      {
        "name": "removeHeader",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "setRemoteUser",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getRequestedSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setRequestURI",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "addParameters",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "getServerName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParameterValues",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "setRequestedSessionId",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getPart",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/http/Part;"
      },
      {
        "name": "checkActive",
        "desc": "()V"
      },
      {
        "name": "setParameters",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "setAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getAttributeNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "isSecure",
        "desc": "()Z"
      },
      {
        "name": "getSession",
        "desc": "()Ljavax/servlet/http/HttpSession;"
      },
      {
        "name": "isRequestedSessionIdFromCookie",
        "desc": "()Z"
      },
      {
        "name": "removeAttribute",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        16,
        58,
        80
      ],
      "char": [
        58,
        80
      ],
      "short": [
        16,
        58,
        80,
        443
      ],
      "int": [
        -1,
        0,
        1,
        2,
        16,
        58,
        80,
        443
      ],
      "str": [
        "",
        "127.0.0.1",
        ":",
        "://",
        "Accept-Language",
        "Content-Type",
        "Cookie",
        "GMT",
        "HTTP/1.1",
        "[",
        "]",
        "charset=",
        "http",
        "https",
        "localhost"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.http.HttpServletRequest"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockHttpServletResponse",
    "setters": [
      {
        "name": "sendError",
        "desc": "(ILjava/lang/String;)V",
        "field": "status"
      },
      {
        "name": "setContentType",
        "desc": "(Ljava/lang/String;)V",
        "field": "contentType"
      },
      {
        "name": "setBufferSize",
        "desc": "(I)V",
        "field": "bufferSize"
      },
      {
        "name": "setStatus",
        "desc": "(I)V",
        "field": "status"
      },
      {
        "name": "setOutputStreamAccessAllowed",
        "desc": "(Z)V",
        "field": "outputStreamAccessAllowed"
      },
      {
        "name": "setLocale",
        "desc": "(Ljava/util/Locale;)V",
        "field": "locale"
      },
      {
        "name": "sendError",
        "desc": "(I)V",
        "field": "status"
      },
      {
        "name": "setContentLength",
        "desc": "(I)V",
        "field": "contentLength"
      },
      {
        "name": "setForwardedUrl",
        "desc": "(Ljava/lang/String;)V",
        "field": "forwardedUrl"
      },
      {
        "name": "setContentLengthLong",
        "desc": "(J)V",
        "field": "contentLength"
      },
      {
        "name": "setCharacterEncoding",
        "desc": "(Ljava/lang/String;)V",
        "field": "characterEncoding"
      },
      {
        "name": "setCommitted",
        "desc": "(Z)V",
        "field": "committed"
      },
      {
        "name": "setStatus",
        "desc": "(ILjava/lang/String;)V",
        "field": "status"
      },
      {
        "name": "setWriterAccessAllowed",
        "desc": "(Z)V",
        "field": "writerAccessAllowed"
      }
    ],
    "getters": [
      {
        "name": "getForwardedUrl",
        "desc": "()Ljava/lang/String;",
        "field": "forwardedUrl"
      },
      {
        "name": "isWriterAccessAllowed",
        "desc": "()Z",
        "field": "writerAccessAllowed"
      },
      {
        "name": "getIncludedUrls",
        "desc": "()Ljava/util/List;",
        "field": "includedUrls"
      },
      {
        "name": "getBufferSize",
        "desc": "()I",
        "field": "bufferSize"
      },
      {
        "name": "isCommitted",
        "desc": "()Z",
        "field": "committed"
      },
      {
        "name": "getErrorMessage",
        "desc": "()Ljava/lang/String;",
        "field": "errorMessage"
      },
      {
        "name": "getContentLengthLong",
        "desc": "()J",
        "field": "contentLength"
      },
      {
        "name": "isOutputStreamAccessAllowed",
        "desc": "()Z",
        "field": "outputStreamAccessAllowed"
      },
      {
        "name": "getCharacterEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "characterEncoding"
      },
      {
        "name": "isCharset",
        "desc": "()Z",
        "field": "charset"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;",
        "field": "contentType"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;",
        "field": "locale"
      },
      {
        "name": "getStatus",
        "desc": "()I",
        "field": "status"
      }
    ],
    "observers": [
      {
        "name": "getForwardedUrl",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getHeaderNames",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "isWriterAccessAllowed",
        "desc": "()Z"
      },
      {
        "name": "getRedirectedUrl",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getIncludedUrls",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getBufferSize",
        "desc": "()I"
      },
      {
        "name": "isCommitted",
        "desc": "()Z"
      },
      {
        "name": "getErrorMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContentLengthLong",
        "desc": "()J"
      },
      {
        "name": "isOutputStreamAccessAllowed",
        "desc": "()Z"
      },
      {
        "name": "getCharacterEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getIncludedUrl",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOutputStream",
        "desc": "()Ljavax/servlet/ServletOutputStream;"
      },
      {
        "name": "getCookies",
        "desc": "()[Ljavax/servlet/http/Cookie;"
      },
      {
        "name": "isCharset",
        "desc": "()Z"
      },
      {
        "name": "getContentAsByteArray",
        "desc": "()[B"
      },
      {
        "name": "getContentAsString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getWriter",
        "desc": "()Ljava/io/PrintWriter;"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getStatus",
        "desc": "()I"
      },
      {
        "name": "getContentLength",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getForwardedUrl",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getHeaderNames",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "sendError",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "getIncludedUrls",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "resetBuffer",
        "desc": "()V"
      },
      {
        "name": "flushBuffer",
        "desc": "()V"
      },
      {
        "name": "getCookies",
        "desc": "()[Ljavax/servlet/http/Cookie;"
      },
      {
        "name": "getContentAsString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setContentLength",
        "desc": "(I)V"
      },
      {
        "name": "setContentLengthLong",
        "desc": "(J)V"
      },
      {
        "name": "addIncludedUrl",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setCharacterEncoding",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "getHeaderValues",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "setWriterAccessAllowed",
        "desc": "(Z)V"
      },
      {
        "name": "containsHeader",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "isWriterAccessAllowed",
        "desc": "()Z"
      },
      {
        "name": "getRedirectedUrl",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBufferSize",
        "desc": "()I"
      },
      {
        "name": "isCommitted",
        "desc": "()Z"
      },
      {
        "name": "getErrorMessage",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setDateHeader",
        "desc": "(Ljava/lang/String;J)V"
      },
      {
        "name": "isOutputStreamAccessAllowed",
        "desc": "()Z"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setLocale",
        "desc": "(Ljava/util/Locale;)V"
      },
      {
        "name": "sendRedirect",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "encodeRedirectURL",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "encodeRedirectUrl",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "addHeader",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getHeader",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getContentLength",
        "desc": "()I"
      },
      {
        "name": "getHeaders",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "addDateHeader",
        "desc": "(Ljava/lang/String;J)V"
      },
      {
        "name": "getContentLengthLong",
        "desc": "()J"
      },
      {
        "name": "setContentType",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setStatus",
        "desc": "(I)V"
      },
      {
        "name": "getIncludedUrl",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addIntHeader",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "getDateHeader",
        "desc": "(Ljava/lang/String;)J"
      },
      {
        "name": "setHeader",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "setOutputStreamAccessAllowed",
        "desc": "(Z)V"
      },
      {
        "name": "getWriter",
        "desc": "()Ljava/io/PrintWriter;"
      },
      {
        "name": "setForwardedUrl",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getHeaderValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "setIncludedUrl",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setStatus",
        "desc": "(ILjava/lang/String;)V"
      },
      {
        "name": "setBufferSize",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getCookie",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/http/Cookie;"
      },
      {
        "name": "addCookie",
        "desc": "(Ljavax/servlet/http/Cookie;)V"
      },
      {
        "name": "getCharacterEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOutputStream",
        "desc": "()Ljavax/servlet/ServletOutputStream;"
      },
      {
        "name": "isCharset",
        "desc": "()Z"
      },
      {
        "name": "getContentAsByteArray",
        "desc": "()[B"
      },
      {
        "name": "sendError",
        "desc": "(I)V"
      },
      {
        "name": "encodeURL",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getStatus",
        "desc": "()I"
      },
      {
        "name": "setIntHeader",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "encodeUrl",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "setCommitted",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "short": [
        200,
        302,
        1024,
        4096
      ],
      "int": [
        -1,
        0,
        1,
        200,
        302,
        1024,
        4096
      ],
      "long": [
        0
      ],
      "str": [
        "Content-Language",
        "Content-Length",
        "Content-Type",
        "Expires",
        "GMT",
        "ISO-8859-1",
        "Set-Cookie",
        "charset="
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.http.HttpServletResponse"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockHttpServletResponse$ResponsePrintWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.io.PrintWriter"
    ],
    "outerClass": "org.springframework.mock.web.MockHttpServletResponse",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockHttpServletResponse$ResponseServletOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.springframework.mock.web.DelegatingServletOutputStream"
    ],
    "outerClass": "org.springframework.mock.web.MockHttpServletResponse",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockHttpSession",
    "setters": [
      {
        "name": "setMaxInactiveInterval",
        "desc": "(I)V",
        "field": "maxInactiveInterval"
      },
      {
        "name": "setNew",
        "desc": "(Z)V",
        "field": "isNew"
      }
    ],
    "getters": [
      {
        "name": "getMaxInactiveInterval",
        "desc": "()I",
        "field": "maxInactiveInterval"
      },
      {
        "name": "isInvalid",
        "desc": "()Z",
        "field": "invalid"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;",
        "field": "id"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;",
        "field": "servletContext"
      }
    ],
    "observers": [
      {
        "name": "getMaxInactiveInterval",
        "desc": "()I"
      },
      {
        "name": "getCreationTime",
        "desc": "()J"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "getSessionContext",
        "desc": "()Ljavax/servlet/http/HttpSessionContext;"
      },
      {
        "name": "getLastAccessedTime",
        "desc": "()J"
      },
      {
        "name": "getAttributeNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "isInvalid",
        "desc": "()Z"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValueNames",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "serializeState",
        "desc": "()Ljava/io/Serializable;"
      },
      {
        "name": "setNew",
        "desc": "(Z)V"
      },
      {
        "name": "isNew",
        "desc": "()Z"
      },
      {
        "name": "getCreationTime",
        "desc": "()J"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "getLastAccessedTime",
        "desc": "()J"
      },
      {
        "name": "isInvalid",
        "desc": "()Z"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getValue",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "removeValue",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "access",
        "desc": "()V"
      },
      {
        "name": "clearAttributes",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;)V"
      },
      {
        "name": "putValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getValueNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;Ljava/lang/String;)V"
      },
      {
        "name": "invalidate",
        "desc": "()V"
      },
      {
        "name": "changeSessionId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "deserializeState",
        "desc": "(Ljava/io/Serializable;)V"
      },
      {
        "name": "getMaxInactiveInterval",
        "desc": "()I"
      },
      {
        "name": "getAttribute",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getSessionContext",
        "desc": "()Ljavax/servlet/http/HttpSessionContext;"
      },
      {
        "name": "setAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getAttributeNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "removeAttribute",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setMaxInactiveInterval",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "getSessionContext"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.http.HttpSession"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockJspWriter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getTargetWriter",
        "desc": "()Ljava/io/PrintWriter;"
      },
      {
        "name": "getRemaining",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "clearBuffer",
        "desc": "()V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "([C)V"
      },
      {
        "name": "newLine",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "(J)V"
      },
      {
        "name": "print",
        "desc": "(I)V"
      },
      {
        "name": "println",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "println",
        "desc": "(F)V"
      },
      {
        "name": "println",
        "desc": "(C)V"
      },
      {
        "name": "println",
        "desc": "(D)V"
      },
      {
        "name": "getRemaining",
        "desc": "()I"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "print",
        "desc": "(Z)V"
      },
      {
        "name": "print",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "println",
        "desc": "()V"
      },
      {
        "name": "getTargetWriter",
        "desc": "()Ljava/io/PrintWriter;"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/http/HttpServletResponse;Ljava/io/Writer;)V"
      },
      {
        "name": "print",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "println",
        "desc": "(I)V"
      },
      {
        "name": "println",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/io/Writer;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/http/HttpServletResponse;)V"
      },
      {
        "name": "print",
        "desc": "(D)V"
      },
      {
        "name": "print",
        "desc": "(C)V"
      },
      {
        "name": "print",
        "desc": "(F)V"
      },
      {
        "name": "println",
        "desc": "([C)V"
      },
      {
        "name": "println",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "println",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        1
      ]
    },
    "parents": [
      "javax.servlet.jsp.JspWriter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockMultipartFile",
    "setters": [],
    "getters": [
      {
        "name": "getBytes",
        "desc": "()[B",
        "field": "content"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;",
        "field": "contentType"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getOriginalFilename",
        "desc": "()Ljava/lang/String;",
        "field": "originalFilename"
      }
    ],
    "observers": [
      {
        "name": "getBytes",
        "desc": "()[B"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOriginalFilename",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()J"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "getBytes",
        "desc": "()[B"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[B)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/io/InputStream;)V"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "transferTo",
        "desc": "(Ljava/io/File;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOriginalFilename",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.web.multipart.MultipartFile"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockMultipartHttpServletRequest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRequestMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "getRequestHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getMultiFileMap",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getFileNames",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "getFileMap",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "testableMethods": [
      {
        "name": "getRequestMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "addFile",
        "desc": "(Lorg/springframework/web/multipart/MultipartFile;)V"
      },
      {
        "name": "getRequestHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;)V"
      },
      {
        "name": "getMultiFileMap",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getFiles",
        "desc": "(Ljava/lang/String;)Ljava/util/List;"
      },
      {
        "name": "getMultipartContentType",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getMultipartHeaders",
        "desc": "(Ljava/lang/String;)Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getFile",
        "desc": "(Ljava/lang/String;)Lorg/springframework/web/multipart/MultipartFile;"
      },
      {
        "name": "getFileNames",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "getFileMap",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "dictionary": {
      "str": [
        "POST",
        "multipart/form-data"
      ]
    },
    "parents": [
      "org.springframework.mock.web.MockHttpServletRequest",
      "org.springframework.web.multipart.MultipartHttpServletRequest"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockPageContext",
    "setters": [],
    "getters": [
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;",
        "field": "request"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;",
        "field": "response"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;",
        "field": "servletContext"
      },
      {
        "name": "getServletConfig",
        "desc": "()Ljavax/servlet/ServletConfig;",
        "field": "servletConfig"
      }
    ],
    "observers": [
      {
        "name": "getELContext",
        "desc": "()Ljavax/el/ELContext;"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "getServletConfig",
        "desc": "()Ljavax/servlet/ServletConfig;"
      },
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;"
      },
      {
        "name": "getContentAsByteArray",
        "desc": "()[B"
      },
      {
        "name": "getVariableResolver",
        "desc": "()Ljavax/servlet/jsp/el/VariableResolver;"
      },
      {
        "name": "getContentAsString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getOut",
        "desc": "()Ljavax/servlet/jsp/JspWriter;"
      },
      {
        "name": "getAttributeNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getExpressionEvaluator",
        "desc": "()Ljavax/servlet/jsp/el/ExpressionEvaluator;"
      },
      {
        "name": "getSession",
        "desc": "()Ljavax/servlet/http/HttpSession;"
      },
      {
        "name": "getException",
        "desc": "()Ljava/lang/Exception;"
      }
    ],
    "testableMethods": [
      {
        "name": "handlePageException",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;)V"
      },
      {
        "name": "getResponse",
        "desc": "()Ljavax/servlet/ServletResponse;"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "include",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "initialize",
        "desc": "(Ljavax/servlet/Servlet;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljava/lang/String;ZIZ)V"
      },
      {
        "name": "getRequest",
        "desc": "()Ljavax/servlet/ServletRequest;"
      },
      {
        "name": "getContentAsString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "handlePageException",
        "desc": "(Ljava/lang/Exception;)V"
      },
      {
        "name": "getExpressionEvaluator",
        "desc": "()Ljavax/servlet/jsp/el/ExpressionEvaluator;"
      },
      {
        "name": "findAttribute",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getELContext",
        "desc": "()Ljavax/el/ELContext;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;)V"
      },
      {
        "name": "getAttribute",
        "desc": "(Ljava/lang/String;I)Ljava/lang/Object;"
      },
      {
        "name": "getServletConfig",
        "desc": "()Ljavax/servlet/ServletConfig;"
      },
      {
        "name": "setAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;I)V"
      },
      {
        "name": "release",
        "desc": "()V"
      },
      {
        "name": "include",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "removeAttribute",
        "desc": "(Ljava/lang/String;I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V"
      },
      {
        "name": "getContentAsByteArray",
        "desc": "()[B"
      },
      {
        "name": "getVariableResolver",
        "desc": "()Ljavax/servlet/jsp/el/VariableResolver;"
      },
      {
        "name": "getAttributesScope",
        "desc": "(Ljava/lang/String;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/ServletConfig;)V"
      },
      {
        "name": "getAttribute",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getOut",
        "desc": "()Ljavax/servlet/jsp/JspWriter;"
      },
      {
        "name": "setAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getAttributeNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getPage",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getAttributeNamesInScope",
        "desc": "(I)Ljava/util/Enumeration;"
      },
      {
        "name": "forward",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSession",
        "desc": "()Ljavax/servlet/http/HttpSession;"
      },
      {
        "name": "removeAttribute",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getException",
        "desc": "()Ljava/lang/Exception;"
      }
    ],
    "dictionary": {
      "int": [
        4
      ]
    },
    "parents": [
      "javax.servlet.jsp.PageContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockPart",
    "setters": [],
    "getters": [
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;",
        "field": "headers"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getSubmittedFileName",
        "desc": "()Ljava/lang/String;",
        "field": "filename"
      }
    ],
    "observers": [
      {
        "name": "getHeaderNames",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSize",
        "desc": "()J"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getSubmittedFileName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "delete",
        "desc": "()V"
      },
      {
        "name": "getHeaderNames",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getHeaders",
        "desc": "(Ljava/lang/String;)Ljava/util/Collection;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[B)V"
      },
      {
        "name": "getContentType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;[B)V"
      },
      {
        "name": "getSize",
        "desc": "()J"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getHeader",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "write",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSubmittedFileName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.http.Part"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockRequestDispatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getMockHttpServletResponse",
        "desc": "(Ljavax/servlet/ServletResponse;)Lorg/springframework/mock/web/MockHttpServletResponse;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "forward",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V"
      },
      {
        "name": "include",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V"
      }
    ],
    "dictionary": {
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.RequestDispatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockServletConfig",
    "setters": [],
    "getters": [
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;",
        "field": "servletContext"
      },
      {
        "name": "getServletName",
        "desc": "()Ljava/lang/String;",
        "field": "servletName"
      }
    ],
    "observers": [
      {
        "name": "getInitParameterNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "getServletName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getInitParameterNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "addInitParameter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getServletName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;Ljava/lang/String;)V"
      },
      {
        "name": "getInitParameter",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.ServletConfig"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockServletContext",
    "setters": [
      {
        "name": "setMajorVersion",
        "desc": "(I)V",
        "field": "majorVersion"
      },
      {
        "name": "setServletContextName",
        "desc": "(Ljava/lang/String;)V",
        "field": "servletContextName"
      },
      {
        "name": "setSessionTrackingModes",
        "desc": "(Ljava/util/Set;)V",
        "field": "sessionTrackingModes"
      },
      {
        "name": "setResponseCharacterEncoding",
        "desc": "(Ljava/lang/String;)V",
        "field": "responseCharacterEncoding"
      },
      {
        "name": "setMinorVersion",
        "desc": "(I)V",
        "field": "minorVersion"
      },
      {
        "name": "setEffectiveMajorVersion",
        "desc": "(I)V",
        "field": "effectiveMajorVersion"
      },
      {
        "name": "setContextPath",
        "desc": "(Ljava/lang/String;)V",
        "field": "contextPath"
      },
      {
        "name": "setEffectiveMinorVersion",
        "desc": "(I)V",
        "field": "effectiveMinorVersion"
      },
      {
        "name": "setSessionTimeout",
        "desc": "(I)V",
        "field": "sessionTimeout"
      },
      {
        "name": "setDefaultServletName",
        "desc": "(Ljava/lang/String;)V",
        "field": "defaultServletName"
      },
      {
        "name": "setRequestCharacterEncoding",
        "desc": "(Ljava/lang/String;)V",
        "field": "requestCharacterEncoding"
      }
    ],
    "getters": [
      {
        "name": "getMajorVersion",
        "desc": "()I",
        "field": "majorVersion"
      },
      {
        "name": "getEffectiveMinorVersion",
        "desc": "()I",
        "field": "effectiveMinorVersion"
      },
      {
        "name": "getRequestCharacterEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "requestCharacterEncoding"
      },
      {
        "name": "getContextPath",
        "desc": "()Ljava/lang/String;",
        "field": "contextPath"
      },
      {
        "name": "getMinorVersion",
        "desc": "()I",
        "field": "minorVersion"
      },
      {
        "name": "getSessionTimeout",
        "desc": "()I",
        "field": "sessionTimeout"
      },
      {
        "name": "getResponseCharacterEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "responseCharacterEncoding"
      },
      {
        "name": "getSessionCookieConfig",
        "desc": "()Ljavax/servlet/SessionCookieConfig;",
        "field": "sessionCookieConfig"
      },
      {
        "name": "getEffectiveMajorVersion",
        "desc": "()I",
        "field": "effectiveMajorVersion"
      },
      {
        "name": "getDefaultServletName",
        "desc": "()Ljava/lang/String;",
        "field": "defaultServletName"
      },
      {
        "name": "getServletContextName",
        "desc": "()Ljava/lang/String;",
        "field": "servletContextName"
      }
    ],
    "observers": [
      {
        "name": "getInitParameterNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getEffectiveMinorVersion",
        "desc": "()I"
      },
      {
        "name": "getServletNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getDeclaredRoles",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getServlets",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getResponseCharacterEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getJspConfigDescriptor",
        "desc": "()Ljavax/servlet/descriptor/JspConfigDescriptor;"
      },
      {
        "name": "getDefaultSessionTrackingModes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getVirtualServerName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEffectiveMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getFilterRegistrations",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getServletContextName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getServerInfo",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getRequestCharacterEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEffectiveSessionTrackingModes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getContextPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMinorVersion",
        "desc": "()I"
      },
      {
        "name": "getSessionTimeout",
        "desc": "()I"
      },
      {
        "name": "getAttributeNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "getSessionCookieConfig",
        "desc": "()Ljavax/servlet/SessionCookieConfig;"
      },
      {
        "name": "getServletRegistrations",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getDefaultServletName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "unregisterNamedDispatcher",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setResponseCharacterEncoding",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getResourceLocation",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getResponseCharacterEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addServlet",
        "desc": "(Ljava/lang/String;Ljavax/servlet/Servlet;)Ljavax/servlet/ServletRegistration$Dynamic;"
      },
      {
        "name": "addFilter",
        "desc": "(Ljava/lang/String;Ljavax/servlet/Filter;)Ljavax/servlet/FilterRegistration$Dynamic;"
      },
      {
        "name": "setContextPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setSessionTimeout",
        "desc": "(I)V"
      },
      {
        "name": "addMimeType",
        "desc": "(Ljava/lang/String;Lorg/springframework/http/MediaType;)V"
      },
      {
        "name": "setDefaultServletName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "declareRoles",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "getServlet",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/Servlet;"
      },
      {
        "name": "addInitParameter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "addListener",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "addListener",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getDeclaredRoles",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "setMinorVersion",
        "desc": "(I)V"
      },
      {
        "name": "getResource",
        "desc": "(Ljava/lang/String;)Ljava/net/URL;"
      },
      {
        "name": "getResourceAsStream",
        "desc": "(Ljava/lang/String;)Ljava/io/InputStream;"
      },
      {
        "name": "setEffectiveMajorVersion",
        "desc": "(I)V"
      },
      {
        "name": "getServlets",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "log",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "addFilter",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljavax/servlet/FilterRegistration$Dynamic;"
      },
      {
        "name": "getRequestDispatcher",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;"
      },
      {
        "name": "addServlet",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/ServletRegistration$Dynamic;"
      },
      {
        "name": "getFilterRegistration",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/FilterRegistration;"
      },
      {
        "name": "getMimeType",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getInitParameter",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getFilterRegistrations",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getNamedDispatcher",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;"
      },
      {
        "name": "getResourcePaths",
        "desc": "(Ljava/lang/String;)Ljava/util/Set;"
      },
      {
        "name": "getAttribute",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getSessionCookieConfig",
        "desc": "()Ljavax/servlet/SessionCookieConfig;"
      },
      {
        "name": "createFilter",
        "desc": "(Ljava/lang/Class;)Ljavax/servlet/Filter;"
      },
      {
        "name": "getContext",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/ServletContext;"
      },
      {
        "name": "addFilter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/FilterRegistration$Dynamic;"
      },
      {
        "name": "getServletRegistrations",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/core/io/ResourceLoader;)V"
      },
      {
        "name": "createServlet",
        "desc": "(Ljava/lang/Class;)Ljavax/servlet/Servlet;"
      },
      {
        "name": "getRealPath",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "setMajorVersion",
        "desc": "(I)V"
      },
      {
        "name": "getEffectiveMinorVersion",
        "desc": "()I"
      },
      {
        "name": "log",
        "desc": "(Ljava/lang/Exception;Ljava/lang/String;)V"
      },
      {
        "name": "setEffectiveMinorVersion",
        "desc": "(I)V"
      },
      {
        "name": "getServerInfo",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setServletContextName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setSessionTrackingModes",
        "desc": "(Ljava/util/Set;)V"
      },
      {
        "name": "getMinorVersion",
        "desc": "()I"
      },
      {
        "name": "getSessionTimeout",
        "desc": "()I"
      },
      {
        "name": "setInitParameter",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "registerContext",
        "desc": "(Ljava/lang/String;Ljavax/servlet/ServletContext;)V"
      },
      {
        "name": "getServletRegistration",
        "desc": "(Ljava/lang/String;)Ljavax/servlet/ServletRegistration;"
      },
      {
        "name": "getDefaultServletName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "registerNamedDispatcher",
        "desc": "(Ljava/lang/String;Ljavax/servlet/RequestDispatcher;)V"
      },
      {
        "name": "getInitParameterNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "addListener",
        "desc": "(Ljava/util/EventListener;)V"
      },
      {
        "name": "getServletNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "addJspFile",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/ServletRegistration$Dynamic;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getJspConfigDescriptor",
        "desc": "()Ljavax/servlet/descriptor/JspConfigDescriptor;"
      },
      {
        "name": "getDefaultSessionTrackingModes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getVirtualServerName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEffectiveMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getServletContextName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "addServlet",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljavax/servlet/ServletRegistration$Dynamic;"
      },
      {
        "name": "createListener",
        "desc": "(Ljava/lang/Class;)Ljava/util/EventListener;"
      },
      {
        "name": "getMajorVersion",
        "desc": "()I"
      },
      {
        "name": "getRequestCharacterEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getEffectiveSessionTrackingModes",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getContextPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V"
      },
      {
        "name": "getAttributeNames",
        "desc": "()Ljava/util/Enumeration;"
      },
      {
        "name": "log",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "removeAttribute",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setRequestCharacterEncoding",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        3,
        4
      ],
      "str": [
        "",
        "/",
        "MockServletContext",
        "default",
        "javax.servlet.context.tempdir"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.ServletContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.MockSessionCookieConfig",
    "setters": [
      {
        "name": "setHttpOnly",
        "desc": "(Z)V",
        "field": "httpOnly"
      },
      {
        "name": "setDomain",
        "desc": "(Ljava/lang/String;)V",
        "field": "domain"
      },
      {
        "name": "setSecure",
        "desc": "(Z)V",
        "field": "secure"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V",
        "field": "name"
      },
      {
        "name": "setMaxAge",
        "desc": "(I)V",
        "field": "maxAge"
      },
      {
        "name": "setComment",
        "desc": "(Ljava/lang/String;)V",
        "field": "comment"
      },
      {
        "name": "setPath",
        "desc": "(Ljava/lang/String;)V",
        "field": "path"
      }
    ],
    "getters": [
      {
        "name": "getDomain",
        "desc": "()Ljava/lang/String;",
        "field": "domain"
      },
      {
        "name": "getComment",
        "desc": "()Ljava/lang/String;",
        "field": "comment"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;",
        "field": "path"
      },
      {
        "name": "isSecure",
        "desc": "()Z",
        "field": "secure"
      },
      {
        "name": "isHttpOnly",
        "desc": "()Z",
        "field": "httpOnly"
      },
      {
        "name": "getMaxAge",
        "desc": "()I",
        "field": "maxAge"
      }
    ],
    "observers": [
      {
        "name": "getDomain",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getComment",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isSecure",
        "desc": "()Z"
      },
      {
        "name": "isHttpOnly",
        "desc": "()Z"
      },
      {
        "name": "getMaxAge",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getComment",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setHttpOnly",
        "desc": "(Z)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setDomain",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setSecure",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setMaxAge",
        "desc": "(I)V"
      },
      {
        "name": "isHttpOnly",
        "desc": "()Z"
      },
      {
        "name": "getMaxAge",
        "desc": "()I"
      },
      {
        "name": "setPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getDomain",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isSecure",
        "desc": "()Z"
      },
      {
        "name": "setComment",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.SessionCookieConfig"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.PassThroughFilterChain",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "doFilter",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/Filter;Ljavax/servlet/FilterChain;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/Servlet;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "javax.servlet.FilterChain"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.reactive.function.server.MockServerRequest",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "headers",
        "desc": "()Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;"
      },
      {
        "name": "cookies",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "uri",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "method",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      }
    ],
    "testableMethods": [
      {
        "name": "exchange",
        "desc": "()Lorg/springframework/web/server/ServerWebExchange;"
      },
      {
        "name": "attributes",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "principal",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "pathVariables",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "cookies",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "bodyToFlux",
        "desc": "(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "pathContainer",
        "desc": "()Lorg/springframework/http/server/PathContainer;"
      },
      {
        "name": "body",
        "desc": "(Lorg/springframework/web/reactive/function/BodyExtractor;)Ljava/lang/Object;"
      },
      {
        "name": "bodyToFlux",
        "desc": "(Ljava/lang/Class;)Lreactor/core/publisher/Flux;"
      },
      {
        "name": "builder",
        "desc": "()Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;"
      },
      {
        "name": "session",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "uriBuilder",
        "desc": "()Lorg/springframework/web/util/UriBuilder;"
      },
      {
        "name": "body",
        "desc": "(Lorg/springframework/web/reactive/function/BodyExtractor;Ljava/util/Map;)Ljava/lang/Object;"
      },
      {
        "name": "formData",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "methodName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "messageReaders",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "multipartData",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "headers",
        "desc": "()Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;"
      },
      {
        "name": "uri",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "queryParams",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "remoteAddress",
        "desc": "()Ljava/util/Optional;"
      },
      {
        "name": "method",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "bodyToMono",
        "desc": "(Ljava/lang/Class;)Lreactor/core/publisher/Mono;"
      },
      {
        "name": "bodyToMono",
        "desc": "(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.web.reactive.function.server.ServerRequest"
    ],
    "access": 49,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.reactive.function.server.MockServerRequest$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.reactive.function.server.MockServerRequest$Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.mock.web.reactive.function.server.MockServerRequest",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.reactive.function.server.MockServerRequest$BuilderImpl",
    "setters": [
      {
        "name": "principal",
        "desc": "(Ljava/security/Principal;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "principal"
      },
      {
        "name": "exchange",
        "desc": "(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "exchange"
      },
      {
        "name": "session",
        "desc": "(Lorg/springframework/web/server/WebSession;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "session"
      },
      {
        "name": "headers",
        "desc": "(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "headers"
      },
      {
        "name": "pathVariables",
        "desc": "(Ljava/util/Map;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "pathVariables"
      },
      {
        "name": "queryParams",
        "desc": "(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "queryParams"
      },
      {
        "name": "remoteAddress",
        "desc": "(Ljava/net/InetSocketAddress;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "remoteAddress"
      },
      {
        "name": "messageReaders",
        "desc": "(Ljava/util/List;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "messageReaders"
      },
      {
        "name": "method",
        "desc": "(Lorg/springframework/http/HttpMethod;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "method"
      },
      {
        "name": "uri",
        "desc": "(Ljava/net/URI;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "uri"
      },
      {
        "name": "attributes",
        "desc": "(Ljava/util/Map;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "attributes"
      },
      {
        "name": "cookies",
        "desc": "(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "cookies"
      },
      {
        "name": "body",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest;",
        "field": "body"
      },
      {
        "name": "contextPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;",
        "field": "contextPath"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "",
        "http://localhost"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.mock.web.reactive.function.server.MockServerRequest$Builder"
    ],
    "outerClass": "org.springframework.mock.web.reactive.function.server.MockServerRequest",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.reactive.function.server.MockServerRequest$MockHeaders",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "long": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.web.reactive.function.server.ServerRequest$Headers"
    ],
    "outerClass": "org.springframework.mock.web.reactive.function.server.MockServerRequest",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.server.MockServerWebExchange",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResponse",
        "desc": "()Lorg/springframework/mock/http/server/reactive/MockServerHttpResponse;"
      }
    ],
    "testableMethods": [
      {
        "name": "builder",
        "desc": "(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;"
      },
      {
        "name": "from",
        "desc": "(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;)Lorg/springframework/mock/web/server/MockServerWebExchange;"
      },
      {
        "name": "getResponse",
        "desc": "()Lorg/springframework/mock/http/server/reactive/MockServerHttpResponse;"
      },
      {
        "name": "from",
        "desc": "(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;)Lorg/springframework/mock/web/server/MockServerWebExchange;"
      },
      {
        "name": "builder",
        "desc": "(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.web.server.adapter.DefaultServerWebExchange"
    ],
    "access": 49,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.server.MockServerWebExchange$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.server.MockServerWebExchange$Builder",
    "setters": [
      {
        "name": "session",
        "desc": "(Lorg/springframework/web/server/WebSession;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;",
        "field": "sessionManager"
      },
      {
        "name": "sessionManager",
        "desc": "(Lorg/springframework/web/server/session/WebSessionManager;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;",
        "field": "sessionManager"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "build",
        "desc": "()Lorg/springframework/mock/web/server/MockServerWebExchange;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;)V"
      },
      {
        "name": "session",
        "desc": "(Lorg/springframework/web/server/WebSession;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;"
      },
      {
        "name": "sessionManager",
        "desc": "(Lorg/springframework/web/server/session/WebSessionManager;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.mock.web.server.MockServerWebExchange",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.mock.web.server.MockWebSession",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAttributes",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "getMaxIdleTime",
        "desc": "()Ljava/time/Duration;"
      },
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "isExpired",
        "desc": "()Z"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "invalidate",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getCreationTime",
        "desc": "()Ljava/time/Instant;"
      },
      {
        "name": "getLastAccessTime",
        "desc": "()Ljava/time/Instant;"
      }
    ],
    "testableMethods": [
      {
        "name": "changeSessionId",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/time/Clock;)V"
      },
      {
        "name": "getMaxIdleTime",
        "desc": "()Ljava/time/Duration;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isExpired",
        "desc": "()Z"
      },
      {
        "name": "save",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "setMaxIdleTime",
        "desc": "(Ljava/time/Duration;)V"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLastAccessTime",
        "desc": "()Ljava/time/Instant;"
      },
      {
        "name": "getAttributes",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "isStarted",
        "desc": "()Z"
      },
      {
        "name": "start",
        "desc": "()V"
      },
      {
        "name": "invalidate",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getCreationTime",
        "desc": "()Ljava/time/Instant;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.web.server.WebSession"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.Objenesis",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.ObjenesisBase",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/objenesis/strategy/InstantiatorStrategy;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/objenesis/strategy/InstantiatorStrategy;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.Objenesis"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.ObjenesisException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Throwable;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.ObjenesisHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getSerializableObjectInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "newSerializableInstance",
        "desc": "(Ljava/lang/Class;)Ljava/io/Serializable;"
      },
      {
        "name": "getInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.ObjenesisSerializer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.objenesis.ObjenesisBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.ObjenesisStd",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.objenesis.ObjenesisBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.SpringObjenesis",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isWorthTrying",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/objenesis/strategy/InstantiatorStrategy;)V"
      },
      {
        "name": "isWorthTrying",
        "desc": "()Z"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;Z)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      },
      {
        "name": "getInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "dictionary": {
      "str": [
        "spring.objenesis.ignore"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.Objenesis"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.ObjectInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.SerializationInstantiatorHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getNonSerializableSuperClass",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.android.Android10Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.android.Android17Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.android.Android18Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.android.AndroidSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.annotations.Instantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.annotations.Typology",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "NOT_COMPLIANT",
        "SERIALIZATION",
        "STANDARD",
        "UNKNOWN"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.AccessibleInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.springframework.objenesis.instantiator.basic.ConstructorInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.ConstructorInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.FailingInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.NewInstanceInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.NullInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.ObjectInputStreamInstantiator$MockStream",
    "setters": [
      {
        "name": "read",
        "desc": "([BII)I",
        "field": "pointer"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "available",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        5
      ]
    },
    "parents": [
      "java.io.InputStream"
    ],
    "outerClass": "org.springframework.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.ObjectStreamClassInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.basic.ProxyingInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "byte": [
        12
      ],
      "short": [
        12,
        1000
      ],
      "int": [
        1,
        2,
        12,
        1000
      ],
      "str": [
        "$$$Objenesis"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.gcj.GCJInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.objenesis.instantiator.gcj.GCJInstantiatorBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.gcj.GCJInstantiatorBase",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.gcj.GCJInstantiatorBase$DummyStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.ObjectInputStream"
    ],
    "outerClass": "org.springframework.objenesis.instantiator.gcj.GCJInstantiatorBase",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.gcj.GCJSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.objenesis.instantiator.gcj.GCJInstantiatorBase"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.perc.PercInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.perc.PercSerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.sun.MagicInstantiator",
    "setters": [],
    "getters": [
      {
        "name": "getInstantiator",
        "desc": "()Lorg/springframework/objenesis/instantiator/ObjectInstantiator;",
        "field": "instantiator"
      }
    ],
    "observers": [
      {
        "name": "getInstantiator",
        "desc": "()Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getInstantiator",
        "desc": "()Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        12
      ],
      "short": [
        8,
        12,
        1000
      ],
      "int": [
        1,
        5,
        8,
        12,
        1000
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.sun.SunReflectionFactoryHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newConstructorForSerialization",
        "desc": "(Ljava/lang/Class;Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.sun.SunReflectionFactoryInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.sun.SunReflectionFactorySerializationInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.sun.UnsafeFactoryInstantiator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstance",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.instantiator.ObjectInstantiator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.util.ClassDefinitionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "readClass",
        "desc": "(Ljava/lang/String;)[B"
      },
      {
        "name": "writeClass",
        "desc": "(Ljava/lang/String;[B)V"
      },
      {
        "name": "defineClass",
        "desc": "(Ljava/lang/String;[BLjava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {
      "byte": [
        -66
      ],
      "short": [
        -66,
        2500
      ],
      "int": [
        -66,
        3,
        4,
        2500
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.util.ClassUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "classNameToResource",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "classNameToInternalClassName",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "newInstance",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getExistingClass",
        "desc": "(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.util.DefineClassHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "defineClass",
        "desc": "(Ljava/lang/String;[BIILjava/lang/Class;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.util.DefineClassHelper$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.util.DefineClassHelper$Helper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.objenesis.instantiator.util.DefineClassHelper",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.util.DefineClassHelper$Java11",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.objenesis.instantiator.util.DefineClassHelper$Helper"
    ],
    "outerClass": "org.springframework.objenesis.instantiator.util.DefineClassHelper",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.util.DefineClassHelper$Java8",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.objenesis.instantiator.util.DefineClassHelper$Helper"
    ],
    "outerClass": "org.springframework.objenesis.instantiator.util.DefineClassHelper",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.instantiator.util.UnsafeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getUnsafe",
        "desc": "()Lsun/misc/Unsafe;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.strategy.BaseInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.strategy.InstantiatorStrategy"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.strategy.InstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.strategy.PlatformDescription",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isAfterJigsaw",
        "desc": "()Z"
      },
      {
        "name": "describePlatform",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isThisJVM",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "isAfterJava11",
        "desc": "()Z"
      },
      {
        "name": "isAndroidOpenJDK",
        "desc": "()Z"
      },
      {
        "name": "isGoogleAppEngine",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "byte": [
        11,
        46
      ],
      "char": [
        46
      ],
      "short": [
        11,
        46
      ],
      "int": [
        11,
        46
      ],
      "str": [
        "Dalvik",
        "core-oj.jar",
        "java.vm.name"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.strategy.SerializingInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "dictionary": {
      "str": [
        "1.7",
        "Dalvik",
        "OpenJDK",
        "PERC"
      ]
    },
    "parents": [
      "org.springframework.objenesis.strategy.BaseInstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.strategy.SingleInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.objenesis.strategy.InstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.objenesis.strategy.StdInstantiatorStrategy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "newInstantiatorOf",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"
      }
    ],
    "dictionary": {
      "byte": [
        10,
        17
      ],
      "short": [
        10,
        17
      ],
      "int": [
        10,
        17
      ],
      "str": [
        "1.7",
        "Dalvik",
        "OpenJDK",
        "PERC"
      ]
    },
    "parents": [
      "org.springframework.objenesis.strategy.BaseInstantiatorStrategy"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.Commit",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.DirtiesContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.DirtiesContext$ClassMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "AFTER_CLASS",
        "AFTER_EACH_TEST_METHOD",
        "BEFORE_CLASS",
        "BEFORE_EACH_TEST_METHOD"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.test.annotation.DirtiesContext",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.DirtiesContext$HierarchyMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "CURRENT_LEVEL",
        "EXHAUSTIVE"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.test.annotation.DirtiesContext",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.DirtiesContext$MethodMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "AFTER_METHOD",
        "BEFORE_METHOD"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.test.annotation.DirtiesContext",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.IfProfileValue",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.ProfileValueSource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.ProfileValueSourceConfiguration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.ProfileValueUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.Repeat",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.Rollback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.SystemProfileValueSource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "get",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "getInstance",
        "desc": "()Lorg/springframework/test/annotation/SystemProfileValueSource;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.annotation.ProfileValueSource"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.TestAnnotationUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.annotation.Timed",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.ActiveProfiles",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.ActiveProfilesResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.BootstrapContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.BootstrapUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.BootstrapWith",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.CacheAwareContextLoaderDelegate",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.ContextConfiguration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.ContextConfigurationAttributes",
    "setters": [
      {
        "name": "setClasses",
        "desc": "([Ljava/lang/Class;)V",
        "field": "classes"
      },
      {
        "name": "setLocations",
        "desc": "([Ljava/lang/String;)V",
        "field": "locations"
      }
    ],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      },
      {
        "name": "getContextLoaderClass",
        "desc": "()Ljava/lang/Class;",
        "field": "contextLoaderClass"
      },
      {
        "name": "getClasses",
        "desc": "()[Ljava/lang/Class;",
        "field": "classes"
      },
      {
        "name": "isInheritLocations",
        "desc": "()Z",
        "field": "inheritLocations"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;",
        "field": "declaringClass"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;",
        "field": "locations"
      },
      {
        "name": "getInitializers",
        "desc": "()[Ljava/lang/Class;",
        "field": "initializers"
      },
      {
        "name": "isInheritInitializers",
        "desc": "()Z",
        "field": "inheritInitializers"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContextLoaderClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "hasClasses",
        "desc": "()Z"
      },
      {
        "name": "getClasses",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "isInheritLocations",
        "desc": "()Z"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getInitializers",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "hasLocations",
        "desc": "()Z"
      },
      {
        "name": "hasResources",
        "desc": "()Z"
      },
      {
        "name": "isInheritInitializers",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getContextLoaderClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/springframework/core/annotation/AnnotationAttributes;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getInitializers",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "hasLocations",
        "desc": "()Z"
      },
      {
        "name": "hasResources",
        "desc": "()Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/springframework/test/context/ContextConfiguration;)V"
      },
      {
        "name": "setLocations",
        "desc": "([Ljava/lang/String;)V"
      },
      {
        "name": "setClasses",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Z[Ljava/lang/Class;ZLjava/lang/String;Ljava/lang/Class;)V"
      },
      {
        "name": "hasClasses",
        "desc": "()Z"
      },
      {
        "name": "getClasses",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "isInheritLocations",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Z[Ljava/lang/Class;ZLjava/lang/Class;)V"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "isInheritInitializers",
        "desc": "()Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "classes",
        "inheritInitializers",
        "inheritLocations",
        "initializers",
        "loader",
        "locations",
        "name"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.ContextCustomizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.ContextCustomizerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.ContextHierarchy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.ContextLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.MergedContextConfiguration",
    "setters": [],
    "getters": [
      {
        "name": "getActiveProfiles",
        "desc": "()[Ljava/lang/String;",
        "field": "activeProfiles"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;",
        "field": "testClass"
      },
      {
        "name": "getPropertySourceLocations",
        "desc": "()[Ljava/lang/String;",
        "field": "propertySourceLocations"
      },
      {
        "name": "getPropertySourceProperties",
        "desc": "()[Ljava/lang/String;",
        "field": "propertySourceProperties"
      },
      {
        "name": "getClasses",
        "desc": "()[Ljava/lang/Class;",
        "field": "classes"
      },
      {
        "name": "getContextLoader",
        "desc": "()Lorg/springframework/test/context/ContextLoader;",
        "field": "contextLoader"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;",
        "field": "locations"
      },
      {
        "name": "getContextInitializerClasses",
        "desc": "()Ljava/util/Set;",
        "field": "contextInitializerClasses"
      },
      {
        "name": "getParent",
        "desc": "()Lorg/springframework/test/context/MergedContextConfiguration;",
        "field": "parent"
      },
      {
        "name": "getContextCustomizers",
        "desc": "()Ljava/util/Set;",
        "field": "contextCustomizers"
      }
    ],
    "observers": [
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hasLocations",
        "desc": "()Z"
      },
      {
        "name": "hasResources",
        "desc": "()Z"
      },
      {
        "name": "getActiveProfiles",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getPropertySourceLocations",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "hasClasses",
        "desc": "()Z"
      },
      {
        "name": "getPropertySourceProperties",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getClasses",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getContextLoader",
        "desc": "()Lorg/springframework/test/context/ContextLoader;"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getContextInitializerClasses",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getParent",
        "desc": "()Lorg/springframework/test/context/MergedContextConfiguration;"
      },
      {
        "name": "getParentApplicationContext",
        "desc": "()Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "getContextCustomizers",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;)V"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "nullSafeClassName",
        "desc": "(Lorg/springframework/test/context/ContextLoader;)Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;)V"
      },
      {
        "name": "hasLocations",
        "desc": "()Z"
      },
      {
        "name": "hasResources",
        "desc": "()Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "getActiveProfiles",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getPropertySourceLocations",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "hasClasses",
        "desc": "()Z"
      },
      {
        "name": "getPropertySourceProperties",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getClasses",
        "desc": "()[Ljava/lang/Class;"
      },
      {
        "name": "getContextLoader",
        "desc": "()Lorg/springframework/test/context/ContextLoader;"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getContextInitializerClasses",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "getParent",
        "desc": "()Lorg/springframework/test/context/MergedContextConfiguration;"
      },
      {
        "name": "getParentApplicationContext",
        "desc": "()Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "getContextCustomizers",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.SmartContextLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.ContextLoader"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.TestContext",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.core.AttributeAccessor",
      "java.io.Serializable"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.TestContextBootstrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.TestContextManager",
    "setters": [],
    "getters": [
      {
        "name": "getTestExecutionListeners",
        "desc": "()Ljava/util/List;",
        "field": "testExecutionListeners"
      }
    ],
    "observers": [
      {
        "name": "getTestContext",
        "desc": "()Lorg/springframework/test/context/TestContext;"
      },
      {
        "name": "getTestExecutionListeners",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [
      {
        "name": "beforeTestMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "beforeTestExecution",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "prepareTestInstance",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/context/TestContextBootstrapper;)V"
      },
      {
        "name": "afterTestMethod",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getTestExecutionListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "afterTestExecution",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V"
      },
      {
        "name": "registerTestExecutionListeners",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "registerTestExecutionListeners",
        "desc": "([Lorg/springframework/test/context/TestExecutionListener;)V"
      },
      {
        "name": "getTestContext",
        "desc": "()Lorg/springframework/test/context/TestContext;"
      },
      {
        "name": "afterTestClass",
        "desc": "()V"
      },
      {
        "name": "beforeTestClass",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2,
        3
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.TestContextManager$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "get",
        "desc": "()Lorg/springframework/test/context/TestContext;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.function.Supplier"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.TestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.TestExecutionListeners",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.TestExecutionListeners$MergeMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "MERGE_WITH_DEFAULTS",
        "REPLACE_DEFAULTS"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.test.context.TestExecutionListeners",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.TestPropertySource",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.cache.ContextCache",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.cache.ContextCacheUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "spring.test.context.cache.maxSize"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate",
    "setters": [],
    "getters": [
      {
        "name": "getContextCache",
        "desc": "()Lorg/springframework/test/context/cache/ContextCache;",
        "field": "contextCache"
      }
    ],
    "observers": [
      {
        "name": "getContextCache",
        "desc": "()Lorg/springframework/test/context/cache/ContextCache;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "closeContext",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/context/cache/ContextCache;)V"
      },
      {
        "name": "loadContextInternal",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "loadContext",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "getContextCache",
        "desc": "()Lorg/springframework/test/context/cache/ContextCache;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.CacheAwareContextLoaderDelegate"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.cache.DefaultContextCache",
    "setters": [],
    "getters": [
      {
        "name": "getMaxSize",
        "desc": "()I",
        "field": "maxSize"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParentContextCount",
        "desc": "()I"
      },
      {
        "name": "getHitCount",
        "desc": "()I"
      },
      {
        "name": "getMaxSize",
        "desc": "()I"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "getMissCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getHitCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "put",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContext;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "remove",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V"
      },
      {
        "name": "contains",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)Z"
      },
      {
        "name": "logStatistics",
        "desc": "()V"
      },
      {
        "name": "getParentContextCount",
        "desc": "()I"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "clearStatistics",
        "desc": "()V"
      },
      {
        "name": "get",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "getMaxSize",
        "desc": "()I"
      },
      {
        "name": "getMissCount",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "byte": [
        32
      ],
      "char": [
        32
      ],
      "short": [
        32
      ],
      "int": [
        0,
        32
      ],
      "float": [
        0.75
      ],
      "str": [
        "org.springframework.test.context.cache"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.cache.ContextCache"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.cache.DefaultContextCache$LruCache",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.util.LinkedHashMap"
    ],
    "outerClass": "org.springframework.test.context.cache.DefaultContextCache",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.jdbc.MergedSqlConfig",
    "setters": [],
    "getters": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;",
        "field": "encoding"
      },
      {
        "name": "getTransactionMode",
        "desc": "()Lorg/springframework/test/context/jdbc/SqlConfig$TransactionMode;",
        "field": "transactionMode"
      },
      {
        "name": "getCommentPrefix",
        "desc": "()Ljava/lang/String;",
        "field": "commentPrefix"
      },
      {
        "name": "getBlockCommentStartDelimiter",
        "desc": "()Ljava/lang/String;",
        "field": "blockCommentStartDelimiter"
      },
      {
        "name": "getBlockCommentEndDelimiter",
        "desc": "()Ljava/lang/String;",
        "field": "blockCommentEndDelimiter"
      },
      {
        "name": "getErrorMode",
        "desc": "()Lorg/springframework/test/context/jdbc/SqlConfig$ErrorMode;",
        "field": "errorMode"
      },
      {
        "name": "getDataSource",
        "desc": "()Ljava/lang/String;",
        "field": "dataSource"
      },
      {
        "name": "getTransactionManager",
        "desc": "()Ljava/lang/String;",
        "field": "transactionManager"
      },
      {
        "name": "getSeparator",
        "desc": "()Ljava/lang/String;",
        "field": "separator"
      }
    ],
    "observers": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTransactionMode",
        "desc": "()Lorg/springframework/test/context/jdbc/SqlConfig$TransactionMode;"
      },
      {
        "name": "getCommentPrefix",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBlockCommentStartDelimiter",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBlockCommentEndDelimiter",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getErrorMode",
        "desc": "()Lorg/springframework/test/context/jdbc/SqlConfig$ErrorMode;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDataSource",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTransactionManager",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSeparator",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTransactionMode",
        "desc": "()Lorg/springframework/test/context/jdbc/SqlConfig$TransactionMode;"
      },
      {
        "name": "getCommentPrefix",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBlockCommentStartDelimiter",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getBlockCommentEndDelimiter",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getErrorMode",
        "desc": "()Lorg/springframework/test/context/jdbc/SqlConfig$ErrorMode;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getDataSource",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/context/jdbc/SqlConfig;Ljava/lang/Class;)V"
      },
      {
        "name": "getTransactionManager",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSeparator",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "str": [
        "",
        "*/",
        "--",
        "/*",
        ";",
        "blockCommentEndDelimiter",
        "blockCommentStartDelimiter",
        "commentPrefix",
        "dataSource",
        "encoding",
        "errorMode",
        "separator",
        "transactionManager",
        "transactionMode"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.jdbc.Sql",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.jdbc.Sql$ExecutionPhase",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "AFTER_TEST_METHOD",
        "BEFORE_TEST_METHOD"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.test.context.jdbc.Sql",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.jdbc.SqlConfig",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.jdbc.SqlConfig$ErrorMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "CONTINUE_ON_ERROR",
        "DEFAULT",
        "FAIL_ON_ERROR",
        "IGNORE_FAILED_DROPS"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.test.context.jdbc.SqlConfig",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.jdbc.SqlConfig$TransactionMode",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "DEFAULT",
        "INFERRED",
        "ISOLATED"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.test.context.jdbc.SqlConfig",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.jdbc.SqlGroup",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOrder",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getOrder",
        "desc": "()I"
      },
      {
        "name": "beforeTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "afterTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        2,
        4
      ],
      "str": [
        ".sql",
        "classpath:",
        "method"
      ]
    },
    "parents": [
      "org.springframework.test.context.support.AbstractTestExecutionListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.AbstractExpressionEvaluatingCondition",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "false",
        "true"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.jupiter.api.extension.ExecutionCondition"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.DisabledIf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.DisabledIfCondition",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "evaluateExecutionCondition",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)Lorg/junit/jupiter/api/extension/ConditionEvaluationResult;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.junit.jupiter.AbstractExpressionEvaluatingCondition"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.EnabledIf",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.EnabledIfCondition",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "evaluateExecutionCondition",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)Lorg/junit/jupiter/api/extension/ConditionEvaluationResult;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.junit.jupiter.AbstractExpressionEvaluatingCondition"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.ParameterAutowireUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.ParameterAutowireUtils$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getDeclaredAnnotations",
        "desc": "()[Ljava/lang/annotation/Annotation;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.reflect.AnnotatedElement"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.SpringExtension",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "afterTestExecution",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)V"
      },
      {
        "name": "supportsParameter",
        "desc": "(Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Z"
      },
      {
        "name": "resolveParameter",
        "desc": "(Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Ljava/lang/Object;"
      },
      {
        "name": "beforeTestExecution",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)V"
      },
      {
        "name": "afterEach",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "beforeEach",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)V"
      },
      {
        "name": "afterAll",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)V"
      },
      {
        "name": "postProcessTestInstance",
        "desc": "(Ljava/lang/Object;Lorg/junit/jupiter/api/extension/ExtensionContext;)V"
      },
      {
        "name": "beforeAll",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)V"
      },
      {
        "name": "getApplicationContext",
        "desc": "(Lorg/junit/jupiter/api/extension/ExtensionContext;)Lorg/springframework/context/ApplicationContext;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.jupiter.api.extension.BeforeAllCallback",
      "org.junit.jupiter.api.extension.AfterAllCallback",
      "org.junit.jupiter.api.extension.TestInstancePostProcessor",
      "org.junit.jupiter.api.extension.BeforeEachCallback",
      "org.junit.jupiter.api.extension.AfterEachCallback",
      "org.junit.jupiter.api.extension.BeforeTestExecutionCallback",
      "org.junit.jupiter.api.extension.AfterTestExecutionCallback",
      "org.junit.jupiter.api.extension.ParameterResolver"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.SpringJUnitConfig",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests",
    "setters": [
      {
        "name": "setApplicationContext",
        "desc": "(Lorg/springframework/context/ApplicationContext;)V",
        "field": "applicationContext"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.context.ApplicationContextAware"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests",
    "setters": [
      {
        "name": "setSqlScriptEncoding",
        "desc": "(Ljava/lang/String;)V",
        "field": "sqlScriptEncoding"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.SpringJUnit4ClassRunner",
    "setters": [],
    "getters": [
      {
        "name": "getTestContextManager",
        "desc": "()Lorg/springframework/test/context/TestContextManager;",
        "field": "testContextManager"
      }
    ],
    "observers": [
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "getTestContextManager",
        "desc": "()Lorg/springframework/test/context/TestContextManager;"
      }
    ],
    "testableMethods": [
      {
        "name": "getJUnitTimeout",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)J"
      },
      {
        "name": "getSpringTimeout",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)J"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "withBefores",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "withAfters",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "getDescription",
        "desc": "()Lorg/junit/runner/Description;"
      },
      {
        "name": "withAfterClasses",
        "desc": "(Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "runChild",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "withBeforeTestExecutionCallbacks",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "methodBlock",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "getExpectedException",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Ljava/lang/Class;"
      },
      {
        "name": "withPotentialRepeat",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "withBeforeClasses",
        "desc": "(Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "withAfterTestExecutionCallbacks",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "createTest",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "createTestContextManager",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/test/context/TestContextManager;"
      },
      {
        "name": "getTestContextManager",
        "desc": "()Lorg/springframework/test/context/TestContextManager;"
      },
      {
        "name": "run",
        "desc": "(Lorg/junit/runner/notification/RunNotifier;)V"
      },
      {
        "name": "possiblyExpectingExceptions",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "isTestMethodIgnored",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;)Z"
      },
      {
        "name": "withPotentialTimeout",
        "desc": "(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        0
      ],
      "str": [
        "org.junit.internal.Throwables"
      ]
    },
    "parents": [
      "org.junit.runners.BlockJUnit4ClassRunner"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.internal.runners.model.ReflectiveCallable"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.SpringRunner",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.junit4.SpringJUnit4ClassRunner"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.rules.SpringClassRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getTestContextManager",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/test/context/TestContextManager;"
      },
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        64
      ],
      "char": [
        64
      ],
      "short": [
        64
      ],
      "int": [
        64
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.junit.rules.TestRule"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "outerClass": "org.springframework.test.context.junit4.rules.SpringClassRule",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.rules.SpringMethodRule",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "apply",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.junit.rules.MethodRule"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.ProfileValueChecker",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Class;Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/springframework/test/context/TestContextManager;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/test/context/TestContextManager;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/test/context/TestContextManager;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Lorg/springframework/test/context/TestContextManager;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/test/context/TestContextManager;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/test/context/TestContextManager;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "evaluate",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Lorg/springframework/test/context/TestContextManager;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.SpringFailOnTimeout",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;J)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "long": [
        0
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.junit4.statements.SpringRepeat",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/reflect/Method;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/junit/runners/model/Statement;Ljava/lang/reflect/Method;I)V"
      },
      {
        "name": "evaluate",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.junit.runners.model.Statement"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.AbstractContextLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isGenerateDefaultLocations",
        "desc": "()Z"
      },
      {
        "name": "getResourceSuffixes",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        2
      ],
      "str": [
        "classpath:"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.SmartContextLoader"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.AbstractDelegatingSmartContextLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.SmartContextLoader"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "BEFORE"
      ]
    },
    "parents": [
      "org.springframework.test.context.support.AbstractTestExecutionListener"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.AbstractGenericContextLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.AbstractContextLoader"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.AbstractTestContextBootstrapper",
    "setters": [
      {
        "name": "setBootstrapContext",
        "desc": "(Lorg/springframework/test/context/BootstrapContext;)V",
        "field": "bootstrapContext"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getDefaultTestExecutionListenerClassNames",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getCacheAwareContextLoaderDelegate",
        "desc": "()Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;"
      },
      {
        "name": "getTestExecutionListeners",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getContextCustomizerFactories",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getBootstrapContext",
        "desc": "()Lorg/springframework/test/context/BootstrapContext;"
      },
      {
        "name": "getDefaultTestExecutionListenerClasses",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.TestContextBootstrapper"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.AbstractTestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOrder",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.TestExecutionListener",
      "org.springframework.core.Ordered"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.ActiveProfilesUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.AnnotationConfigContextLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "detectDefaultConfigurationClasses",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "generateDefaultLocations",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "loadBeanDefinitions",
        "desc": "(Lorg/springframework/context/support/GenericApplicationContext;Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "modifyLocations",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateMergedContextConfiguration",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "createBeanDefinitionReader",
        "desc": "(Lorg/springframework/context/support/GenericApplicationContext;)Lorg/springframework/beans/factory/support/BeanDefinitionReader;"
      },
      {
        "name": "processContextConfiguration",
        "desc": "(Lorg/springframework/test/context/ContextConfigurationAttributes;)V"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.AbstractGenericContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.AnnotationConfigContextLoaderUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.ApplicationContextInitializerUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.ContextLoaderUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.DefaultActiveProfilesResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "resolve",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.ActiveProfilesResolver"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.DefaultBootstrapContext",
    "setters": [],
    "getters": [
      {
        "name": "getCacheAwareContextLoaderDelegate",
        "desc": "()Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;",
        "field": "cacheAwareContextLoaderDelegate"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;",
        "field": "testClass"
      }
    ],
    "observers": [
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCacheAwareContextLoaderDelegate",
        "desc": "()Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;"
      }
    ],
    "testableMethods": [
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;)V"
      },
      {
        "name": "getCacheAwareContextLoaderDelegate",
        "desc": "()Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.BootstrapContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.DefaultTestContext",
    "setters": [
      {
        "name": "updateState",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V",
        "field": "testInstance"
      }
    ],
    "getters": [
      {
        "name": "getTestException",
        "desc": "()Ljava/lang/Throwable;",
        "field": "testException"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;",
        "field": "testClass"
      }
    ],
    "observers": [
      {
        "name": "getApplicationContext",
        "desc": "()Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getTestInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTestException",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "getTestMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      }
    ],
    "testableMethods": [
      {
        "name": "getTestClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;)V"
      },
      {
        "name": "markApplicationContextDirty",
        "desc": "(Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V"
      },
      {
        "name": "getTestMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "removeAttribute",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getApplicationContext",
        "desc": "()Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/context/support/DefaultTestContext;)V"
      },
      {
        "name": "getTestInstance",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "updateState",
        "desc": "(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V"
      },
      {
        "name": "getAttribute",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "setAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "attributeNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getTestException",
        "desc": "()Ljava/lang/Throwable;"
      },
      {
        "name": "hasAttribute",
        "desc": "(Ljava/lang/String;)Z"
      }
    ],
    "dictionary": {
      "int": [
        4
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.TestContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.DefaultTestContextBootstrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getDefaultContextLoaderClass",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.AbstractTestContextBootstrapper"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.DelegatingSmartContextLoader",
    "setters": [],
    "getters": [
      {
        "name": "getXmlLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;",
        "field": "xmlLoader"
      },
      {
        "name": "getAnnotationConfigLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;",
        "field": "annotationConfigLoader"
      }
    ],
    "observers": [
      {
        "name": "getXmlLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;"
      },
      {
        "name": "getAnnotationConfigLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "getXmlLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;"
      },
      {
        "name": "getAnnotationConfigLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "groovy.lang.Closure",
        "org.springframework.test.context.support.GenericGroovyXmlContextLoader"
      ]
    },
    "parents": [
      "org.springframework.test.context.support.AbstractDelegatingSmartContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.DependencyInjectionTestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOrder",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "injectDependencies",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getOrder",
        "desc": "()I"
      },
      {
        "name": "prepareTestInstance",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "beforeTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "reinjectDependencies"
      ]
    },
    "parents": [
      "org.springframework.test.context.support.AbstractTestExecutionListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOrder",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getOrder",
        "desc": "()I"
      },
      {
        "name": "beforeTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "beforeTestClass",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.DirtiesContextTestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOrder",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "afterTestClass",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getOrder",
        "desc": "()I"
      },
      {
        "name": "afterTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.GenericGroovyXmlContextLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResourceSuffixes",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "loadBeanDefinitions",
        "desc": "(Lorg/springframework/context/support/GenericApplicationContext;Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getResourceSuffixes",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.GenericXmlContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.GenericPropertiesContextLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateMergedContextConfiguration",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "createBeanDefinitionReader",
        "desc": "(Lorg/springframework/context/support/GenericApplicationContext;)Lorg/springframework/beans/factory/support/BeanDefinitionReader;"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.AbstractGenericContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.GenericXmlContextLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "validateMergedContextConfiguration",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "createBeanDefinitionReader",
        "desc": "(Lorg/springframework/context/support/GenericApplicationContext;)Lorg/springframework/beans/factory/support/BeanDefinitionReader;"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.AbstractGenericContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.MergedTestPropertySources",
    "setters": [],
    "getters": [
      {
        "name": "getProperties",
        "desc": "()[Ljava/lang/String;",
        "field": "properties"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;",
        "field": "locations"
      }
    ],
    "observers": [
      {
        "name": "getProperties",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "getProperties",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;[Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.TestPropertySourceAttributes",
    "setters": [],
    "getters": [
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;",
        "field": "declaringClass"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;",
        "field": "locations"
      },
      {
        "name": "getProperties",
        "desc": "()[Ljava/lang/String;",
        "field": "properties"
      },
      {
        "name": "isInheritProperties",
        "desc": "()Z",
        "field": "inheritProperties"
      },
      {
        "name": "isInheritLocations",
        "desc": "()Z",
        "field": "inheritLocations"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getProperties",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "isInheritProperties",
        "desc": "()Z"
      },
      {
        "name": "isInheritLocations",
        "desc": "()Z"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getProperties",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "isInheritProperties",
        "desc": "()Z"
      },
      {
        "name": "isInheritLocations",
        "desc": "()Z"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getLocations",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Lorg/springframework/test/context/TestPropertySource;)V"
      }
    ],
    "dictionary": {
      "str": [
        ".properties",
        "classpath:"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.support.TestPropertySourceUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.testng.AbstractTestNGSpringContextTests",
    "setters": [
      {
        "name": "run",
        "desc": "(Lorg/testng/IHookCallBack;Lorg/testng/ITestResult;)V",
        "field": "testException"
      },
      {
        "name": "setApplicationContext",
        "desc": "(Lorg/springframework/context/ApplicationContext;)V",
        "field": "applicationContext"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.testng.IHookable",
      "org.springframework.context.ApplicationContextAware"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.testng.AbstractTransactionalTestNGSpringContextTests",
    "setters": [
      {
        "name": "setSqlScriptEncoding",
        "desc": "(Ljava/lang/String;)V",
        "field": "sqlScriptEncoding"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.test.context.testng.AbstractTestNGSpringContextTests"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.transaction.AfterTransaction",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.transaction.BeforeTransaction",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.transaction.TestContextTransactionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.transaction.TestContextTransactionUtils$TestContextTransactionAttribute",
    "setters": [],
    "getters": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;",
        "field": "name"
      }
    ],
    "observers": [
      {
        "name": "getName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.transaction.interceptor.DelegatingTransactionAttribute"
    ],
    "outerClass": "org.springframework.test.context.transaction.TestContextTransactionUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.transaction.TestTransaction",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isActive",
        "desc": "()Z"
      },
      {
        "name": "isFlaggedForRollback",
        "desc": "()Z"
      },
      {
        "name": "start",
        "desc": "()V"
      },
      {
        "name": "flagForRollback",
        "desc": "()V"
      },
      {
        "name": "end",
        "desc": "()V"
      },
      {
        "name": "flagForCommit",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.transaction.TransactionContext",
    "setters": [],
    "getters": [
      {
        "name": "getTransactionStatus",
        "desc": "()Lorg/springframework/transaction/TransactionStatus;",
        "field": "transactionStatus"
      },
      {
        "name": "isFlaggedForRollback",
        "desc": "()Z",
        "field": "flaggedForRollback"
      }
    ],
    "observers": [
      {
        "name": "getTransactionStatus",
        "desc": "()Lorg/springframework/transaction/TransactionStatus;"
      },
      {
        "name": "isFlaggedForRollback",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "endTransaction",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/context/TestContext;Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/TransactionDefinition;Z)V"
      },
      {
        "name": "setFlaggedForRollback",
        "desc": "(Z)V"
      },
      {
        "name": "getTransactionStatus",
        "desc": "()Lorg/springframework/transaction/TransactionStatus;"
      },
      {
        "name": "isFlaggedForRollback",
        "desc": "()Z"
      },
      {
        "name": "startTransaction",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.transaction.TransactionContextHolder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setCurrentTransactionContext",
        "desc": "(Lorg/springframework/test/context/transaction/TransactionContext;)V"
      },
      {
        "name": "getCurrentTransactionContext",
        "desc": "()Lorg/springframework/test/context/transaction/TransactionContext;"
      },
      {
        "name": "removeCurrentTransactionContext",
        "desc": "()Lorg/springframework/test/context/transaction/TransactionContext;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.transaction.TransactionalTestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOrder",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getTransactionManager",
        "desc": "(Lorg/springframework/test/context/TestContext;)Lorg/springframework/transaction/PlatformTransactionManager;"
      },
      {
        "name": "isRollback",
        "desc": "(Lorg/springframework/test/context/TestContext;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getOrder",
        "desc": "()I"
      },
      {
        "name": "beforeTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "isDefaultRollback",
        "desc": "(Lorg/springframework/test/context/TestContext;)Z"
      },
      {
        "name": "getTransactionManager",
        "desc": "(Lorg/springframework/test/context/TestContext;Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;"
      },
      {
        "name": "runAfterTransactionMethods",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "afterTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "runBeforeTransactionMethods",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        4
      ]
    },
    "parents": [
      "org.springframework.test.context.support.AbstractTestExecutionListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.util.TestContextResourceUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "/",
        "classpath:/"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.AbstractGenericWebContextLoader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "classpath:"
      ]
    },
    "parents": [
      "org.springframework.test.context.support.AbstractContextLoader"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.AnnotationConfigWebContextLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "detectDefaultConfigurationClasses",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/Class;"
      },
      {
        "name": "generateDefaultLocations",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "validateMergedContextConfiguration",
        "desc": "(Lorg/springframework/test/context/web/WebMergedContextConfiguration;)V"
      },
      {
        "name": "modifyLocations",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "loadBeanDefinitions",
        "desc": "(Lorg/springframework/web/context/support/GenericWebApplicationContext;Lorg/springframework/test/context/web/WebMergedContextConfiguration;)V"
      },
      {
        "name": "processContextConfiguration",
        "desc": "(Lorg/springframework/test/context/ContextConfigurationAttributes;)V"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.web.AbstractGenericWebContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.GenericGroovyXmlWebContextLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResourceSuffixes",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "loadBeanDefinitions",
        "desc": "(Lorg/springframework/web/context/support/GenericWebApplicationContext;Lorg/springframework/test/context/web/WebMergedContextConfiguration;)V"
      },
      {
        "name": "getResourceSuffixes",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.web.GenericXmlWebContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.GenericXmlWebContextLoader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "validateMergedContextConfiguration",
        "desc": "(Lorg/springframework/test/context/web/WebMergedContextConfiguration;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "loadBeanDefinitions",
        "desc": "(Lorg/springframework/web/context/support/GenericWebApplicationContext;Lorg/springframework/test/context/web/WebMergedContextConfiguration;)V"
      },
      {
        "name": "getResourceSuffix",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.web.AbstractGenericWebContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.ServletTestExecutionListener",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getOrder",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getOrder",
        "desc": "()I"
      },
      {
        "name": "prepareTestInstance",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "beforeTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      },
      {
        "name": "afterTestMethod",
        "desc": "(Lorg/springframework/test/context/TestContext;)V"
      }
    ],
    "dictionary": {
      "str": [
        "activateListener"
      ]
    },
    "parents": [
      "org.springframework.test.context.support.AbstractTestExecutionListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.WebAppConfiguration",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.annotation.Annotation"
    ],
    "access": 9729,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.WebDelegatingSmartContextLoader",
    "setters": [],
    "getters": [
      {
        "name": "getXmlLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;",
        "field": "xmlLoader"
      },
      {
        "name": "getAnnotationConfigLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;",
        "field": "annotationConfigLoader"
      }
    ],
    "observers": [
      {
        "name": "getXmlLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;"
      },
      {
        "name": "getAnnotationConfigLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;"
      }
    ],
    "testableMethods": [
      {
        "name": "getXmlLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;"
      },
      {
        "name": "getAnnotationConfigLoader",
        "desc": "()Lorg/springframework/test/context/SmartContextLoader;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "groovy.lang.Closure",
        "org.springframework.test.context.web.GenericGroovyXmlWebContextLoader"
      ]
    },
    "parents": [
      "org.springframework.test.context.support.AbstractDelegatingSmartContextLoader"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.WebMergedContextConfiguration",
    "setters": [],
    "getters": [
      {
        "name": "getResourceBasePath",
        "desc": "()Ljava/lang/String;",
        "field": "resourceBasePath"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getResourceBasePath",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;Ljava/lang/String;)V"
      },
      {
        "name": "getResourceBasePath",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        ""
      ]
    },
    "parents": [
      "org.springframework.test.context.MergedContextConfiguration"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.WebTestContextBootstrapper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "processMergedContextConfiguration",
        "desc": "(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/test/context/MergedContextConfiguration;"
      },
      {
        "name": "getDefaultContextLoaderClass",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Class;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.context.support.DefaultTestContextBootstrapper"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.socket.MockServerContainer",
    "setters": [
      {
        "name": "setAsyncSendTimeout",
        "desc": "(J)V",
        "field": "defaultAsyncSendTimeout"
      },
      {
        "name": "setDefaultMaxTextMessageBufferSize",
        "desc": "(I)V",
        "field": "defaultMaxTextMessageBufferSize"
      },
      {
        "name": "setDefaultMaxSessionIdleTimeout",
        "desc": "(J)V",
        "field": "defaultMaxSessionIdleTimeout"
      },
      {
        "name": "setDefaultMaxBinaryMessageBufferSize",
        "desc": "(I)V",
        "field": "defaultMaxBinaryMessageBufferSize"
      }
    ],
    "getters": [
      {
        "name": "getDefaultMaxTextMessageBufferSize",
        "desc": "()I",
        "field": "defaultMaxTextMessageBufferSize"
      },
      {
        "name": "getDefaultMaxBinaryMessageBufferSize",
        "desc": "()I",
        "field": "defaultMaxBinaryMessageBufferSize"
      },
      {
        "name": "getDefaultAsyncSendTimeout",
        "desc": "()J",
        "field": "defaultAsyncSendTimeout"
      },
      {
        "name": "getDefaultMaxSessionIdleTimeout",
        "desc": "()J",
        "field": "defaultMaxSessionIdleTimeout"
      }
    ],
    "observers": [
      {
        "name": "getDefaultMaxBinaryMessageBufferSize",
        "desc": "()I"
      },
      {
        "name": "getDefaultAsyncSendTimeout",
        "desc": "()J"
      },
      {
        "name": "getDefaultMaxSessionIdleTimeout",
        "desc": "()J"
      },
      {
        "name": "getDefaultMaxTextMessageBufferSize",
        "desc": "()I"
      },
      {
        "name": "getInstalledExtensions",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "connectToServer",
        "desc": "(Ljava/lang/Object;Ljava/net/URI;)Ljavax/websocket/Session;"
      },
      {
        "name": "connectToServer",
        "desc": "(Ljava/lang/Class;Ljava/net/URI;)Ljavax/websocket/Session;"
      },
      {
        "name": "getDefaultMaxBinaryMessageBufferSize",
        "desc": "()I"
      },
      {
        "name": "getDefaultMaxSessionIdleTimeout",
        "desc": "()J"
      },
      {
        "name": "addEndpoint",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setDefaultMaxBinaryMessageBufferSize",
        "desc": "(I)V"
      },
      {
        "name": "getDefaultMaxTextMessageBufferSize",
        "desc": "()I"
      },
      {
        "name": "connectToServer",
        "desc": "(Ljava/lang/Class;Ljavax/websocket/ClientEndpointConfig;Ljava/net/URI;)Ljavax/websocket/Session;"
      },
      {
        "name": "getInstalledExtensions",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "addEndpoint",
        "desc": "(Ljavax/websocket/server/ServerEndpointConfig;)V"
      },
      {
        "name": "setAsyncSendTimeout",
        "desc": "(J)V"
      },
      {
        "name": "setDefaultMaxTextMessageBufferSize",
        "desc": "(I)V"
      },
      {
        "name": "getDefaultAsyncSendTimeout",
        "desc": "()J"
      },
      {
        "name": "connectToServer",
        "desc": "(Ljavax/websocket/Endpoint;Ljavax/websocket/ClientEndpointConfig;Ljava/net/URI;)Ljavax/websocket/Session;"
      },
      {
        "name": "setDefaultMaxSessionIdleTimeout",
        "desc": "(J)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "javax.websocket.server.ServerContainer"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.socket.MockServerContainerContextCustomizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "customizeContext",
        "desc": "(Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/test/context/MergedContextConfiguration;)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "str": [
        "javax.websocket.server.ServerContainer"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.ContextCustomizer"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "createContextCustomizer",
        "desc": "(Ljava/lang/Class;Ljava/util/List;)Lorg/springframework/test/context/ContextCustomizer;"
      }
    ],
    "dictionary": {
      "str": [
        "javax.websocket.server.ServerContainer"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.context.ContextCustomizerFactory"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.jdbc.JdbcTestUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.AopTestUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.AssertionErrors",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        ">"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.JsonExpectationsHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assertJsonEqual",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "assertJsonNotEqual",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "assertJsonEqual",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertJsonNotEqual",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Z)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.JsonPathExpectationsHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "assertValue",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "assertValue",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;Ljava/lang/Class;)V"
      },
      {
        "name": "assertValueIsNotEmpty",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "doesNotHaveJsonPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "assertValue",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "assertValueIsMap",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "exists",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "hasJsonPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "assertValueIsString",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "assertValueIsBoolean",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "evaluateJsonPath",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "assertValueIsArray",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "doesNotExist",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "assertValueIsEmpty",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "evaluateJsonPath",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "assertValueIsNumber",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "\""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.MetaAnnotationUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.MetaAnnotationUtils$AnnotationDescriptor",
    "setters": [],
    "getters": [
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;",
        "field": "declaringClass"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "()Lorg/springframework/core/annotation/AnnotationAttributes;",
        "field": "annotationAttributes"
      },
      {
        "name": "getRootDeclaringClass",
        "desc": "()Ljava/lang/Class;",
        "field": "rootDeclaringClass"
      },
      {
        "name": "getComposedAnnotation",
        "desc": "()Ljava/lang/annotation/Annotation;",
        "field": "composedAnnotation"
      },
      {
        "name": "getAnnotation",
        "desc": "()Ljava/lang/annotation/Annotation;",
        "field": "annotation"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotation",
        "desc": "()Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getAnnotationType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getComposedAnnotationType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "()Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "getRootDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getComposedAnnotation",
        "desc": "()Ljava/lang/annotation/Annotation;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAnnotation",
        "desc": "()Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getAnnotationType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getComposedAnnotationType",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V"
      },
      {
        "name": "getDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getAnnotationAttributes",
        "desc": "()Lorg/springframework/core/annotation/AnnotationAttributes;"
      },
      {
        "name": "synthesizeAnnotation",
        "desc": "()Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "getRootDeclaringClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "getComposedAnnotation",
        "desc": "()Ljava/lang/annotation/Annotation;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.util.MetaAnnotationUtils",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.MetaAnnotationUtils$UntypedAnnotationDescriptor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V"
      },
      {
        "name": "synthesizeAnnotation",
        "desc": "()Ljava/lang/annotation/Annotation;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.util.MetaAnnotationUtils$AnnotationDescriptor"
    ],
    "outerClass": "org.springframework.test.util.MetaAnnotationUtils",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.ReflectionTestUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "get",
        "org.springframework.aop.framework.Advised",
        "set"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.XmlExpectationsHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "assertXmlEqual",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "assertSource",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertNode",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.XmlExpectationsHelper$XmlUnitDiff",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hasDifferences",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.util.XmlExpectationsHelper",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.util.XpathExpectationsHelper",
    "setters": [],
    "getters": [
      {
        "name": "getXpathExpression",
        "desc": "()Ljavax/xml/xpath/XPathExpression;",
        "field": "xpathExpression"
      }
    ],
    "observers": [
      {
        "name": "getXpathExpression",
        "desc": "()Ljavax/xml/xpath/XPathExpression;"
      }
    ],
    "testableMethods": [
      {
        "name": "assertString",
        "desc": "([BLjava/lang/String;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertBoolean",
        "desc": "([BLjava/lang/String;Z)V"
      },
      {
        "name": "doesNotExist",
        "desc": "([BLjava/lang/String;)V"
      },
      {
        "name": "assertNodeCount",
        "desc": "([BLjava/lang/String;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertNumber",
        "desc": "([BLjava/lang/String;Ljava/lang/Double;)V"
      },
      {
        "name": "assertNodeCount",
        "desc": "([BLjava/lang/String;I)V"
      },
      {
        "name": "evaluateXpath",
        "desc": "(Lorg/w3c/dom/Document;Ljavax/xml/namespace/QName;Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "assertNumber",
        "desc": "([BLjava/lang/String;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "evaluateXpath",
        "desc": "([BLjava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getXpathExpression",
        "desc": "()Ljavax/xml/xpath/XPathExpression;"
      },
      {
        "name": "exists",
        "desc": "([BLjava/lang/String;)V"
      },
      {
        "name": "assertNode",
        "desc": "([BLjava/lang/String;Lorg/hamcrest/Matcher;)V"
      },
      {
        "name": "assertString",
        "desc": "([BLjava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)V"
      },
      {
        "name": "parseXmlByteArray",
        "desc": "([BLjava/lang/String;)Lorg/w3c/dom/Document;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.ModelAndViewAssert",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        0,
        10
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.AbstractRequestExpectationManager",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getRequestDetails",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getExpectations",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getRequests",
        "desc": "()Ljava/util/List;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.client.RequestExpectationManager"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.AbstractRequestExpectationManager$RequestExpectationGroup",
    "setters": [],
    "getters": [
      {
        "name": "getExpectations",
        "desc": "()Ljava/util/Set;",
        "field": "expectations"
      }
    ],
    "observers": [
      {
        "name": "getExpectations",
        "desc": "()Ljava/util/Set;"
      }
    ],
    "testableMethods": [
      {
        "name": "getExpectations",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addAllExpectations",
        "desc": "(Ljava/util/Collection;)V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "update",
        "desc": "(Lorg/springframework/test/web/client/RequestExpectation;)V"
      },
      {
        "name": "findExpectation",
        "desc": "(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/test/web/client/RequestExpectation;"
      },
      {
        "name": "updateAll",
        "desc": "(Ljava/util/Collection;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.client.AbstractRequestExpectationManager",
    "access": 12,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.DefaultRequestExpectation",
    "setters": [
      {
        "name": "andRespond",
        "desc": "(Lorg/springframework/test/web/client/ResponseCreator;)V",
        "field": "responseCreator"
      }
    ],
    "getters": [
      {
        "name": "getRequestMatchers",
        "desc": "()Ljava/util/List;",
        "field": "requestMatchers"
      },
      {
        "name": "getResponseCreator",
        "desc": "()Lorg/springframework/test/web/client/ResponseCreator;",
        "field": "responseCreator"
      },
      {
        "name": "getRequestCount",
        "desc": "()Lorg/springframework/test/web/client/DefaultRequestExpectation$RequestCount;",
        "field": "requestCount"
      }
    ],
    "observers": [
      {
        "name": "getRequestMatchers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getResponseCreator",
        "desc": "()Lorg/springframework/test/web/client/ResponseCreator;"
      },
      {
        "name": "hasRemainingCount",
        "desc": "()Z"
      },
      {
        "name": "isSatisfied",
        "desc": "()Z"
      },
      {
        "name": "getRequestCount",
        "desc": "()Lorg/springframework/test/web/client/DefaultRequestExpectation$RequestCount;"
      }
    ],
    "testableMethods": [
      {
        "name": "getRequestMatchers",
        "desc": "()Ljava/util/List;"
      },
      {
        "name": "getResponseCreator",
        "desc": "()Lorg/springframework/test/web/client/ResponseCreator;"
      },
      {
        "name": "andExpect",
        "desc": "(Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;"
      },
      {
        "name": "incrementAndValidate",
        "desc": "()V"
      },
      {
        "name": "createResponse",
        "desc": "(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;"
      },
      {
        "name": "hasRemainingCount",
        "desc": "()Z"
      },
      {
        "name": "isSatisfied",
        "desc": "()Z"
      },
      {
        "name": "match",
        "desc": "(Lorg/springframework/http/client/ClientHttpRequest;)V"
      },
      {
        "name": "andRespond",
        "desc": "(Lorg/springframework/test/web/client/ResponseCreator;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/client/ExpectedCount;Lorg/springframework/test/web/client/RequestMatcher;)V"
      },
      {
        "name": "getRequestCount",
        "desc": "()Lorg/springframework/test/web/client/DefaultRequestExpectation$RequestCount;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.client.RequestExpectation"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.DefaultRequestExpectation$RequestCount",
    "setters": [],
    "getters": [
      {
        "name": "getMatchedRequestCount",
        "desc": "()I",
        "field": "matchedRequestCount"
      },
      {
        "name": "getExpectedCount",
        "desc": "()Lorg/springframework/test/web/client/ExpectedCount;",
        "field": "expectedCount"
      }
    ],
    "observers": [
      {
        "name": "getMatchedRequestCount",
        "desc": "()I"
      },
      {
        "name": "hasRemainingCount",
        "desc": "()Z"
      },
      {
        "name": "getExpectedCount",
        "desc": "()Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "isSatisfied",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "incrementAndValidate",
        "desc": "()V"
      },
      {
        "name": "getMatchedRequestCount",
        "desc": "()I"
      },
      {
        "name": "hasRemainingCount",
        "desc": "()Z"
      },
      {
        "name": "getExpectedCount",
        "desc": "()Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "isSatisfied",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/client/ExpectedCount;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.client.DefaultRequestExpectation",
    "access": 12,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.ExpectedCount",
    "setters": [],
    "getters": [
      {
        "name": "getMaxCount",
        "desc": "()I",
        "field": "maxCount"
      },
      {
        "name": "getMinCount",
        "desc": "()I",
        "field": "minCount"
      }
    ],
    "observers": [
      {
        "name": "getMinCount",
        "desc": "()I"
      },
      {
        "name": "getMaxCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "manyTimes",
        "desc": "()Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "once",
        "desc": "()Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "getMinCount",
        "desc": "()I"
      },
      {
        "name": "times",
        "desc": "(I)Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "min",
        "desc": "(I)Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "twice",
        "desc": "()Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "never",
        "desc": "()Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "max",
        "desc": "(I)Lorg/springframework/test/web/client/ExpectedCount;"
      },
      {
        "name": "getMaxCount",
        "desc": "()I"
      },
      {
        "name": "between",
        "desc": "(II)Lorg/springframework/test/web/client/ExpectedCount;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        2147483647
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockMvcClientHttpRequestFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createAsyncRequest",
        "desc": "(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;"
      },
      {
        "name": "createRequest",
        "desc": "(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/servlet/MockMvc;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.http.client.ClientHttpRequestFactory",
      "org.springframework.http.client.AsyncClientHttpRequestFactory"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockMvcClientHttpRequestFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.mock.http.client.MockClientHttpRequest"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockMvcClientHttpRequestFactory$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.mock.http.client.MockAsyncClientHttpRequest"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockRestServiceServer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "expect",
        "desc": "(Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;"
      },
      {
        "name": "bindTo",
        "desc": "(Lorg/springframework/web/client/support/RestGatewaySupport;)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "createServer",
        "desc": "(Lorg/springframework/web/client/RestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer;"
      },
      {
        "name": "createServer",
        "desc": "(Lorg/springframework/web/client/AsyncRestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer;"
      },
      {
        "name": "verify",
        "desc": "()V"
      },
      {
        "name": "createServer",
        "desc": "(Lorg/springframework/web/client/support/RestGatewaySupport;)Lorg/springframework/test/web/client/MockRestServiceServer;"
      },
      {
        "name": "expect",
        "desc": "(Lorg/springframework/test/web/client/ExpectedCount;Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;"
      },
      {
        "name": "bindTo",
        "desc": "(Lorg/springframework/web/client/RestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;"
      },
      {
        "name": "bindTo",
        "desc": "(Lorg/springframework/web/client/AsyncRestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockRestServiceServer$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockRestServiceServer$DefaultBuilder",
    "setters": [
      {
        "name": "ignoreExpectOrder",
        "desc": "(Z)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;",
        "field": "ignoreExpectOrder"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.client.MockRestServiceServer$MockRestServiceServerBuilder"
    ],
    "outerClass": "org.springframework.test.web.client.MockRestServiceServer",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockRestServiceServer$MockClientHttpRequestFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.http.client.ClientHttpRequestFactory",
      "org.springframework.http.client.AsyncClientHttpRequestFactory"
    ],
    "outerClass": "org.springframework.test.web.client.MockRestServiceServer",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockRestServiceServer$MockClientHttpRequestFactory$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.mock.http.client.MockAsyncClientHttpRequest"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.MockRestServiceServer$MockRestServiceServerBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.client.MockRestServiceServer",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.RequestExpectation",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.client.ResponseActions",
      "org.springframework.test.web.client.RequestMatcher",
      "org.springframework.test.web.client.ResponseCreator"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.RequestExpectationManager",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.RequestMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.ResponseActions",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.ResponseCreator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.SimpleRequestExpectationManager",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "afterExpectationsDeclared",
        "desc": "()V"
      },
      {
        "name": "matchRequest",
        "desc": "(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/test/web/client/RequestExpectation;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.AbstractRequestExpectationManager"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.UnorderedRequestExpectationManager",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "afterExpectationsDeclared",
        "desc": "()V"
      },
      {
        "name": "matchRequest",
        "desc": "(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/test/web/client/RequestExpectation;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.AbstractRequestExpectationManager"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.ContentRequestMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "contentType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "string",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "xml",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "contentTypeCompatibleWith",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "string",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "source",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "json",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "bytes",
        "desc": "([B)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "json",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "formData",
        "desc": "(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "contentTypeCompatibleWith",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "node",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "contentType",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/RequestMatcher;"
      }
    ],
    "dictionary": {
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.ContentRequestMatchers$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getBody",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.http.HttpInputMessage"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.ContentRequestMatchers$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.ContentRequestMatchers$AbstractXmlRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.ContentRequestMatchers$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.ContentRequestMatchers$AbstractXmlRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.ContentRequestMatchers$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.ContentRequestMatchers$AbstractXmlRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.ContentRequestMatchers$AbstractXmlRequestMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.client.RequestMatcher"
    ],
    "outerClass": "org.springframework.test.web.client.match.ContentRequestMatchers",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isBoolean",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isMap",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isArray",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isNumber",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isNotEmpty",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isString",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isEmpty",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "hasJsonPath",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      }
    ],
    "testableMethods": [
      {
        "name": "isBoolean",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isNumber",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "value",
        "desc": "(Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "value",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "isNotEmpty",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isString",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "doesNotExist",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isMap",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isArray",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "exists",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "doesNotHaveJsonPath",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "value",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "isEmpty",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "hasJsonPath",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$10",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$11",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$12",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$13",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$14",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$6",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$7",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$8",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$9",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.client.RequestMatcher"
    ],
    "outerClass": "org.springframework.test.web.client.match.JsonPathRequestMatchers",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.MockRestRequestMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "number",
        "desc": "(Ljava/lang/Double;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "node",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "string",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "exists",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "nodeCount",
        "desc": "(I)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "nodeCount",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "string",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "doesNotExist",
        "desc": "()Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "number",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "booleanValue",
        "desc": "(Ljava/lang/Boolean;)Lorg/springframework/test/web/client/RequestMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$10",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$6",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$7",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$8",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$9",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "UTF-8"
      ]
    },
    "parents": [
      "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.client.RequestMatcher"
    ],
    "outerClass": "org.springframework.test.web.client.match.XpathRequestMatchers",
    "access": 1034,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.response.DefaultResponseCreator",
    "setters": [
      {
        "name": "body",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;",
        "field": "content"
      },
      {
        "name": "body",
        "desc": "(Lorg/springframework/core/io/Resource;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;",
        "field": "contentResource"
      },
      {
        "name": "body",
        "desc": "([B)Lorg/springframework/test/web/client/response/DefaultResponseCreator;",
        "field": "content"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "body",
        "desc": "(Lorg/springframework/core/io/Resource;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/HttpStatus;)V"
      },
      {
        "name": "createResponse",
        "desc": "(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;"
      },
      {
        "name": "body",
        "desc": "([B)Lorg/springframework/test/web/client/response/DefaultResponseCreator;"
      },
      {
        "name": "body",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;"
      },
      {
        "name": "headers",
        "desc": "(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;"
      },
      {
        "name": "location",
        "desc": "(Ljava/net/URI;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;"
      },
      {
        "name": "contentType",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.client.ResponseCreator"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.client.response.MockRestResponseCreators",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.AbstractMockServerSpec",
    "setters": [
      {
        "name": "webFilter",
        "desc": "([Lorg/springframework/web/server/WebFilter;)Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;",
        "field": "filters"
      },
      {
        "name": "webSessionManager",
        "desc": "(Lorg/springframework/web/server/session/WebSessionManager;)Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;",
        "field": "sessionManager"
      },
      {
        "name": "apply",
        "desc": "(Lorg/springframework/test/web/reactive/server/MockServerConfigurer;)Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;",
        "field": "configurers"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        4
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$MockServerSpec"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.ApplicationContextSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "initHttpHandlerBuilder",
        "desc": "()Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/context/ApplicationContext;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.reactive.server.AbstractMockServerSpec"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultControllerSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "contentTypeResolver",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      },
      {
        "name": "controllerAdvice",
        "desc": "([Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      },
      {
        "name": "httpMessageCodecs",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      },
      {
        "name": "formatters",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "pathMatching",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      },
      {
        "name": "argumentResolvers",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      },
      {
        "name": "validator",
        "desc": "(Lorg/springframework/validation/Validator;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      },
      {
        "name": "initHttpHandlerBuilder",
        "desc": "()Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;"
      },
      {
        "name": "corsMappings",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      },
      {
        "name": "viewResolvers",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;"
      }
    ],
    "dictionary": {
      "byte": [
        8
      ],
      "short": [
        8
      ],
      "int": [
        0,
        8
      ]
    },
    "parents": [
      "org.springframework.test.web.reactive.server.AbstractMockServerSpec",
      "org.springframework.test.web.reactive.server.WebTestClient$ControllerSpec"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultControllerSpec$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer",
    "setters": [],
    "getters": [
      {
        "name": "getValidator",
        "desc": "()Lorg/springframework/validation/Validator;",
        "field": "validator"
      }
    ],
    "observers": [
      {
        "name": "getValidator",
        "desc": "()Lorg/springframework/validation/Validator;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.web.reactive.config.WebFluxConfigurer"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.DefaultControllerSpec",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultMockServerSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/server/WebHandler;)V"
      },
      {
        "name": "initHttpHandlerBuilder",
        "desc": "()Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.reactive.server.AbstractMockServerSpec"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultRouterFunctionSpec",
    "setters": [
      {
        "name": "handlerStrategies",
        "desc": "(Lorg/springframework/web/reactive/function/server/HandlerStrategies;)Lorg/springframework/test/web/reactive/server/WebTestClient$RouterFunctionSpec;",
        "field": "handlerStrategies"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/reactive/function/server/RouterFunction;)V"
      },
      {
        "name": "handlerStrategies",
        "desc": "(Lorg/springframework/web/reactive/function/server/HandlerStrategies;)Lorg/springframework/test/web/reactive/server/WebTestClient$RouterFunctionSpec;"
      },
      {
        "name": "initHttpHandlerBuilder",
        "desc": "()Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.reactive.server.AbstractMockServerSpec",
      "org.springframework.test.web.reactive.server.WebTestClient$RouterFunctionSpec"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultWebTestClient",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "mutate",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "get",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;"
      }
    ],
    "testableMethods": [
      {
        "name": "mutateWith",
        "desc": "(Lorg/springframework/test/web/reactive/server/WebTestClientConfigurer;)Lorg/springframework/test/web/reactive/server/WebTestClient;"
      },
      {
        "name": "post",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/http/client/reactive/ClientHttpConnector;Ljava/time/Duration;Lorg/springframework/test/web/reactive/server/DefaultWebTestClientBuilder;)V"
      },
      {
        "name": "delete",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;"
      },
      {
        "name": "head",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;"
      },
      {
        "name": "patch",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec;"
      },
      {
        "name": "method",
        "desc": "(Lorg/springframework/http/HttpMethod;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec;"
      },
      {
        "name": "mutate",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "options",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;"
      },
      {
        "name": "get",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;"
      },
      {
        "name": "put",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec;"
      }
    ],
    "dictionary": {
      "long": [
        5
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodyContentSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$BodyContentSpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.DefaultWebTestClient",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec",
    "setters": [],
    "getters": [
      {
        "name": "getResult",
        "desc": "()Lorg/springframework/test/web/reactive/server/EntityExchangeResult;",
        "field": "result"
      }
    ],
    "observers": [
      {
        "name": "getResult",
        "desc": "()Lorg/springframework/test/web/reactive/server/EntityExchangeResult;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$BodySpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.DefaultWebTestClient",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultListBodySpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec",
      "org.springframework.test.web.reactive.server.WebTestClient$ListBodySpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.DefaultWebTestClient",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultRequestBodyUriSpec",
    "setters": [
      {
        "name": "uri",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;",
        "field": "uriTemplate"
      },
      {
        "name": "uri",
        "desc": "(Ljava/util/function/Function;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;",
        "field": "uriTemplate"
      },
      {
        "name": "uri",
        "desc": "(Ljava/net/URI;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;",
        "field": "uriTemplate"
      },
      {
        "name": "uri",
        "desc": "(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;",
        "field": "uriTemplate"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$RequestBodyUriSpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.DefaultWebTestClient",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultResponseSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.DefaultWebTestClient",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.DefaultWebTestClientBuilder",
    "setters": [
      {
        "name": "responseTimeout",
        "desc": "(Ljava/time/Duration;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;",
        "field": "responseTimeout"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "uriBuilderFactory",
        "desc": "(Lorg/springframework/web/util/UriBuilderFactory;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/client/reactive/ClientHttpConnector;)V"
      },
      {
        "name": "filter",
        "desc": "(Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "defaultHeaders",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "defaultCookie",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "exchangeStrategies",
        "desc": "(Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/DefaultWebTestClientBuilder;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "filters",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "defaultCookies",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "responseTimeout",
        "desc": "(Ljava/time/Duration;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "apply",
        "desc": "(Lorg/springframework/test/web/reactive/server/WebTestClientConfigurer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "defaultHeader",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "baseUrl",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;"
      },
      {
        "name": "build",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$Builder"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.EntityExchangeResult",
    "setters": [],
    "getters": [
      {
        "name": "getResponseBody",
        "desc": "()Ljava/lang/Object;",
        "field": "body"
      }
    ],
    "observers": [
      {
        "name": "getResponseBody",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/ExchangeResult;Ljava/lang/Object;)V"
      },
      {
        "name": "getResponseBody",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.reactive.server.ExchangeResult"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.ExchangeResult",
    "setters": [],
    "getters": [
      {
        "name": "getUriTemplate",
        "desc": "()Ljava/lang/String;",
        "field": "uriTemplate"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRequestBodyContent",
        "desc": "()[B"
      },
      {
        "name": "getRequestHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "getUriTemplate",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getResponseHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getResponseCookies",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getUrl",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "getStatus",
        "desc": "()Lorg/springframework/http/HttpStatus;"
      },
      {
        "name": "getResponseBodyContent",
        "desc": "()[B"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getRequestBodyContent",
        "desc": "()[B"
      },
      {
        "name": "getMethod",
        "desc": "()Lorg/springframework/http/HttpMethod;"
      },
      {
        "name": "getUriTemplate",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getResponseCookies",
        "desc": "()Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getResponseBodyContent",
        "desc": "()[B"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/client/reactive/ClientHttpRequest;Lorg/springframework/http/client/reactive/ClientHttpResponse;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Ljava/time/Duration;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/ExchangeResult;)V"
      },
      {
        "name": "assertWithDiagnostics",
        "desc": "(Ljava/lang/Runnable;)V"
      },
      {
        "name": "getRequestHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getResponseHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getUrl",
        "desc": "()Ljava/net/URI;"
      },
      {
        "name": "getStatus",
        "desc": "()Lorg/springframework/http/HttpStatus;"
      }
    ],
    "dictionary": {
      "int": [
        3
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.FluxExchangeResult",
    "setters": [],
    "getters": [
      {
        "name": "getResponseBody",
        "desc": "()Lreactor/core/publisher/Flux;",
        "field": "body"
      }
    ],
    "observers": [
      {
        "name": "getResponseBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      }
    ],
    "testableMethods": [
      {
        "name": "getResponseBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/ExchangeResult;Lreactor/core/publisher/Flux;)V"
      },
      {
        "name": "consumeWith",
        "desc": "(Ljava/util/function/Consumer;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.reactive.server.ExchangeResult"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.HeaderAssertions",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/ExchangeResult;Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;)V"
      },
      {
        "name": "value",
        "desc": "(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "contentTypeCompatibleWith",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "doesNotExist",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "contentType",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "lastModified",
        "desc": "(J)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "valueMatches",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "cacheControl",
        "desc": "(Lorg/springframework/http/CacheControl;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "contentTypeCompatibleWith",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "expires",
        "desc": "(J)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "valueEquals",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "contentType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "value",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "exists",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "contentDisposition",
        "desc": "(Lorg/springframework/http/ContentDisposition;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "contentLength",
        "desc": "(J)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.HttpHandlerConnector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/server/reactive/HttpHandler;)V"
      },
      {
        "name": "connect",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;"
      }
    ],
    "dictionary": {
      "int": [
        2
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.http.client.reactive.ClientHttpConnector"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.JsonPathAssertions",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasJsonPath",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      }
    ],
    "testableMethods": [
      {
        "name": "isNumber",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "doesNotExist",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "isBoolean",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "value",
        "desc": "(Ljava/util/function/Consumer;Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "isEqualTo",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "isNotEmpty",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "value",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "exists",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "isMap",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "value",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "isArray",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "isEmpty",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "value",
        "desc": "(Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "doesNotHaveJsonPath",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "hasJsonPath",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.KotlinBodySpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.MockServerConfigurer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.StatusAssertions",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/ExchangeResult;Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;)V"
      },
      {
        "name": "value",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isUnauthorized",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "is1xxInformational",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "is3xxRedirection",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isAccepted",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isOk",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isFound",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isForbidden",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "is5xxServerError",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isPermanentRedirect",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isNotModified",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isNotFound",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isTemporaryRedirect",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "is4xxClientError",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isCreated",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "is2xxSuccessful",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "reasonEquals",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isEqualTo",
        "desc": "(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "value",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isBadRequest",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isEqualTo",
        "desc": "(I)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isNoContent",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      },
      {
        "name": "isSeeOther",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;"
      }
    ],
    "dictionary": {
      "str": [
        "Status"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$BodyContentSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$BodySpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$Builder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$ControllerSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$MockServerSpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$ListBodySpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$BodySpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$MockServerSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$RequestBodyUriSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec",
      "org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersUriSpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersUriSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$UriSpec",
      "org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$RouterFunctionSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.WebTestClient$MockServerSpec"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClient$UriSpec",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WebTestClient",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClientConfigurer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.reactive.server.KotlinBodySpec"
    ],
    "outerClass": "<unreachable>",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "it"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Runnable"
    ],
    "outerClass": "<unreachable>",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WiretapConnector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/client/reactive/ClientHttpConnector;)V"
      },
      {
        "name": "connect",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;"
      },
      {
        "name": "claimRequest",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WiretapConnector$Info;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "WebTestClient-Request-Id"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.http.client.reactive.ClientHttpConnector"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WiretapConnector$Info",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createExchangeResult",
        "desc": "(Ljava/time/Duration;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/ExchangeResult;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/WiretapConnector;Lorg/springframework/test/web/reactive/server/WiretapConnector$WiretapClientHttpRequest;Lorg/springframework/test/web/reactive/server/WiretapConnector$WiretapClientHttpResponse;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WiretapConnector",
    "access": 0,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WiretapConnector$WiretapClientHttpRequest",
    "setters": [
      {
        "name": "writeAndFlushWith",
        "desc": "(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;",
        "field": "recorder"
      },
      {
        "name": "writeWith",
        "desc": "(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;",
        "field": "recorder"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getRecorder",
        "desc": "()Lorg/springframework/test/web/reactive/server/WiretapConnector$WiretapRecorder;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.http.client.reactive.ClientHttpRequestDecorator"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WiretapConnector",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WiretapConnector$WiretapClientHttpResponse",
    "setters": [],
    "getters": [
      {
        "name": "getRecorder",
        "desc": "()Lorg/springframework/test/web/reactive/server/WiretapConnector$WiretapRecorder;",
        "field": "recorder"
      }
    ],
    "observers": [
      {
        "name": "getRecorder",
        "desc": "()Lorg/springframework/test/web/reactive/server/WiretapConnector$WiretapRecorder;"
      },
      {
        "name": "getBody",
        "desc": "()Lreactor/core/publisher/Flux;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.http.client.reactive.ClientHttpResponseDecorator"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WiretapConnector",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.WiretapConnector$WiretapRecorder",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getNestedPublisherToUse",
        "desc": "()Lorg/reactivestreams/Publisher;"
      },
      {
        "name": "getContent",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getPublisherToUse",
        "desc": "()Lorg/reactivestreams/Publisher;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)V"
      },
      {
        "name": "getNestedPublisherToUse",
        "desc": "()Lorg/reactivestreams/Publisher;"
      },
      {
        "name": "getContent",
        "desc": "()Lreactor/core/publisher/Mono;"
      },
      {
        "name": "getPublisherToUse",
        "desc": "()Lorg/reactivestreams/Publisher;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.WiretapConnector",
    "access": 24,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.XpathAssertions",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)V"
      },
      {
        "name": "isEqualTo",
        "desc": "(Ljava/lang/Double;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "number",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "doesNotExist",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "string",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "string",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "number",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "isEqualTo",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "nodeCount",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "nodeCount",
        "desc": "(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "exists",
        "desc": "()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "nodeCount",
        "desc": "(I)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      },
      {
        "name": "isEqualTo",
        "desc": "(Z)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.reactive.server.XpathAssertions$CheckedExceptionTask",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.reactive.server.XpathAssertions",
    "access": 1546,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.DefaultMvcResult",
    "setters": [
      {
        "name": "setInterceptors",
        "desc": "([Lorg/springframework/web/servlet/HandlerInterceptor;)V",
        "field": "interceptors"
      },
      {
        "name": "setResolvedException",
        "desc": "(Ljava/lang/Exception;)V",
        "field": "resolvedException"
      },
      {
        "name": "setModelAndView",
        "desc": "(Lorg/springframework/web/servlet/ModelAndView;)V",
        "field": "modelAndView"
      },
      {
        "name": "setHandler",
        "desc": "(Ljava/lang/Object;)V",
        "field": "handler"
      }
    ],
    "getters": [
      {
        "name": "getRequest",
        "desc": "()Lorg/springframework/mock/web/MockHttpServletRequest;",
        "field": "mockRequest"
      },
      {
        "name": "getModelAndView",
        "desc": "()Lorg/springframework/web/servlet/ModelAndView;",
        "field": "modelAndView"
      },
      {
        "name": "getInterceptors",
        "desc": "()[Lorg/springframework/web/servlet/HandlerInterceptor;",
        "field": "interceptors"
      },
      {
        "name": "getResponse",
        "desc": "()Lorg/springframework/mock/web/MockHttpServletResponse;",
        "field": "mockResponse"
      },
      {
        "name": "getResolvedException",
        "desc": "()Ljava/lang/Exception;",
        "field": "resolvedException"
      },
      {
        "name": "getHandler",
        "desc": "()Ljava/lang/Object;",
        "field": "handler"
      }
    ],
    "observers": [
      {
        "name": "getRequest",
        "desc": "()Lorg/springframework/mock/web/MockHttpServletRequest;"
      },
      {
        "name": "getModelAndView",
        "desc": "()Lorg/springframework/web/servlet/ModelAndView;"
      },
      {
        "name": "getInterceptors",
        "desc": "()[Lorg/springframework/web/servlet/HandlerInterceptor;"
      },
      {
        "name": "getResponse",
        "desc": "()Lorg/springframework/mock/web/MockHttpServletResponse;"
      },
      {
        "name": "getResolvedException",
        "desc": "()Ljava/lang/Exception;"
      },
      {
        "name": "getAsyncResult",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getHandler",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getFlashMap",
        "desc": "()Lorg/springframework/web/servlet/FlashMap;"
      }
    ],
    "testableMethods": [
      {
        "name": "getModelAndView",
        "desc": "()Lorg/springframework/web/servlet/ModelAndView;"
      },
      {
        "name": "getAsyncResult",
        "desc": "(J)Ljava/lang/Object;"
      },
      {
        "name": "setModelAndView",
        "desc": "(Lorg/springframework/web/servlet/ModelAndView;)V"
      },
      {
        "name": "getResolvedException",
        "desc": "()Ljava/lang/Exception;"
      },
      {
        "name": "setResolvedException",
        "desc": "(Ljava/lang/Exception;)V"
      },
      {
        "name": "setAsyncResult",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getHandler",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "setHandler",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "setAsyncDispatchLatch",
        "desc": "(Ljava/util/concurrent/CountDownLatch;)V"
      },
      {
        "name": "getRequest",
        "desc": "()Lorg/springframework/mock/web/MockHttpServletRequest;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletRequest;Lorg/springframework/mock/web/MockHttpServletResponse;)V"
      },
      {
        "name": "getInterceptors",
        "desc": "()[Lorg/springframework/web/servlet/HandlerInterceptor;"
      },
      {
        "name": "getResponse",
        "desc": "()Lorg/springframework/mock/web/MockHttpServletResponse;"
      },
      {
        "name": "setInterceptors",
        "desc": "([Lorg/springframework/web/servlet/HandlerInterceptor;)V"
      },
      {
        "name": "getAsyncResult",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getFlashMap",
        "desc": "()Lorg/springframework/web/servlet/FlashMap;"
      }
    ],
    "dictionary": {
      "long": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.MvcResult"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.DispatcherServletCustomizer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.MockMvc",
    "setters": [],
    "getters": [
      {
        "name": "getDispatcherServlet",
        "desc": "()Lorg/springframework/web/servlet/DispatcherServlet;",
        "field": "servlet"
      }
    ],
    "observers": [
      {
        "name": "getDispatcherServlet",
        "desc": "()Lorg/springframework/web/servlet/DispatcherServlet;"
      }
    ],
    "testableMethods": [
      {
        "name": "setGlobalResultMatchers",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/servlet/TestDispatcherServlet;[Ljavax/servlet/Filter;)V"
      },
      {
        "name": "setDefaultRequest",
        "desc": "(Lorg/springframework/test/web/servlet/RequestBuilder;)V"
      },
      {
        "name": "setGlobalResultHandlers",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getDispatcherServlet",
        "desc": "()Lorg/springframework/web/servlet/DispatcherServlet;"
      },
      {
        "name": "perform",
        "desc": "(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/ResultActions;"
      }
    ],
    "dictionary": {
      "str": [
        ".MVC_RESULT_ATTRIBUTE"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.MockMvc$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.ResultActions"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.MockMvcBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.MockMvcBuilderSupport",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.MockMvcBuilderSupport$MockMvcBuildException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.core.NestedRuntimeException"
    ],
    "outerClass": "org.springframework.test.web.servlet.MockMvcBuilderSupport",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.MvcResult",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.RequestBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.ResultActions",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.ResultHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.ResultMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.SmartRequestBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.RequestBuilder"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.TestDispatcherServlet",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;)V"
      },
      {
        "name": "getHandler",
        "desc": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/HandlerExecutionChain;"
      },
      {
        "name": "render",
        "desc": "(Lorg/springframework/web/servlet/ModelAndView;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V"
      },
      {
        "name": "getMvcResult",
        "desc": "(Ljavax/servlet/ServletRequest;)Lorg/springframework/test/web/servlet/DefaultMvcResult;"
      },
      {
        "name": "processHandlerException",
        "desc": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)Lorg/springframework/web/servlet/ModelAndView;"
      },
      {
        "name": "service",
        "desc": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        ".interceptor"
      ]
    },
    "parents": [
      "org.springframework.web.servlet.DispatcherServlet"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.TestDispatcherServlet$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.web.context.request.async.CallableProcessingInterceptor"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.TestDispatcherServlet$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.web.context.request.async.DeferredResultProcessingInterceptor"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebConnection;[Lorg/springframework/test/web/servlet/htmlunit/DelegatingWebConnection$DelegateWebConnection;)V"
      },
      {
        "name": "getResponse",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebRequest;)Lcom/gargoylesoftware/htmlunit/WebResponse;"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebConnection;Ljava/util/List;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "com.gargoylesoftware.htmlunit.WebConnection"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection$DelegateWebConnection",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/servlet/htmlunit/WebRequestMatcher;Lcom/gargoylesoftware/htmlunit/WebConnection;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection",
    "access": 25,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.ForwardRequestPostProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "postProcessRequest",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletRequest;)Lorg/springframework/mock/web/MockHttpServletRequest;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.request.RequestPostProcessor"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.HostRequestMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "matches",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebRequest;)Z"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.htmlunit.WebRequestMatcher"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder",
    "setters": [
      {
        "name": "setContextPath",
        "desc": "(Ljava/lang/String;)V",
        "field": "contextPath"
      },
      {
        "name": "merge",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;",
        "field": "parentBuilder"
      },
      {
        "name": "setForwardPostProcessor",
        "desc": "(Lorg/springframework/test/web/servlet/request/RequestPostProcessor;)V",
        "field": "forwardPostProcessor"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "isMergeEnabled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "merge",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "buildRequest",
        "desc": "(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;"
      },
      {
        "name": "isMergeEnabled",
        "desc": "()Z"
      },
      {
        "name": "setContextPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;Lcom/gargoylesoftware/htmlunit/WebClient;Lcom/gargoylesoftware/htmlunit/WebRequest;)V"
      },
      {
        "name": "setForwardPostProcessor",
        "desc": "(Lorg/springframework/test/web/servlet/request/RequestPostProcessor;)V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "str": [
        "",
        "*/*",
        "/",
        "=;",
        "Cookie",
        "JSESSIONID"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.RequestBuilder",
      "org.springframework.beans.Mergeable"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder$HtmlUnitMockHttpServletRequest",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.mock.web.MockHttpServletRequest"
    ],
    "outerClass": "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder$HtmlUnitMockHttpSession",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.mock.web.MockHttpSession"
    ],
    "outerClass": "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder",
    "access": 18,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.MockMvcWebClientBuilder",
    "setters": [
      {
        "name": "withDelegate",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebClient;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;",
        "field": "webClient"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)V"
      },
      {
        "name": "build",
        "desc": "()Lcom/gargoylesoftware/htmlunit/WebClient;"
      },
      {
        "name": "withDelegate",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebClient;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;"
      },
      {
        "name": "webAppContextSetup",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;"
      },
      {
        "name": "webAppContextSetup",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/servlet/MockMvc;)V"
      },
      {
        "name": "mockMvcSetup",
        "desc": "(Lorg/springframework/test/web/servlet/MockMvc;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.servlet.htmlunit.MockMvcWebConnectionBuilderSupport"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.MockMvcWebConnection",
    "setters": [
      {
        "name": "setWebClient",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebClient;)V",
        "field": "webClient"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/servlet/MockMvc;Lcom/gargoylesoftware/htmlunit/WebClient;Ljava/lang/String;)V"
      },
      {
        "name": "validateContextPath",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getResponse",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebRequest;)Lcom/gargoylesoftware/htmlunit/WebResponse;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/servlet/MockMvc;Lcom/gargoylesoftware/htmlunit/WebClient;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "setWebClient",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebClient;)V"
      }
    ],
    "dictionary": {
      "short": [
        1000
      ],
      "int": [
        -1,
        0,
        1000
      ],
      "str": [
        "",
        "/",
        "httponly",
        "true"
      ]
    },
    "parents": [
      "java.lang.Object",
      "com.gargoylesoftware.htmlunit.WebConnection"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.MockMvcWebConnectionBuilderSupport",
    "setters": [
      {
        "name": "contextPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebConnectionBuilderSupport;",
        "field": "contextPath"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "localhost"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.MockWebResponseBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(JLcom/gargoylesoftware/htmlunit/WebRequest;Lorg/springframework/mock/web/MockHttpServletResponse;)V"
      },
      {
        "name": "build",
        "desc": "()Lcom/gargoylesoftware/htmlunit/WebResponse;"
      }
    ],
    "dictionary": {
      "str": [
        "Location"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.UrlRegexRequestMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/regex/Pattern;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "matches",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebRequest;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.htmlunit.WebRequestMatcher"
    ],
    "access": 49,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.WebRequestMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.webdriver.MockMvcHtmlUnitDriverBuilder",
    "setters": [
      {
        "name": "javascriptEnabled",
        "desc": "(Z)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;",
        "field": "javascriptEnabled"
      },
      {
        "name": "withDelegate",
        "desc": "(Lorg/springframework/test/web/servlet/htmlunit/webdriver/WebConnectionHtmlUnitDriver;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;",
        "field": "driver"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;)V"
      },
      {
        "name": "mockMvcSetup",
        "desc": "(Lorg/springframework/test/web/servlet/MockMvc;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;"
      },
      {
        "name": "webAppContextSetup",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;"
      },
      {
        "name": "javascriptEnabled",
        "desc": "(Z)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;"
      },
      {
        "name": "build",
        "desc": "()Lorg/openqa/selenium/htmlunit/HtmlUnitDriver;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)V"
      },
      {
        "name": "webAppContextSetup",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;"
      },
      {
        "name": "withDelegate",
        "desc": "(Lorg/springframework/test/web/servlet/htmlunit/webdriver/WebConnectionHtmlUnitDriver;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/servlet/MockMvc;)V"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "org.springframework.test.web.servlet.htmlunit.MockMvcWebConnectionBuilderSupport"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getWebClient",
        "desc": "()Lcom/gargoylesoftware/htmlunit/WebClient;"
      },
      {
        "name": "getWebConnection",
        "desc": "()Lcom/gargoylesoftware/htmlunit/WebConnection;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/openqa/selenium/Capabilities;)V"
      },
      {
        "name": "getWebClient",
        "desc": "()Lcom/gargoylesoftware/htmlunit/WebClient;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getWebConnection",
        "desc": "()Lcom/gargoylesoftware/htmlunit/WebConnection;"
      },
      {
        "name": "modifyWebClient",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebClient;)Lcom/gargoylesoftware/htmlunit/WebClient;"
      },
      {
        "name": "modifyWebClientInternal",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebClient;)Lcom/gargoylesoftware/htmlunit/WebClient;"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "(Lcom/gargoylesoftware/htmlunit/BrowserVersion;)V"
      },
      {
        "name": "setWebConnection",
        "desc": "(Lcom/gargoylesoftware/htmlunit/WebConnection;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.openqa.selenium.htmlunit.HtmlUnitDriver"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.request.ConfigurableSmartRequestBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.SmartRequestBuilder"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder",
    "setters": [
      {
        "name": "servletPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "servletPath"
      },
      {
        "name": "contentType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "contentType"
      },
      {
        "name": "contextPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "contextPath"
      },
      {
        "name": "contentType",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "contentType"
      },
      {
        "name": "content",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "content"
      },
      {
        "name": "content",
        "desc": "([B)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "content"
      },
      {
        "name": "principal",
        "desc": "(Ljava/security/Principal;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "principal"
      },
      {
        "name": "merge",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;",
        "field": "contentType"
      },
      {
        "name": "characterEncoding",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "characterEncoding"
      },
      {
        "name": "pathInfo",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "pathInfo"
      },
      {
        "name": "session",
        "desc": "(Lorg/springframework/mock/web/MockHttpSession;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "session"
      },
      {
        "name": "secure",
        "desc": "(Z)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;",
        "field": "secure"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "isMergeEnabled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "postProcessRequest",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletRequest;)Lorg/springframework/mock/web/MockHttpServletRequest;"
      },
      {
        "name": "locale",
        "desc": "(Ljava/util/Locale;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "content",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "requestAttr",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "flashAttrs",
        "desc": "(Ljava/util/Map;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "createServletRequest",
        "desc": "(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;"
      },
      {
        "name": "principal",
        "desc": "(Ljava/security/Principal;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "merge",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "pathInfo",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V"
      },
      {
        "name": "session",
        "desc": "(Lorg/springframework/mock/web/MockHttpSession;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "servletPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "contentType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "flashAttr",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "accept",
        "desc": "([Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "header",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "contextPath",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "locale",
        "desc": "([Ljava/util/Locale;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "contentType",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "isMergeEnabled",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/net/URI;)V"
      },
      {
        "name": "sessionAttr",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "content",
        "desc": "([B)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "params",
        "desc": "(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "sessionAttrs",
        "desc": "(Ljava/util/Map;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "headers",
        "desc": "(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "buildRequest",
        "desc": "(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;"
      },
      {
        "name": "accept",
        "desc": "([Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "characterEncoding",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "cookie",
        "desc": "([Ljavax/servlet/http/Cookie;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "with",
        "desc": "(Lorg/springframework/test/web/servlet/request/RequestPostProcessor;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "param",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      },
      {
        "name": "secure",
        "desc": "(Z)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ],
      "str": [
        "",
        "/",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.request.ConfigurableSmartRequestBuilder",
      "org.springframework.beans.Mergeable"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getBody",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "getHeaders",
        "desc": "()Lorg/springframework/http/HttpHeaders;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.http.HttpInputMessage"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "merge",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "file",
        "desc": "(Ljava/lang/String;[B)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/net/URI;)V"
      },
      {
        "name": "createServletRequest",
        "desc": "(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;"
      },
      {
        "name": "part",
        "desc": "([Ljavax/servlet/http/Part;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;"
      },
      {
        "name": "file",
        "desc": "(Lorg/springframework/mock/web/MockMultipartFile;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.request.MockMvcRequestBuilders",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.request.RequestPostProcessor",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.ContentResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "json",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "encoding",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "contentType",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "source",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "contentType",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "contentTypeCompatibleWith",
        "desc": "(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "string",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "node",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "string",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "contentTypeCompatibleWith",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "xml",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "bytes",
        "desc": "([B)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "json",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.CookieResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "exists",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "path",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "domain",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "secure",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "version",
        "desc": "(Ljava/lang/String;I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "doesNotExist",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "maxAge",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "maxAge",
        "desc": "(Ljava/lang/String;I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "domain",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "path",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "value",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "httpOnly",
        "desc": "(Ljava/lang/String;Z)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "value",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "comment",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "version",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "comment",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.FlashAttributeResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "attribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeCount",
        "desc": "(I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attribute",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeExists",
        "desc": "([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.HandlerResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "handlerType",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "method",
        "desc": "(Ljava/lang/reflect/Method;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "methodName",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "methodName",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "methodCall",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.HeaderResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "stringValues",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "exists",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "doesNotExist",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "longValue",
        "desc": "(Ljava/lang/String;J)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "dateValue",
        "desc": "(Ljava/lang/String;J)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "stringValues",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "string",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "string",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "'",
        "actual"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.JsonPathResultMatchers",
    "setters": [
      {
        "name": "prefix",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/result/JsonPathResultMatchers;",
        "field": "prefix"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "doesNotHaveJsonPath",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "value",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "exists",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "value",
        "desc": "(Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)V"
      },
      {
        "name": "isMap",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "prefix",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/result/JsonPathResultMatchers;"
      },
      {
        "name": "hasJsonPath",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isEmpty",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isString",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "doesNotExist",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNumber",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "value",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isArray",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isBoolean",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotEmpty",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.MockMvcResultHandlers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "org.springframework.test.web.servlet.result"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.MockMvcResultHandlers$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.MockMvcResultHandlers$LoggingResultHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.ResultHandler"
    ],
    "outerClass": "org.springframework.test.web.servlet.result.MockMvcResultHandlers",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.MockMvcResultHandlers$PrintWriterPrintingResultHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.servlet.result.PrintingResultHandler"
    ],
    "outerClass": "org.springframework.test.web.servlet.result.MockMvcResultHandlers",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.MockMvcResultHandlers$PrintWriterPrintingResultHandler$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.result.PrintingResultHandler$ResultValuePrinter"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.MockMvcResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.ModelResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "errorCount",
        "desc": "(I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeErrorCount",
        "desc": "(Ljava/lang/String;I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeHasFieldErrorCode",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "attribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeHasFieldErrors",
        "desc": "(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeExists",
        "desc": "([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeHasErrors",
        "desc": "([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "hasErrors",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "hasNoErrors",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeHasFieldErrorCode",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeDoesNotExist",
        "desc": "([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attribute",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attributeHasNoErrors",
        "desc": "([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "size",
        "desc": "(I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "'",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.PrintingResultHandler",
    "setters": [],
    "getters": [
      {
        "name": "getPrinter",
        "desc": "()Lorg/springframework/test/web/servlet/result/PrintingResultHandler$ResultValuePrinter;",
        "field": "printer"
      }
    ],
    "observers": [
      {
        "name": "getPrinter",
        "desc": "()Lorg/springframework/test/web/servlet/result/PrintingResultHandler$ResultValuePrinter;"
      }
    ],
    "testableMethods": [
      {
        "name": "handle",
        "desc": "(Lorg/springframework/test/web/servlet/MvcResult;)V"
      },
      {
        "name": "printModelAndView",
        "desc": "(Lorg/springframework/web/servlet/ModelAndView;)V"
      },
      {
        "name": "printResolvedException",
        "desc": "(Ljava/lang/Exception;)V"
      },
      {
        "name": "printRequest",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletRequest;)V"
      },
      {
        "name": "getPrinter",
        "desc": "()Lorg/springframework/test/web/servlet/result/PrintingResultHandler$ResultValuePrinter;"
      },
      {
        "name": "printFlashMap",
        "desc": "(Lorg/springframework/web/servlet/FlashMap;)V"
      },
      {
        "name": "getSessionAttributes",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletRequest;)Ljava/util/Map;"
      },
      {
        "name": "printResponse",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletResponse;)V"
      },
      {
        "name": "printAsyncResult",
        "desc": "(Lorg/springframework/test/web/servlet/MvcResult;)V"
      },
      {
        "name": "printHandler",
        "desc": "(Ljava/lang/Object;[Lorg/springframework/web/servlet/HandlerInterceptor;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/test/web/servlet/result/PrintingResultHandler$ResultValuePrinter;)V"
      },
      {
        "name": "getParamsMultiValueMap",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletRequest;)Lorg/springframework/util/MultiValueMap;"
      },
      {
        "name": "getRequestHeaders",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletRequest;)Lorg/springframework/http/HttpHeaders;"
      },
      {
        "name": "getResponseHeaders",
        "desc": "(Lorg/springframework/mock/web/MockHttpServletResponse;)Lorg/springframework/http/HttpHeaders;"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "Cookies",
        "Type",
        "httpOnly",
        "secure",
        "value"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.ResultHandler"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.PrintingResultHandler$ResultValuePrinter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.test.web.servlet.result.PrintingResultHandler",
    "access": 1548,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.RequestResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "attribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "asyncNotStarted",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "sessionAttribute",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "sessionAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "attribute",
        "desc": "(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "asyncStarted",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "asyncResult",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "asyncResult",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.StatusResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isAccepted",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPreconditionFailed",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUseProxy",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isInsufficientStorage",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isProcessing",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isCreated",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestEntityTooLarge",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isOk",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isResetContent",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isServiceUnavailable",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNoContent",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isInsufficientSpaceOnResource",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotImplemented",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isSeeOther",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isForbidden",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMultipleChoices",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNonAuthoritativeInformation",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotModified",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotAcceptable",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestTimeout",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUpgradeRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isProxyAuthenticationRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isTemporaryRedirect",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isGatewayTimeout",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isExpectationFailed",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isLoopDetected",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUnprocessableEntity",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isAlreadyReported",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isConflict",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestedRangeNotSatisfiable",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isFailedDependency",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isGone",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestUriTooLong",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUnsupportedMediaType",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMovedPermanently",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPayloadTooLarge",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isFound",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isInternalServerError",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isBadGateway",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isVariantAlsoNegotiates",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isLengthRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isSwitchingProtocols",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPaymentRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUnauthorized",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotFound",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUriTooLong",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPartialContent",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isLocked",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMovedTemporarily",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isHttpVersionNotSupported",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isDestinationLocked",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isImUsed",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isContinue",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMethodNotAllowed",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMethodFailure",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMultiStatus",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotExtended",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isBadRequest",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "testableMethods": [
      {
        "name": "isAccepted",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPermanentRedirect",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "reason",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPreconditionFailed",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUseProxy",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isInsufficientStorage",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isProcessing",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isCreated",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestEntityTooLarge",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isOk",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isResetContent",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isServiceUnavailable",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNoContent",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isBandwidthLimitExceeded",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "reason",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isInsufficientSpaceOnResource",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNetworkAuthenticationRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isTooManyRequests",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "is3xxRedirection",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotImplemented",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isSeeOther",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isForbidden",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "is1xxInformational",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMultipleChoices",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNonAuthoritativeInformation",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotModified",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotAcceptable",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestTimeout",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUpgradeRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isProxyAuthenticationRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "is4xxClientError",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isTemporaryRedirect",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isGatewayTimeout",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isExpectationFailed",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isLoopDetected",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestHeaderFieldsTooLarge",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUnprocessableEntity",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPreconditionRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isAlreadyReported",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isConflict",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestedRangeNotSatisfiable",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isFailedDependency",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isGone",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isRequestUriTooLong",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUnsupportedMediaType",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMovedPermanently",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPayloadTooLarge",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "is",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isFound",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "is2xxSuccessful",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isInternalServerError",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isBadGateway",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isVariantAlsoNegotiates",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isLengthRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isSwitchingProtocols",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPaymentRequired",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUnauthorized",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotFound",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUriTooLong",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isPartialContent",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isLocked",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isMovedTemporarily",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isHttpVersionNotSupported",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isDestinationLocked",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "is",
        "desc": "(I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isImUsed",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isContinue",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isIAmATeapot",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMethodNotAllowed",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "is5xxServerError",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isCheckpoint",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMethodFailure",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isUnavailableForLegalReasons",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isMultiStatus",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isNotExtended",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isBadRequest",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {
      "str": [
        "Status"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.StatusResultMatchersExtensionsKt",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "isEqualTo",
        "desc": "(Lorg/springframework/test/web/servlet/result/StatusResultMatchers;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "isEqualTo",
        "desc": "(Lorg/springframework/test/web/servlet/result/StatusResultMatchers;I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.ViewResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "name",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "name",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.result.XpathResultMatchers",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "exists",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "doesNotExist",
        "desc": "()Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "string",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "node",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "nodeCount",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "nodeCount",
        "desc": "(I)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "string",
        "desc": "(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "number",
        "desc": "(Ljava/lang/Double;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)V"
      },
      {
        "name": "number",
        "desc": "(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      },
      {
        "name": "booleanValue",
        "desc": "(Ljava/lang/Boolean;)Lorg/springframework/test/web/servlet/ResultMatcher;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder",
    "setters": [
      {
        "name": "defaultRequest",
        "desc": "(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;",
        "field": "defaultRequestBuilder"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        4
      ],
      "str": [
        "/"
      ]
    },
    "parents": [
      "org.springframework.test.web.servlet.MockMvcBuilderSupport",
      "org.springframework.test.web.servlet.setup.ConfigurableMockMvcBuilder"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.ConfigurableMockMvcBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.MockMvcBuilder"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;)V"
      },
      {
        "name": "initWebAppContext",
        "desc": "()Lorg/springframework/web/context/WebApplicationContext;"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.MockMvcBuilders",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "webAppContextSetup",
        "desc": "(Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;"
      },
      {
        "name": "standaloneSetup",
        "desc": "([Ljava/lang/Object;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.MockMvcConfigurer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.MockMvcConfigurerAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.setup.MockMvcConfigurer"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.PatternMappingFilterProxy",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/Filter;[Ljava/lang/String;)V"
      },
      {
        "name": "doFilter",
        "desc": "(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V"
      },
      {
        "name": "init",
        "desc": "(Ljavax/servlet/FilterConfig;)V"
      },
      {
        "name": "destroy",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "",
        "*.",
        "/",
        "/*"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.servlet.Filter"
    ],
    "access": 48,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.SharedHttpSessionConfigurer",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "beforeMockMvcCreated",
        "desc": "(Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/request/RequestPostProcessor;"
      },
      {
        "name": "sharedHttpSession",
        "desc": "()Lorg/springframework/test/web/servlet/setup/SharedHttpSessionConfigurer;"
      },
      {
        "name": "afterConfigurerAdded",
        "desc": "(Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.test.web.servlet.setup.MockMvcConfigurer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder",
    "setters": [
      {
        "name": "setHandlerExceptionResolvers",
        "desc": "(Ljava/util/List;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "handlerExceptionResolvers"
      },
      {
        "name": "setCustomArgumentResolvers",
        "desc": "([Lorg/springframework/web/method/support/HandlerMethodArgumentResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "customArgumentResolvers"
      },
      {
        "name": "setFlashMapManager",
        "desc": "(Lorg/springframework/web/servlet/FlashMapManager;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "flashMapManager"
      },
      {
        "name": "setLocaleResolver",
        "desc": "(Lorg/springframework/web/servlet/LocaleResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "localeResolver"
      },
      {
        "name": "setContentNegotiationManager",
        "desc": "(Lorg/springframework/web/accept/ContentNegotiationManager;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "contentNegotiationManager"
      },
      {
        "name": "setConversionService",
        "desc": "(Lorg/springframework/format/support/FormattingConversionService;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "conversionService"
      },
      {
        "name": "setUseTrailingSlashPatternMatch",
        "desc": "(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "useTrailingSlashPatternMatch"
      },
      {
        "name": "setCustomHandlerMapping",
        "desc": "(Ljava/util/function/Supplier;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "handlerMappingFactory"
      },
      {
        "name": "setViewResolvers",
        "desc": "([Lorg/springframework/web/servlet/ViewResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "viewResolvers"
      },
      {
        "name": "setSingleView",
        "desc": "(Lorg/springframework/web/servlet/View;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "viewResolvers"
      },
      {
        "name": "setControllerAdvice",
        "desc": "([Ljava/lang/Object;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "controllerAdvice"
      },
      {
        "name": "setAsyncRequestTimeout",
        "desc": "(J)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "asyncRequestTimeout"
      },
      {
        "name": "setCustomReturnValueHandlers",
        "desc": "([Lorg/springframework/web/method/support/HandlerMethodReturnValueHandler;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "customReturnValueHandlers"
      },
      {
        "name": "setRemoveSemicolonContent",
        "desc": "(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "removeSemicolonContent"
      },
      {
        "name": "setUseSuffixPatternMatch",
        "desc": "(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "useSuffixPatternMatch"
      },
      {
        "name": "setMessageConverters",
        "desc": "([Lorg/springframework/http/converter/HttpMessageConverter;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "messageConverters"
      },
      {
        "name": "setValidator",
        "desc": "(Lorg/springframework/validation/Validator;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "validator"
      },
      {
        "name": "setHandlerExceptionResolvers",
        "desc": "([Lorg/springframework/web/servlet/HandlerExceptionResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;",
        "field": "handlerExceptionResolvers"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setHandlerExceptionResolvers",
        "desc": "(Ljava/util/List;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setCustomArgumentResolvers",
        "desc": "([Lorg/springframework/web/method/support/HandlerMethodArgumentResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "addPlaceholderValue",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "addMappedInterceptors",
        "desc": "([Ljava/lang/String;[Lorg/springframework/web/servlet/HandlerInterceptor;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setFlashMapManager",
        "desc": "(Lorg/springframework/web/servlet/FlashMapManager;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setLocaleResolver",
        "desc": "(Lorg/springframework/web/servlet/LocaleResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setContentNegotiationManager",
        "desc": "(Lorg/springframework/web/accept/ContentNegotiationManager;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setConversionService",
        "desc": "(Lorg/springframework/format/support/FormattingConversionService;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setUseTrailingSlashPatternMatch",
        "desc": "(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setCustomHandlerMapping",
        "desc": "(Ljava/util/function/Supplier;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setViewResolvers",
        "desc": "([Lorg/springframework/web/servlet/ViewResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setSingleView",
        "desc": "(Lorg/springframework/web/servlet/View;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "initWebAppContext",
        "desc": "()Lorg/springframework/web/context/WebApplicationContext;"
      },
      {
        "name": "setControllerAdvice",
        "desc": "([Ljava/lang/Object;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setAsyncRequestTimeout",
        "desc": "(J)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setCustomReturnValueHandlers",
        "desc": "([Lorg/springframework/web/method/support/HandlerMethodReturnValueHandler;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setRemoveSemicolonContent",
        "desc": "(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "setUseSuffixPatternMatch",
        "desc": "(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "addInterceptors",
        "desc": "([Lorg/springframework/web/servlet/HandlerInterceptor;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setMessageConverters",
        "desc": "([Lorg/springframework/http/converter/HttpMessageConverter;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setValidator",
        "desc": "(Lorg/springframework/validation/Validator;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      },
      {
        "name": "setHandlerExceptionResolvers",
        "desc": "([Lorg/springframework/web/servlet/HandlerExceptionResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "flashMapManager",
        "localeResolver",
        "themeResolver",
        "viewNameTranslator"
      ]
    },
    "parents": [
      "org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder"
    ],
    "access": 33,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder$StandaloneConfiguration",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getHandlerMapping",
        "desc": "()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport"
    ],
    "outerClass": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder$StaticStringValueResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "${",
        ":",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.StringValueResolver"
    ],
    "outerClass": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder$StaticViewResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.web.servlet.ViewResolver"
    ],
    "outerClass": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.StubWebApplicationContext",
    "setters": [],
    "getters": [
      {
        "name": "getAutowireCapableBeanFactory",
        "desc": "()Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;",
        "field": "beanFactory"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;",
        "field": "servletContext"
      },
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;",
        "field": "displayName"
      },
      {
        "name": "getEnvironment",
        "desc": "()Lorg/springframework/core/env/Environment;",
        "field": "environment"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;",
        "field": "id"
      },
      {
        "name": "getStartupDate",
        "desc": "()J",
        "field": "startupDate"
      }
    ],
    "observers": [
      {
        "name": "getAutowireCapableBeanFactory",
        "desc": "()Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;"
      },
      {
        "name": "getParentBeanFactory",
        "desc": "()Lorg/springframework/beans/factory/BeanFactory;"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "getBeanDefinitionNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEnvironment",
        "desc": "()Lorg/springframework/core/env/Environment;"
      },
      {
        "name": "getParent",
        "desc": "()Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "getBeanDefinitionCount",
        "desc": "()I"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getApplicationName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStartupDate",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getResources",
        "desc": "(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "getBeanDefinitionNames",
        "desc": "()[Ljava/lang/String;"
      },
      {
        "name": "getServletContext",
        "desc": "()Ljavax/servlet/ServletContext;"
      },
      {
        "name": "getBeansOfType",
        "desc": "(Ljava/lang/Class;ZZ)Ljava/util/Map;"
      },
      {
        "name": "getBeanNamesForType",
        "desc": "(Lorg/springframework/core/ResolvableType;)[Ljava/lang/String;"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getStartupDate",
        "desc": "()J"
      },
      {
        "name": "addBean",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V"
      },
      {
        "name": "getBeansOfType",
        "desc": "(Ljava/lang/Class;)Ljava/util/Map;"
      },
      {
        "name": "getBean",
        "desc": "(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getType",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "getParentBeanFactory",
        "desc": "()Lorg/springframework/beans/factory/BeanFactory;"
      },
      {
        "name": "getClassLoader",
        "desc": "()Ljava/lang/ClassLoader;"
      },
      {
        "name": "isTypeMatch",
        "desc": "(Ljava/lang/String;Lorg/springframework/core/ResolvableType;)Z"
      },
      {
        "name": "containsLocalBean",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getMessage",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "getBean",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getBeanProvider",
        "desc": "(Lorg/springframework/core/ResolvableType;)Lorg/springframework/beans/factory/ObjectProvider;"
      },
      {
        "name": "getApplicationName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getMessage",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;"
      },
      {
        "name": "getAutowireCapableBeanFactory",
        "desc": "()Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;"
      },
      {
        "name": "getBeanNamesForType",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "isSingleton",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getBean",
        "desc": "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "containsBean",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getDisplayName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEnvironment",
        "desc": "()Lorg/springframework/core/env/Environment;"
      },
      {
        "name": "getBeanProvider",
        "desc": "(Ljava/lang/Class;)Lorg/springframework/beans/factory/ObjectProvider;"
      },
      {
        "name": "getBeansWithAnnotation",
        "desc": "(Ljava/lang/Class;)Ljava/util/Map;"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/servlet/ServletContext;)V"
      },
      {
        "name": "getBeanDefinitionCount",
        "desc": "()I"
      },
      {
        "name": "isTypeMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Z"
      },
      {
        "name": "containsBeanDefinition",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "publishEvent",
        "desc": "(Lorg/springframework/context/ApplicationEvent;)V"
      },
      {
        "name": "publishEvent",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "getBeanNamesForType",
        "desc": "(Ljava/lang/Class;ZZ)[Ljava/lang/String;"
      },
      {
        "name": "findAnnotationOnBean",
        "desc": "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"
      },
      {
        "name": "addBeans",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "getBeanNamesForAnnotation",
        "desc": "(Ljava/lang/Class;)[Ljava/lang/String;"
      },
      {
        "name": "getAliases",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "getBean",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getBean",
        "desc": "(Ljava/lang/Class;)Ljava/lang/Object;"
      },
      {
        "name": "getParent",
        "desc": "()Lorg/springframework/context/ApplicationContext;"
      },
      {
        "name": "getResource",
        "desc": "(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"
      },
      {
        "name": "isPrototype",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getMessage",
        "desc": "(Lorg/springframework/context/MessageSourceResolvable;Ljava/util/Locale;)Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.web.context.WebApplicationContext"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.StubWebApplicationContext$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.test.web.servlet.setup.StubWebApplicationContext$StubBeanFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.beans.factory.support.StaticListableBeanFactory",
      "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
    ],
    "outerClass": "org.springframework.test.web.servlet.setup.StubWebApplicationContext",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AlternativeJdkIdGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateId",
        "desc": "()Ljava/util/UUID;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        8,
        16
      ],
      "short": [
        8,
        16
      ],
      "int": [
        0,
        8,
        16
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.IdGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AntPathMatcher",
    "setters": [
      {
        "name": "setCachePatterns",
        "desc": "(Z)V",
        "field": "cachePatterns"
      },
      {
        "name": "setTrimTokens",
        "desc": "(Z)V",
        "field": "trimTokens"
      },
      {
        "name": "setPathSeparator",
        "desc": "(Ljava/lang/String;)V",
        "field": "pathSeparator"
      },
      {
        "name": "setCaseSensitive",
        "desc": "(Z)V",
        "field": "caseSensitive"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "getPatternComparator",
        "desc": "(Ljava/lang/String;)Ljava/util/Comparator;"
      },
      {
        "name": "setCachePatterns",
        "desc": "(Z)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "tokenizePattern",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "extractPathWithinPattern",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "doMatch",
        "desc": "(Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)Z"
      },
      {
        "name": "setCaseSensitive",
        "desc": "(Z)V"
      },
      {
        "name": "isPattern",
        "desc": "(Ljava/lang/String;)Z"
      },
      {
        "name": "getStringMatcher",
        "desc": "(Ljava/lang/String;)Lorg/springframework/util/AntPathMatcher$AntPathStringMatcher;"
      },
      {
        "name": "extractUriTemplateVariables",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "match",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "matchStart",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Z"
      },
      {
        "name": "setTrimTokens",
        "desc": "(Z)V"
      },
      {
        "name": "setPathSeparator",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "tokenizePath",
        "desc": "(Ljava/lang/String;)[Ljava/lang/String;"
      },
      {
        "name": "combine",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "byte": [
        42,
        46,
        63,
        123
      ],
      "char": [
        42,
        46,
        63,
        123
      ],
      "short": [
        42,
        46,
        63,
        123,
        256
      ],
      "int": [
        -1,
        0,
        1,
        2,
        3,
        42,
        46,
        63,
        123,
        256,
        65536
      ],
      "str": [
        "",
        "\"",
        "*",
        "**",
        "*.",
        ".",
        ".*",
        "/",
        "\\{[^/]+?\\}"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.PathMatcher"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AntPathMatcher$AntPathStringMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Z)V"
      },
      {
        "name": "matchStrings",
        "desc": "(Ljava/lang/String;Ljava/util/Map;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46,
        58
      ],
      "char": [
        46,
        58
      ],
      "short": [
        46,
        58
      ],
      "int": [
        -1,
        0,
        1,
        2,
        46,
        58
      ],
      "str": [
        "*",
        ".*",
        "?",
        "\\?|\\*|\\{((?:\\{[^/]+?\\}|[^/{}]|\\\\[{}])+?)\\}",
        "{",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.AntPathMatcher",
    "access": 12,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AntPathMatcher$AntPatternComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)I"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.springframework.util.AntPathMatcher",
    "access": 12,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AntPathMatcher$AntPatternComparator$PatternInfo",
    "setters": [],
    "getters": [
      {
        "name": "getSingleWildcards",
        "desc": "()I",
        "field": "singleWildcards"
      },
      {
        "name": "isPrefixPattern",
        "desc": "()Z",
        "field": "prefixPattern"
      },
      {
        "name": "getUriVars",
        "desc": "()I",
        "field": "uriVars"
      },
      {
        "name": "getDoubleWildcards",
        "desc": "()I",
        "field": "doubleWildcards"
      }
    ],
    "observers": [
      {
        "name": "getSingleWildcards",
        "desc": "()I"
      },
      {
        "name": "isPrefixPattern",
        "desc": "()Z"
      },
      {
        "name": "getTotalCount",
        "desc": "()I"
      },
      {
        "name": "getUriVars",
        "desc": "()I"
      },
      {
        "name": "isLeastSpecific",
        "desc": "()Z"
      },
      {
        "name": "getLength",
        "desc": "()I"
      },
      {
        "name": "getDoubleWildcards",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        42,
        123
      ],
      "char": [
        42,
        123
      ],
      "short": [
        42,
        123
      ],
      "int": [
        0,
        1,
        42,
        123
      ],
      "str": [
        ".*",
        "/**"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.AntPathMatcher$AntPatternComparator",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AntPathMatcher$PathSeparatorPatternCache",
    "setters": [],
    "getters": [
      {
        "name": "getEndsOnWildCard",
        "desc": "()Ljava/lang/String;",
        "field": "endsOnWildCard"
      },
      {
        "name": "getEndsOnDoubleWildCard",
        "desc": "()Ljava/lang/String;",
        "field": "endsOnDoubleWildCard"
      }
    ],
    "observers": [
      {
        "name": "getEndsOnWildCard",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEndsOnDoubleWildCard",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "*",
        "**"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.AntPathMatcher",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.Assert",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        ",",
        ".",
        ":",
        ";"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AutoPopulatingList",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toArray",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "toArray",
        "desc": "([Ljava/lang/Object;)[Ljava/lang/Object;"
      },
      {
        "name": "contains",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "get",
        "desc": "(I)Ljava/lang/Object;"
      },
      {
        "name": "set",
        "desc": "(ILjava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "addAll",
        "desc": "(ILjava/util/Collection;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Ljava/lang/Class;)V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "add",
        "desc": "(ILjava/lang/Object;)V"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "indexOf",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "retainAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "remove",
        "desc": "(I)Ljava/lang/Object;"
      },
      {
        "name": "listIterator",
        "desc": "(I)Ljava/util/ListIterator;"
      },
      {
        "name": "toArray",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "lastIndexOf",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;Lorg/springframework/util/AutoPopulatingList$ElementFactory;)V"
      },
      {
        "name": "addAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "listIterator",
        "desc": "()Ljava/util/ListIterator;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/util/AutoPopulatingList$ElementFactory;)V"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "subList",
        "desc": "(II)Ljava/util/List;"
      },
      {
        "name": "removeAll",
        "desc": "(Ljava/util/Collection;)Z"
      },
      {
        "name": "containsAll",
        "desc": "(Ljava/util/Collection;)Z"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.List",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AutoPopulatingList$ElementFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.AutoPopulatingList",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AutoPopulatingList$ElementInstantiationException",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.RuntimeException"
    ],
    "outerClass": "org.springframework.util.AutoPopulatingList",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.AutoPopulatingList$ReflectiveElementFactory",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.AutoPopulatingList$ElementFactory",
      "java.io.Serializable"
    ],
    "outerClass": "org.springframework.util.AutoPopulatingList",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.Base64Utils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ClassUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6,
        7,
        8,
        32,
        46,
        47,
        64
      ],
      "char": [
        32,
        46,
        47,
        64
      ],
      "short": [
        6,
        7,
        8,
        32,
        46,
        47,
        64
      ],
      "int": [
        -1,
        0,
        1,
        6,
        7,
        8,
        32,
        46,
        47,
        64
      ],
      "str": [
        "$$",
        "/",
        ";",
        "[",
        "[L",
        "[]",
        "]",
        "groovy.lang.GroovyObject"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.CollectionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.CollectionUtils$EnumerationIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "org.springframework.util.CollectionUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.CollectionUtils$MultiValueMapAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.MultiValueMap",
      "java.io.Serializable"
    ],
    "outerClass": "org.springframework.util.CollectionUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.CommonsLogWriter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "write",
        "desc": "(C)V"
      },
      {
        "name": "write",
        "desc": "([CII)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/logging/Log;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "close",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        0,
        10
      ]
    },
    "parents": [
      "java.io.Writer"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.CompositeIterator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "next",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "remove",
        "desc": "()V"
      },
      {
        "name": "add",
        "desc": "(Ljava/util/Iterator;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrencyThrottleSupport",
    "setters": [
      {
        "name": "setConcurrencyLimit",
        "desc": "(I)V",
        "field": "concurrencyLimit"
      }
    ],
    "getters": [
      {
        "name": "getConcurrencyLimit",
        "desc": "()I",
        "field": "concurrencyLimit"
      }
    ],
    "observers": [
      {
        "name": "getConcurrencyLimit",
        "desc": "()I"
      },
      {
        "name": "isThrottleActive",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap",
    "setters": [],
    "getters": [
      {
        "name": "getLoadFactor",
        "desc": "()F",
        "field": "loadFactor"
      }
    ],
    "observers": [
      {
        "name": "getSegmentsSize",
        "desc": "()I"
      },
      {
        "name": "getLoadFactor",
        "desc": "()F"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "calculateShift",
        "desc": "(II)I"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "purgeUnreferencedEntries",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(IFI)V"
      },
      {
        "name": "getLoadFactor",
        "desc": "()F"
      },
      {
        "name": "<init>",
        "desc": "(IFILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "getOrDefault",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getHash",
        "desc": "(Ljava/lang/Object;)I"
      },
      {
        "name": "getSegment",
        "desc": "(I)Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(IF)V"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(II)V"
      },
      {
        "name": "<init>",
        "desc": "(ILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V"
      },
      {
        "name": "getSegmentsSize",
        "desc": "()I"
      },
      {
        "name": "createReferenceManager",
        "desc": "()Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "entrySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "getReference",
        "desc": "(Ljava/lang/Object;Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"
      },
      {
        "name": "putIfAbsent",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "replace",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "containsKey",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        0,
        1,
        16,
        65536
      ],
      "float": [
        0.0,
        0.75
      ]
    },
    "parents": [
      "java.util.AbstractMap",
      "java.util.concurrent.ConcurrentMap"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.ConcurrentReferenceHashMap$Task"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.ConcurrentReferenceHashMap$Task"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$3",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.ConcurrentReferenceHashMap$Task"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$4",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.ConcurrentReferenceHashMap$Task"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$5",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.ConcurrentReferenceHashMap$Task"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$Entries",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 1026,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$Entry",
    "setters": [
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "getters": [
      {
        "name": "getKey",
        "desc": "()Ljava/lang/Object;",
        "field": "key"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;",
        "field": "value"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setValue",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "getKey",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getValue",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Map$Entry"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 28,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$EntryIterator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Iterator"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$EntrySet",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "iterator",
        "desc": "()Ljava/util/Iterator;"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.AbstractSet"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$Reference",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 1548,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "createReference",
        "desc": "(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/util/ConcurrentReferenceHashMap;)V"
      },
      {
        "name": "pollForPurge",
        "desc": "()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 4,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "SOFT",
        "WEAK"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 16409,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$Restructure",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "NEVER",
        "WHEN_NECESSARY"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 16412,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$Segment",
    "setters": [],
    "getters": [
      {
        "name": "getCount",
        "desc": "()I",
        "field": "count"
      }
    ],
    "observers": [
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "getCount",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/util/ConcurrentReferenceHashMap;I)V"
      },
      {
        "name": "restructureIfNecessary",
        "desc": "(Z)V"
      },
      {
        "name": "getSize",
        "desc": "()I"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "getReference",
        "desc": "(Ljava/lang/Object;ILorg/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"
      },
      {
        "name": "getCount",
        "desc": "()I"
      },
      {
        "name": "doTask",
        "desc": "(ILjava/lang/Object;Lorg/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        1073741824
      ]
    },
    "parents": [
      "java.util.concurrent.locks.ReentrantLock"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 20,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$Segment$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.ConcurrentReferenceHashMap$Entries"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference",
    "setters": [],
    "getters": [
      {
        "name": "getHash",
        "desc": "()I",
        "field": "hash"
      },
      {
        "name": "getNext",
        "desc": "()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;",
        "field": "nextReference"
      }
    ],
    "observers": [
      {
        "name": "getHash",
        "desc": "()I"
      },
      {
        "name": "getNext",
        "desc": "()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.ref.SoftReference",
      "org.springframework.util.ConcurrentReferenceHashMap$Reference"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$Task",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 1026,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$TaskOption",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3
      ],
      "str": [
        "RESIZE",
        "RESTRUCTURE_AFTER",
        "RESTRUCTURE_BEFORE",
        "SKIP_IF_EMPTY"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ConcurrentReferenceHashMap$WeakEntryReference",
    "setters": [],
    "getters": [
      {
        "name": "getHash",
        "desc": "()I",
        "field": "hash"
      },
      {
        "name": "getNext",
        "desc": "()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;",
        "field": "nextReference"
      }
    ],
    "observers": [
      {
        "name": "getHash",
        "desc": "()I"
      },
      {
        "name": "getNext",
        "desc": "()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.ref.WeakReference",
      "org.springframework.util.ConcurrentReferenceHashMap$Reference"
    ],
    "outerClass": "org.springframework.util.ConcurrentReferenceHashMap",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.CustomizableThreadCreator",
    "setters": [
      {
        "name": "setThreadNamePrefix",
        "desc": "(Ljava/lang/String;)V",
        "field": "threadNamePrefix"
      },
      {
        "name": "setThreadGroupName",
        "desc": "(Ljava/lang/String;)V",
        "field": "threadGroup"
      },
      {
        "name": "setThreadGroup",
        "desc": "(Ljava/lang/ThreadGroup;)V",
        "field": "threadGroup"
      },
      {
        "name": "setDaemon",
        "desc": "(Z)V",
        "field": "daemon"
      },
      {
        "name": "setThreadPriority",
        "desc": "(I)V",
        "field": "threadPriority"
      }
    ],
    "getters": [
      {
        "name": "getThreadGroup",
        "desc": "()Ljava/lang/ThreadGroup;",
        "field": "threadGroup"
      },
      {
        "name": "getThreadNamePrefix",
        "desc": "()Ljava/lang/String;",
        "field": "threadNamePrefix"
      },
      {
        "name": "isDaemon",
        "desc": "()Z",
        "field": "daemon"
      },
      {
        "name": "getThreadPriority",
        "desc": "()I",
        "field": "threadPriority"
      }
    ],
    "observers": [
      {
        "name": "getThreadGroup",
        "desc": "()Ljava/lang/ThreadGroup;"
      },
      {
        "name": "getDefaultThreadNamePrefix",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isDaemon",
        "desc": "()Z"
      },
      {
        "name": "getThreadNamePrefix",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getThreadPriority",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getThreadGroup",
        "desc": "()Ljava/lang/ThreadGroup;"
      },
      {
        "name": "isDaemon",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setThreadGroupName",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setThreadGroup",
        "desc": "(Ljava/lang/ThreadGroup;)V"
      },
      {
        "name": "getThreadPriority",
        "desc": "()I"
      },
      {
        "name": "setThreadPriority",
        "desc": "(I)V"
      },
      {
        "name": "nextThreadName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setDaemon",
        "desc": "(Z)V"
      },
      {
        "name": "getDefaultThreadNamePrefix",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setThreadNamePrefix",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getThreadNamePrefix",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "createThread",
        "desc": "(Ljava/lang/Runnable;)Ljava/lang/Thread;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        5
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.DefaultPropertiesPersister",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "load",
        "desc": "(Ljava/util/Properties;Ljava/io/InputStream;)V"
      },
      {
        "name": "loadFromXml",
        "desc": "(Ljava/util/Properties;Ljava/io/InputStream;)V"
      },
      {
        "name": "load",
        "desc": "(Ljava/util/Properties;Ljava/io/Reader;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "store",
        "desc": "(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;)V"
      },
      {
        "name": "store",
        "desc": "(Ljava/util/Properties;Ljava/io/Writer;Ljava/lang/String;)V"
      },
      {
        "name": "storeToXml",
        "desc": "(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "storeToXml",
        "desc": "(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.util.PropertiesPersister"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.DigestUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        14,
        15,
        16,
        32,
        101,
        102
      ],
      "char": [
        32,
        101,
        102
      ],
      "short": [
        14,
        15,
        16,
        32,
        101,
        102,
        4096
      ],
      "int": [
        -1,
        0,
        14,
        15,
        16,
        32,
        101,
        102,
        4096
      ],
      "str": [
        "\""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ErrorHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ExceptionTypeFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "match",
        "desc": "(Ljava/lang/Class;Ljava/lang/Class;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Collection;Ljava/util/Collection;Z)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "org.springframework.util.InstanceFilter"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.FastByteArrayOutputStream",
    "setters": [
      {
        "name": "write",
        "desc": "([BII)V",
        "field": "index"
      },
      {
        "name": "resize",
        "desc": "(I)V",
        "field": "index"
      },
      {
        "name": "write",
        "desc": "(I)V",
        "field": "index"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "toByteArrayUnsafe",
        "desc": "()[B"
      }
    ],
    "testableMethods": [
      {
        "name": "resize",
        "desc": "(I)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "reset",
        "desc": "()V"
      },
      {
        "name": "write",
        "desc": "(I)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "toByteArrayUnsafe",
        "desc": "()[B"
      },
      {
        "name": "writeTo",
        "desc": "(Ljava/io/OutputStream;)V"
      },
      {
        "name": "write",
        "desc": "([BII)V"
      },
      {
        "name": "toByteArray",
        "desc": "()[B"
      },
      {
        "name": "getInputStream",
        "desc": "()Ljava/io/InputStream;"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        0,
        1,
        2,
        256
      ]
    },
    "parents": [
      "java.io.OutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.FastByteArrayOutputStream$FastByteArrayInputStream",
    "setters": [
      {
        "name": "updateMessageDigest",
        "desc": "(Ljava/security/MessageDigest;I)V",
        "field": "currentBuffer"
      },
      {
        "name": "read",
        "desc": "([BII)I",
        "field": "currentBuffer"
      },
      {
        "name": "skip",
        "desc": "(J)J",
        "field": "currentBuffer"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "available",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "short": [
        255
      ],
      "int": [
        -1,
        0,
        1,
        255
      ],
      "long": [
        0,
        2147483647
      ]
    },
    "parents": [
      "org.springframework.util.UpdateMessageDigestInputStream"
    ],
    "outerClass": "org.springframework.util.FastByteArrayOutputStream",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.FileCopyUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        4096
      ],
      "int": [
        -1,
        0,
        4096
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.FileSystemUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.FileSystemUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.nio.file.SimpleFileVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.FileSystemUtils$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.nio.file.SimpleFileVisitor"
    ],
    "outerClass": "<unreachable>",
    "access": 8,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.IdGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.InstanceFilter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "match",
        "desc": "(Ljava/lang/Object;Ljava/util/Collection;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Collection;Ljava/util/Collection;Z)V"
      },
      {
        "name": "match",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Z"
      },
      {
        "name": "match",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.InvalidMimeTypeException",
    "setters": [],
    "getters": [
      {
        "name": "getMimeType",
        "desc": "()Ljava/lang/String;",
        "field": "mimeType"
      }
    ],
    "observers": [
      {
        "name": "getMimeType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getMimeType",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.IllegalArgumentException"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.JdkIdGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateId",
        "desc": "()Ljava/util/UUID;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.util.IdGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.LinkedCaseInsensitiveMap",
    "setters": [],
    "getters": [
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;",
        "field": "locale"
      }
    ],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Locale;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "removeEldestEntry",
        "desc": "(Ljava/util/Map$Entry;)Z"
      },
      {
        "name": "getOrDefault",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "convertKey",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "getLocale",
        "desc": "()Ljava/util/Locale;"
      },
      {
        "name": "<init>",
        "desc": "(ILjava/util/Locale;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "values",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "putAll",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "entrySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "putIfAbsent",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "computeIfAbsent",
        "desc": "(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;"
      },
      {
        "name": "keySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "clone",
        "desc": "()Lorg/springframework/util/LinkedCaseInsensitiveMap;"
      },
      {
        "name": "containsKey",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "containsValue",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "byte": [
        16
      ],
      "short": [
        16
      ],
      "int": [
        16
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Map",
      "java.io.Serializable",
      "java.lang.Cloneable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.LinkedCaseInsensitiveMap$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.util.LinkedHashMap"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.LinkedMultiValueMap",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "size",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "deepCopy",
        "desc": "()Lorg/springframework/util/LinkedMultiValueMap;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "add",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "size",
        "desc": "()I"
      },
      {
        "name": "put",
        "desc": "(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;"
      },
      {
        "name": "toSingleValueMap",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "get",
        "desc": "(Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "clone",
        "desc": "()Lorg/springframework/util/LinkedMultiValueMap;"
      },
      {
        "name": "addAll",
        "desc": "(Ljava/lang/Object;Ljava/util/List;)V"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)V"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "values",
        "desc": "()Ljava/util/Collection;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "addAll",
        "desc": "(Lorg/springframework/util/MultiValueMap;)V"
      },
      {
        "name": "setAll",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "putAll",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "remove",
        "desc": "(Ljava/lang/Object;)Ljava/util/List;"
      },
      {
        "name": "entrySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "isEmpty",
        "desc": "()Z"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "keySet",
        "desc": "()Ljava/util/Set;"
      },
      {
        "name": "containsKey",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getFirst",
        "desc": "(Ljava/lang/Object;)Ljava/lang/Object;"
      },
      {
        "name": "containsValue",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.MultiValueMap",
      "java.io.Serializable",
      "java.lang.Cloneable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.MethodInvoker",
    "setters": [
      {
        "name": "setArguments",
        "desc": "([Ljava/lang/Object;)V",
        "field": "arguments"
      },
      {
        "name": "setStaticMethod",
        "desc": "(Ljava/lang/String;)V",
        "field": "staticMethod"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V",
        "field": "targetClass"
      },
      {
        "name": "setTargetMethod",
        "desc": "(Ljava/lang/String;)V",
        "field": "targetMethod"
      },
      {
        "name": "setTargetObject",
        "desc": "(Ljava/lang/Object;)V",
        "field": "targetObject"
      }
    ],
    "getters": [
      {
        "name": "getTargetMethod",
        "desc": "()Ljava/lang/String;",
        "field": "targetMethod"
      },
      {
        "name": "getTargetObject",
        "desc": "()Ljava/lang/Object;",
        "field": "targetObject"
      },
      {
        "name": "getTargetClass",
        "desc": "()Ljava/lang/Class;",
        "field": "targetClass"
      }
    ],
    "observers": [
      {
        "name": "getTargetMethod",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPreparedMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "isPrepared",
        "desc": "()Z"
      },
      {
        "name": "getArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "getTargetObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getTargetClass",
        "desc": "()Ljava/lang/Class;"
      }
    ],
    "testableMethods": [
      {
        "name": "getTypeDifferenceWeight",
        "desc": "([Ljava/lang/Class;[Ljava/lang/Object;)I"
      },
      {
        "name": "getPreparedMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "invoke",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "isPrepared",
        "desc": "()Z"
      },
      {
        "name": "setStaticMethod",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getArguments",
        "desc": "()[Ljava/lang/Object;"
      },
      {
        "name": "setTargetClass",
        "desc": "(Ljava/lang/Class;)V"
      },
      {
        "name": "getTargetObject",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "setTargetObject",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "setArguments",
        "desc": "([Ljava/lang/Object;)V"
      },
      {
        "name": "getTargetMethod",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "prepare",
        "desc": "()V"
      },
      {
        "name": "findMatchingMethod",
        "desc": "()Ljava/lang/reflect/Method;"
      },
      {
        "name": "resolveClassName",
        "desc": "(Ljava/lang/String;)Ljava/lang/Class;"
      },
      {
        "name": "getTargetClass",
        "desc": "()Ljava/lang/Class;"
      },
      {
        "name": "setTargetMethod",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "byte": [
        46
      ],
      "char": [
        46
      ],
      "short": [
        46
      ],
      "int": [
        -1,
        0,
        46
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.MimeType",
    "setters": [],
    "getters": [
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;",
        "field": "type"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/Map;",
        "field": "parameters"
      },
      {
        "name": "getSubtype",
        "desc": "()Ljava/lang/String;",
        "field": "subtype"
      }
    ],
    "observers": [
      {
        "name": "isWildcardType",
        "desc": "()Z"
      },
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "isConcrete",
        "desc": "()Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSubtype",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/Map;"
      }
    ],
    "testableMethods": [
      {
        "name": "isWildcardType",
        "desc": "()Z"
      },
      {
        "name": "getCharset",
        "desc": "()Ljava/nio/charset/Charset;"
      },
      {
        "name": "unquote",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "isConcrete",
        "desc": "()Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "getParameter",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/springframework/util/MimeType;)I"
      },
      {
        "name": "getParameters",
        "desc": "()Ljava/util/Map;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "isCompatibleWith",
        "desc": "(Lorg/springframework/util/MimeType;)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V"
      },
      {
        "name": "checkParameters",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "includes",
        "desc": "(Lorg/springframework/util/MimeType;)Z"
      },
      {
        "name": "appendTo",
        "desc": "(Ljava/lang/StringBuilder;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/util/MimeType;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "isWildcardSubtype",
        "desc": "()Z"
      },
      {
        "name": "getType",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "valueOf",
        "desc": "(Ljava/lang/String;)Lorg/springframework/util/MimeType;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V"
      },
      {
        "name": "getSubtype",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/springframework/util/MimeType;Ljava/util/Map;)V"
      }
    ],
    "dictionary": {
      "byte": [
        9,
        31,
        32,
        43,
        127
      ],
      "char": [
        32,
        43
      ],
      "short": [
        9,
        31,
        32,
        43,
        127,
        128
      ],
      "int": [
        -1,
        0,
        1,
        2,
        9,
        31,
        32,
        43,
        127,
        128
      ],
      "str": [
        "\"",
        "'",
        "*",
        "*+",
        "charset"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.MimeType$SpecificityComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "compare",
        "desc": "(Lorg/springframework/util/MimeType;Lorg/springframework/util/MimeType;)I"
      },
      {
        "name": "compareParameters",
        "desc": "(Lorg/springframework/util/MimeType;Lorg/springframework/util/MimeType;)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "outerClass": "org.springframework.util.MimeType",
    "access": 9,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.MimeTypeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        11,
        30,
        34,
        47,
        59,
        61,
        63,
        64,
        89,
        90
      ],
      "char": [
        34,
        47,
        59,
        61,
        63,
        64,
        89,
        90
      ],
      "short": [
        11,
        30,
        34,
        47,
        59,
        61,
        63,
        64,
        89,
        90
      ],
      "int": [
        -1,
        0,
        1,
        4,
        11,
        30,
        34,
        44,
        47,
        59,
        61,
        63,
        64,
        89,
        90,
        92
      ],
      "str": [
        "'",
        "*",
        "text/xml"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.MultiValueMap",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Map"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.NumberUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        8,
        16
      ],
      "short": [
        8,
        16
      ],
      "int": [
        0,
        1,
        8,
        16
      ],
      "long": [
        -2147483648,
        -32768,
        -128,
        127,
        32767,
        2147483647,
        9223372036854775807
      ],
      "str": [
        "#",
        "-",
        "0",
        "0X",
        "0x",
        "]"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ObjectUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "null",
        "{}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.PathMatcher",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.PatternMatchUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        42
      ],
      "char": [
        42
      ],
      "short": [
        42
      ],
      "int": [
        -1,
        0,
        1,
        42
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.PropertiesPersister",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.PropertyPlaceholderHelper",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "replacePlaceholders",
        "desc": "(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"
      },
      {
        "name": "replacePlaceholders",
        "desc": "(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver;)Ljava/lang/String;"
      },
      {
        "name": "parseStringValue",
        "desc": "(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver;Ljava/util/Set;)Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0,
        1,
        4
      ],
      "str": [
        "\"",
        "(",
        ")"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.PropertyPlaceholderHelper",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ReflectionUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        32,
        36
      ],
      "char": [
        32,
        36
      ],
      "short": [
        32,
        36,
        256
      ],
      "int": [
        0,
        1,
        32,
        36,
        256
      ],
      "str": [
        "CGLIB$",
        "]",
        "equals",
        "hashCode",
        "toString"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ReflectionUtils$FieldCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.ReflectionUtils",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ReflectionUtils$FieldFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.ReflectionUtils",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ReflectionUtils$MethodCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.ReflectionUtils",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ReflectionUtils$MethodFilter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.ReflectionUtils",
    "access": 1545,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ResizableByteArrayOutputStream",
    "setters": [
      {
        "name": "resize",
        "desc": "(I)V",
        "field": "buf"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "capacity",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "capacity",
        "desc": "()I"
      },
      {
        "name": "resize",
        "desc": "(I)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(I)V"
      },
      {
        "name": "grow",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "short": [
        256
      ],
      "int": [
        0,
        256
      ]
    },
    "parents": [
      "java.io.ByteArrayOutputStream"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.ResourceUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0,
        1
      ],
      "str": [
        "!/",
        "%20",
        "*/",
        ".jar",
        "/",
        "JNLP",
        "]",
        "classpath:",
        "file",
        "file:",
        "jar",
        "vfs",
        "vfsfile",
        "vfszip",
        "war",
        "war:",
        "wsjar",
        "zip"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SerializationUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        1024
      ],
      "int": [
        1024
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SimpleIdGenerator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "generateId",
        "desc": "()Ljava/util/UUID;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "long": [
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.IdGenerator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SocketUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "findAvailableTcpPort",
        "desc": "(II)I"
      },
      {
        "name": "findAvailableTcpPort",
        "desc": "()I"
      },
      {
        "name": "findAvailableTcpPort",
        "desc": "(I)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "findAvailableTcpPorts",
        "desc": "(I)Ljava/util/SortedSet;"
      },
      {
        "name": "findAvailableUdpPort",
        "desc": "(II)I"
      },
      {
        "name": "findAvailableTcpPorts",
        "desc": "(III)Ljava/util/SortedSet;"
      },
      {
        "name": "findAvailableUdpPort",
        "desc": "(I)I"
      },
      {
        "name": "findAvailableUdpPorts",
        "desc": "(III)Ljava/util/SortedSet;"
      },
      {
        "name": "findAvailableUdpPorts",
        "desc": "(I)Ljava/util/SortedSet;"
      },
      {
        "name": "findAvailableUdpPort",
        "desc": "()I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SocketUtils$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SocketUtils$SocketType",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        100
      ],
      "char": [
        100
      ],
      "short": [
        100
      ],
      "int": [
        0,
        1,
        3,
        100,
        65535
      ],
      "str": [
        "TCP",
        "UDP"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.util.SocketUtils",
    "access": 17418,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SocketUtils$SocketType$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.SocketUtils$SocketType"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SocketUtils$SocketType$2",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "str": [
        "localhost"
      ]
    },
    "parents": [
      "org.springframework.util.SocketUtils$SocketType"
    ],
    "outerClass": "<unreachable>",
    "access": 16392,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.StopWatch",
    "setters": [
      {
        "name": "setKeepTaskList",
        "desc": "(Z)V",
        "field": "keepTaskList"
      },
      {
        "name": "start",
        "desc": "(Ljava/lang/String;)V",
        "field": "currentTaskName"
      }
    ],
    "getters": [
      {
        "name": "getTotalTimeMillis",
        "desc": "()J",
        "field": "totalTimeMillis"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;",
        "field": "id"
      },
      {
        "name": "getTaskCount",
        "desc": "()I",
        "field": "taskCount"
      }
    ],
    "observers": [
      {
        "name": "getTaskInfo",
        "desc": "()[Lorg/springframework/util/StopWatch$TaskInfo;"
      },
      {
        "name": "getLastTaskInfo",
        "desc": "()Lorg/springframework/util/StopWatch$TaskInfo;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTaskCount",
        "desc": "()I"
      },
      {
        "name": "getTotalTimeMillis",
        "desc": "()J"
      },
      {
        "name": "getLastTaskName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTotalTimeSeconds",
        "desc": "()D"
      },
      {
        "name": "isRunning",
        "desc": "()Z"
      },
      {
        "name": "getLastTaskTimeMillis",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "currentTaskName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "prettyPrint",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getTotalTimeMillis",
        "desc": "()J"
      },
      {
        "name": "getId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isRunning",
        "desc": "()Z"
      },
      {
        "name": "getTaskInfo",
        "desc": "()[Lorg/springframework/util/StopWatch$TaskInfo;"
      },
      {
        "name": "getLastTaskInfo",
        "desc": "()Lorg/springframework/util/StopWatch$TaskInfo;"
      },
      {
        "name": "getTaskCount",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "start",
        "desc": "()V"
      },
      {
        "name": "getLastTaskName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getTotalTimeSeconds",
        "desc": "()D"
      },
      {
        "name": "shortSummary",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "setKeepTaskList",
        "desc": "(Z)V"
      },
      {
        "name": "start",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "stop",
        "desc": "()V"
      },
      {
        "name": "getLastTaskTimeMillis",
        "desc": "()J"
      }
    ],
    "dictionary": {
      "byte": [
        10
      ],
      "short": [
        10
      ],
      "int": [
        0,
        1,
        10
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.StopWatch$TaskInfo",
    "setters": [],
    "getters": [
      {
        "name": "getTaskName",
        "desc": "()Ljava/lang/String;",
        "field": "taskName"
      },
      {
        "name": "getTimeMillis",
        "desc": "()J",
        "field": "timeMillis"
      }
    ],
    "observers": [
      {
        "name": "getTimeSeconds",
        "desc": "()D"
      },
      {
        "name": "getTimeMillis",
        "desc": "()J"
      },
      {
        "name": "getTaskName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/lang/String;J)V"
      },
      {
        "name": "getTimeSeconds",
        "desc": "()D"
      },
      {
        "name": "getTimeMillis",
        "desc": "()J"
      },
      {
        "name": "getTaskName",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "org.springframework.util.StopWatch",
    "access": 25,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.StreamUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "short": [
        4096
      ],
      "int": [
        -1,
        0,
        4096
      ],
      "long": [
        0,
        1
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.StreamUtils$NonClosingInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.FilterInputStream"
    ],
    "outerClass": "org.springframework.util.StreamUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.StreamUtils$NonClosingOutputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.io.FilterOutputStream"
    ],
    "outerClass": "org.springframework.util.StreamUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.StringUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        16,
        32,
        35,
        37,
        45,
        46,
        95
      ],
      "char": [
        32,
        35,
        37,
        45,
        46,
        95
      ],
      "short": [
        16,
        32,
        35,
        37,
        45,
        46,
        95
      ],
      "int": [
        -1,
        0,
        1,
        2,
        16,
        32,
        35,
        37,
        45,
        46,
        95
      ],
      "str": [
        "",
        "\"",
        "#",
        "'",
        ".",
        "..",
        "/",
        "GMT",
        "_"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.StringValueResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SystemPropertyUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "${",
        ":",
        "}"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.SystemPropertyUtils$SystemPropertyPlaceholderResolver",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver"
    ],
    "outerClass": "org.springframework.util.SystemPropertyUtils",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.TypeUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.UpdateMessageDigestInputStream",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.io.InputStream"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.backoff.BackOff",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.backoff.BackOffExecution",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.backoff.ExponentialBackOff",
    "setters": [
      {
        "name": "setInitialInterval",
        "desc": "(J)V",
        "field": "initialInterval"
      },
      {
        "name": "setMultiplier",
        "desc": "(D)V",
        "field": "multiplier"
      },
      {
        "name": "setMaxElapsedTime",
        "desc": "(J)V",
        "field": "maxElapsedTime"
      },
      {
        "name": "setMaxInterval",
        "desc": "(J)V",
        "field": "maxInterval"
      }
    ],
    "getters": [
      {
        "name": "getMaxElapsedTime",
        "desc": "()J",
        "field": "maxElapsedTime"
      },
      {
        "name": "getMultiplier",
        "desc": "()D",
        "field": "multiplier"
      },
      {
        "name": "getInitialInterval",
        "desc": "()J",
        "field": "initialInterval"
      },
      {
        "name": "getMaxInterval",
        "desc": "()J",
        "field": "maxInterval"
      }
    ],
    "observers": [
      {
        "name": "getMultiplier",
        "desc": "()D"
      },
      {
        "name": "getMaxElapsedTime",
        "desc": "()J"
      },
      {
        "name": "getInitialInterval",
        "desc": "()J"
      },
      {
        "name": "getMaxInterval",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "setInitialInterval",
        "desc": "(J)V"
      },
      {
        "name": "setMultiplier",
        "desc": "(D)V"
      },
      {
        "name": "getMultiplier",
        "desc": "()D"
      },
      {
        "name": "start",
        "desc": "()Lorg/springframework/util/backoff/BackOffExecution;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(JD)V"
      },
      {
        "name": "setMaxElapsedTime",
        "desc": "(J)V"
      },
      {
        "name": "getMaxElapsedTime",
        "desc": "()J"
      },
      {
        "name": "setMaxInterval",
        "desc": "(J)V"
      },
      {
        "name": "getInitialInterval",
        "desc": "()J"
      },
      {
        "name": "getMaxInterval",
        "desc": "()J"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "long": [
        2000,
        30000,
        9223372036854775807
      ],
      "double": [
        1.5,
        2.0
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.backoff.BackOff"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.backoff.ExponentialBackOff$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.backoff.ExponentialBackOff$ExponentialBackOffExecution",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "long": [
        -1,
        0
      ],
      "str": [
        "ExponentialBackOff{",
        "currentInterval=",
        "n/a"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.backoff.BackOffExecution"
    ],
    "outerClass": "org.springframework.util.backoff.ExponentialBackOff",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.backoff.FixedBackOff",
    "setters": [
      {
        "name": "setInterval",
        "desc": "(J)V",
        "field": "interval"
      },
      {
        "name": "setMaxAttempts",
        "desc": "(J)V",
        "field": "maxAttempts"
      }
    ],
    "getters": [
      {
        "name": "getInterval",
        "desc": "()J",
        "field": "interval"
      },
      {
        "name": "getMaxAttempts",
        "desc": "()J",
        "field": "maxAttempts"
      }
    ],
    "observers": [
      {
        "name": "getMaxAttempts",
        "desc": "()J"
      },
      {
        "name": "getInterval",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "getMaxAttempts",
        "desc": "()J"
      },
      {
        "name": "start",
        "desc": "()Lorg/springframework/util/backoff/BackOffExecution;"
      },
      {
        "name": "getInterval",
        "desc": "()J"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setInterval",
        "desc": "(J)V"
      },
      {
        "name": "setMaxAttempts",
        "desc": "(J)V"
      },
      {
        "name": "<init>",
        "desc": "(JJ)V"
      }
    ],
    "dictionary": {
      "long": [
        5000,
        9223372036854775807
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.backoff.BackOff"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.backoff.FixedBackOff$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.backoff.FixedBackOff$FixedBackOffExecution",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "long": [
        0,
        1,
        9223372036854775807
      ],
      "str": [
        "FixedBackOff{"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.springframework.util.backoff.BackOffExecution"
    ],
    "outerClass": "org.springframework.util.backoff.FixedBackOff",
    "access": 2,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.comparator.BooleanComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "<init>",
        "desc": "(Z)V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Boolean;Ljava/lang/Boolean;)I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.comparator.ComparableComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Comparable;Ljava/lang/Comparable;)I"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.comparator.Comparators",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.comparator.CompoundComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getComparatorCount",
        "desc": "()I"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "addComparator",
        "desc": "(Ljava/util/Comparator;Z)V"
      },
      {
        "name": "invertOrder",
        "desc": "()V"
      },
      {
        "name": "setComparator",
        "desc": "(ILjava/util/Comparator;Z)V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "getComparatorCount",
        "desc": "()I"
      },
      {
        "name": "setAscendingOrder",
        "desc": "(I)V"
      },
      {
        "name": "setComparator",
        "desc": "(ILjava/util/Comparator;)V"
      },
      {
        "name": "<init>",
        "desc": "([Ljava/util/Comparator;)V"
      },
      {
        "name": "addComparator",
        "desc": "(Ljava/util/Comparator;)V"
      },
      {
        "name": "invertOrder",
        "desc": "(I)V"
      },
      {
        "name": "setDescendingOrder",
        "desc": "(I)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.comparator.InstanceComparator",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "([Ljava/lang/Class;)V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
      }
    ],
    "dictionary": {
      "int": [
        -1,
        0
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.comparator.InvertibleComparator",
    "setters": [
      {
        "name": "setAscending",
        "desc": "(Z)V",
        "field": "ascending"
      }
    ],
    "getters": [
      {
        "name": "isAscending",
        "desc": "()Z",
        "field": "ascending"
      }
    ],
    "observers": [
      {
        "name": "isAscending",
        "desc": "()Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljava/util/Comparator;)V"
      },
      {
        "name": "setAscending",
        "desc": "(Z)V"
      },
      {
        "name": "isAscending",
        "desc": "()Z"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Comparator;Z)V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "invertOrder",
        "desc": "()V"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        -2147483648,
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator",
      "java.io.Serializable"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.comparator.NullSafeComparator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/Comparator;Z)V"
      },
      {
        "name": "compare",
        "desc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.util.Comparator"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.CompletableToListenableFutureAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "completable",
        "desc": "()Ljava/util/concurrent/CompletableFuture;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "completable",
        "desc": "()Ljava/util/concurrent/CompletableFuture;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/CompletableFuture;)V"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "cancel",
        "desc": "(Z)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/CompletionStage;)V"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V"
      },
      {
        "name": "get",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.util.concurrent.ListenableFuture"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.DelegatingCompletableFuture",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "cancel",
        "desc": "(Z)Z"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/Future;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.util.concurrent.CompletableFuture"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.FailureCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.FutureAdapter",
    "setters": [],
    "getters": [
      {
        "name": "getAdaptee",
        "desc": "()Ljava/util/concurrent/Future;",
        "field": "adaptee"
      }
    ],
    "observers": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "getAdaptee",
        "desc": "()Ljava/util/concurrent/Future;"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Future"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.FutureAdapter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        3
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.FutureAdapter$State",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "FAILURE",
        "NEW",
        "SUCCESS"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.util.concurrent.FutureAdapter",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.ListenableFuture",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.concurrent.Future"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.ListenableFutureAdapter",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "org.springframework.util.concurrent.FutureAdapter",
      "org.springframework.util.concurrent.ListenableFuture"
    ],
    "access": 1057,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.ListenableFutureAdapter$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.util.concurrent.ListenableFutureCallback"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.ListenableFutureCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.util.concurrent.SuccessCallback",
      "org.springframework.util.concurrent.FailureCallback"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.ListenableFutureCallbackRegistry",
    "setters": [
      {
        "name": "failure",
        "desc": "(Ljava/lang/Throwable;)V",
        "field": "state"
      },
      {
        "name": "success",
        "desc": "(Ljava/lang/Object;)V",
        "field": "state"
      }
    ],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "addFailureCallback",
        "desc": "(Lorg/springframework/util/concurrent/FailureCallback;)V"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "failure",
        "desc": "(Ljava/lang/Throwable;)V"
      },
      {
        "name": "addSuccessCallback",
        "desc": "(Lorg/springframework/util/concurrent/SuccessCallback;)V"
      },
      {
        "name": "success",
        "desc": "(Ljava/lang/Object;)V"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V"
      }
    ],
    "dictionary": {
      "int": [
        1,
        2,
        3
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.ListenableFutureCallbackRegistry$1",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        3
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "outerClass": "<unreachable>",
    "access": 4104,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.ListenableFutureCallbackRegistry$State",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1,
        2
      ],
      "str": [
        "FAILURE",
        "NEW",
        "SUCCESS"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "outerClass": "org.springframework.util.concurrent.ListenableFutureCallbackRegistry",
    "access": 16410,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.ListenableFutureTask",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "completable",
        "desc": "()Ljava/util/concurrent/CompletableFuture;"
      },
      {
        "name": "done",
        "desc": "()V"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/concurrent/Callable;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Runnable;Ljava/lang/Object;)V"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.util.concurrent.FutureTask",
      "org.springframework.util.concurrent.ListenableFuture"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.MonoToListenableFutureAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "<init>",
        "desc": "(Lreactor/core/publisher/Mono;)V"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "cancel",
        "desc": "(Z)Z"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V"
      },
      {
        "name": "get",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.util.concurrent.ListenableFuture"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.SettableListenableFuture",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "completable",
        "desc": "()Ljava/util/concurrent/CompletableFuture;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      }
    ],
    "testableMethods": [
      {
        "name": "isDone",
        "desc": "()Z"
      },
      {
        "name": "completable",
        "desc": "()Ljava/util/concurrent/CompletableFuture;"
      },
      {
        "name": "interruptTask",
        "desc": "()V"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "cancel",
        "desc": "(Z)Z"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "setException",
        "desc": "(Ljava/lang/Throwable;)Z"
      },
      {
        "name": "isCancelled",
        "desc": "()Z"
      },
      {
        "name": "set",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V"
      },
      {
        "name": "addCallback",
        "desc": "(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V"
      },
      {
        "name": "get",
        "desc": "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.springframework.util.concurrent.ListenableFuture"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.SettableListenableFuture$SettableTask",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.util.concurrent.ListenableFutureTask"
    ],
    "outerClass": "org.springframework.util.concurrent.SettableListenableFuture",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.concurrent.SuccessCallback",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1537,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.function.SingletonSupplier",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      }
    ],
    "testableMethods": [
      {
        "name": "obtain",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "ofNullable",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/util/function/SingletonSupplier;"
      },
      {
        "name": "get",
        "desc": "()Ljava/lang/Object;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/lang/Object;Ljava/util/function/Supplier;)V"
      },
      {
        "name": "of",
        "desc": "(Ljava/util/function/Supplier;)Lorg/springframework/util/function/SingletonSupplier;"
      },
      {
        "name": "ofNullable",
        "desc": "(Ljava/util/function/Supplier;)Lorg/springframework/util/function/SingletonSupplier;"
      },
      {
        "name": "of",
        "desc": "(Ljava/lang/Object;)Lorg/springframework/util/function/SingletonSupplier;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "java.util.function.Supplier"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.function.SupplierUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.unit.DataSize",
    "setters": [],
    "getters": [
      {
        "name": "toBytes",
        "desc": "()J",
        "field": "bytes"
      }
    ],
    "observers": [
      {
        "name": "toKilobytes",
        "desc": "()J"
      },
      {
        "name": "toBytes",
        "desc": "()J"
      },
      {
        "name": "isNegative",
        "desc": "()Z"
      },
      {
        "name": "toMegabytes",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toTerabytes",
        "desc": "()J"
      },
      {
        "name": "toGigabytes",
        "desc": "()J"
      }
    ],
    "testableMethods": [
      {
        "name": "ofTerabytes",
        "desc": "(J)Lorg/springframework/util/unit/DataSize;"
      },
      {
        "name": "ofMegabytes",
        "desc": "(J)Lorg/springframework/util/unit/DataSize;"
      },
      {
        "name": "toBytes",
        "desc": "()J"
      },
      {
        "name": "ofBytes",
        "desc": "(J)Lorg/springframework/util/unit/DataSize;"
      },
      {
        "name": "isNegative",
        "desc": "()Z"
      },
      {
        "name": "toMegabytes",
        "desc": "()J"
      },
      {
        "name": "toString",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "toTerabytes",
        "desc": "()J"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/CharSequence;)Lorg/springframework/util/unit/DataSize;"
      },
      {
        "name": "hashCode",
        "desc": "()I"
      },
      {
        "name": "ofKilobytes",
        "desc": "(J)Lorg/springframework/util/unit/DataSize;"
      },
      {
        "name": "equals",
        "desc": "(Ljava/lang/Object;)Z"
      },
      {
        "name": "toKilobytes",
        "desc": "()J"
      },
      {
        "name": "parse",
        "desc": "(Ljava/lang/CharSequence;Lorg/springframework/util/unit/DataUnit;)Lorg/springframework/util/unit/DataSize;"
      },
      {
        "name": "ofGigabytes",
        "desc": "(J)Lorg/springframework/util/unit/DataSize;"
      },
      {
        "name": "compareTo",
        "desc": "(Lorg/springframework/util/unit/DataSize;)I"
      },
      {
        "name": "of",
        "desc": "(JLorg/springframework/util/unit/DataUnit;)Lorg/springframework/util/unit/DataSize;"
      },
      {
        "name": "toGigabytes",
        "desc": "()J"
      }
    ],
    "dictionary": {
      "long": [
        0,
        1024
      ],
      "str": [
        "'"
      ]
    },
    "parents": [
      "java.lang.Object",
      "java.lang.Comparable"
    ],
    "access": 49,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.unit.DataUnit",
    "setters": [],
    "getters": [
      {
        "name": "size",
        "desc": "()Lorg/springframework/util/unit/DataSize;",
        "field": "size"
      }
    ],
    "observers": [
      {
        "name": "size",
        "desc": "()Lorg/springframework/util/unit/DataSize;"
      }
    ],
    "testableMethods": [
      {
        "name": "fromSuffix",
        "desc": "(Ljava/lang/String;)Lorg/springframework/util/unit/DataUnit;"
      },
      {
        "name": "size",
        "desc": "()Lorg/springframework/util/unit/DataSize;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        2,
        3,
        4
      ],
      "long": [
        1
      ],
      "str": [
        "'",
        "B",
        "BYTES",
        "GB",
        "GIGABYTES",
        "KB",
        "KILOBYTES",
        "MB",
        "MEGABYTES",
        "TB",
        "TERABYTES"
      ]
    },
    "parents": [
      "java.lang.Enum"
    ],
    "access": 16433,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.AbstractStaxHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        58
      ],
      "char": [
        58
      ],
      "short": [
        58
      ],
      "int": [
        -1,
        0,
        1,
        58
      ],
      "str": [
        "xmlns"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.xml.sax.ContentHandler",
      "org.xml.sax.ext.LexicalHandler"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.AbstractStaxXMLReader",
    "setters": [
      {
        "name": "setFeature",
        "desc": "(Ljava/lang/String;Z)V",
        "field": "namespacePrefixesFeature"
      }
    ],
    "getters": [
      {
        "name": "hasNamespacePrefixesFeature",
        "desc": "()Z",
        "field": "namespacePrefixesFeature"
      },
      {
        "name": "hasNamespacesFeature",
        "desc": "()Z",
        "field": "namespacesFeature"
      }
    ],
    "observers": [
      {
        "name": "hasNamespacePrefixesFeature",
        "desc": "()Z"
      },
      {
        "name": "hasNamespacesFeature",
        "desc": "()Z"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "http://xml.org/sax/features/is-standalone",
        "http://xml.org/sax/features/namespace-prefixes",
        "http://xml.org/sax/features/namespaces"
      ]
    },
    "parents": [
      "org.springframework.util.xml.AbstractXMLReader"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.AbstractStaxXMLReader$StaxLocator",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getSystemId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPublicId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getColumnNumber",
        "desc": "()I"
      },
      {
        "name": "getLineNumber",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.xml.sax.Locator"
    ],
    "outerClass": "org.springframework.util.xml.AbstractStaxXMLReader",
    "access": 10,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.AbstractXMLEventReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        1
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.xml.stream.XMLEventReader"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.AbstractXMLReader",
    "setters": [
      {
        "name": "setDTDHandler",
        "desc": "(Lorg/xml/sax/DTDHandler;)V",
        "field": "dtdHandler"
      },
      {
        "name": "setEntityResolver",
        "desc": "(Lorg/xml/sax/EntityResolver;)V",
        "field": "entityResolver"
      },
      {
        "name": "setContentHandler",
        "desc": "(Lorg/xml/sax/ContentHandler;)V",
        "field": "contentHandler"
      },
      {
        "name": "setProperty",
        "desc": "(Ljava/lang/String;Ljava/lang/Object;)V",
        "field": "lexicalHandler"
      },
      {
        "name": "setErrorHandler",
        "desc": "(Lorg/xml/sax/ErrorHandler;)V",
        "field": "errorHandler"
      }
    ],
    "getters": [
      {
        "name": "getContentHandler",
        "desc": "()Lorg/xml/sax/ContentHandler;",
        "field": "contentHandler"
      },
      {
        "name": "getLexicalHandler",
        "desc": "()Lorg/xml/sax/ext/LexicalHandler;",
        "field": "lexicalHandler"
      },
      {
        "name": "getEntityResolver",
        "desc": "()Lorg/xml/sax/EntityResolver;",
        "field": "entityResolver"
      },
      {
        "name": "getDTDHandler",
        "desc": "()Lorg/xml/sax/DTDHandler;",
        "field": "dtdHandler"
      },
      {
        "name": "getErrorHandler",
        "desc": "()Lorg/xml/sax/ErrorHandler;",
        "field": "errorHandler"
      }
    ],
    "observers": [
      {
        "name": "getContentHandler",
        "desc": "()Lorg/xml/sax/ContentHandler;"
      },
      {
        "name": "getLexicalHandler",
        "desc": "()Lorg/xml/sax/ext/LexicalHandler;"
      },
      {
        "name": "getDTDHandler",
        "desc": "()Lorg/xml/sax/DTDHandler;"
      },
      {
        "name": "getErrorHandler",
        "desc": "()Lorg/xml/sax/ErrorHandler;"
      },
      {
        "name": "getEntityResolver",
        "desc": "()Lorg/xml/sax/EntityResolver;"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "http://xml.org/sax/features/",
        "http://xml.org/sax/properties/lexical-handler"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.xml.sax.XMLReader"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.AbstractXMLStreamReader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getLocalName",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isStartElement",
        "desc": "()Z"
      },
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "isCharacters",
        "desc": "()Z"
      },
      {
        "name": "getElementText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getNamespaceURI",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isWhiteSpace",
        "desc": "()Z"
      },
      {
        "name": "getTextCharacters",
        "desc": "()[C"
      },
      {
        "name": "hasText",
        "desc": "()Z"
      },
      {
        "name": "hasName",
        "desc": "()Z"
      },
      {
        "name": "getPrefix",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isEndElement",
        "desc": "()Z"
      },
      {
        "name": "getTextLength",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {
      "byte": [
        6,
        8,
        9,
        12
      ],
      "short": [
        6,
        8,
        9,
        12
      ],
      "int": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        12
      ],
      "str": [
        "]"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.xml.stream.XMLStreamReader"
    ],
    "access": 1056,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.DomContentHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "setDocumentLocator",
        "desc": "(Lorg/xml/sax/Locator;)V"
      },
      {
        "name": "endPrefixMapping",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "processingInstruction",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "startElement",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V"
      },
      {
        "name": "startDocument",
        "desc": "()V"
      },
      {
        "name": "characters",
        "desc": "([CII)V"
      },
      {
        "name": "startPrefixMapping",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Lorg/w3c/dom/Node;)V"
      },
      {
        "name": "endDocument",
        "desc": "()V"
      },
      {
        "name": "ignorableWhitespace",
        "desc": "([CII)V"
      },
      {
        "name": "endElement",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "skippedEntity",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1,
        3
      ],
      "str": [
        "xmlns"
      ]
    },
    "parents": [
      "java.lang.Object",
      "org.xml.sax.ContentHandler"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.DomUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.ListBasedXMLEventReader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "peek",
        "desc": "()Ljavax/xml/stream/events/XMLEvent;"
      },
      {
        "name": "getElementText",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [
      {
        "name": "hasNext",
        "desc": "()Z"
      },
      {
        "name": "peek",
        "desc": "()Ljavax/xml/stream/events/XMLEvent;"
      },
      {
        "name": "nextEvent",
        "desc": "()Ljavax/xml/stream/events/XMLEvent;"
      },
      {
        "name": "<init>",
        "desc": "(Ljava/util/List;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "nextTag",
        "desc": "()Ljavax/xml/stream/events/XMLEvent;"
      },
      {
        "name": "getElementText",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ]
    },
    "parents": [
      "org.springframework.util.xml.AbstractXMLEventReader"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.SimpleNamespaceContext",
    "setters": [
      {
        "name": "removeBinding",
        "desc": "(Ljava/lang/String;)V",
        "field": "defaultNamespaceUri"
      },
      {
        "name": "bindNamespaceUri",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "defaultNamespaceUri"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getBoundPrefixes",
        "desc": "()Ljava/util/Iterator;"
      }
    ],
    "testableMethods": [
      {
        "name": "getPrefixes",
        "desc": "(Ljava/lang/String;)Ljava/util/Iterator;"
      },
      {
        "name": "getNamespaceURI",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "getPrefix",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "clear",
        "desc": "()V"
      },
      {
        "name": "bindDefaultNamespaceUri",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "bindNamespaceUri",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "removeBinding",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setBindings",
        "desc": "(Ljava/util/Map;)V"
      },
      {
        "name": "getBoundPrefixes",
        "desc": "()Ljava/util/Iterator;"
      }
    ],
    "dictionary": {
      "str": [
        "",
        "http://www.w3.org/2000/xmlns/",
        "http://www.w3.org/XML/1998/namespace",
        "xml",
        "xmlns"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.xml.namespace.NamespaceContext"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.SimpleSaxErrorHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/logging/Log;)V"
      },
      {
        "name": "fatalError",
        "desc": "(Lorg/xml/sax/SAXParseException;)V"
      },
      {
        "name": "error",
        "desc": "(Lorg/xml/sax/SAXParseException;)V"
      },
      {
        "name": "warning",
        "desc": "(Lorg/xml/sax/SAXParseException;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.xml.sax.ErrorHandler"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.SimpleTransformErrorListener",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Lorg/apache/commons/logging/Log;)V"
      },
      {
        "name": "warning",
        "desc": "(Ljavax/xml/transform/TransformerException;)V"
      },
      {
        "name": "fatalError",
        "desc": "(Ljavax/xml/transform/TransformerException;)V"
      },
      {
        "name": "error",
        "desc": "(Ljavax/xml/transform/TransformerException;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "javax.xml.transform.ErrorListener"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxEventHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "cDataInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setDocumentLocator",
        "desc": "(Lorg/xml/sax/Locator;)V"
      },
      {
        "name": "commentInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "endElementInternal",
        "desc": "(Ljavax/xml/namespace/QName;Ljava/util/Map;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLEventWriter;Ljavax/xml/stream/XMLEventFactory;)V"
      },
      {
        "name": "startDocumentInternal",
        "desc": "()V"
      },
      {
        "name": "processingInstructionInternal",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLEventWriter;)V"
      },
      {
        "name": "skippedEntityInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "charactersInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "ignorableWhitespaceInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "startElementInternal",
        "desc": "(Ljavax/xml/namespace/QName;Lorg/xml/sax/Attributes;Ljava/util/Map;)V"
      },
      {
        "name": "endDocumentInternal",
        "desc": "()V"
      },
      {
        "name": "dtdInternal",
        "desc": "(Ljava/lang/String;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ]
    },
    "parents": [
      "org.springframework.util.xml.AbstractStaxHandler"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxEventHandler$LocatorLocationAdapter",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getCharacterOffset",
        "desc": "()I"
      },
      {
        "name": "getSystemId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPublicId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getColumnNumber",
        "desc": "()I"
      },
      {
        "name": "getLineNumber",
        "desc": "()I"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "javax.xml.stream.Location"
    ],
    "outerClass": "org.springframework.util.xml.StaxEventHandler",
    "access": 26,
    "flags": [
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxEventXMLReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLEventReader;)V"
      },
      {
        "name": "parseInternal",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        "",
        "1.0"
      ]
    },
    "parents": [
      "org.springframework.util.xml.AbstractStaxXMLReader"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxEventXMLReader$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSystemId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPublicId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getColumnNumber",
        "desc": "()I"
      },
      {
        "name": "getLineNumber",
        "desc": "()I"
      },
      {
        "name": "getXMLVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.xml.sax.ext.Locator2"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxResult",
    "setters": [],
    "getters": [
      {
        "name": "getXMLEventWriter",
        "desc": "()Ljavax/xml/stream/XMLEventWriter;",
        "field": "eventWriter"
      },
      {
        "name": "getXMLStreamWriter",
        "desc": "()Ljavax/xml/stream/XMLStreamWriter;",
        "field": "streamWriter"
      }
    ],
    "observers": [
      {
        "name": "getXMLEventWriter",
        "desc": "()Ljavax/xml/stream/XMLEventWriter;"
      },
      {
        "name": "getXMLStreamWriter",
        "desc": "()Ljavax/xml/stream/XMLStreamWriter;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLEventWriter;)V"
      },
      {
        "name": "setHandler",
        "desc": "(Lorg/xml/sax/ContentHandler;)V"
      },
      {
        "name": "getXMLEventWriter",
        "desc": "()Ljavax/xml/stream/XMLEventWriter;"
      },
      {
        "name": "getXMLStreamWriter",
        "desc": "()Ljavax/xml/stream/XMLStreamWriter;"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLStreamWriter;)V"
      },
      {
        "name": "setLexicalHandler",
        "desc": "(Lorg/xml/sax/ext/LexicalHandler;)V"
      }
    ],
    "dictionary": {},
    "parents": [
      "javax.xml.transform.sax.SAXResult"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxSource",
    "setters": [],
    "getters": [
      {
        "name": "getXMLStreamReader",
        "desc": "()Ljavax/xml/stream/XMLStreamReader;",
        "field": "streamReader"
      },
      {
        "name": "getXMLEventReader",
        "desc": "()Ljavax/xml/stream/XMLEventReader;",
        "field": "eventReader"
      }
    ],
    "observers": [
      {
        "name": "getXMLEventReader",
        "desc": "()Ljavax/xml/stream/XMLEventReader;"
      },
      {
        "name": "getXMLStreamReader",
        "desc": "()Ljavax/xml/stream/XMLStreamReader;"
      }
    ],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLStreamReader;)V"
      },
      {
        "name": "setXMLReader",
        "desc": "(Lorg/xml/sax/XMLReader;)V"
      },
      {
        "name": "setInputSource",
        "desc": "(Lorg/xml/sax/InputSource;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLEventReader;)V"
      },
      {
        "name": "getXMLEventReader",
        "desc": "()Ljavax/xml/stream/XMLEventReader;"
      },
      {
        "name": "getXMLStreamReader",
        "desc": "()Ljavax/xml/stream/XMLStreamReader;"
      }
    ],
    "dictionary": {},
    "parents": [
      "javax.xml.transform.sax.SAXSource"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxStreamHandler",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "cDataInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "commentInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setDocumentLocator",
        "desc": "(Lorg/xml/sax/Locator;)V"
      },
      {
        "name": "endEntity",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "endElementInternal",
        "desc": "(Ljavax/xml/namespace/QName;Ljava/util/Map;)V"
      },
      {
        "name": "startDocumentInternal",
        "desc": "()V"
      },
      {
        "name": "processingInstructionInternal",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "skippedEntityInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "charactersInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "ignorableWhitespaceInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "startElementInternal",
        "desc": "(Ljavax/xml/namespace/QName;Lorg/xml/sax/Attributes;Ljava/util/Map;)V"
      },
      {
        "name": "startEntity",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "endDocumentInternal",
        "desc": "()V"
      },
      {
        "name": "dtdInternal",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLStreamWriter;)V"
      }
    ],
    "dictionary": {
      "int": [
        0
      ],
      "str": [
        ""
      ]
    },
    "parents": [
      "org.springframework.util.xml.AbstractStaxHandler"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxStreamXMLReader",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLStreamReader;)V"
      },
      {
        "name": "parseInternal",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "byte": [
        7,
        8,
        12
      ],
      "short": [
        7,
        8,
        12
      ],
      "int": [
        0,
        1,
        7,
        8,
        12
      ],
      "str": [
        "",
        "1.0"
      ]
    },
    "parents": [
      "org.springframework.util.xml.AbstractStaxXMLReader"
    ],
    "access": 32,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxStreamXMLReader$1",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getSystemId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPublicId",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getColumnNumber",
        "desc": "()I"
      },
      {
        "name": "getLineNumber",
        "desc": "()I"
      },
      {
        "name": "getXMLVersion",
        "desc": "()Ljava/lang/String;"
      }
    ],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object",
      "org.xml.sax.ext.Locator2"
    ],
    "outerClass": "<unreachable>",
    "access": 0,
    "flags": [
      "packageCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.StaxUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {},
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.TransformerUtils",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [],
    "dictionary": {
      "int": [
        2
      ],
      "str": [
        "indent",
        "no"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 1057,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.XMLEventStreamReader",
    "setters": [],
    "getters": [],
    "observers": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getCharacterEncodingScheme",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPITarget",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getPIData",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isStandalone",
        "desc": "()Z"
      },
      {
        "name": "getNamespaceCount",
        "desc": "()I"
      },
      {
        "name": "getTextStart",
        "desc": "()I"
      },
      {
        "name": "getName",
        "desc": "()Ljavax/xml/namespace/QName;"
      },
      {
        "name": "getText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "getNamespaceContext",
        "desc": "()Ljavax/xml/namespace/NamespaceContext;"
      },
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getLocation",
        "desc": "()Ljavax/xml/stream/Location;"
      },
      {
        "name": "getEventType",
        "desc": "()I"
      }
    ],
    "testableMethods": [
      {
        "name": "getEncoding",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getNamespaceURI",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "getAttributeValue",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "getCharacterEncodingScheme",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLEventReader;)V"
      },
      {
        "name": "getPIData",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "isStandalone",
        "desc": "()Z"
      },
      {
        "name": "standaloneSet",
        "desc": "()Z"
      },
      {
        "name": "getNamespaceCount",
        "desc": "()I"
      },
      {
        "name": "getTextStart",
        "desc": "()I"
      },
      {
        "name": "getNamespaceContext",
        "desc": "()Ljavax/xml/namespace/NamespaceContext;"
      },
      {
        "name": "getAttributeType",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "getLocation",
        "desc": "()Ljavax/xml/stream/Location;"
      },
      {
        "name": "isAttributeSpecified",
        "desc": "(I)Z"
      },
      {
        "name": "getAttributeName",
        "desc": "(I)Ljavax/xml/namespace/QName;"
      },
      {
        "name": "getPITarget",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "next",
        "desc": "()I"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "getNamespacePrefix",
        "desc": "(I)Ljava/lang/String;"
      },
      {
        "name": "getName",
        "desc": "()Ljavax/xml/namespace/QName;"
      },
      {
        "name": "getText",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getAttributeCount",
        "desc": "()I"
      },
      {
        "name": "getVersion",
        "desc": "()Ljava/lang/String;"
      },
      {
        "name": "getEventType",
        "desc": "()I"
      }
    ],
    "dictionary": {
      "int": [
        0,
        5
      ]
    },
    "parents": [
      "org.springframework.util.xml.AbstractXMLStreamReader"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.XMLEventStreamWriter",
    "setters": [
      {
        "name": "writeEmptyElement",
        "desc": "(Ljava/lang/String;)V",
        "field": "emptyElement"
      },
      {
        "name": "writeEmptyElement",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V",
        "field": "emptyElement"
      },
      {
        "name": "writeEmptyElement",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
        "field": "emptyElement"
      }
    ],
    "getters": [],
    "observers": [
      {
        "name": "getNamespaceContext",
        "desc": "()Ljavax/xml/namespace/NamespaceContext;"
      }
    ],
    "testableMethods": [
      {
        "name": "setNamespaceContext",
        "desc": "(Ljavax/xml/namespace/NamespaceContext;)V"
      },
      {
        "name": "writeEmptyElement",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "flush",
        "desc": "()V"
      },
      {
        "name": "<init>",
        "desc": "(Ljavax/xml/stream/XMLEventWriter;Ljavax/xml/stream/XMLEventFactory;)V"
      },
      {
        "name": "writeStartDocument",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "getPrefix",
        "desc": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      {
        "name": "writeProcessingInstruction",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "setPrefix",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeCharacters",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeProcessingInstruction",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeDTD",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeEmptyElement",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getNamespaceContext",
        "desc": "()Ljavax/xml/namespace/NamespaceContext;"
      },
      {
        "name": "writeStartElement",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeStartDocument",
        "desc": "()V"
      },
      {
        "name": "writeComment",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "close",
        "desc": "()V"
      },
      {
        "name": "writeDefaultNamespace",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeEndElement",
        "desc": "()V"
      },
      {
        "name": "setDefaultNamespace",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "getProperty",
        "desc": "(Ljava/lang/String;)Ljava/lang/Object;"
      },
      {
        "name": "writeAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeAttribute",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeCData",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeEmptyElement",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeNamespace",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeEntityRef",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeStartDocument",
        "desc": "(Ljava/lang/String;)V"
      },
      {
        "name": "writeStartElement",
        "desc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeCharacters",
        "desc": "([CII)V"
      },
      {
        "name": "writeStartElement",
        "desc": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      {
        "name": "writeEndDocument",
        "desc": "()V"
      }
    ],
    "dictionary": {
      "int": [
        0,
        1
      ],
      "str": [
        "",
        "UTF-8"
      ]
    },
    "parents": [
      "java.lang.Object",
      "javax.xml.stream.XMLStreamWriter"
    ],
    "access": 32,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  },
  {
    "class": "org.springframework.util.xml.XmlValidationModeDetector",
    "setters": [],
    "getters": [],
    "observers": [],
    "testableMethods": [
      {
        "name": "<init>",
        "desc": "()V"
      },
      {
        "name": "detectValidationMode",
        "desc": "(Ljava/io/InputStream;)I"
      }
    ],
    "dictionary": {
      "byte": [
        60
      ],
      "char": [
        60
      ],
      "short": [
        60
      ],
      "int": [
        -1,
        1,
        60
      ],
      "str": [
        "-->",
        "<!--",
        "DOCTYPE"
      ]
    },
    "parents": [
      "java.lang.Object"
    ],
    "access": 33,
    "flags": [
      "publicCtor",
      "inAppClasspath"
    ]
  }
]
package com.alibaba.nacos.config.server.result;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.core.Is.is;

import com.alibaba.nacos.config.server.model.RestResult;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.nacos.config.server.result.ResultBuilder
 *
 * @author Diffblue Cover
 */

class ResultBuilderTest {

    @Test
    void buildSuccessResultResultDataIsSomething1() {
        RestResult<String> result = ResultBuilder.<String>buildSuccessResult("something");
        assertThat(result.getCode(), is(200));
        assertThat(result.getData(), is("something"));
        assertThat(result.getMessage(), is("处理成功"));
    }

    @Test
    void buildSuccessResultResultDataIsSomething2() {
        RestResult<String> result = ResultBuilder.<String>buildSuccessResult("/some/path.html", "something");
        assertThat(result.getCode(), is(200));
        assertThat(result.getData(), is("something"));
        assertThat(result.getMessage(), is("/some/path.html"));
    }

    @Test
    void buildSuccessResult1() {
        RestResult<String> result = ResultBuilder.<String>buildSuccessResult();
        assertThat(result.getCode(), is(200));
        assertThat(result.getData(), is(nullValue()));
        assertThat(result.getMessage(), is("处理成功"));
    }

    @Test
    void buildSuccessResult2() {
        RestResult<String> result = ResultBuilder.<String>buildSuccessResult("/some/path.html");
        assertThat(result.getCode(), is(200));
        assertThat(result.getData(), is(nullValue()));
        assertThat(result.getMessage(), is("/some/path.html"));
    }
}

package com.alibaba.nacos.config.server.service;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.core.Is.is;

import com.alibaba.nacos.config.server.model.SubscriberStatus;

import java.util.HashMap;
import java.util.Map;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.nacos.config.server.service.ClientTrackService
 *
 * @author Diffblue Cover
 */

class ClientTrackServiceTest {

    @Test
    void trackClientMd1() {
        ClientTrackService.trackClientMd5("RA123456789CN", new HashMap<String, String>());
    }

    @Test
    void trackClientMd2() {
        ClientTrackService.trackClientMd5("RA123456789CN", new HashMap<String, String>(), new HashMap<String, Long>());
    }

    @Test
    void trackClientMd5GroupKeyIsKey() {
        ClientTrackService.trackClientMd5("RA123456789CN", "key", "RA123456789CN");
    }

    @Test
    void subscribeClientCountReturnsFour() {
        assertThat(ClientTrackService.subscribeClientCount(), is(4));
    }

    @Test
    void subscriberCountReturnsOne() {
        assertThat(ClientTrackService.subscriberCount(), is(1L));
    }

    @Test
    void listSubStatus() {
        assertThat(ClientTrackService.listSubStatus("on time").isEmpty(), is(true));
        assertThat(ClientTrackService.listSubStatus("bar").isEmpty(), is(true));
    }

    @Test
    void listSubsByGroupGroupKeyIsKey() {
        Map<String, SubscriberStatus> result =
             ClientTrackService.listSubsByGroup("key");
        assertThat(result.get("RA123456789CN").getGroupKey(), is("key"));
        assertThat(result.get("RA123456789CN").getLastTime(), is(1_603_771_376_912L));
        assertThat(result.get("RA123456789CN").getMd5(), is("RA123456789CN"));
        assertThat(result.get("RA123456789CN").getServerIp(), is(nullValue()));
        assertThat(result.get("RA123456789CN").getStatus(), is(false));
    }

    @Test
    void isClientUptodateIpIsBarReturnsEmpty() {
        assertThat(ClientTrackService.isClientUptodate("bar").isEmpty(), is(true));
    }

    @Test
    void listSubscriberByGroupGroupKeyIsKeyReturnsFalse() {
        assertThat(ClientTrackService.listSubscriberByGroup("key").get("RA123456789CN"), is(false));
    }

    @Test
    void refreshClientRecord() {
        ClientTrackService.refreshClientRecord();
    }
}

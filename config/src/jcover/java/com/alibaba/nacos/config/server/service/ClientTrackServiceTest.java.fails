package com.alibaba.nacos.config.server.service;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;

import java.util.HashMap;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.nacos.config.server.service.ClientTrackService
 *
 * @author Diffblue Cover
 */

class ClientTrackServiceTest {

    @Test
    void trackClientMd5() {
        ClientTrackService.trackClientMd5("/some/path.html", new HashMap<String, String>());
    }

    @Test
    void trackClientMd5ClientlastPollingTSMapIsEmpty() {
        ClientTrackService.trackClientMd5("/some/path.html", new HashMap<String, String>(), new HashMap<String, Long>());
    }

    @Test
    void trackClientMd5GroupKeyIsKey() {
        ClientTrackService.trackClientMd5("/some/path.html", "key", "/some/path.html");
    }

    @Test
    void subscribeClientCountReturnsZero() {
        assertThat(ClientTrackService.subscribeClientCount(), is(0));
    }

    @Test
    void subscriberCountReturnsZero() {
        assertThat(ClientTrackService.subscriberCount(), is(0L));
    }

    @Test
    void listSubStatus() {
        assertThat(ClientTrackService.listSubStatus("bar").isEmpty(), is(true));
        assertThat(ClientTrackService.listSubStatus("Smith").isEmpty(), is(true));
    }

    @Test
    void listSubsByGroup() {
        assertThat(ClientTrackService.listSubsByGroup("foo").isEmpty(), is(true));
        assertThat(ClientTrackService.listSubsByGroup("key").isEmpty(), is(true));
    }

    @Test
    void isClientUptodateIpIsBarReturnsEmpty() {
        assertThat(ClientTrackService.isClientUptodate("bar").isEmpty(), is(true));
    }

    @Test
    void listSubscriberByGroup() {
        assertThat(ClientTrackService.listSubscriberByGroup("foo").get("/some/path.html"), is(false));
        assertThat(ClientTrackService.listSubscriberByGroup("key").isEmpty(), is(true));
    }

    @Test
    void refreshClientRecord() {
        ClientTrackService.refreshClientRecord();
    }
}

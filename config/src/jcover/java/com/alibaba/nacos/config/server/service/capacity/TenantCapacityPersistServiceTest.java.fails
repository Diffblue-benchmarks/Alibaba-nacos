package com.alibaba.nacos.config.server.service.capacity;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import com.alibaba.nacos.config.server.service.DataSourceService;
import com.alibaba.nacos.config.server.service.DynamicDataSource;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

/**
 * Unit tests for com.alibaba.nacos.config.server.service.capacity.TenantCapacityPersistService
 *
 * @author Diffblue Cover
 */

@ContextConfiguration(classes = {TenantCapacityPersistService.class})
@ExtendWith(SpringExtension.class)
class TenantCapacityPersistServiceTest {

    @MockBean(name = "dynamicDataSource")
    private DynamicDataSource dynamicDataSource;

    @Autowired
    private TenantCapacityPersistService service;

    @Test
    void init() {
        DataSourceService dataSourceService1 = mock(DataSourceService.class);
        when(dataSourceService1.getJdbcTemplate())
            .thenReturn(new JdbcTemplate());
        DataSourceService dataSourceService2 = mock(DataSourceService.class);
        when(dataSourceService2.getJdbcTemplate())
            .thenReturn(new JdbcTemplate());
        when(dynamicDataSource.getDataSource())
            .thenReturn(dataSourceService1)
            .thenReturn(dataSourceService2);
        service.init();
    }
}

package com.alibaba.nacos.client.naming.cache;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;

import com.alibaba.nacos.api.naming.pojo.Instance;
import com.alibaba.nacos.api.naming.pojo.ServiceInfo;

import java.util.ArrayList;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.nacos.client.naming.cache.DiskCache
 *
 * @author Diffblue Cover
 */

class DiskCacheTest {

    @Test
    void write1() {
        ServiceInfo dom = new ServiceInfo();
        dom.setAllIPs(false);
        dom.setCacheMillis(1L);
        dom.setChecksum("foo");
        dom.setClusters("bar");
        dom.setGroupName("Acme");
        dom.setHosts(new ArrayList<Instance>());
        dom.setJsonFromServer("\"foo\"");
        dom.setLastRefTime(1L);
        dom.setName("Acme");
        DiskCache.write(dom, "foo");
    }

    @Test
    void write2() {
        ServiceInfo dom = new ServiceInfo();
        dom.setName("Acme");
        DiskCache.write(dom, "foo");
    }

    @Test
    void write3() {
        ServiceInfo dom = new ServiceInfo();
        dom.setName("Acme");
        DiskCache.write(dom, "foo");
    }

    @Test
    void writeDirIsEmpty() {
        DiskCache.write(new ServiceInfo(), "");
    }

    @Test
    void getLineSeparator() {
        assertThat(DiskCache.getLineSeparator(), is("\n"));
    }

    @Test
    void read() {
        assertThat(DiskCache.read("").isEmpty(), is(true));
        assertThat(DiskCache.read("foo").isEmpty(), is(true));
    }
}

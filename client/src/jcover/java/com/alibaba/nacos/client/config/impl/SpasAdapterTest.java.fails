package com.alibaba.nacos.client.config.impl;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.hamcrest.core.Is.is;

import java.util.ArrayList;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.nacos.client.config.impl.SpasAdapter
 *
 * @author Diffblue Cover
 */

class SpasAdapterTest {

    @Test
    void getSignHeaders() {
        assertThat(SpasAdapter.getSignHeaders(new ArrayList<String>(), "key"), hasSize(4));
        assertThat(SpasAdapter.getSignHeaders(new ArrayList<String>(), "key").get(0), is("Timestamp"));
        assertThat(SpasAdapter.getSignHeaders(new ArrayList<String>(), "key").get(1), is("1603768898477"));
        assertThat(SpasAdapter.getSignHeaders(new ArrayList<String>(), "key").get(2), is("Spas-Signature"));
        assertThat(SpasAdapter.getSignHeaders(new ArrayList<String>(), "key").get(3), is("piMhJk9dbMZH9Y6Ck9NWy5s4oFo="));
        assertThat(SpasAdapter.getSignHeaders(new ArrayList<String>(), null), hasSize(2));
        assertThat(SpasAdapter.getSignHeaders(new ArrayList<String>(), null).get(0), is("Timestamp"));
        assertThat(SpasAdapter.getSignHeaders(new ArrayList<String>(), null).get(1), is("1603768898505"));
        assertThat(SpasAdapter.getSignHeaders((ArrayList<String>) null, "key"), is(nullValue()));
        assertThat(SpasAdapter.getSignHeaders("foo", "key"), hasSize(4));
        assertThat(SpasAdapter.getSignHeaders("foo", "key").get(0), is("Timestamp"));
        assertThat(SpasAdapter.getSignHeaders("foo", "key").get(1), is("1603768898604"));
        assertThat(SpasAdapter.getSignHeaders("foo", "key").get(2), is("Spas-Signature"));
        assertThat(SpasAdapter.getSignHeaders("foo", "key").get(3), is("9Dq1HU7vR0VkAcgVNWUSmM0XITM="));
    }

    @Test
    void getSkReturnsNull() {
        assertThat(SpasAdapter.getSk(), is(nullValue()));
    }

    @Test
    void getAkReturnsNull() {
        assertThat(SpasAdapter.getAk(), is(nullValue()));
    }

    @Test
    void signWithhmacSHA1EncryptEncryptKeyIsKeyAndEncryptTextIsHello() {
        assertThat(SpasAdapter.signWithhmacSHA1Encrypt("hello", "key"), is("s0zqxFFv8joUPmHXnQ+npPvl8mY="));
    }
}

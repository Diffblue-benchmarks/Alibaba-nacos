package com.alibaba.nacos.client.naming.core;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;
import static org.hamcrest.core.IsNull.nullValue;
import static org.hamcrest.core.IsSame.sameInstance;
import static org.junit.Assert.assertEquals;

import com.alibaba.nacos.api.naming.pojo.Instance;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

/**
 * Unit tests for com.alibaba.nacos.client.naming.core.Balancer
 *
 * @author Diffblue JCover
 */

public class BalancerTest {

    @Test(timeout=10000)
    public void getHostByRandomWeight1() {
        List<Instance> hosts = new ArrayList<Instance>();
        ((ArrayList<Instance>)hosts).add(new Instance());
        Instance result = Balancer.getHostByRandomWeight(hosts);
        assertThat(result.getClusterName(), is(nullValue()));
        assertThat(result.getInstanceHeartBeatInterval(), is(5_000L));
        assertThat(result.getInstanceHeartBeatTimeOut(), is(15_000L));
        assertThat(result.getInstanceId(), is(nullValue()));
        assertThat(result.getIp(), is(nullValue()));
        assertThat(result.getIpDeleteTimeout(), is(30_000L));
        assertThat(result.getMetadata().isEmpty(), is(true));
        assertThat(result.getPort(), is(0));
        assertThat(result.getServiceName(), is(nullValue()));
        assertEquals(1.0, result.getWeight(), 0);
        assertThat(result.isEnabled(), is(true));
        assertThat(result.isEphemeral(), is(true));
        assertThat(result.isHealthy(), is(true));
        assertThat(hosts.size(), is(1));
        assertThat(hosts.get(0), sameInstance(result));
    }

    @Test(timeout=10000)
    public void getHostByRandomWeight2() {
        assertThat(Balancer.getHostByRandomWeight(new ArrayList<Instance>()), is(nullValue()));
        assertThat(Balancer.getHostByRandomWeight(null), is(nullValue()));
    }
}

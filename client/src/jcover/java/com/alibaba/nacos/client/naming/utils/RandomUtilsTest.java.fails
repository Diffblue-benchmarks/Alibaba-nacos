package com.alibaba.nacos.client.naming.utils;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;
import static org.hamcrest.number.IsCloseTo.closeTo;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Random;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.nacos.client.naming.utils.RandomUtils
 *
 * @author Diffblue Cover
 */

class RandomUtilsTest {

    @Test
    void nextInt() {
        assertThat(RandomUtils.nextInt(), is(102_439_321));
        assertThat(RandomUtils.nextInt(new Random(1L)), is(-1_155_869_325));
        assertThat(RandomUtils.nextInt(1), is(0));
        assertThat(RandomUtils.nextInt(new Random(1L), 1), is(0));
    }

    @Test
    void nextLong() {
        assertThat(RandomUtils.nextLong(), is(7_039_787_300_334_537_971L));
        assertThat(RandomUtils.nextLong(new Random(1L)), is(-4_964_420_948_893_066_024L));
    }

    @Test
    void nextBoolean() {
        assertThat(RandomUtils.nextBoolean(), is(true));
        assertThat(RandomUtils.nextBoolean(new Random(1L)), is(true));
        assertThat(RandomUtils.nextBoolean(new Random(-1L)), is(false));
    }

    @Test
    void nextFloat() {
        assertEquals(0x1.42f2fp-3f /* 0.15769 */, RandomUtils.nextFloat(), 0);
        assertEquals(0x1.7635aap-1f /* 0.730878 */, RandomUtils.nextFloat(new Random(1L)), 0);
    }

    @Test
    void nextDouble() {
        assertThat(RandomUtils.nextDouble(), closeTo(0x1.4ac176efb4d22p-1 /* 0.646007 */, 0.0));
        assertThat(RandomUtils.nextDouble(new Random(1L)), closeTo(0x1.7635aa8cdc4e6p-1 /* 0.730878 */, 0.0));
    }
}
